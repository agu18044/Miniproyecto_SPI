

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 16:53:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text3_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  1000                     __pstrings:
   486  1000                     stringtab:
   487  1000                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  1000  1BFF               	btfsc	btemp+1,7
   491  1001  280A               	ljmp	stringcode
   492  1002  1383               	bcf	3,7
   493  1003  187F               	btfsc	btemp+1,0
   494  1004  1783               	bsf	3,7
   495  1005  0800               	movf	0,w
   496  1006  0A84               	incf	4,f
   497  1007  1903               	skipnz
   498  1008  0AFF               	incf	btemp+1,f
   499  1009  0008               	return
   500  100A                     stringcode:
   501  100A                     stringdir:
   502  100A  3010               	movlw	high stringdir
   503  100B  008A               	movwf	10
   504  100C  0804               	movf	4,w
   505  100D  0A84               	incf	4,f
   506  100E  0782               	addwf	2,f
   507  100F                     __stringbase:
   508  100F  3400               	retlw	0
   509  1010                     __end_of__stringtab:
   510  1010                     __powers_:
   511  1010  3400               	retlw	0
   512  1011  3480               	retlw	128
   513  1012  343F               	retlw	63
   514  1013  3400               	retlw	0
   515  1014  3420               	retlw	32
   516  1015  3441               	retlw	65
   517  1016  3400               	retlw	0
   518  1017  34C8               	retlw	200
   519  1018  3442               	retlw	66
   520  1019  3400               	retlw	0
   521  101A  347A               	retlw	122
   522  101B  3444               	retlw	68
   523  101C  3440               	retlw	64
   524  101D  341C               	retlw	28
   525  101E  3446               	retlw	70
   526  101F  3450               	retlw	80
   527  1020  34C3               	retlw	195
   528  1021  3447               	retlw	71
   529  1022  3424               	retlw	36
   530  1023  3474               	retlw	116
   531  1024  3449               	retlw	73
   532  1025  3497               	retlw	151
   533  1026  3418               	retlw	24
   534  1027  344B               	retlw	75
   535  1028  34BC               	retlw	188
   536  1029  34BE               	retlw	190
   537  102A  344C               	retlw	76
   538  102B  346B               	retlw	107
   539  102C  346E               	retlw	110
   540  102D  344E               	retlw	78
   541  102E  3403               	retlw	3
   542  102F  3415               	retlw	21
   543  1030  3450               	retlw	80
   544  1031  3479               	retlw	121
   545  1032  34AD               	retlw	173
   546  1033  3460               	retlw	96
   547  1034  34F3               	retlw	243
   548  1035  3449               	retlw	73
   549  1036  3471               	retlw	113
   550  1037                     __end_of__powers_:
   551  1037                     __npowers_:
   552  1037  3400               	retlw	0
   553  1038  3480               	retlw	128
   554  1039  343F               	retlw	63
   555  103A  34CD               	retlw	205
   556  103B  34CC               	retlw	204
   557  103C  343D               	retlw	61
   558  103D  34D7               	retlw	215
   559  103E  3423               	retlw	35
   560  103F  343C               	retlw	60
   561  1040  3412               	retlw	18
   562  1041  3483               	retlw	131
   563  1042  343A               	retlw	58
   564  1043  34B7               	retlw	183
   565  1044  34D1               	retlw	209
   566  1045  3438               	retlw	56
   567  1046  34C6               	retlw	198
   568  1047  3427               	retlw	39
   569  1048  3437               	retlw	55
   570  1049  3438               	retlw	56
   571  104A  3486               	retlw	134
   572  104B  3435               	retlw	53
   573  104C  34C0               	retlw	192
   574  104D  34D6               	retlw	214
   575  104E  3433               	retlw	51
   576  104F  34CC               	retlw	204
   577  1050  342B               	retlw	43
   578  1051  3432               	retlw	50
   579  1052  3470               	retlw	112
   580  1053  3489               	retlw	137
   581  1054  3430               	retlw	48
   582  1055  34E7               	retlw	231
   583  1056  34DB               	retlw	219
   584  1057  342E               	retlw	46
   585  1058  34E5               	retlw	229
   586  1059  343C               	retlw	60
   587  105A  341E               	retlw	30
   588  105B  3442               	retlw	66
   589  105C  34A2               	retlw	162
   590  105D  340D               	retlw	13
   591  105E                     __end_of__npowers_:
   592  105E                     _dpowers:
   593  105E  3401               	retlw	1
   594  105F  3400               	retlw	0
   595  1060  3400               	retlw	0
   596  1061  3400               	retlw	0
   597  1062  340A               	retlw	10
   598  1063  3400               	retlw	0
   599  1064  3400               	retlw	0
   600  1065  3400               	retlw	0
   601  1066  3464               	retlw	100
   602  1067  3400               	retlw	0
   603  1068  3400               	retlw	0
   604  1069  3400               	retlw	0
   605  106A  34E8               	retlw	232
   606  106B  3403               	retlw	3
   607  106C  3400               	retlw	0
   608  106D  3400               	retlw	0
   609  106E  3410               	retlw	16
   610  106F  3427               	retlw	39
   611  1070  3400               	retlw	0
   612  1071  3400               	retlw	0
   613  1072  34A0               	retlw	160
   614  1073  3486               	retlw	134
   615  1074  3401               	retlw	1
   616  1075  3400               	retlw	0
   617  1076  3440               	retlw	64
   618  1077  3442               	retlw	66
   619  1078  340F               	retlw	15
   620  1079  3400               	retlw	0
   621  107A  3480               	retlw	128
   622  107B  3496               	retlw	150
   623  107C  3498               	retlw	152
   624  107D  3400               	retlw	0
   625  107E  3400               	retlw	0
   626  107F  34E1               	retlw	225
   627  1080  34F5               	retlw	245
   628  1081  3405               	retlw	5
   629  1082  3400               	retlw	0
   630  1083  34CA               	retlw	202
   631  1084  349A               	retlw	154
   632  1085  343B               	retlw	59
   633  1086                     __end_of_dpowers:
   634  0019                     _TXREG	set	25
   635  001A                     _RCREG	set	26
   636  0018                     _RCSTAbits	set	24
   637  0013                     _SSPBUF	set	19
   638  0014                     _SSPCON	set	20
   639  0009                     _PORTE	set	9
   640  0008                     _PORTD	set	8
   641  0007                     _PORTCbits	set	7
   642  0049                     _RE1	set	73
   643  0048                     _RE0	set	72
   644  0047                     _RD7	set	71
   645  0046                     _RD6	set	70
   646  0045                     _RD5	set	69
   647  0044                     _RD4	set	68
   648  0043                     _RD3	set	67
   649  0042                     _RD2	set	66
   650  0041                     _RD1	set	65
   651  0040                     _RD0	set	64
   652  0065                     _RCIF	set	101
   653  0098                     _TXSTAbits	set	152
   654  0099                     _SPBRG	set	153
   655  0094                     _SSPSTATbits	set	148
   656  0094                     _SSPSTAT	set	148
   657  0089                     _TRISE	set	137
   658  0088                     _TRISD	set	136
   659  04C1                     _TRMT	set	1217
   660  043B                     _TRISC3	set	1083
   661  043D                     _TRISC5	set	1085
   662  043A                     _TRISC2	set	1082
   663  0439                     _TRISC1	set	1081
   664  0189                     _ANSELH	set	393
   665  0188                     _ANSEL	set	392
   666  1086                     STR_1:
   667  1086  3420               	retlw	32	;' '
   668  1087  3453               	retlw	83	;'S'
   669  1088  3431               	retlw	49	;'1'
   670  1089  3420               	retlw	32	;' '
   671  108A  3420               	retlw	32	;' '
   672  108B  3420               	retlw	32	;' '
   673  108C  3453               	retlw	83	;'S'
   674  108D  3432               	retlw	50	;'2'
   675  108E  3420               	retlw	32	;' '
   676  108F  3420               	retlw	32	;' '
   677  1090  3420               	retlw	32	;' '
   678  1091  3453               	retlw	83	;'S'
   679  1092  3433               	retlw	51	;'3'
   680  1093  3400               	retlw	0
   681  1094                     STR_2:
   682  1094  3425               	retlw	37	;'%'
   683  1095  3432               	retlw	50	;'2'
   684  1096  342E               	retlw	46	;'.'
   685  1097  3431               	retlw	49	;'1'
   686  1098  3466               	retlw	102	;'f'
   687  1099  3420               	retlw	32	;' '
   688  109A  3420               	retlw	32	;' '
   689  109B  3425               	retlw	37	;'%'
   690  109C  3464               	retlw	100	;'d'
   691  109D  3400               	retlw	0
   692  1087                     
   693                           	psect	cinit
   694  07EC                     start_initialization:	
   695                           ; #config settings
   696                           
   697  07EC                     __initialization:
   698                           
   699                           ; Clear objects allocated to BANK0
   700  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   701  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   702  07EE  01EA               	clrf	__pbssBANK0& (0+127)
   703  07EF  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   704  07F0  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   705  07F1  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   706  07F2  01EE               	clrf	(__pbssBANK0+4)& (0+127)
   707                           
   708                           ; Clear objects allocated to BANK1
   709  07F3  1383               	bcf	3,7	;select IRP bank0
   710  07F4  30B9               	movlw	low __pbssBANK1
   711  07F5  0084               	movwf	4
   712  07F6  30CD               	movlw	low (__pbssBANK1+20)
   713  07F7  160A  158A  265F  120A  118A  	fcall	clear_ram0
   714  07FC                     end_of_initialization:	
   715                           ;End of C runtime variable initialization code
   716                           
   717  07FC                     __end_of__initialization:
   718  07FC  0183               	clrf	3
   719  07FD  120A  158A  2811   	ljmp	_main	;jump to C main() function
   720                           
   721                           	psect	bssBANK0
   722  006A                     __pbssBANK0:
   723  006A                     _V1:
   724  006A                     	ds	3
   725  006D                     _ADC:
   726  006D                     	ds	1
   727  006E                     _cont:
   728  006E                     	ds	1
   729                           
   730                           	psect	bssBANK1
   731  00B9                     __pbssBANK1:
   732  00B9                     _BUFFER:
   733  00B9                     	ds	20
   734                           
   735                           	psect	clrtext
   736  1E5F                     clear_ram0:	
   737                           ;	Called with FSR containing the base address, and
   738                           ;	W with the last address+1
   739                           
   740  1E5F  0064               	clrwdt	;clear the watchdog before getting into this loop
   741  1E60                     clrloop0:
   742  1E60  0180               	clrf	0	;clear RAM location pointed to by FSR
   743  1E61  0A84               	incf	4,f	;increment pointer
   744  1E62  0604               	xorwf	4,w	;XOR with final address
   745  1E63  1903               	btfsc	3,2	;have we reached the end yet?
   746  1E64  3400               	retlw	0	;all done for this memory range, return
   747  1E65  0604               	xorwf	4,w	;XOR again to restore value
   748  1E66  2E60               	goto	clrloop0	;do the next byte
   749                           
   750                           	psect	cstackBANK1
   751  00A0                     __pcstackBANK1:
   752  00A0                     _sprintf$1079:
   753                           
   754                           ; 3 bytes @ 0x0
   755  00A0                     	ds	3
   756  00A3                     sprintf@ap:
   757                           
   758                           ; 1 bytes @ 0x3
   759  00A3                     	ds	1
   760  00A4                     sprintf@flag:
   761                           
   762                           ; 2 bytes @ 0x4
   763  00A4                     	ds	2
   764  00A6                     sprintf@width:
   765                           
   766                           ; 2 bytes @ 0x6
   767  00A6                     	ds	2
   768  00A8                     sprintf@tmpval:
   769                           
   770                           ; 4 bytes @ 0x8
   771  00A8                     	ds	4
   772  00AC                     sprintf@val:
   773                           
   774                           ; 4 bytes @ 0xC
   775  00AC                     	ds	4
   776  00B0                     sprintf@eexp:
   777                           
   778                           ; 2 bytes @ 0x10
   779  00B0                     	ds	2
   780  00B2                     sprintf@fval:
   781                           
   782                           ; 3 bytes @ 0x12
   783  00B2                     	ds	3
   784  00B5                     sprintf@sp:
   785                           
   786                           ; 1 bytes @ 0x15
   787  00B5                     	ds	1
   788  00B6                     sprintf@prec:
   789                           
   790                           ; 2 bytes @ 0x16
   791  00B6                     	ds	2
   792  00B8                     sprintf@c:
   793                           
   794                           ; 1 bytes @ 0x18
   795  00B8                     	ds	1
   796                           
   797                           	psect	cstackCOMMON
   798  0070                     __pcstackCOMMON:
   799  0070                     ?_isdigit:
   800  0070                     ?___ftge:	
   801                           ; 1 bit 
   802                           
   803  0070                     ?_setup:	
   804                           ; 1 bit 
   805                           
   806  0070                     ?__baudios:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ??__baudios:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_config_txsta:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ??_config_txsta:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_config_rcsta:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ??_config_rcsta:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_LCD_init:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_clear_LCD:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_contador:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_ADCread:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_Write_USART:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ??_Write_USART:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_spiWrite:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ??_spiWrite:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_spiRead:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ??_spiRead:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_spiInit:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ??_isdigit:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_main:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_spiReceiveWait:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ??_spiReceiveWait:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_port:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ??_port:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_CMDs:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_write_char:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?___wmul:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?___awmod:	
   885                           ; 2 bytes @ 0x0
   886                           
   887  0070                     ?___lwmod:	
   888                           ; 2 bytes @ 0x0
   889                           
   890  0070                     ?___ftpack:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0070                     ?___ftneg:	
   894                           ; 3 bytes @ 0x0
   895                           
   896  0070                     ?__tdiv_to_l_:	
   897                           ; 3 bytes @ 0x0
   898                           
   899  0070                     ?__div_to_l_:	
   900                           ; 4 bytes @ 0x0
   901                           
   902  0070                     ?___lldiv:	
   903                           ; 4 bytes @ 0x0
   904                           
   905  0070                     spiInit@sDataSample:	
   906                           ; 4 bytes @ 0x0
   907                           
   908  0070                     spiWrite@dat:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     Write_USART@a:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     port@a:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     _isdigit$881:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ___wmul@multiplier:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ___awmod@divisor:	
   924                           ; 2 bytes @ 0x0
   925                           
   926  0070                     ___lwmod@divisor:	
   927                           ; 2 bytes @ 0x0
   928                           
   929  0070                     __div_to_l_@f1:	
   930                           ; 2 bytes @ 0x0
   931                           
   932  0070                     ___ftpack@arg:	
   933                           ; 3 bytes @ 0x0
   934                           
   935  0070                     __tdiv_to_l_@f1:	
   936                           ; 3 bytes @ 0x0
   937                           
   938  0070                     ___ftge@ff1:	
   939                           ; 3 bytes @ 0x0
   940                           
   941  0070                     ___ftneg@f1:	
   942                           ; 3 bytes @ 0x0
   943                           
   944  0070                     ___lldiv@divisor:	
   945                           ; 3 bytes @ 0x0
   946                           
   947                           
   948                           ; 4 bytes @ 0x0
   949  0070                     	ds	1
   950  0071                     ??_contador:
   951  0071                     ??_ADCread:	
   952                           ; 1 bytes @ 0x1
   953                           
   954  0071                     ?_Write_USART_String:	
   955                           ; 1 bytes @ 0x1
   956                           
   957  0071                     ??_CMDs:	
   958                           ; 1 bytes @ 0x1
   959                           
   960  0071                     ??_write_char:	
   961                           ; 1 bytes @ 0x1
   962                           
   963  0071                     spiInit@sClockIdle:	
   964                           ; 1 bytes @ 0x1
   965                           
   966  0071                     isdigit@c:	
   967                           ; 1 bytes @ 0x1
   968                           
   969  0071                     Write_USART_String@a:	
   970                           ; 1 bytes @ 0x1
   971                           
   972                           
   973                           ; 2 bytes @ 0x1
   974  0071                     	ds	1
   975  0072                     spiInit@sTransmitEdge:
   976  0072                     write_char@a:	
   977                           ; 1 bytes @ 0x2
   978                           
   979  0072                     ___wmul@multiplicand:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0072                     ___awmod@dividend:	
   983                           ; 2 bytes @ 0x2
   984                           
   985  0072                     ___lwmod@dividend:	
   986                           ; 2 bytes @ 0x2
   987                           
   988                           
   989                           ; 2 bytes @ 0x2
   990  0072                     	ds	1
   991  0073                     ?_write_string:
   992  0073                     ??_Write_USART_String:	
   993                           ; 1 bytes @ 0x3
   994                           
   995  0073                     ??_spiInit:	
   996                           ; 1 bytes @ 0x3
   997                           
   998  0073                     ??___ftneg:	
   999                           ; 1 bytes @ 0x3
  1000                           
  1001  0073                     spiInit@sType:	
  1002                           ; 1 bytes @ 0x3
  1003                           
  1004  0073                     CMDs@a:	
  1005                           ; 1 bytes @ 0x3
  1006                           
  1007  0073                     ___ftpack@exp:	
  1008                           ; 1 bytes @ 0x3
  1009                           
  1010  0073                     write_string@a:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013  0073                     __div_to_l_@f2:	
  1014                           ; 2 bytes @ 0x3
  1015                           
  1016  0073                     __tdiv_to_l_@f2:	
  1017                           ; 3 bytes @ 0x3
  1018                           
  1019  0073                     ___ftge@ff2:	
  1020                           ; 3 bytes @ 0x3
  1021                           
  1022                           
  1023                           ; 3 bytes @ 0x3
  1024  0073                     	ds	1
  1025  0074                     ??_setup:
  1026  0074                     ??_LCD_init:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029  0074                     ??_clear_LCD:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032  0074                     ?_set_cursor:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035  0074                     ??___wmul:	
  1036                           ; 1 bytes @ 0x4
  1037                           
  1038  0074                     ??___awmod:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041  0074                     ??___lwmod:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044  0074                     Write_USART_String@i:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047  0074                     set_cursor@b:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050  0074                     ___ftpack@sign:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053  0074                     ___wmul@product:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056  0074                     ___lldiv@dividend:	
  1057                           ; 2 bytes @ 0x4
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x4
  1061  0074                     	ds	1
  1062  0075                     ??_set_cursor:
  1063  0075                     ??_write_string:	
  1064                           ; 1 bytes @ 0x5
  1065                           
  1066  0075                     ??___ftpack:	
  1067                           ; 1 bytes @ 0x5
  1068                           
  1069  0075                     ___awmod@counter:	
  1070                           ; 1 bytes @ 0x5
  1071                           
  1072  0075                     ___lwmod@counter:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x5
  1077  0075                     	ds	1
  1078  0076                     ??__tdiv_to_l_:
  1079  0076                     ??__div_to_l_:	
  1080                           ; 1 bytes @ 0x6
  1081                           
  1082  0076                     ??___ftge:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085  0076                     ?___lwdiv:	
  1086                           ; 1 bytes @ 0x6
  1087                           
  1088  0076                     set_cursor@a:	
  1089                           ; 2 bytes @ 0x6
  1090                           
  1091  0076                     ___awmod@sign:	
  1092                           ; 1 bytes @ 0x6
  1093                           
  1094  0076                     ___lwdiv@divisor:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x6
  1099  0076                     	ds	1
  1100  0077                     ?___awdiv:
  1101  0077                     set_cursor@x:	
  1102                           ; 2 bytes @ 0x7
  1103                           
  1104  0077                     ___awdiv@divisor:	
  1105                           ; 1 bytes @ 0x7
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x7
  1109  0077                     	ds	1
  1110  0078                     ??___lldiv:
  1111  0078                     ?___awtoft:	
  1112                           ; 1 bytes @ 0x8
  1113                           
  1114  0078                     ?___lltoft:	
  1115                           ; 3 bytes @ 0x8
  1116                           
  1117  0078                     write_string@i:	
  1118                           ; 3 bytes @ 0x8
  1119                           
  1120  0078                     ___awtoft@c:	
  1121                           ; 2 bytes @ 0x8
  1122                           
  1123  0078                     ___lwdiv@dividend:	
  1124                           ; 2 bytes @ 0x8
  1125                           
  1126  0078                     ___lltoft@c:	
  1127                           ; 2 bytes @ 0x8
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x8
  1131  0078                     	ds	1
  1132  0079                     ___awdiv@dividend:
  1133  0079                     ___lldiv@quotient:	
  1134                           ; 2 bytes @ 0x9
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x9
  1138  0079                     	ds	1
  1139  007A                     ??___lwdiv:
  1140                           
  1141                           ; 1 bytes @ 0xA
  1142  007A                     	ds	1
  1143  007B                     ??___awdiv:
  1144  007B                     ??___awtoft:	
  1145                           ; 1 bytes @ 0xB
  1146                           
  1147  007B                     ___lwdiv@quotient:	
  1148                           ; 1 bytes @ 0xB
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0xB
  1152  007B                     	ds	1
  1153  007C                     ??___lltoft:
  1154                           
  1155                           ; 1 bytes @ 0xC
  1156  007C                     	ds	1
  1157  007D                     ___lldiv@counter:
  1158  007D                     ___awtoft@sign:	
  1159                           ; 1 bytes @ 0xD
  1160                           
  1161  007D                     ___lltoft@exp:	
  1162                           ; 1 bytes @ 0xD
  1163                           
  1164  007D                     ___lwdiv@counter:	
  1165                           ; 1 bytes @ 0xD
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0xD
  1169  007D                     	ds	1
  1170  007E                     ??___ftsub:
  1171                           
  1172                           	psect	cstackBANK0
  1173  0020                     __pcstackBANK0:	
  1174                           ; 1 bytes @ 0xE
  1175                           
  1176  0020                     ?___llmod:
  1177  0020                     ___awdiv@counter:	
  1178                           ; 4 bytes @ 0x0
  1179                           
  1180  0020                     __div_to_l_@quot:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0020                     __tdiv_to_l_@quot:	
  1184                           ; 4 bytes @ 0x0
  1185                           
  1186  0020                     ___llmod@divisor:	
  1187                           ; 4 bytes @ 0x0
  1188                           
  1189                           
  1190                           ; 4 bytes @ 0x0
  1191  0020                     	ds	1
  1192  0021                     ___awdiv@sign:
  1193                           
  1194                           ; 1 bytes @ 0x1
  1195  0021                     	ds	1
  1196  0022                     ___awdiv@quotient:
  1197                           
  1198                           ; 2 bytes @ 0x2
  1199  0022                     	ds	2
  1200  0024                     ?___bmul:
  1201  0024                     ___bmul@multiplicand:	
  1202                           ; 1 bytes @ 0x4
  1203                           
  1204  0024                     __div_to_l_@cntr:	
  1205                           ; 1 bytes @ 0x4
  1206                           
  1207  0024                     __tdiv_to_l_@cntr:	
  1208                           ; 1 bytes @ 0x4
  1209                           
  1210  0024                     ___llmod@dividend:	
  1211                           ; 1 bytes @ 0x4
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x4
  1215  0024                     	ds	1
  1216  0025                     ??___bmul:
  1217  0025                     __div_to_l_@exp1:	
  1218                           ; 1 bytes @ 0x5
  1219                           
  1220  0025                     __tdiv_to_l_@exp1:	
  1221                           ; 1 bytes @ 0x5
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x5
  1225  0025                     	ds	1
  1226  0026                     ___bmul@product:
  1227                           
  1228                           ; 1 bytes @ 0x6
  1229  0026                     	ds	1
  1230  0027                     ___bmul@multiplier:
  1231                           
  1232                           ; 1 bytes @ 0x7
  1233  0027                     	ds	1
  1234  0028                     ??___llmod:
  1235  0028                     ?___ftmul:	
  1236                           ; 1 bytes @ 0x8
  1237                           
  1238  0028                     ___ftmul@f1:	
  1239                           ; 3 bytes @ 0x8
  1240                           
  1241                           
  1242                           ; 3 bytes @ 0x8
  1243  0028                     	ds	1
  1244  0029                     ___llmod@counter:
  1245                           
  1246                           ; 1 bytes @ 0x9
  1247  0029                     	ds	2
  1248  002B                     ___ftmul@f2:
  1249                           
  1250                           ; 3 bytes @ 0xB
  1251  002B                     	ds	3
  1252  002E                     ??___ftmul:
  1253                           
  1254                           ; 1 bytes @ 0xE
  1255  002E                     	ds	4
  1256  0032                     ___ftmul@exp:
  1257                           
  1258                           ; 1 bytes @ 0x12
  1259  0032                     	ds	1
  1260  0033                     ___ftmul@f3_as_product:
  1261                           
  1262                           ; 3 bytes @ 0x13
  1263  0033                     	ds	3
  1264  0036                     ___ftmul@cntr:
  1265                           
  1266                           ; 1 bytes @ 0x16
  1267  0036                     	ds	1
  1268  0037                     ___ftmul@sign:
  1269                           
  1270                           ; 1 bytes @ 0x17
  1271  0037                     	ds	1
  1272  0038                     ?_fround:
  1273  0038                     ?_scale:	
  1274                           ; 3 bytes @ 0x18
  1275                           
  1276                           
  1277                           ; 3 bytes @ 0x18
  1278  0038                     	ds	3
  1279  003B                     ??_fround:
  1280  003B                     ??_scale:	
  1281                           ; 1 bytes @ 0x1B
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x1B
  1285  003B                     	ds	2
  1286  003D                     _scale$1078:
  1287                           
  1288                           ; 3 bytes @ 0x1D
  1289  003D                     	ds	3
  1290  0040                     scale@scl:
  1291                           
  1292                           ; 1 bytes @ 0x20
  1293  0040                     	ds	1
  1294  0041                     ?___fttol:
  1295  0041                     ___fttol@f1:	
  1296                           ; 4 bytes @ 0x21
  1297                           
  1298  0041                     _fround$1077:	
  1299                           ; 3 bytes @ 0x21
  1300                           
  1301                           
  1302                           ; 3 bytes @ 0x21
  1303  0041                     	ds	3
  1304  0044                     _fround$1076:
  1305                           
  1306                           ; 3 bytes @ 0x24
  1307  0044                     	ds	1
  1308  0045                     ??___fttol:
  1309                           
  1310                           ; 1 bytes @ 0x25
  1311  0045                     	ds	2
  1312  0047                     fround@prec:
  1313                           
  1314                           ; 1 bytes @ 0x27
  1315  0047                     	ds	1
  1316  0048                     ?___ftadd:
  1317  0048                     ___ftadd@f1:	
  1318                           ; 3 bytes @ 0x28
  1319                           
  1320                           
  1321                           ; 3 bytes @ 0x28
  1322  0048                     	ds	1
  1323  0049                     ___fttol@sign1:
  1324                           
  1325                           ; 1 bytes @ 0x29
  1326  0049                     	ds	1
  1327  004A                     ___fttol@lval:
  1328                           
  1329                           ; 4 bytes @ 0x2A
  1330  004A                     	ds	1
  1331  004B                     ___ftadd@f2:
  1332                           
  1333                           ; 3 bytes @ 0x2B
  1334  004B                     	ds	3
  1335  004E                     ??___ftadd:
  1336  004E                     ___fttol@exp1:	
  1337                           ; 1 bytes @ 0x2E
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x2E
  1341  004E                     	ds	4
  1342  0052                     ___ftadd@sign:
  1343                           
  1344                           ; 1 bytes @ 0x32
  1345  0052                     	ds	1
  1346  0053                     ___ftadd@exp2:
  1347                           
  1348                           ; 1 bytes @ 0x33
  1349  0053                     	ds	1
  1350  0054                     ___ftadd@exp1:
  1351                           
  1352                           ; 1 bytes @ 0x34
  1353  0054                     	ds	1
  1354  0055                     ?___ftsub:
  1355  0055                     ___ftsub@f2:	
  1356                           ; 3 bytes @ 0x35
  1357                           
  1358                           
  1359                           ; 3 bytes @ 0x35
  1360  0055                     	ds	3
  1361  0058                     ___ftsub@f1:
  1362                           
  1363                           ; 3 bytes @ 0x38
  1364  0058                     	ds	3
  1365  005B                     ?_sprintf:
  1366  005B                     sprintf@f:	
  1367                           ; 2 bytes @ 0x3B
  1368                           
  1369                           
  1370                           ; 1 bytes @ 0x3B
  1371  005B                     	ds	6
  1372  0061                     ??_sprintf:
  1373                           
  1374                           ; 1 bytes @ 0x41
  1375  0061                     	ds	6
  1376  0067                     ??_main:
  1377                           
  1378                           ; 1 bytes @ 0x47
  1379  0067                     	ds	3
  1380                           
  1381                           	psect	maintext
  1382  0811                     __pmaintext:	
  1383 ;;
  1384 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1385 ;;
  1386 ;; *************** function _main *****************
  1387 ;; Defined at:
  1388 ;;		line 53 in file "master.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : B00/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       3       0       0       0
  1405 ;;      Totals:         0       3       0       0       0
  1406 ;;Total ram usage:        3 bytes
  1407 ;; Hardware stack levels required when called:    4
  1408 ;; This function calls:
  1409 ;;		_ADCread
  1410 ;;		_LCD_init
  1411 ;;		_Write_USART
  1412 ;;		_Write_USART_String
  1413 ;;		___awtoft
  1414 ;;		___ftmul
  1415 ;;		__baudios
  1416 ;;		_clear_LCD
  1417 ;;		_config_rcsta
  1418 ;;		_config_txsta
  1419 ;;		_contador
  1420 ;;		_set_cursor
  1421 ;;		_setup
  1422 ;;		_sprintf
  1423 ;;		_write_string
  1424 ;; This function is called by:
  1425 ;;		Startup code after reset
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _main
  1431  0811                     _main:
  1432  0811                     l3168:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1435                           
  1436                           
  1437                           ;master.c: 54:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1438  0811  160A  158A  26D5  120A  158A  	fcall	_setup
  1439                           
  1440                           ;master.c: 55: 
  1441  0816  120A  158A  2000  120A  158A  	fcall	__baudios
  1442  081B                     l3170:
  1443                           
  1444                           ;master.c: 56:     spiWrite(1);
  1445  081B  160A  158A  2670  120A  158A  	fcall	_config_txsta
  1446  0820                     l3172:
  1447                           
  1448                           ;master.c: 57:     cont = spiRead();
  1449  0820  160A  158A  2657  120A  158A  	fcall	_config_rcsta
  1450                           
  1451                           ;master.c: 58: 
  1452  0825  160A  118A  22F5  120A  158A  	fcall	_LCD_init
  1453                           
  1454                           ;master.c: 59:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1455  082A  120A  118A  2003  120A  158A  	fcall	_clear_LCD
  1456  082F                     l65:	
  1457                           ;master.c: 60:     PORTCbits.RC2 = 1;
  1458                           
  1459                           
  1460                           ;master.c: 61:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1461  082F  160A  118A  20DE  120A  158A  	fcall	_contador
  1462                           
  1463                           ;master.c: 62: }
  1464  0834  160A  118A  20AC  120A  158A  	fcall	_ADCread
  1465                           
  1466                           ;master.c: 64: void ADCread (void){
  1467  0839  120A  118A  2003  120A  158A  	fcall	_clear_LCD
  1468                           
  1469                           ;master.c: 65:     PORTCbits.RC1 = 0;
  1470  083E  01F4               	clrf	set_cursor@b
  1471  083F  0AF4               	incf	set_cursor@b,f
  1472  0840  3001               	movlw	1
  1473  0841  160A  158A  2713  120A  158A  	fcall	_set_cursor
  1474  0846                     l3174:
  1475                           
  1476                           ;master.c: 66:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1477  0846  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1478  0847  00F3               	movwf	write_string@a
  1479  0848  3080               	movlw	128
  1480  0849  00F4               	movwf	write_string@a+1
  1481  084A  160A  118A  21C0  120A  158A  	fcall	_write_string
  1482  084F                     l3176:
  1483                           
  1484                           ;master.c: 68:     spiWrite(1);
  1485  084F  3090               	movlw	144
  1486  0850  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0851  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0852  00A8               	movwf	___ftmul@f1
  1489  0853  30A0               	movlw	160
  1490  0854  00A9               	movwf	___ftmul@f1+1
  1491  0855  303C               	movlw	60
  1492  0856  00AA               	movwf	___ftmul@f1+2
  1493  0857  086D               	movf	_ADC,w
  1494  0858  00E7               	movwf	??_main
  1495  0859  01E8               	clrf	??_main+1
  1496  085A  0867               	movf	??_main,w
  1497  085B  00F8               	movwf	___awtoft@c
  1498  085C  0868               	movf	??_main+1,w
  1499  085D  00F9               	movwf	___awtoft@c+1
  1500  085E  160A  158A  2737  120A  158A  	fcall	___awtoft
  1501  0863  0878               	movf	?___awtoft,w
  1502  0864  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0865  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0866  00AB               	movwf	___ftmul@f2
  1505  0867  0879               	movf	?___awtoft+1,w
  1506  0868  00AC               	movwf	___ftmul@f2+1
  1507  0869  087A               	movf	?___awtoft+2,w
  1508  086A  00AD               	movwf	___ftmul@f2+2
  1509  086B  160A  118A  25EF  120A  158A  	fcall	___ftmul
  1510  0870  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0871  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0872  0828               	movf	?___ftmul,w
  1513  0873  00EA               	movwf	_V1
  1514  0874  0829               	movf	?___ftmul+1,w
  1515  0875  00EB               	movwf	_V1+1
  1516  0876  082A               	movf	?___ftmul+2,w
  1517  0877  00EC               	movwf	_V1+2
  1518                           
  1519                           ;master.c: 69:     ADC = spiRead();
  1520  0878  3085               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1521  0879  00E7               	movwf	??_main
  1522  087A  0867               	movf	??_main,w
  1523  087B  00DB               	movwf	sprintf@f
  1524  087C  086A               	movf	_V1,w
  1525  087D  00DC               	movwf	?_sprintf+1
  1526  087E  086B               	movf	_V1+1,w
  1527  087F  00DD               	movwf	?_sprintf+2
  1528  0880  086C               	movf	_V1+2,w
  1529  0881  00DE               	movwf	?_sprintf+3
  1530  0882  086E               	movf	_cont,w
  1531  0883  00E8               	movwf	??_main+1
  1532  0884  01E9               	clrf	??_main+2
  1533  0885  0868               	movf	??_main+1,w
  1534  0886  00DF               	movwf	?_sprintf+4
  1535  0887  0869               	movf	??_main+2,w
  1536  0888  00E0               	movwf	?_sprintf+5
  1537  0889  30B9               	movlw	(low (_BUFFER| 0))& (0+255)
  1538  088A  120A  158A  2528  120A  158A  	fcall	_sprintf
  1539  088F                     l3178:
  1540                           
  1541                           ;master.c: 71:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1542  088F  01F4               	clrf	set_cursor@b
  1543  0890  0AF4               	incf	set_cursor@b,f
  1544  0891  3002               	movlw	2
  1545  0892  160A  158A  2713  120A  158A  	fcall	_set_cursor
  1546  0897                     l3180:
  1547                           
  1548                           ;master.c: 72:     PORTCbits.RC1 = 1;
  1549  0897  30B9               	movlw	(low (_BUFFER| 0))& (0+255)
  1550  0898  00F3               	movwf	write_string@a
  1551  0899  3000               	movlw	0
  1552  089A  00F4               	movwf	write_string@a+1
  1553  089B  160A  118A  21C0  120A  158A  	fcall	_write_string
  1554  08A0                     l3182:
  1555                           
  1556                           ;master.c: 74: }
  1557  08A0  3078               	movlw	(low (((STR_1+1)-__stringbase)| (0+32768)))& (0+255)
  1558  08A1  00F1               	movwf	Write_USART_String@a
  1559  08A2  3080               	movlw	128
  1560  08A3  00F2               	movwf	Write_USART_String@a+1
  1561  08A4  160A  158A  27A6  120A  158A  	fcall	_Write_USART_String
  1562  08A9                     l3184:
  1563                           
  1564                           ;master.c: 75: 
  1565  08A9  300D               	movlw	13
  1566  08AA  120A  158A  2005  120A  158A  	fcall	_Write_USART
  1567  08AF                     l3186:
  1568                           
  1569                           ;master.c: 76: 
  1570  08AF  300A               	movlw	10
  1571  08B0  120A  158A  2005  120A  158A  	fcall	_Write_USART
  1572  08B5                     l3188:
  1573                           
  1574                           ;master.c: 78: 
  1575  08B5  30B9               	movlw	(low (_BUFFER| 0))& (0+255)
  1576  08B6  00F1               	movwf	Write_USART_String@a
  1577  08B7  3000               	movlw	0
  1578  08B8  00F2               	movwf	Write_USART_String@a+1
  1579  08B9  160A  158A  27A6  120A  158A  	fcall	_Write_USART_String
  1580                           
  1581                           ;master.c: 79: void setup(void) {
  1582  08BE  300D               	movlw	13
  1583  08BF  120A  158A  2005  120A  158A  	fcall	_Write_USART
  1584                           
  1585                           ;master.c: 80:     ANSEL = 0;
  1586  08C4  300A               	movlw	10
  1587  08C5  120A  158A  2005  120A  158A  	fcall	_Write_USART
  1588  08CA                     l3190:
  1589                           
  1590                           ;master.c: 82:     TRISD = 0;
  1591  08CA  3006               	movlw	6
  1592  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  1593  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  1594  08CD  00E9               	movwf	??_main+2
  1595  08CE  3013               	movlw	19
  1596  08CF  00E8               	movwf	??_main+1
  1597  08D0  30AD               	movlw	173
  1598  08D1  00E7               	movwf	??_main
  1599  08D2                     u4507:
  1600  08D2  0BE7               	decfsz	??_main,f
  1601  08D3  28D2               	goto	u4507
  1602  08D4  0BE8               	decfsz	??_main+1,f
  1603  08D5  28D2               	goto	u4507
  1604  08D6  0BE9               	decfsz	??_main+2,f
  1605  08D7  28D2               	goto	u4507
  1606  08D8  282F               	goto	l65
  1607  08D9  120A  118A  2800   	ljmp	start
  1608  08DC                     __end_of_main:
  1609                           
  1610                           	psect	text1
  1611  11C0                     __ptext1:	
  1612 ;; *************** function _write_string *****************
  1613 ;; Defined at:
  1614 ;;		line 99 in file "LCD.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  a               2    3[COMMON] PTR unsigned char 
  1617 ;;		 -> BUFFER(20), STR_1(14), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  i               2    8[COMMON] int 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         2       0       0       0       0
  1630 ;;      Locals:         2       0       0       0       0
  1631 ;;      Temps:          3       0       0       0       0
  1632 ;;      Totals:         7       0       0       0       0
  1633 ;;Total ram usage:        7 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    2
  1636 ;; This function calls:
  1637 ;;		_write_char
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _write_string
  1645  11C0                     _write_string:
  1646  11C0                     l2848:	
  1647                           ;incstack = 0
  1648                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1649                           
  1650                           
  1651                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
  1652  11C0  01F8               	clrf	write_string@i
  1653  11C1  01F9               	clrf	write_string@i+1
  1654  11C2  29E5               	goto	l2854
  1655  11C3                     l2850:
  1656                           
  1657                           ;LCD.c: 102:  write_char(a[i]);
  1658  11C3  0878               	movf	write_string@i,w
  1659  11C4  0773               	addwf	write_string@a,w
  1660  11C5  00F6               	movwf	??_write_string+1
  1661  11C6  0874               	movf	write_string@a+1,w
  1662  11C7  00F5               	movwf	??_write_string
  1663  11C8  1803               	skipnc
  1664  11C9  0AF5               	incf	??_write_string,f
  1665  11CA  1FF8               	btfss	write_string@i,7
  1666  11CB  29CD               	goto	u3910
  1667  11CC  03F5               	decf	??_write_string,f
  1668  11CD                     u3910:
  1669  11CD  0875               	movf	??_write_string,w
  1670  11CE  00F7               	movwf	??_write_string+2
  1671  11CF  0877               	movf	??_write_string+2,w
  1672  11D0  1283               	bcf	3,5	;RP0=0, select bank0
  1673  11D1  1303               	bcf	3,6	;RP1=0, select bank0
  1674  11D2  00FF               	movwf	btemp+1
  1675  11D3  0876               	movf	??_write_string+1,w
  1676  11D4  0084               	movwf	4
  1677  11D5  160A  118A  2000  160A  118A  	fcall	stringtab
  1678  11DA  160A  158A  26B9  160A  118A  	fcall	_write_char
  1679  11DF                     l2852:
  1680  11DF  3001               	movlw	1
  1681  11E0  07F8               	addwf	write_string@i,f
  1682  11E1  1803               	skipnc
  1683  11E2  0AF9               	incf	write_string@i+1,f
  1684  11E3  3000               	movlw	0
  1685  11E4  07F9               	addwf	write_string@i+1,f
  1686  11E5                     l2854:
  1687  11E5  0878               	movf	write_string@i,w
  1688  11E6  0773               	addwf	write_string@a,w
  1689  11E7  00F6               	movwf	??_write_string+1
  1690  11E8  0874               	movf	write_string@a+1,w
  1691  11E9  00F5               	movwf	??_write_string
  1692  11EA  1803               	skipnc
  1693  11EB  0AF5               	incf	??_write_string,f
  1694  11EC  1FF8               	btfss	write_string@i,7
  1695  11ED  29EF               	goto	u3920
  1696  11EE  03F5               	decf	??_write_string,f
  1697  11EF                     u3920:
  1698  11EF  0875               	movf	??_write_string,w
  1699  11F0  00F7               	movwf	??_write_string+2
  1700  11F1  0877               	movf	??_write_string+2,w
  1701  11F2  1283               	bcf	3,5	;RP0=0, select bank0
  1702  11F3  1303               	bcf	3,6	;RP1=0, select bank0
  1703  11F4  00FF               	movwf	btemp+1
  1704  11F5  0876               	movf	??_write_string+1,w
  1705  11F6  0084               	movwf	4
  1706  11F7  160A  118A  2000  160A  118A  	fcall	stringtab
  1707  11FC  3A00               	xorlw	0
  1708  11FD  1D03               	skipz
  1709  11FE  2A00               	goto	u3931
  1710  11FF  2A01               	goto	u3930
  1711  1200                     u3931:
  1712  1200  29C3               	goto	l2850
  1713  1201                     u3930:
  1714  1201                     l217:
  1715  1201  0008               	return
  1716  1202                     __end_of_write_string:
  1717                           
  1718                           	psect	text2
  1719  1EB9                     __ptext2:	
  1720 ;; *************** function _write_char *****************
  1721 ;; Defined at:
  1722 ;;		line 89 in file "LCD.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  a               1    wreg     unsigned char 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  a               1    2[COMMON] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         1       0       0       0       0
  1738 ;;      Temps:          1       0       0       0       0
  1739 ;;      Totals:         2       0       0       0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    1
  1743 ;; This function calls:
  1744 ;;		_port
  1745 ;; This function is called by:
  1746 ;;		_write_string
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _write_char
  1752  1EB9                     _write_char:
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1756                           ;write_char@a stored from wreg
  1757  1EB9  00F2               	movwf	write_char@a
  1758  1EBA                     l2432:
  1759                           
  1760                           ;LCD.c: 90:     RE0 = 1;
  1761  1EBA  1283               	bcf	3,5	;RP0=0, select bank0
  1762  1EBB  1303               	bcf	3,6	;RP1=0, select bank0
  1763  1EBC  1409               	bsf	9,0	;volatile
  1764  1EBD                     l2434:
  1765                           
  1766                           ;LCD.c: 91:     port(a);
  1767  1EBD  0872               	movf	write_char@a,w
  1768  1EBE  160A  118A  2182  160A  158A  	fcall	_port
  1769  1EC3                     l2436:
  1770                           
  1771                           ;LCD.c: 92:     RE1 = 1;
  1772  1EC3  1283               	bcf	3,5	;RP0=0, select bank0
  1773  1EC4  1303               	bcf	3,6	;RP1=0, select bank0
  1774  1EC5  1489               	bsf	9,1	;volatile
  1775  1EC6                     l2438:
  1776                           
  1777                           ;LCD.c: 93:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1778  1EC6  2EC7               	nop2	;2 cycle nop
  1779  1EC7  2EC8               	nop2	;2 cycle nop
  1780  1EC8  0000               	nop
  1781  1EC9                     l2440:
  1782                           
  1783                           ;LCD.c: 94:     RE1 = 0;
  1784  1EC9  1283               	bcf	3,5	;RP0=0, select bank0
  1785  1ECA  1303               	bcf	3,6	;RP1=0, select bank0
  1786  1ECB  1089               	bcf	9,1	;volatile
  1787  1ECC                     l2442:
  1788                           
  1789                           ;LCD.c: 95:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1790  1ECC  2ECD               	nop2	;2 cycle nop
  1791  1ECD  2ECE               	nop2	;2 cycle nop
  1792  1ECE  0000               	nop
  1793  1ECF                     l2444:
  1794                           
  1795                           ;LCD.c: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1796  1ECF  3010               	movlw	16
  1797  1ED0  00F1               	movwf	??_write_char
  1798  1ED1                     u4517:
  1799  1ED1  0BF1               	decfsz	??_write_char,f
  1800  1ED2  2ED1               	goto	u4517
  1801  1ED3  0000               	nop
  1802  1ED4                     l211:
  1803  1ED4  0008               	return
  1804  1ED5                     __end_of_write_char:
  1805                           
  1806                           	psect	text3
  1807  0D28                     __ptext3:	
  1808 ;; *************** function _sprintf *****************
  1809 ;; Defined at:
  1810 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  sp              1    wreg     PTR unsigned char 
  1813 ;;		 -> BUFFER(20), 
  1814 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  1815 ;;		 -> STR_2(10), 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  1818 ;;		 -> BUFFER(20), 
  1819 ;;  val             4   12[BANK1 ] unsigned long 
  1820 ;;  tmpval          4    8[BANK1 ] struct .
  1821 ;;  fval            3   18[BANK1 ] struct .
  1822 ;;  prec            2   22[BANK1 ] int 
  1823 ;;  eexp            2   16[BANK1 ] int 
  1824 ;;  width           2    6[BANK1 ] int 
  1825 ;;  flag            2    4[BANK1 ] unsigned short 
  1826 ;;  cp              2    0        PTR const unsigned char 
  1827 ;;  len             2    0        unsigned int 
  1828 ;;  c               1   24[BANK1 ] unsigned char 
  1829 ;;  ap              1    3[BANK1 ] PTR void [1]
  1830 ;;		 -> ?_sprintf(2), 
  1831 ;;  d               1    0        unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2   59[BANK0 ] int 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       6       0       0       0
  1842 ;;      Locals:         0       0      25       0       0
  1843 ;;      Temps:          0       6       0       0       0
  1844 ;;      Totals:         0      12      25       0       0
  1845 ;;Total ram usage:       37 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    3
  1848 ;; This function calls:
  1849 ;;		___awdiv
  1850 ;;		___ftadd
  1851 ;;		___ftge
  1852 ;;		___ftmul
  1853 ;;		___ftneg
  1854 ;;		___ftsub
  1855 ;;		___fttol
  1856 ;;		___lldiv
  1857 ;;		___llmod
  1858 ;;		___lltoft
  1859 ;;		___wmul
  1860 ;;		__div_to_l_
  1861 ;;		__tdiv_to_l_
  1862 ;;		_fround
  1863 ;;		_isdigit
  1864 ;;		_scale
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _sprintf
  1872  0D28                     _sprintf:
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1876                           ;sprintf@sp stored from wreg
  1877  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1878  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  1879  0D2A  00B5               	movwf	sprintf@sp^(0+128)
  1880  0D2B                     l2856:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1883  0D2B  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1884  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0D2E  00E1               	movwf	??_sprintf
  1887  0D2F  0861               	movf	??_sprintf,w
  1888  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0D32  00A3               	movwf	sprintf@ap^(0+128)
  1891  0D33                     L1:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1894  0D33  120A  118A  2FCE   	goto	l3136
  1895  0D36                     l2858:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1898  0D36  3025               	movlw	37
  1899  0D37  0638               	xorwf	sprintf@c^(0+128),w
  1900  0D38  1903               	btfsc	3,2
  1901  0D39  2D3B               	goto	u3941
  1902  0D3A  2D3C               	goto	u3940
  1903  0D3B                     u3941:
  1904  0D3B  2D50               	goto	l2864
  1905  0D3C                     u3940:
  1906  0D3C                     l2860:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1909  0D3C  0838               	movf	sprintf@c^(0+128),w
  1910  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0D3F  00E1               	movwf	??_sprintf
  1913  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0D41  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0D42  0835               	movf	sprintf@sp^(0+128),w
  1916  0D43  0084               	movwf	4
  1917  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0D46  0861               	movf	??_sprintf,w
  1920  0D47  1383               	bcf	3,7	;select IRP bank0
  1921  0D48  0080               	movwf	0
  1922  0D49                     l2862:
  1923  0D49  3001               	movlw	1
  1924  0D4A  00E1               	movwf	??_sprintf
  1925  0D4B  0861               	movf	??_sprintf,w
  1926  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0D4E  07B5               	addwf	sprintf@sp^(0+128),f
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1931  0D4F  2D33               	goto	L1
  1932  0D50                     l2864:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1935  0D50  01A6               	clrf	sprintf@width^(0+128)
  1936  0D51  01A7               	clrf	(sprintf@width+1)^(0+128)
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1939  0D52  01A4               	clrf	sprintf@flag^(0+128)
  1940  0D53  01A5               	clrf	(sprintf@flag+1)^(0+128)
  1941  0D54                     l2866:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1944  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0D56  085B               	movf	sprintf@f,w
  1947  0D57  0084               	movwf	4
  1948  0D58  160A  118A  200A  120A  158A  	fcall	stringdir
  1949  0D5D  160A  158A  267A  120A  158A  	fcall	_isdigit
  1950  0D62  1C03               	btfss	3,0
  1951  0D63  2D65               	goto	u3951
  1952  0D64  2D66               	goto	u3950
  1953  0D65                     u3951:
  1954  0D65  2DB0               	goto	l2878
  1955  0D66                     u3950:
  1956  0D66                     l2868:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1959  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0D68  01A6               	clrf	sprintf@width^(0+128)
  1962  0D69  01A7               	clrf	(sprintf@width+1)^(0+128)
  1963  0D6A                     l2870:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1966  0D6A  300A               	movlw	10
  1967  0D6B  00F0               	movwf	___wmul@multiplier
  1968  0D6C  3000               	movlw	0
  1969  0D6D  00F1               	movwf	___wmul@multiplier+1
  1970  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0D70  0827               	movf	(sprintf@width+1)^(0+128),w
  1973  0D71  00F3               	movwf	___wmul@multiplicand+1
  1974  0D72  0826               	movf	sprintf@width^(0+128),w
  1975  0D73  00F2               	movwf	___wmul@multiplicand
  1976  0D74  160A  158A  2781  120A  158A  	fcall	___wmul
  1977  0D79  0871               	movf	?___wmul+1,w
  1978  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0D7C  00A7               	movwf	(sprintf@width+1)^(0+128)
  1981  0D7D  0870               	movf	?___wmul,w
  1982  0D7E  00A6               	movwf	sprintf@width^(0+128)
  1983  0D7F                     l2872:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1986  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0D81  085B               	movf	sprintf@f,w
  1989  0D82  0084               	movwf	4
  1990  0D83  160A  118A  200A  120A  158A  	fcall	stringdir
  1991  0D88  3ED0               	addlw	208
  1992  0D89  00E1               	movwf	??_sprintf
  1993  0D8A  30FF               	movlw	255
  1994  0D8B  1803               	skipnc
  1995  0D8C  3000               	movlw	0
  1996  0D8D  00E2               	movwf	??_sprintf+1
  1997  0D8E  0861               	movf	??_sprintf,w
  1998  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  2000  0D91  07A6               	addwf	sprintf@width^(0+128),f
  2001  0D92  1803               	skipnc
  2002  0D93  0AA7               	incf	(sprintf@width+1)^(0+128),f
  2003  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0D96  0862               	movf	??_sprintf+1,w
  2006  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0D99  07A7               	addwf	(sprintf@width+1)^(0+128),f
  2009  0D9A                     l2874:
  2010  0D9A  3001               	movlw	1
  2011  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0D9D  00E1               	movwf	??_sprintf
  2014  0D9E  0861               	movf	??_sprintf,w
  2015  0D9F  07DB               	addwf	sprintf@f,f
  2016  0DA0                     l2876:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2019  0DA0  085B               	movf	sprintf@f,w
  2020  0DA1  0084               	movwf	4
  2021  0DA2  160A  118A  200A  120A  158A  	fcall	stringdir
  2022  0DA7  160A  158A  267A  120A  158A  	fcall	_isdigit
  2023  0DAC  1803               	btfsc	3,0
  2024  0DAD  2DAF               	goto	u3961
  2025  0DAE  2DB0               	goto	u3960
  2026  0DAF                     u3961:
  2027  0DAF  2D6A               	goto	l2870
  2028  0DB0                     u3960:
  2029  0DB0                     l2878:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2032  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0DB2  085B               	movf	sprintf@f,w
  2035  0DB3  0084               	movwf	4
  2036  0DB4  160A  118A  200A  120A  158A  	fcall	stringdir
  2037  0DB9  3A2E               	xorlw	46
  2038  0DBA  1D03               	skipz
  2039  0DBB  2DBD               	goto	u3971
  2040  0DBC  2DBE               	goto	u3970
  2041  0DBD                     u3971:
  2042  0DBD  2E14               	goto	l2894
  2043  0DBE                     u3970:
  2044  0DBE                     l2880:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2047  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0DC0  1725               	bsf	(sprintf@flag^(0+128)+1),6
  2050  0DC1                     l2882:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2053  0DC1  3001               	movlw	1
  2054  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0DC4  00E1               	movwf	??_sprintf
  2057  0DC5  0861               	movf	??_sprintf,w
  2058  0DC6  07DB               	addwf	sprintf@f,f
  2059  0DC7                     l2884:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2062  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  2064  0DC9  01B6               	clrf	sprintf@prec^(0+128)
  2065  0DCA  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2068  0DCB  2E02               	goto	l2892
  2069  0DCC                     l2886:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2072  0DCC  300A               	movlw	10
  2073  0DCD  00F0               	movwf	___wmul@multiplier
  2074  0DCE  3000               	movlw	0
  2075  0DCF  00F1               	movwf	___wmul@multiplier+1
  2076  0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0DD1  1303               	bcf	3,6	;RP1=0, select bank1
  2078  0DD2  0837               	movf	(sprintf@prec+1)^(0+128),w
  2079  0DD3  00F3               	movwf	___wmul@multiplicand+1
  2080  0DD4  0836               	movf	sprintf@prec^(0+128),w
  2081  0DD5  00F2               	movwf	___wmul@multiplicand
  2082  0DD6  160A  158A  2781  120A  158A  	fcall	___wmul
  2083  0DDB  0871               	movf	?___wmul+1,w
  2084  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  2086  0DDE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2087  0DDF  0870               	movf	?___wmul,w
  2088  0DE0  00B6               	movwf	sprintf@prec^(0+128)
  2089  0DE1                     l2888:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2092  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0DE3  085B               	movf	sprintf@f,w
  2095  0DE4  0084               	movwf	4
  2096  0DE5  160A  118A  200A  120A  158A  	fcall	stringdir
  2097  0DEA  3ED0               	addlw	208
  2098  0DEB  00E1               	movwf	??_sprintf
  2099  0DEC  30FF               	movlw	255
  2100  0DED  1803               	skipnc
  2101  0DEE  3000               	movlw	0
  2102  0DEF  00E2               	movwf	??_sprintf+1
  2103  0DF0  0861               	movf	??_sprintf,w
  2104  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0DF3  07B6               	addwf	sprintf@prec^(0+128),f
  2107  0DF4  1803               	skipnc
  2108  0DF5  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  2109  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0DF8  0862               	movf	??_sprintf+1,w
  2112  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2114  0DFB  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  2115  0DFC                     l2890:
  2116  0DFC  3001               	movlw	1
  2117  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0DFF  00E1               	movwf	??_sprintf
  2120  0E00  0861               	movf	??_sprintf,w
  2121  0E01  07DB               	addwf	sprintf@f,f
  2122  0E02                     l2892:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2125  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0E03  085B               	movf	sprintf@f,w
  2127  0E04  0084               	movwf	4
  2128  0E05  160A  118A  200A  120A  158A  	fcall	stringdir
  2129  0E0A  160A  158A  267A  120A  158A  	fcall	_isdigit
  2130  0E0F  1803               	btfsc	3,0
  2131  0E10  2E12               	goto	u3981
  2132  0E11  2E13               	goto	u3980
  2133  0E12                     u3981:
  2134  0E12  2DCC               	goto	l2886
  2135  0E13                     u3980:
  2136  0E13  2E1E               	goto	l2900
  2137  0E14                     l2894:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2140  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  2141  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  2142  0E16  01B6               	clrf	sprintf@prec^(0+128)
  2143  0E17  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2144  0E18                     l2896:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2147  0E18  1625               	bsf	(sprintf@flag^(0+128)+1),4
  2148  0E19  2E1E               	goto	l2900
  2149  0E1A                     l348:	
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2151                           
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2154  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2156  0E1C  1525               	bsf	(sprintf@flag^(0+128)+1),2
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2159  0E1D  2E44               	goto	l2902
  2160  0E1E                     l2900:
  2161  0E1E  3001               	movlw	1
  2162  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0E21  07DB               	addwf	sprintf@f,f
  2165  0E22  30FF               	movlw	-1
  2166  0E23  075B               	addwf	sprintf@f,w
  2167  0E24  0084               	movwf	4
  2168  0E25  160A  118A  200A  120A  158A  	fcall	stringdir
  2169  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0E2C  00B8               	movwf	sprintf@c^(0+128)
  2172  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0E2F  00E1               	movwf	??_sprintf
  2175  0E30  01E2               	clrf	??_sprintf+1
  2176                           
  2177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2178                           ; Switch size 1, requested type "simple"
  2179                           ; Number of cases is 1, Range of values is 0 to 0
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte            4     3 (average)
  2183                           ; direct_byte           11     8 (fixed)
  2184                           ; jumptable            260     6 (fixed)
  2185                           ;	Chosen strategy is simple_byte
  2186  0E31  0862               	movf	??_sprintf+1,w
  2187  0E32  3A00               	xorlw	0	; case 0
  2188  0E33  1903               	skipnz
  2189  0E34  2E36               	goto	l3222
  2190  0E35  2D33               	goto	L1
  2191  0E36                     l3222:
  2192                           
  2193                           ; Switch size 1, requested type "simple"
  2194                           ; Number of cases is 4, Range of values is 0 to 105
  2195                           ; switch strategies available:
  2196                           ; Name         Instructions Cycles
  2197                           ; simple_byte           13     7 (average)
  2198                           ; jumptable            260     6 (fixed)
  2199                           ;	Chosen strategy is simple_byte
  2200  0E36  0861               	movf	??_sprintf,w
  2201  0E37  3A00               	xorlw	0	; case 0
  2202  0E38  1903               	skipnz
  2203  0E39  2FFD               	goto	L3
  2204  0E3A  3A64               	xorlw	100	; case 100
  2205  0E3B  1903               	skipnz
  2206  0E3C  2E44               	goto	l2902
  2207  0E3D  3A02               	xorlw	2	; case 102
  2208  0E3E  1903               	skipnz
  2209  0E3F  2E1A               	goto	l348
  2210  0E40  3A0F               	xorlw	15	; case 105
  2211  0E41  1903               	skipnz
  2212  0E42  2E44               	goto	l2902
  2213  0E43  2D33               	goto	L1
  2214  0E44                     l2902:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2217  0E44  3000               	movlw	0
  2218  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0E47  0524               	andwf	sprintf@flag^(0+128),w
  2221  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0E4A  00E1               	movwf	??_sprintf
  2224  0E4B  3007               	movlw	7
  2225  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0E4E  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2228  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0E51  00E2               	movwf	??_sprintf+1
  2231  0E52  0861               	movf	??_sprintf,w
  2232  0E53  0462               	iorwf	??_sprintf+1,w
  2233  0E54  1903               	btfsc	3,2
  2234  0E55  2E57               	goto	u3991
  2235  0E56  2E5A               	goto	u3990
  2236  0E57                     u3991:
  2237  0E57  120A  118A  2DC5   	goto	l3058
  2238  0E5A                     u3990:
  2239  0E5A                     l2904:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2242  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0E5C  1E25               	btfss	(sprintf@flag+1)^(0+128),4
  2245  0E5D  2E5F               	goto	u4001
  2246  0E5E  2E60               	goto	u4000
  2247  0E5F                     u4001:
  2248  0E5F  2E64               	goto	l2908
  2249  0E60                     u4000:
  2250  0E60                     l2906:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2253  0E60  3006               	movlw	6
  2254  0E61  00B6               	movwf	sprintf@prec^(0+128)
  2255  0E62  3000               	movlw	0
  2256  0E63  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2257  0E64                     l2908:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2260  0E64  0823               	movf	sprintf@ap^(0+128),w
  2261  0E65  0084               	movwf	4
  2262  0E66  1383               	bcf	3,7	;select IRP bank0
  2263  0E67  0800               	movf	0,w
  2264  0E68  00B2               	movwf	sprintf@fval^(0+128)
  2265  0E69  0A84               	incf	4,f
  2266  0E6A  0800               	movf	0,w
  2267  0E6B  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2268  0E6C  0A84               	incf	4,f
  2269  0E6D  0800               	movf	0,w
  2270  0E6E  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2271  0E6F                     l2910:
  2272  0E6F  3003               	movlw	3
  2273  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0E72  00E1               	movwf	??_sprintf
  2276  0E73  0861               	movf	??_sprintf,w
  2277  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  2279  0E76  07A3               	addwf	sprintf@ap^(0+128),f
  2280  0E77                     l2912:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2283  0E77  0832               	movf	sprintf@fval^(0+128),w
  2284  0E78  00F0               	movwf	___ftge@ff1
  2285  0E79  0833               	movf	(sprintf@fval+1)^(0+128),w
  2286  0E7A  00F1               	movwf	___ftge@ff1+1
  2287  0E7B  0834               	movf	(sprintf@fval+2)^(0+128),w
  2288  0E7C  00F2               	movwf	___ftge@ff1+2
  2289  0E7D  3000               	movlw	0
  2290  0E7E  00F3               	movwf	___ftge@ff2
  2291  0E7F  3000               	movlw	0
  2292  0E80  00F4               	movwf	___ftge@ff2+1
  2293  0E81  3000               	movlw	0
  2294  0E82  00F5               	movwf	___ftge@ff2+2
  2295  0E83  160A  118A  2110  120A  158A  	fcall	___ftge
  2296  0E88  1803               	btfsc	3,0
  2297  0E89  2E8B               	goto	u4011
  2298  0E8A  2E8C               	goto	u4010
  2299  0E8B                     u4011:
  2300  0E8B  2EA5               	goto	l2918
  2301  0E8C                     u4010:
  2302  0E8C                     l2914:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2305  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0E8E  0832               	movf	sprintf@fval^(0+128),w
  2308  0E8F  00F0               	movwf	___ftneg@f1
  2309  0E90  0833               	movf	(sprintf@fval+1)^(0+128),w
  2310  0E91  00F1               	movwf	___ftneg@f1+1
  2311  0E92  0834               	movf	(sprintf@fval+2)^(0+128),w
  2312  0E93  00F2               	movwf	___ftneg@f1+2
  2313  0E94  160A  118A  20A2  120A  158A  	fcall	___ftneg
  2314  0E99  0870               	movf	?___ftneg,w
  2315  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0E9C  00B2               	movwf	sprintf@fval^(0+128)
  2318  0E9D  0871               	movf	?___ftneg+1,w
  2319  0E9E  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2320  0E9F  0872               	movf	?___ftneg+2,w
  2321  0EA0  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2322  0EA1                     l2916:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2325  0EA1  3003               	movlw	3
  2326  0EA2  04A4               	iorwf	sprintf@flag^(0+128),f
  2327  0EA3  3000               	movlw	0
  2328  0EA4  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  2329  0EA5                     l2918:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2332  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0EA7  01B0               	clrf	sprintf@eexp^(0+128)
  2335  0EA8  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2336  0EA9                     l2920:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2339  0EA9  0834               	movf	(sprintf@fval+2)^(0+128),w
  2340  0EAA  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  2341  0EAB  0432               	iorwf	sprintf@fval^(0+128),w
  2342  0EAC  1903               	skipnz
  2343  0EAD  2EAF               	goto	u4021
  2344  0EAE  2EB0               	goto	u4020
  2345  0EAF                     u4021:
  2346  0EAF  2FA2               	goto	l2946
  2347  0EB0                     u4020:
  2348  0EB0                     l2922:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2351  0EB0  30B2               	movlw	low (sprintf@fval| 0)
  2352  0EB1  0084               	movwf	4
  2353  0EB2  1383               	bcf	3,7	;select IRP bank1
  2354  0EB3  0800               	movf	0,w
  2355  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0EB6  00E1               	movwf	??_sprintf
  2358  0EB7  0A84               	incf	4,f
  2359  0EB8  0800               	movf	0,w
  2360  0EB9  00E2               	movwf	??_sprintf+1
  2361  0EBA  0A84               	incf	4,f
  2362  0EBB  0800               	movf	0,w
  2363  0EBC  00E3               	movwf	??_sprintf+2
  2364  0EBD  0A84               	incf	4,f
  2365  0EBE  0800               	movf	0,w
  2366  0EBF  00E4               	movwf	??_sprintf+3
  2367  0EC0  300F               	movlw	15
  2368  0EC1                     u4035:
  2369  0EC1  1003               	clrc
  2370  0EC2  0CE4               	rrf	??_sprintf+3,f
  2371  0EC3  0CE3               	rrf	??_sprintf+2,f
  2372  0EC4  0CE2               	rrf	??_sprintf+1,f
  2373  0EC5  0CE1               	rrf	??_sprintf,f
  2374  0EC6                     u4030:
  2375  0EC6  3EFF               	addlw	-1
  2376  0EC7  1D03               	skipz
  2377  0EC8  2EC1               	goto	u4035
  2378  0EC9  30FF               	movlw	255
  2379  0ECA  0561               	andwf	??_sprintf,w
  2380  0ECB  00E5               	movwf	??_sprintf+4
  2381  0ECC  3000               	movlw	0
  2382  0ECD  0562               	andwf	??_sprintf+1,w
  2383  0ECE  00E6               	movwf	??_sprintf+5
  2384  0ECF  0865               	movf	??_sprintf+4,w
  2385  0ED0  3E82               	addlw	130
  2386  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0ED3  00B0               	movwf	sprintf@eexp^(0+128)
  2389  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0ED6  0866               	movf	??_sprintf+5,w
  2392  0ED7  1803               	skipnc
  2393  0ED8  3E01               	addlw	1
  2394  0ED9  3EFF               	addlw	255
  2395  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  2397  0EDC  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2398  0EDD                     l2924:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2401  0EDD  30FF               	movlw	255
  2402  0EDE  07B0               	addwf	sprintf@eexp^(0+128),f
  2403  0EDF  1803               	skipnc
  2404  0EE0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2405  0EE1  30FF               	movlw	255
  2406  0EE2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2407  0EE3                     l2926:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2410  0EE3  3003               	movlw	3
  2411  0EE4  00F0               	movwf	___wmul@multiplier
  2412  0EE5  3000               	movlw	0
  2413  0EE6  00F1               	movwf	___wmul@multiplier+1
  2414  0EE7  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2415  0EE8  00F3               	movwf	___wmul@multiplicand+1
  2416  0EE9  0830               	movf	sprintf@eexp^(0+128),w
  2417  0EEA  00F2               	movwf	___wmul@multiplicand
  2418  0EEB  160A  158A  2781  120A  158A  	fcall	___wmul
  2419  0EF0  0871               	movf	?___wmul+1,w
  2420  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2421  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2422  0EF3  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2423  0EF4  0870               	movf	?___wmul,w
  2424  0EF5  00B0               	movwf	sprintf@eexp^(0+128)
  2425  0EF6                     l2928:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2428  0EF6  300A               	movlw	10
  2429  0EF7  00F7               	movwf	___awdiv@divisor
  2430  0EF8  3000               	movlw	0
  2431  0EF9  00F8               	movwf	___awdiv@divisor+1
  2432  0EFA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2433  0EFB  00FA               	movwf	___awdiv@dividend+1
  2434  0EFC  0830               	movf	sprintf@eexp^(0+128),w
  2435  0EFD  00F9               	movwf	___awdiv@dividend
  2436  0EFE  160A  118A  23C1  120A  158A  	fcall	___awdiv
  2437  0F03  0878               	movf	?___awdiv+1,w
  2438  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0F06  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2441  0F07  0877               	movf	?___awdiv,w
  2442  0F08  00B0               	movwf	sprintf@eexp^(0+128)
  2443  0F09                     l2930:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2446  0F09  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2447  0F0A  2F0C               	goto	u4041
  2448  0F0B  2F0D               	goto	u4040
  2449  0F0C                     u4041:
  2450  0F0C  2F13               	goto	l2934
  2451  0F0D                     u4040:
  2452  0F0D                     l2932:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2455  0F0D  30FF               	movlw	255
  2456  0F0E  07B0               	addwf	sprintf@eexp^(0+128),f
  2457  0F0F  1803               	skipnc
  2458  0F10  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2459  0F11  30FF               	movlw	255
  2460  0F12  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2461  0F13                     l2934:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2464  0F13  0330               	decf	sprintf@eexp^(0+128),w
  2465  0F14  3AFF               	xorlw	255
  2466  0F15  120A  158A  227D  120A  158A  	fcall	_scale
  2467  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0F1C  0838               	movf	?_scale,w
  2470  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0F1F  00A8               	movwf	sprintf@tmpval^(0+128)
  2473  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0F22  0839               	movf	?_scale+1,w
  2476  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0F25  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  2479  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0F28  083A               	movf	?_scale+2,w
  2482  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2483  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2484  0F2B  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  2485  0F2C                     l2936:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2488  0F2C  0832               	movf	sprintf@fval^(0+128),w
  2489  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0F2F  00A8               	movwf	___ftmul@f1
  2492  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0F32  0833               	movf	(sprintf@fval+1)^(0+128),w
  2495  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0F35  00A9               	movwf	___ftmul@f1+1
  2498  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0F38  0834               	movf	(sprintf@fval+2)^(0+128),w
  2501  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0F3B  00AA               	movwf	___ftmul@f1+2
  2504  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0F3E  0828               	movf	sprintf@tmpval^(0+128),w
  2507  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0F41  00AB               	movwf	___ftmul@f2
  2510  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2511  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0F44  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2513  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0F47  00AC               	movwf	___ftmul@f2+1
  2516  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0F4A  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2519  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0F4D  00AD               	movwf	___ftmul@f2+2
  2522  0F4E  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2523  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0F55  0828               	movf	?___ftmul,w
  2526  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0F58  00A8               	movwf	sprintf@tmpval^(0+128)
  2529  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0F5B  0829               	movf	?___ftmul+1,w
  2532  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0F5E  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  2535  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0F61  082A               	movf	?___ftmul+2,w
  2538  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0F64  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  2541  0F65                     l2938:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2544  0F65  0828               	movf	sprintf@tmpval^(0+128),w
  2545  0F66  00F0               	movwf	___ftge@ff1
  2546  0F67  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2547  0F68  00F1               	movwf	___ftge@ff1+1
  2548  0F69  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2549  0F6A  00F2               	movwf	___ftge@ff1+2
  2550  0F6B  3000               	movlw	0
  2551  0F6C  00F3               	movwf	___ftge@ff2
  2552  0F6D  3080               	movlw	128
  2553  0F6E  00F4               	movwf	___ftge@ff2+1
  2554  0F6F  303F               	movlw	63
  2555  0F70  00F5               	movwf	___ftge@ff2+2
  2556  0F71  160A  118A  2110  120A  158A  	fcall	___ftge
  2557  0F76  1803               	btfsc	3,0
  2558  0F77  2F79               	goto	u4051
  2559  0F78  2F7A               	goto	u4050
  2560  0F79                     u4051:
  2561  0F79  2F83               	goto	l2942
  2562  0F7A                     u4050:
  2563  0F7A                     l2940:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2566  0F7A  30FF               	movlw	255
  2567  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0F7D  07B0               	addwf	sprintf@eexp^(0+128),f
  2570  0F7E  1803               	skipnc
  2571  0F7F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2572  0F80  30FF               	movlw	255
  2573  0F81  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2574  0F82  2FA2               	goto	l2946
  2575  0F83                     l2942:
  2576  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  2578  0F85  0828               	movf	sprintf@tmpval^(0+128),w
  2579  0F86  00F0               	movwf	___ftge@ff1
  2580  0F87  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2581  0F88  00F1               	movwf	___ftge@ff1+1
  2582  0F89  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2583  0F8A  00F2               	movwf	___ftge@ff1+2
  2584  0F8B  3000               	movlw	0
  2585  0F8C  00F3               	movwf	___ftge@ff2
  2586  0F8D  3020               	movlw	32
  2587  0F8E  00F4               	movwf	___ftge@ff2+1
  2588  0F8F  3041               	movlw	65
  2589  0F90  00F5               	movwf	___ftge@ff2+2
  2590  0F91  160A  118A  2110  120A  158A  	fcall	___ftge
  2591  0F96  1C03               	btfss	3,0
  2592  0F97  2F99               	goto	u4061
  2593  0F98  2F9A               	goto	u4060
  2594  0F99                     u4061:
  2595  0F99  2FA2               	goto	l2946
  2596  0F9A                     u4060:
  2597  0F9A                     l2944:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2600  0F9A  3001               	movlw	1
  2601  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2602  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2603  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  2604  0F9E  1803               	skipnc
  2605  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2606  0FA0  3000               	movlw	0
  2607  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2608  0FA2                     l2946:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2611  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  2614  0FA5  3A80               	xorlw	128
  2615  0FA6  00FF               	movwf	btemp+1
  2616  0FA7  3080               	movlw	128
  2617  0FA8  027F               	subwf	btemp+1,w
  2618  0FA9  1D03               	skipz
  2619  0FAA  2FAD               	goto	u4075
  2620  0FAB  300D               	movlw	13
  2621  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  2622  0FAD                     u4075:
  2623  0FAD  1803               	skipnc
  2624  0FAE  2FB0               	goto	u4071
  2625  0FAF  2FB1               	goto	u4070
  2626  0FB0                     u4071:
  2627  0FB0  2FEA               	goto	l2950
  2628  0FB1                     u4070:
  2629  0FB1                     l2948:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2632  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2634  0FB3  0836               	movf	sprintf@prec^(0+128),w
  2635  0FB4  120A  158A  20DC  120A  158A  	fcall	_fround
  2636  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0FBB  0838               	movf	?_fround,w
  2639  0FBC  00C8               	movwf	___ftadd@f1
  2640  0FBD  0839               	movf	?_fround+1,w
  2641  0FBE  00C9               	movwf	___ftadd@f1+1
  2642  0FBF  083A               	movf	?_fround+2,w
  2643  0FC0  00CA               	movwf	___ftadd@f1+2
  2644  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0FC3  0832               	movf	sprintf@fval^(0+128),w
  2647  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0FC6  00CB               	movwf	___ftadd@f2
  2650  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0FC9  0833               	movf	(sprintf@fval+1)^(0+128),w
  2653  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0FCC  00CC               	movwf	___ftadd@f2+1
  2656  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0FCF  0834               	movf	(sprintf@fval+2)^(0+128),w
  2659  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0FD2  00CD               	movwf	___ftadd@f2+2
  2662  0FD3  120A  118A  2010  120A  158A  	fcall	___ftadd
  2663  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0FDA  0848               	movf	?___ftadd,w
  2666  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0FDD  00B2               	movwf	sprintf@fval^(0+128)
  2669  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0FE0  0849               	movf	?___ftadd+1,w
  2672  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2674  0FE3  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2675  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0FE6  084A               	movf	?___ftadd+2,w
  2678  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0FE9  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2681  0FEA                     l2950:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2684  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2686  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2687  0FED  3A80               	xorlw	128
  2688  0FEE  00FF               	movwf	btemp+1
  2689  0FEF  3080               	movlw	128
  2690  0FF0  027F               	subwf	btemp+1,w
  2691  0FF1  1D03               	skipz
  2692  0FF2  2FF5               	goto	u4085
  2693  0FF3  300A               	movlw	10
  2694  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  2695  0FF5                     u4085:
  2696  0FF5  1803               	skipnc
  2697  0FF6  2FFA               	goto	u4081
  2698  0FF7  120A  118A  2946   	goto	u4080
  2699  0FFA                     u4081:
  2700  0FFA  120A  118A  297D   	goto	l2958
  2701  0FFD                     L3:
  2702  0FFD                     L2:
  2703  0FFD  120A  118A  2FE5   	ljmp	l3138
  2704                           
  2705                           	psect	text4
  2706  0A7D                     __ptext4:	
  2707 ;; *************** function _scale *****************
  2708 ;; Defined at:
  2709 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  scl             1    wreg     char 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  scl             1   32[BANK0 ] char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  3   24[BANK0 ] char 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2723 ;;      Params:         0       3       0       0       0
  2724 ;;      Locals:         0       4       0       0       0
  2725 ;;      Temps:          0       2       0       0       0
  2726 ;;      Totals:         0       9       0       0       0
  2727 ;;Total ram usage:        9 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    2
  2730 ;; This function calls:
  2731 ;;		___awdiv
  2732 ;;		___awmod
  2733 ;;		___bmul
  2734 ;;		___ftmul
  2735 ;; This function is called by:
  2736 ;;		_sprintf
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _scale
  2742  0A7D                     _scale:
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2746                           ;scale@scl stored from wreg
  2747  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0A7F  00C0               	movwf	scale@scl
  2750  0A80                     l2468:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2753  0A80  1FC0               	btfss	scale@scl,7
  2754  0A81  2A83               	goto	u3231
  2755  0A82  2A84               	goto	u3230
  2756  0A83                     u3231:
  2757  0A83  2BD7               	goto	l2490
  2758  0A84                     u3230:
  2759  0A84                     l2470:
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2762  0A84  09C0               	comf	scale@scl,f
  2763  0A85  0AC0               	incf	scale@scl,f
  2764  0A86                     l2472:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2767  0A86  0840               	movf	scale@scl,w
  2768  0A87  3A80               	xorlw	128
  2769  0A88  3E12               	addlw	-238
  2770  0A89  1C03               	skipc
  2771  0A8A  2A8C               	goto	u3241
  2772  0A8B  2A8D               	goto	u3240
  2773  0A8C                     u3241:
  2774  0A8C  2B45               	goto	l2480
  2775  0A8D                     u3240:
  2776  0A8D                     l2474:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2779  0A8D  3003               	movlw	3
  2780  0A8E  00BB               	movwf	??_scale
  2781  0A8F  083B               	movf	??_scale,w
  2782  0A90  00A4               	movwf	___bmul@multiplicand
  2783  0A91  0840               	movf	scale@scl,w
  2784  0A92  00F2               	movwf	___awmod@dividend
  2785  0A93  01F3               	clrf	___awmod@dividend+1
  2786  0A94  1BF2               	btfsc	___awmod@dividend,7
  2787  0A95  03F3               	decf	___awmod@dividend+1,f
  2788  0A96  3064               	movlw	100
  2789  0A97  00F0               	movwf	___awmod@divisor
  2790  0A98  3000               	movlw	0
  2791  0A99  00F1               	movwf	___awmod@divisor+1
  2792  0A9A  160A  118A  229C  120A  158A  	fcall	___awmod
  2793  0A9F  0871               	movf	?___awmod+1,w
  2794  0AA0  00FA               	movwf	___awdiv@dividend+1
  2795  0AA1  0870               	movf	?___awmod,w
  2796  0AA2  00F9               	movwf	___awdiv@dividend
  2797  0AA3  300A               	movlw	10
  2798  0AA4  00F7               	movwf	___awdiv@divisor
  2799  0AA5  3000               	movlw	0
  2800  0AA6  00F8               	movwf	___awdiv@divisor+1
  2801  0AA7  160A  118A  23C1  120A  158A  	fcall	___awdiv
  2802  0AAC  0877               	movf	?___awdiv,w
  2803  0AAD  160A  158A  26A2  120A  158A  	fcall	___bmul
  2804  0AB2  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2805  0AB3  0084               	movwf	4
  2806  0AB4  160A  118A  200A  120A  158A  	fcall	stringdir
  2807  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0ABB  00A8               	movwf	___ftmul@f1
  2810  0ABC  160A  118A  200A  120A  158A  	fcall	stringdir
  2811  0AC1  00A9               	movwf	___ftmul@f1+1
  2812  0AC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2813  0AC7  00AA               	movwf	___ftmul@f1+2
  2814  0AC8  3003               	movlw	3
  2815  0AC9  00BC               	movwf	??_scale+1
  2816  0ACA  083C               	movf	??_scale+1,w
  2817  0ACB  00A4               	movwf	___bmul@multiplicand
  2818  0ACC  0840               	movf	scale@scl,w
  2819  0ACD  00F9               	movwf	___awdiv@dividend
  2820  0ACE  01FA               	clrf	___awdiv@dividend+1
  2821  0ACF  1BF9               	btfsc	___awdiv@dividend,7
  2822  0AD0  03FA               	decf	___awdiv@dividend+1,f
  2823  0AD1  3064               	movlw	100
  2824  0AD2  00F7               	movwf	___awdiv@divisor
  2825  0AD3  3000               	movlw	0
  2826  0AD4  00F8               	movwf	___awdiv@divisor+1
  2827  0AD5  160A  118A  23C1  120A  158A  	fcall	___awdiv
  2828  0ADA  0877               	movf	?___awdiv,w
  2829  0ADB  160A  158A  26A2  120A  158A  	fcall	___bmul
  2830  0AE0  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2831  0AE1  0084               	movwf	4
  2832  0AE2  160A  118A  200A  120A  158A  	fcall	stringdir
  2833  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  2834  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  2835  0AE9  00AB               	movwf	___ftmul@f2
  2836  0AEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2837  0AEF  00AC               	movwf	___ftmul@f2+1
  2838  0AF0  160A  118A  200A  120A  158A  	fcall	stringdir
  2839  0AF5  00AD               	movwf	___ftmul@f2+2
  2840  0AF6  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2841  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0AFD  0828               	movf	?___ftmul,w
  2844  0AFE  00BD               	movwf	_scale$1078
  2845  0AFF  0829               	movf	?___ftmul+1,w
  2846  0B00  00BE               	movwf	_scale$1078+1
  2847  0B01  082A               	movf	?___ftmul+2,w
  2848  0B02  00BF               	movwf	_scale$1078+2
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2851  0B03  3003               	movlw	3
  2852  0B04  00BB               	movwf	??_scale
  2853  0B05  083B               	movf	??_scale,w
  2854  0B06  00A4               	movwf	___bmul@multiplicand
  2855  0B07  0840               	movf	scale@scl,w
  2856  0B08  00F2               	movwf	___awmod@dividend
  2857  0B09  01F3               	clrf	___awmod@dividend+1
  2858  0B0A  1BF2               	btfsc	___awmod@dividend,7
  2859  0B0B  03F3               	decf	___awmod@dividend+1,f
  2860  0B0C  300A               	movlw	10
  2861  0B0D  00F0               	movwf	___awmod@divisor
  2862  0B0E  3000               	movlw	0
  2863  0B0F  00F1               	movwf	___awmod@divisor+1
  2864  0B10  160A  118A  229C  120A  158A  	fcall	___awmod
  2865  0B15  0870               	movf	?___awmod,w
  2866  0B16  160A  158A  26A2  120A  158A  	fcall	___bmul
  2867  0B1B  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2868  0B1C  0084               	movwf	4
  2869  0B1D  160A  118A  200A  120A  158A  	fcall	stringdir
  2870  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0B24  00A8               	movwf	___ftmul@f1
  2873  0B25  160A  118A  200A  120A  158A  	fcall	stringdir
  2874  0B2A  00A9               	movwf	___ftmul@f1+1
  2875  0B2B  160A  118A  200A  120A  158A  	fcall	stringdir
  2876  0B30  00AA               	movwf	___ftmul@f1+2
  2877  0B31  083D               	movf	_scale$1078,w
  2878  0B32  00AB               	movwf	___ftmul@f2
  2879  0B33  083E               	movf	_scale$1078+1,w
  2880  0B34  00AC               	movwf	___ftmul@f2+1
  2881  0B35  083F               	movf	_scale$1078+2,w
  2882  0B36  00AD               	movwf	___ftmul@f2+2
  2883  0B37  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2884  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0B3E  0828               	movf	?___ftmul,w
  2887  0B3F  00B8               	movwf	?_scale
  2888  0B40  0829               	movf	?___ftmul+1,w
  2889  0B41  00B9               	movwf	?_scale+1
  2890  0B42  082A               	movf	?___ftmul+2,w
  2891  0B43  00BA               	movwf	?_scale+2
  2892  0B44  2D27               	goto	l326
  2893  0B45                     l2480:
  2894  0B45  0840               	movf	scale@scl,w
  2895  0B46  3A80               	xorlw	128
  2896  0B47  3E75               	addlw	-139
  2897  0B48  1C03               	skipc
  2898  0B49  2B4B               	goto	u3251
  2899  0B4A  2B4C               	goto	u3250
  2900  0B4B                     u3251:
  2901  0B4B  2BB6               	goto	l2486
  2902  0B4C                     u3250:
  2903  0B4C                     l2482:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2906  0B4C  3003               	movlw	3
  2907  0B4D  00BB               	movwf	??_scale
  2908  0B4E  083B               	movf	??_scale,w
  2909  0B4F  00A4               	movwf	___bmul@multiplicand
  2910  0B50  0840               	movf	scale@scl,w
  2911  0B51  00F2               	movwf	___awmod@dividend
  2912  0B52  01F3               	clrf	___awmod@dividend+1
  2913  0B53  1BF2               	btfsc	___awmod@dividend,7
  2914  0B54  03F3               	decf	___awmod@dividend+1,f
  2915  0B55  300A               	movlw	10
  2916  0B56  00F0               	movwf	___awmod@divisor
  2917  0B57  3000               	movlw	0
  2918  0B58  00F1               	movwf	___awmod@divisor+1
  2919  0B59  160A  118A  229C  120A  158A  	fcall	___awmod
  2920  0B5E  0870               	movf	?___awmod,w
  2921  0B5F  160A  158A  26A2  120A  158A  	fcall	___bmul
  2922  0B64  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2923  0B65  0084               	movwf	4
  2924  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  2925  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0B6D  00A8               	movwf	___ftmul@f1
  2928  0B6E  160A  118A  200A  120A  158A  	fcall	stringdir
  2929  0B73  00A9               	movwf	___ftmul@f1+1
  2930  0B74  160A  118A  200A  120A  158A  	fcall	stringdir
  2931  0B79  00AA               	movwf	___ftmul@f1+2
  2932  0B7A  3003               	movlw	3
  2933  0B7B  00BC               	movwf	??_scale+1
  2934  0B7C  083C               	movf	??_scale+1,w
  2935  0B7D  00A4               	movwf	___bmul@multiplicand
  2936  0B7E  0840               	movf	scale@scl,w
  2937  0B7F  00F9               	movwf	___awdiv@dividend
  2938  0B80  01FA               	clrf	___awdiv@dividend+1
  2939  0B81  1BF9               	btfsc	___awdiv@dividend,7
  2940  0B82  03FA               	decf	___awdiv@dividend+1,f
  2941  0B83  300A               	movlw	10
  2942  0B84  00F7               	movwf	___awdiv@divisor
  2943  0B85  3000               	movlw	0
  2944  0B86  00F8               	movwf	___awdiv@divisor+1
  2945  0B87  160A  118A  23C1  120A  158A  	fcall	___awdiv
  2946  0B8C  0877               	movf	?___awdiv,w
  2947  0B8D  160A  158A  26A2  120A  158A  	fcall	___bmul
  2948  0B92  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2949  0B93  0084               	movwf	4
  2950  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  2951  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0B9B  00AB               	movwf	___ftmul@f2
  2954  0B9C  160A  118A  200A  120A  158A  	fcall	stringdir
  2955  0BA1  00AC               	movwf	___ftmul@f2+1
  2956  0BA2  160A  118A  200A  120A  158A  	fcall	stringdir
  2957  0BA7  00AD               	movwf	___ftmul@f2+2
  2958  0BA8  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2959  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0BAF  0828               	movf	?___ftmul,w
  2962  0BB0  00B8               	movwf	?_scale
  2963  0BB1  0829               	movf	?___ftmul+1,w
  2964  0BB2  00B9               	movwf	?_scale+1
  2965  0BB3  082A               	movf	?___ftmul+2,w
  2966  0BB4  00BA               	movwf	?_scale+2
  2967  0BB5  2D27               	goto	l326
  2968  0BB6                     l2486:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2971  0BB6  3003               	movlw	3
  2972  0BB7  00BB               	movwf	??_scale
  2973  0BB8  083B               	movf	??_scale,w
  2974  0BB9  00A4               	movwf	___bmul@multiplicand
  2975  0BBA  0840               	movf	scale@scl,w
  2976  0BBB  160A  158A  26A2  120A  158A  	fcall	___bmul
  2977  0BC0  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2978  0BC1  0084               	movwf	4
  2979  0BC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2980  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0BC9  00B8               	movwf	?_scale
  2983  0BCA  160A  118A  200A  120A  158A  	fcall	stringdir
  2984  0BCF  00B9               	movwf	?_scale+1
  2985  0BD0  160A  118A  200A  120A  158A  	fcall	stringdir
  2986  0BD5  00BA               	movwf	?_scale+2
  2987  0BD6  2D27               	goto	l326
  2988  0BD7                     l2490:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2991  0BD7  0840               	movf	scale@scl,w
  2992  0BD8  3A80               	xorlw	128
  2993  0BD9  3E12               	addlw	-238
  2994  0BDA  1C03               	skipc
  2995  0BDB  2BDD               	goto	u3261
  2996  0BDC  2BDE               	goto	u3260
  2997  0BDD                     u3261:
  2998  0BDD  2C96               	goto	l2498
  2999  0BDE                     u3260:
  3000  0BDE                     l2492:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3003  0BDE  3003               	movlw	3
  3004  0BDF  00BB               	movwf	??_scale
  3005  0BE0  083B               	movf	??_scale,w
  3006  0BE1  00A4               	movwf	___bmul@multiplicand
  3007  0BE2  0840               	movf	scale@scl,w
  3008  0BE3  00F2               	movwf	___awmod@dividend
  3009  0BE4  01F3               	clrf	___awmod@dividend+1
  3010  0BE5  1BF2               	btfsc	___awmod@dividend,7
  3011  0BE6  03F3               	decf	___awmod@dividend+1,f
  3012  0BE7  3064               	movlw	100
  3013  0BE8  00F0               	movwf	___awmod@divisor
  3014  0BE9  3000               	movlw	0
  3015  0BEA  00F1               	movwf	___awmod@divisor+1
  3016  0BEB  160A  118A  229C  120A  158A  	fcall	___awmod
  3017  0BF0  0871               	movf	?___awmod+1,w
  3018  0BF1  00FA               	movwf	___awdiv@dividend+1
  3019  0BF2  0870               	movf	?___awmod,w
  3020  0BF3  00F9               	movwf	___awdiv@dividend
  3021  0BF4  300A               	movlw	10
  3022  0BF5  00F7               	movwf	___awdiv@divisor
  3023  0BF6  3000               	movlw	0
  3024  0BF7  00F8               	movwf	___awdiv@divisor+1
  3025  0BF8  160A  118A  23C1  120A  158A  	fcall	___awdiv
  3026  0BFD  0877               	movf	?___awdiv,w
  3027  0BFE  160A  158A  26A2  120A  158A  	fcall	___bmul
  3028  0C03  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3029  0C04  0084               	movwf	4
  3030  0C05  160A  118A  200A  120A  158A  	fcall	stringdir
  3031  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0C0C  00A8               	movwf	___ftmul@f1
  3034  0C0D  160A  118A  200A  120A  158A  	fcall	stringdir
  3035  0C12  00A9               	movwf	___ftmul@f1+1
  3036  0C13  160A  118A  200A  120A  158A  	fcall	stringdir
  3037  0C18  00AA               	movwf	___ftmul@f1+2
  3038  0C19  3003               	movlw	3
  3039  0C1A  00BC               	movwf	??_scale+1
  3040  0C1B  083C               	movf	??_scale+1,w
  3041  0C1C  00A4               	movwf	___bmul@multiplicand
  3042  0C1D  0840               	movf	scale@scl,w
  3043  0C1E  00F9               	movwf	___awdiv@dividend
  3044  0C1F  01FA               	clrf	___awdiv@dividend+1
  3045  0C20  1BF9               	btfsc	___awdiv@dividend,7
  3046  0C21  03FA               	decf	___awdiv@dividend+1,f
  3047  0C22  3064               	movlw	100
  3048  0C23  00F7               	movwf	___awdiv@divisor
  3049  0C24  3000               	movlw	0
  3050  0C25  00F8               	movwf	___awdiv@divisor+1
  3051  0C26  160A  118A  23C1  120A  158A  	fcall	___awdiv
  3052  0C2B  0877               	movf	?___awdiv,w
  3053  0C2C  160A  158A  26A2  120A  158A  	fcall	___bmul
  3054  0C31  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3055  0C32  0084               	movwf	4
  3056  0C33  160A  118A  200A  120A  158A  	fcall	stringdir
  3057  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0C3A  00AB               	movwf	___ftmul@f2
  3060  0C3B  160A  118A  200A  120A  158A  	fcall	stringdir
  3061  0C40  00AC               	movwf	___ftmul@f2+1
  3062  0C41  160A  118A  200A  120A  158A  	fcall	stringdir
  3063  0C46  00AD               	movwf	___ftmul@f2+2
  3064  0C47  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3065  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0C4E  0828               	movf	?___ftmul,w
  3068  0C4F  00BD               	movwf	_scale$1078
  3069  0C50  0829               	movf	?___ftmul+1,w
  3070  0C51  00BE               	movwf	_scale$1078+1
  3071  0C52  082A               	movf	?___ftmul+2,w
  3072  0C53  00BF               	movwf	_scale$1078+2
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3075  0C54  3003               	movlw	3
  3076  0C55  00BB               	movwf	??_scale
  3077  0C56  083B               	movf	??_scale,w
  3078  0C57  00A4               	movwf	___bmul@multiplicand
  3079  0C58  0840               	movf	scale@scl,w
  3080  0C59  00F2               	movwf	___awmod@dividend
  3081  0C5A  01F3               	clrf	___awmod@dividend+1
  3082  0C5B  1BF2               	btfsc	___awmod@dividend,7
  3083  0C5C  03F3               	decf	___awmod@dividend+1,f
  3084  0C5D  300A               	movlw	10
  3085  0C5E  00F0               	movwf	___awmod@divisor
  3086  0C5F  3000               	movlw	0
  3087  0C60  00F1               	movwf	___awmod@divisor+1
  3088  0C61  160A  118A  229C  120A  158A  	fcall	___awmod
  3089  0C66  0870               	movf	?___awmod,w
  3090  0C67  160A  158A  26A2  120A  158A  	fcall	___bmul
  3091  0C6C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3092  0C6D  0084               	movwf	4
  3093  0C6E  160A  118A  200A  120A  158A  	fcall	stringdir
  3094  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0C75  00A8               	movwf	___ftmul@f1
  3097  0C76  160A  118A  200A  120A  158A  	fcall	stringdir
  3098  0C7B  00A9               	movwf	___ftmul@f1+1
  3099  0C7C  160A  118A  200A  120A  158A  	fcall	stringdir
  3100  0C81  00AA               	movwf	___ftmul@f1+2
  3101  0C82  083D               	movf	_scale$1078,w
  3102  0C83  00AB               	movwf	___ftmul@f2
  3103  0C84  083E               	movf	_scale$1078+1,w
  3104  0C85  00AC               	movwf	___ftmul@f2+1
  3105  0C86  083F               	movf	_scale$1078+2,w
  3106  0C87  00AD               	movwf	___ftmul@f2+2
  3107  0C88  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3108  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0C8F  0828               	movf	?___ftmul,w
  3111  0C90  00B8               	movwf	?_scale
  3112  0C91  0829               	movf	?___ftmul+1,w
  3113  0C92  00B9               	movwf	?_scale+1
  3114  0C93  082A               	movf	?___ftmul+2,w
  3115  0C94  00BA               	movwf	?_scale+2
  3116  0C95  2D27               	goto	l326
  3117  0C96                     l2498:
  3118  0C96  0840               	movf	scale@scl,w
  3119  0C97  3A80               	xorlw	128
  3120  0C98  3E75               	addlw	-139
  3121  0C99  1C03               	skipc
  3122  0C9A  2C9C               	goto	u3271
  3123  0C9B  2C9D               	goto	u3270
  3124  0C9C                     u3271:
  3125  0C9C  2D07               	goto	l2504
  3126  0C9D                     u3270:
  3127  0C9D                     l2500:
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3130  0C9D  3003               	movlw	3
  3131  0C9E  00BB               	movwf	??_scale
  3132  0C9F  083B               	movf	??_scale,w
  3133  0CA0  00A4               	movwf	___bmul@multiplicand
  3134  0CA1  0840               	movf	scale@scl,w
  3135  0CA2  00F2               	movwf	___awmod@dividend
  3136  0CA3  01F3               	clrf	___awmod@dividend+1
  3137  0CA4  1BF2               	btfsc	___awmod@dividend,7
  3138  0CA5  03F3               	decf	___awmod@dividend+1,f
  3139  0CA6  300A               	movlw	10
  3140  0CA7  00F0               	movwf	___awmod@divisor
  3141  0CA8  3000               	movlw	0
  3142  0CA9  00F1               	movwf	___awmod@divisor+1
  3143  0CAA  160A  118A  229C  120A  158A  	fcall	___awmod
  3144  0CAF  0870               	movf	?___awmod,w
  3145  0CB0  160A  158A  26A2  120A  158A  	fcall	___bmul
  3146  0CB5  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3147  0CB6  0084               	movwf	4
  3148  0CB7  160A  118A  200A  120A  158A  	fcall	stringdir
  3149  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0CBE  00A8               	movwf	___ftmul@f1
  3152  0CBF  160A  118A  200A  120A  158A  	fcall	stringdir
  3153  0CC4  00A9               	movwf	___ftmul@f1+1
  3154  0CC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3155  0CCA  00AA               	movwf	___ftmul@f1+2
  3156  0CCB  3003               	movlw	3
  3157  0CCC  00BC               	movwf	??_scale+1
  3158  0CCD  083C               	movf	??_scale+1,w
  3159  0CCE  00A4               	movwf	___bmul@multiplicand
  3160  0CCF  0840               	movf	scale@scl,w
  3161  0CD0  00F9               	movwf	___awdiv@dividend
  3162  0CD1  01FA               	clrf	___awdiv@dividend+1
  3163  0CD2  1BF9               	btfsc	___awdiv@dividend,7
  3164  0CD3  03FA               	decf	___awdiv@dividend+1,f
  3165  0CD4  300A               	movlw	10
  3166  0CD5  00F7               	movwf	___awdiv@divisor
  3167  0CD6  3000               	movlw	0
  3168  0CD7  00F8               	movwf	___awdiv@divisor+1
  3169  0CD8  160A  118A  23C1  120A  158A  	fcall	___awdiv
  3170  0CDD  0877               	movf	?___awdiv,w
  3171  0CDE  160A  158A  26A2  120A  158A  	fcall	___bmul
  3172  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3173  0CE4  0084               	movwf	4
  3174  0CE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3175  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0CEC  00AB               	movwf	___ftmul@f2
  3178  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  3179  0CF2  00AC               	movwf	___ftmul@f2+1
  3180  0CF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3181  0CF8  00AD               	movwf	___ftmul@f2+2
  3182  0CF9  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3183  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0D00  0828               	movf	?___ftmul,w
  3186  0D01  00B8               	movwf	?_scale
  3187  0D02  0829               	movf	?___ftmul+1,w
  3188  0D03  00B9               	movwf	?_scale+1
  3189  0D04  082A               	movf	?___ftmul+2,w
  3190  0D05  00BA               	movwf	?_scale+2
  3191  0D06  2D27               	goto	l326
  3192  0D07                     l2504:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3195  0D07  3003               	movlw	3
  3196  0D08  00BB               	movwf	??_scale
  3197  0D09  083B               	movf	??_scale,w
  3198  0D0A  00A4               	movwf	___bmul@multiplicand
  3199  0D0B  0840               	movf	scale@scl,w
  3200  0D0C  160A  158A  26A2  120A  158A  	fcall	___bmul
  3201  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3202  0D12  0084               	movwf	4
  3203  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  3204  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3206  0D1A  00B8               	movwf	?_scale
  3207  0D1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3208  0D20  00B9               	movwf	?_scale+1
  3209  0D21  160A  118A  200A  120A  158A  	fcall	stringdir
  3210  0D26  00BA               	movwf	?_scale+2
  3211  0D27                     l326:
  3212  0D27  0008               	return
  3213  0D28                     __end_of_scale:
  3214                           
  3215                           	psect	text5
  3216  129C                     __ptext5:	
  3217 ;; *************** function ___awmod *****************
  3218 ;; Defined at:
  3219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  divisor         2    0[COMMON] int 
  3222 ;;  dividend        2    2[COMMON] int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  sign            1    6[COMMON] unsigned char 
  3225 ;;  counter         1    5[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  2    0[COMMON] int 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         4       0       0       0       0
  3236 ;;      Locals:         2       0       0       0       0
  3237 ;;      Temps:          1       0       0       0       0
  3238 ;;      Totals:         7       0       0       0       0
  3239 ;;Total ram usage:        7 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_scale
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function ___awmod
  3250  129C                     ___awmod:
  3251  129C                     l2190:	
  3252                           ;incstack = 0
  3253                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3254                           
  3255  129C  01F6               	clrf	___awmod@sign
  3256  129D                     l2192:
  3257  129D  1FF3               	btfss	___awmod@dividend+1,7
  3258  129E  2AA0               	goto	u2591
  3259  129F  2AA1               	goto	u2590
  3260  12A0                     u2591:
  3261  12A0  2AA8               	goto	l2198
  3262  12A1                     u2590:
  3263  12A1                     l2194:
  3264  12A1  09F2               	comf	___awmod@dividend,f
  3265  12A2  09F3               	comf	___awmod@dividend+1,f
  3266  12A3  0AF2               	incf	___awmod@dividend,f
  3267  12A4  1903               	skipnz
  3268  12A5  0AF3               	incf	___awmod@dividend+1,f
  3269  12A6                     l2196:
  3270  12A6  01F6               	clrf	___awmod@sign
  3271  12A7  0AF6               	incf	___awmod@sign,f
  3272  12A8                     l2198:
  3273  12A8  1FF1               	btfss	___awmod@divisor+1,7
  3274  12A9  2AAB               	goto	u2601
  3275  12AA  2AAC               	goto	u2600
  3276  12AB                     u2601:
  3277  12AB  2AB1               	goto	l2202
  3278  12AC                     u2600:
  3279  12AC                     l2200:
  3280  12AC  09F0               	comf	___awmod@divisor,f
  3281  12AD  09F1               	comf	___awmod@divisor+1,f
  3282  12AE  0AF0               	incf	___awmod@divisor,f
  3283  12AF  1903               	skipnz
  3284  12B0  0AF1               	incf	___awmod@divisor+1,f
  3285  12B1                     l2202:
  3286  12B1  0870               	movf	___awmod@divisor,w
  3287  12B2  0471               	iorwf	___awmod@divisor+1,w
  3288  12B3  1903               	btfsc	3,2
  3289  12B4  2AB6               	goto	u2611
  3290  12B5  2AB7               	goto	u2610
  3291  12B6                     u2611:
  3292  12B6  2AE6               	goto	l2220
  3293  12B7                     u2610:
  3294  12B7                     l2204:
  3295  12B7  01F5               	clrf	___awmod@counter
  3296  12B8  0AF5               	incf	___awmod@counter,f
  3297  12B9  2AC5               	goto	l2210
  3298  12BA                     l2206:
  3299  12BA  3001               	movlw	1
  3300  12BB                     u2625:
  3301  12BB  1003               	clrc
  3302  12BC  0DF0               	rlf	___awmod@divisor,f
  3303  12BD  0DF1               	rlf	___awmod@divisor+1,f
  3304  12BE  3EFF               	addlw	-1
  3305  12BF  1D03               	skipz
  3306  12C0  2ABB               	goto	u2625
  3307  12C1                     l2208:
  3308  12C1  3001               	movlw	1
  3309  12C2  00F4               	movwf	??___awmod
  3310  12C3  0874               	movf	??___awmod,w
  3311  12C4  07F5               	addwf	___awmod@counter,f
  3312  12C5                     l2210:
  3313  12C5  1FF1               	btfss	___awmod@divisor+1,7
  3314  12C6  2AC8               	goto	u2631
  3315  12C7  2AC9               	goto	u2630
  3316  12C8                     u2631:
  3317  12C8  2ABA               	goto	l2206
  3318  12C9                     u2630:
  3319  12C9                     l2212:
  3320  12C9  0871               	movf	___awmod@divisor+1,w
  3321  12CA  0273               	subwf	___awmod@dividend+1,w
  3322  12CB  1D03               	skipz
  3323  12CC  2ACF               	goto	u2645
  3324  12CD  0870               	movf	___awmod@divisor,w
  3325  12CE  0272               	subwf	___awmod@dividend,w
  3326  12CF                     u2645:
  3327  12CF  1C03               	skipc
  3328  12D0  2AD2               	goto	u2641
  3329  12D1  2AD3               	goto	u2640
  3330  12D2                     u2641:
  3331  12D2  2AD9               	goto	l2216
  3332  12D3                     u2640:
  3333  12D3                     l2214:
  3334  12D3  0870               	movf	___awmod@divisor,w
  3335  12D4  02F2               	subwf	___awmod@dividend,f
  3336  12D5  0871               	movf	___awmod@divisor+1,w
  3337  12D6  1C03               	skipc
  3338  12D7  03F3               	decf	___awmod@dividend+1,f
  3339  12D8  02F3               	subwf	___awmod@dividend+1,f
  3340  12D9                     l2216:
  3341  12D9  3001               	movlw	1
  3342  12DA                     u2655:
  3343  12DA  1003               	clrc
  3344  12DB  0CF1               	rrf	___awmod@divisor+1,f
  3345  12DC  0CF0               	rrf	___awmod@divisor,f
  3346  12DD  3EFF               	addlw	-1
  3347  12DE  1D03               	skipz
  3348  12DF  2ADA               	goto	u2655
  3349  12E0                     l2218:
  3350  12E0  3001               	movlw	1
  3351  12E1  02F5               	subwf	___awmod@counter,f
  3352  12E2  1D03               	btfss	3,2
  3353  12E3  2AE5               	goto	u2661
  3354  12E4  2AE6               	goto	u2660
  3355  12E5                     u2661:
  3356  12E5  2AC9               	goto	l2212
  3357  12E6                     u2660:
  3358  12E6                     l2220:
  3359  12E6  0876               	movf	___awmod@sign,w
  3360  12E7  1903               	btfsc	3,2
  3361  12E8  2AEA               	goto	u2671
  3362  12E9  2AEB               	goto	u2670
  3363  12EA                     u2671:
  3364  12EA  2AF0               	goto	l2224
  3365  12EB                     u2670:
  3366  12EB                     l2222:
  3367  12EB  09F2               	comf	___awmod@dividend,f
  3368  12EC  09F3               	comf	___awmod@dividend+1,f
  3369  12ED  0AF2               	incf	___awmod@dividend,f
  3370  12EE  1903               	skipnz
  3371  12EF  0AF3               	incf	___awmod@dividend+1,f
  3372  12F0                     l2224:
  3373  12F0  0873               	movf	___awmod@dividend+1,w
  3374  12F1  00F1               	movwf	?___awmod+1
  3375  12F2  0872               	movf	___awmod@dividend,w
  3376  12F3  00F0               	movwf	?___awmod
  3377  12F4                     l618:
  3378  12F4  0008               	return
  3379  12F5                     __end_of___awmod:
  3380                           
  3381                           	psect	text6
  3382  13C1                     __ptext6:	
  3383 ;; *************** function ___awdiv *****************
  3384 ;; Defined at:
  3385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  divisor         2    7[COMMON] int 
  3388 ;;  dividend        2    9[COMMON] int 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  quotient        2    2[BANK0 ] int 
  3391 ;;  sign            1    1[BANK0 ] unsigned char 
  3392 ;;  counter         1    0[BANK0 ] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    7[COMMON] int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         4       0       0       0       0
  3403 ;;      Locals:         0       4       0       0       0
  3404 ;;      Temps:          1       0       0       0       0
  3405 ;;      Totals:         5       4       0       0       0
  3406 ;;Total ram usage:        9 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_scale
  3412 ;;		_sprintf
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function ___awdiv
  3418  13C1                     ___awdiv:
  3419  13C1                     l2146:	
  3420                           ;incstack = 0
  3421                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3422                           
  3423  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  3424  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  3425  13C3  01A1               	clrf	___awdiv@sign
  3426  13C4                     l2148:
  3427  13C4  1FF8               	btfss	___awdiv@divisor+1,7
  3428  13C5  2BC7               	goto	u2491
  3429  13C6  2BC8               	goto	u2490
  3430  13C7                     u2491:
  3431  13C7  2BCF               	goto	l2154
  3432  13C8                     u2490:
  3433  13C8                     l2150:
  3434  13C8  09F7               	comf	___awdiv@divisor,f
  3435  13C9  09F8               	comf	___awdiv@divisor+1,f
  3436  13CA  0AF7               	incf	___awdiv@divisor,f
  3437  13CB  1903               	skipnz
  3438  13CC  0AF8               	incf	___awdiv@divisor+1,f
  3439  13CD                     l2152:
  3440  13CD  01A1               	clrf	___awdiv@sign
  3441  13CE  0AA1               	incf	___awdiv@sign,f
  3442  13CF                     l2154:
  3443  13CF  1FFA               	btfss	___awdiv@dividend+1,7
  3444  13D0  2BD2               	goto	u2501
  3445  13D1  2BD3               	goto	u2500
  3446  13D2                     u2501:
  3447  13D2  2BDC               	goto	l2160
  3448  13D3                     u2500:
  3449  13D3                     l2156:
  3450  13D3  09F9               	comf	___awdiv@dividend,f
  3451  13D4  09FA               	comf	___awdiv@dividend+1,f
  3452  13D5  0AF9               	incf	___awdiv@dividend,f
  3453  13D6  1903               	skipnz
  3454  13D7  0AFA               	incf	___awdiv@dividend+1,f
  3455  13D8                     l2158:
  3456  13D8  3001               	movlw	1
  3457  13D9  00FB               	movwf	??___awdiv
  3458  13DA  087B               	movf	??___awdiv,w
  3459  13DB  06A1               	xorwf	___awdiv@sign,f
  3460  13DC                     l2160:
  3461  13DC  01A2               	clrf	___awdiv@quotient
  3462  13DD  01A3               	clrf	___awdiv@quotient+1
  3463  13DE                     l2162:
  3464  13DE  0877               	movf	___awdiv@divisor,w
  3465  13DF  0478               	iorwf	___awdiv@divisor+1,w
  3466  13E0  1903               	btfsc	3,2
  3467  13E1  2BE3               	goto	u2511
  3468  13E2  2BE4               	goto	u2510
  3469  13E3                     u2511:
  3470  13E3  2C1B               	goto	l2182
  3471  13E4                     u2510:
  3472  13E4                     l2164:
  3473  13E4  01A0               	clrf	___awdiv@counter
  3474  13E5  0AA0               	incf	___awdiv@counter,f
  3475  13E6  2BF2               	goto	l2170
  3476  13E7                     l2166:
  3477  13E7  3001               	movlw	1
  3478  13E8                     u2525:
  3479  13E8  1003               	clrc
  3480  13E9  0DF7               	rlf	___awdiv@divisor,f
  3481  13EA  0DF8               	rlf	___awdiv@divisor+1,f
  3482  13EB  3EFF               	addlw	-1
  3483  13EC  1D03               	skipz
  3484  13ED  2BE8               	goto	u2525
  3485  13EE                     l2168:
  3486  13EE  3001               	movlw	1
  3487  13EF  00FB               	movwf	??___awdiv
  3488  13F0  087B               	movf	??___awdiv,w
  3489  13F1  07A0               	addwf	___awdiv@counter,f
  3490  13F2                     l2170:
  3491  13F2  1FF8               	btfss	___awdiv@divisor+1,7
  3492  13F3  2BF5               	goto	u2531
  3493  13F4  2BF6               	goto	u2530
  3494  13F5                     u2531:
  3495  13F5  2BE7               	goto	l2166
  3496  13F6                     u2530:
  3497  13F6                     l2172:
  3498  13F6  3001               	movlw	1
  3499  13F7                     u2545:
  3500  13F7  1003               	clrc
  3501  13F8  0DA2               	rlf	___awdiv@quotient,f
  3502  13F9  0DA3               	rlf	___awdiv@quotient+1,f
  3503  13FA  3EFF               	addlw	-1
  3504  13FB  1D03               	skipz
  3505  13FC  2BF7               	goto	u2545
  3506  13FD  0878               	movf	___awdiv@divisor+1,w
  3507  13FE  027A               	subwf	___awdiv@dividend+1,w
  3508  13FF  1D03               	skipz
  3509  1400  2C03               	goto	u2555
  3510  1401  0877               	movf	___awdiv@divisor,w
  3511  1402  0279               	subwf	___awdiv@dividend,w
  3512  1403                     u2555:
  3513  1403  1C03               	skipc
  3514  1404  2C06               	goto	u2551
  3515  1405  2C07               	goto	u2550
  3516  1406                     u2551:
  3517  1406  2C0E               	goto	l2178
  3518  1407                     u2550:
  3519  1407                     l2174:
  3520  1407  0877               	movf	___awdiv@divisor,w
  3521  1408  02F9               	subwf	___awdiv@dividend,f
  3522  1409  0878               	movf	___awdiv@divisor+1,w
  3523  140A  1C03               	skipc
  3524  140B  03FA               	decf	___awdiv@dividend+1,f
  3525  140C  02FA               	subwf	___awdiv@dividend+1,f
  3526  140D                     l2176:
  3527  140D  1422               	bsf	___awdiv@quotient,0
  3528  140E                     l2178:
  3529  140E  3001               	movlw	1
  3530  140F                     u2565:
  3531  140F  1003               	clrc
  3532  1410  0CF8               	rrf	___awdiv@divisor+1,f
  3533  1411  0CF7               	rrf	___awdiv@divisor,f
  3534  1412  3EFF               	addlw	-1
  3535  1413  1D03               	skipz
  3536  1414  2C0F               	goto	u2565
  3537  1415                     l2180:
  3538  1415  3001               	movlw	1
  3539  1416  02A0               	subwf	___awdiv@counter,f
  3540  1417  1D03               	btfss	3,2
  3541  1418  2C1A               	goto	u2571
  3542  1419  2C1B               	goto	u2570
  3543  141A                     u2571:
  3544  141A  2BF6               	goto	l2172
  3545  141B                     u2570:
  3546  141B                     l2182:
  3547  141B  0821               	movf	___awdiv@sign,w
  3548  141C  1903               	btfsc	3,2
  3549  141D  2C1F               	goto	u2581
  3550  141E  2C20               	goto	u2580
  3551  141F                     u2581:
  3552  141F  2C25               	goto	l2186
  3553  1420                     u2580:
  3554  1420                     l2184:
  3555  1420  09A2               	comf	___awdiv@quotient,f
  3556  1421  09A3               	comf	___awdiv@quotient+1,f
  3557  1422  0AA2               	incf	___awdiv@quotient,f
  3558  1423  1903               	skipnz
  3559  1424  0AA3               	incf	___awdiv@quotient+1,f
  3560  1425                     l2186:
  3561  1425  0823               	movf	___awdiv@quotient+1,w
  3562  1426  00F8               	movwf	?___awdiv+1
  3563  1427  0822               	movf	___awdiv@quotient,w
  3564  1428  00F7               	movwf	?___awdiv
  3565  1429                     l605:
  3566  1429  0008               	return
  3567  142A                     __end_of___awdiv:
  3568                           
  3569                           	psect	text7
  3570  1E7A                     __ptext7:	
  3571 ;; *************** function _isdigit *****************
  3572 ;; Defined at:
  3573 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  c               1    wreg     unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  c               1    1[COMMON] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3587 ;;      Params:         0       0       0       0       0
  3588 ;;      Locals:         2       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0
  3590 ;;      Totals:         2       0       0       0       0
  3591 ;;Total ram usage:        2 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_sprintf
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _isdigit
  3602  1E7A                     _isdigit:
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3606                           ;isdigit@c stored from wreg
  3607  1E7A  00F1               	movwf	isdigit@c
  3608  1E7B                     l2508:
  3609  1E7B  01F0               	clrf	_isdigit$881
  3610  1E7C                     l2510:
  3611  1E7C  303A               	movlw	58
  3612  1E7D  0271               	subwf	isdigit@c,w
  3613  1E7E  1803               	skipnc
  3614  1E7F  2E81               	goto	u3281
  3615  1E80  2E82               	goto	u3280
  3616  1E81                     u3281:
  3617  1E81  2E8A               	goto	l2516
  3618  1E82                     u3280:
  3619  1E82                     l2512:
  3620  1E82  3030               	movlw	48
  3621  1E83  0271               	subwf	isdigit@c,w
  3622  1E84  1C03               	skipc
  3623  1E85  2E87               	goto	u3291
  3624  1E86  2E88               	goto	u3290
  3625  1E87                     u3291:
  3626  1E87  2E8A               	goto	l2516
  3627  1E88                     u3290:
  3628  1E88                     l2514:
  3629  1E88  01F0               	clrf	_isdigit$881
  3630  1E89  0AF0               	incf	_isdigit$881,f
  3631  1E8A                     l2516:
  3632  1E8A  0C70               	rrf	_isdigit$881,w
  3633  1E8B                     l884:
  3634  1E8B  0008               	return
  3635  1E8C                     __end_of_isdigit:
  3636                           
  3637                           	psect	text8
  3638  08DC                     __ptext8:	
  3639 ;; *************** function _fround *****************
  3640 ;; Defined at:
  3641 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  prec            1    wreg     unsigned char 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  prec            1   39[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  3   24[BANK0 ] unsigned char 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         0       3       0       0       0
  3656 ;;      Locals:         0       7       0       0       0
  3657 ;;      Temps:          0       6       0       0       0
  3658 ;;      Totals:         0      16       0       0       0
  3659 ;;Total ram usage:       16 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		___bmul
  3664 ;;		___ftmul
  3665 ;;		___lwdiv
  3666 ;;		___lwmod
  3667 ;; This function is called by:
  3668 ;;		_sprintf
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _fround
  3674  08DC                     _fround:
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3678                           ;fround@prec stored from wreg
  3679  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  3680  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  3681  08DE  00C7               	movwf	fround@prec
  3682  08DF                     l2446:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3685  08DF  306E               	movlw	110
  3686  08E0  0247               	subwf	fround@prec,w
  3687  08E1  1C03               	skipc
  3688  08E2  28E4               	goto	u3211
  3689  08E3  28E5               	goto	u3210
  3690  08E4                     u3211:
  3691  08E4  29BC               	goto	l2456
  3692  08E5                     u3210:
  3693  08E5                     l2448:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3696  08E5  3003               	movlw	3
  3697  08E6  00BB               	movwf	??_fround
  3698  08E7  083B               	movf	??_fround,w
  3699  08E8  00A4               	movwf	___bmul@multiplicand
  3700  08E9  0847               	movf	fround@prec,w
  3701  08EA  00BC               	movwf	??_fround+1
  3702  08EB  01BD               	clrf	??_fround+2
  3703  08EC  083C               	movf	??_fround+1,w
  3704  08ED  00F2               	movwf	___lwmod@dividend
  3705  08EE  083D               	movf	??_fround+2,w
  3706  08EF  00F3               	movwf	___lwmod@dividend+1
  3707  08F0  3064               	movlw	100
  3708  08F1  00F0               	movwf	___lwmod@divisor
  3709  08F2  3000               	movlw	0
  3710  08F3  00F1               	movwf	___lwmod@divisor+1
  3711  08F4  160A  118A  2148  120A  158A  	fcall	___lwmod
  3712  08F9  0871               	movf	?___lwmod+1,w
  3713  08FA  00F9               	movwf	___lwdiv@dividend+1
  3714  08FB  0870               	movf	?___lwmod,w
  3715  08FC  00F8               	movwf	___lwdiv@dividend
  3716  08FD  300A               	movlw	10
  3717  08FE  00F6               	movwf	___lwdiv@divisor
  3718  08FF  3000               	movlw	0
  3719  0900  00F7               	movwf	___lwdiv@divisor+1
  3720  0901  160A  118A  2202  120A  158A  	fcall	___lwdiv
  3721  0906  0876               	movf	?___lwdiv,w
  3722  0907  160A  158A  26A2  120A  158A  	fcall	___bmul
  3723  090C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3724  090D  0084               	movwf	4
  3725  090E  160A  118A  200A  120A  158A  	fcall	stringdir
  3726  0913  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0914  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0915  00A8               	movwf	___ftmul@f1
  3729  0916  160A  118A  200A  120A  158A  	fcall	stringdir
  3730  091B  00A9               	movwf	___ftmul@f1+1
  3731  091C  160A  118A  200A  120A  158A  	fcall	stringdir
  3732  0921  00AA               	movwf	___ftmul@f1+2
  3733  0922  3003               	movlw	3
  3734  0923  00BE               	movwf	??_fround+3
  3735  0924  083E               	movf	??_fround+3,w
  3736  0925  00A4               	movwf	___bmul@multiplicand
  3737  0926  0847               	movf	fround@prec,w
  3738  0927  00BF               	movwf	??_fround+4
  3739  0928  01C0               	clrf	??_fround+5
  3740  0929  083F               	movf	??_fround+4,w
  3741  092A  00F8               	movwf	___lwdiv@dividend
  3742  092B  0840               	movf	??_fround+5,w
  3743  092C  00F9               	movwf	___lwdiv@dividend+1
  3744  092D  3064               	movlw	100
  3745  092E  00F6               	movwf	___lwdiv@divisor
  3746  092F  3000               	movlw	0
  3747  0930  00F7               	movwf	___lwdiv@divisor+1
  3748  0931  160A  118A  2202  120A  158A  	fcall	___lwdiv
  3749  0936  0876               	movf	?___lwdiv,w
  3750  0937  160A  158A  26A2  120A  158A  	fcall	___bmul
  3751  093C  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3752  093D  0084               	movwf	4
  3753  093E  160A  118A  200A  120A  158A  	fcall	stringdir
  3754  0943  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0944  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0945  00AB               	movwf	___ftmul@f2
  3757  0946  160A  118A  200A  120A  158A  	fcall	stringdir
  3758  094B  00AC               	movwf	___ftmul@f2+1
  3759  094C  160A  118A  200A  120A  158A  	fcall	stringdir
  3760  0951  00AD               	movwf	___ftmul@f2+2
  3761  0952  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3762  0957  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0958  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0959  0828               	movf	?___ftmul,w
  3765  095A  00C4               	movwf	_fround$1076
  3766  095B  0829               	movf	?___ftmul+1,w
  3767  095C  00C5               	movwf	_fround$1076+1
  3768  095D  082A               	movf	?___ftmul+2,w
  3769  095E  00C6               	movwf	_fround$1076+2
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3772  095F  3003               	movlw	3
  3773  0960  00BB               	movwf	??_fround
  3774  0961  083B               	movf	??_fround,w
  3775  0962  00A4               	movwf	___bmul@multiplicand
  3776  0963  0847               	movf	fround@prec,w
  3777  0964  00BC               	movwf	??_fround+1
  3778  0965  01BD               	clrf	??_fround+2
  3779  0966  083C               	movf	??_fround+1,w
  3780  0967  00F2               	movwf	___lwmod@dividend
  3781  0968  083D               	movf	??_fround+2,w
  3782  0969  00F3               	movwf	___lwmod@dividend+1
  3783  096A  300A               	movlw	10
  3784  096B  00F0               	movwf	___lwmod@divisor
  3785  096C  3000               	movlw	0
  3786  096D  00F1               	movwf	___lwmod@divisor+1
  3787  096E  160A  118A  2148  120A  158A  	fcall	___lwmod
  3788  0973  0870               	movf	?___lwmod,w
  3789  0974  160A  158A  26A2  120A  158A  	fcall	___bmul
  3790  0979  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3791  097A  0084               	movwf	4
  3792  097B  160A  118A  200A  120A  158A  	fcall	stringdir
  3793  0980  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0981  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0982  00A8               	movwf	___ftmul@f1
  3796  0983  160A  118A  200A  120A  158A  	fcall	stringdir
  3797  0988  00A9               	movwf	___ftmul@f1+1
  3798  0989  160A  118A  200A  120A  158A  	fcall	stringdir
  3799  098E  00AA               	movwf	___ftmul@f1+2
  3800  098F  0844               	movf	_fround$1076,w
  3801  0990  00AB               	movwf	___ftmul@f2
  3802  0991  0845               	movf	_fround$1076+1,w
  3803  0992  00AC               	movwf	___ftmul@f2+1
  3804  0993  0846               	movf	_fround$1076+2,w
  3805  0994  00AD               	movwf	___ftmul@f2+2
  3806  0995  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3807  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3808  099B  1303               	bcf	3,6	;RP1=0, select bank0
  3809  099C  0828               	movf	?___ftmul,w
  3810  099D  00C1               	movwf	_fround$1077
  3811  099E  0829               	movf	?___ftmul+1,w
  3812  099F  00C2               	movwf	_fround$1077+1
  3813  09A0  082A               	movf	?___ftmul+2,w
  3814  09A1  00C3               	movwf	_fround$1077+2
  3815  09A2                     l2450:
  3816                           
  3817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3818  09A2  3000               	movlw	0
  3819  09A3  00A8               	movwf	___ftmul@f1
  3820  09A4  3000               	movlw	0
  3821  09A5  00A9               	movwf	___ftmul@f1+1
  3822  09A6  303F               	movlw	63
  3823  09A7  00AA               	movwf	___ftmul@f1+2
  3824  09A8  0841               	movf	_fround$1077,w
  3825  09A9  00AB               	movwf	___ftmul@f2
  3826  09AA  0842               	movf	_fround$1077+1,w
  3827  09AB  00AC               	movwf	___ftmul@f2+1
  3828  09AC  0843               	movf	_fround$1077+2,w
  3829  09AD  00AD               	movwf	___ftmul@f2+2
  3830  09AE  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3831  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  3832  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  3833  09B5  0828               	movf	?___ftmul,w
  3834  09B6  00B8               	movwf	?_fround
  3835  09B7  0829               	movf	?___ftmul+1,w
  3836  09B8  00B9               	movwf	?_fround+1
  3837  09B9  082A               	movf	?___ftmul+2,w
  3838  09BA  00BA               	movwf	?_fround+2
  3839  09BB  2A7C               	goto	l319
  3840  09BC                     l2456:
  3841  09BC  300B               	movlw	11
  3842  09BD  0247               	subwf	fround@prec,w
  3843  09BE  1C03               	skipc
  3844  09BF  29C1               	goto	u3221
  3845  09C0  29C2               	goto	u3220
  3846  09C1                     u3221:
  3847  09C1  2A49               	goto	l2464
  3848  09C2                     u3220:
  3849  09C2                     l2458:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3852  09C2  3003               	movlw	3
  3853  09C3  00BB               	movwf	??_fround
  3854  09C4  083B               	movf	??_fround,w
  3855  09C5  00A4               	movwf	___bmul@multiplicand
  3856  09C6  0847               	movf	fround@prec,w
  3857  09C7  00BC               	movwf	??_fround+1
  3858  09C8  01BD               	clrf	??_fround+2
  3859  09C9  083C               	movf	??_fround+1,w
  3860  09CA  00F2               	movwf	___lwmod@dividend
  3861  09CB  083D               	movf	??_fround+2,w
  3862  09CC  00F3               	movwf	___lwmod@dividend+1
  3863  09CD  300A               	movlw	10
  3864  09CE  00F0               	movwf	___lwmod@divisor
  3865  09CF  3000               	movlw	0
  3866  09D0  00F1               	movwf	___lwmod@divisor+1
  3867  09D1  160A  118A  2148  120A  158A  	fcall	___lwmod
  3868  09D6  0870               	movf	?___lwmod,w
  3869  09D7  160A  158A  26A2  120A  158A  	fcall	___bmul
  3870  09DC  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3871  09DD  0084               	movwf	4
  3872  09DE  160A  118A  200A  120A  158A  	fcall	stringdir
  3873  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  3874  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  3875  09E5  00A8               	movwf	___ftmul@f1
  3876  09E6  160A  118A  200A  120A  158A  	fcall	stringdir
  3877  09EB  00A9               	movwf	___ftmul@f1+1
  3878  09EC  160A  118A  200A  120A  158A  	fcall	stringdir
  3879  09F1  00AA               	movwf	___ftmul@f1+2
  3880  09F2  3003               	movlw	3
  3881  09F3  00BE               	movwf	??_fround+3
  3882  09F4  083E               	movf	??_fround+3,w
  3883  09F5  00A4               	movwf	___bmul@multiplicand
  3884  09F6  0847               	movf	fround@prec,w
  3885  09F7  00BF               	movwf	??_fround+4
  3886  09F8  01C0               	clrf	??_fround+5
  3887  09F9  083F               	movf	??_fround+4,w
  3888  09FA  00F8               	movwf	___lwdiv@dividend
  3889  09FB  0840               	movf	??_fround+5,w
  3890  09FC  00F9               	movwf	___lwdiv@dividend+1
  3891  09FD  300A               	movlw	10
  3892  09FE  00F6               	movwf	___lwdiv@divisor
  3893  09FF  3000               	movlw	0
  3894  0A00  00F7               	movwf	___lwdiv@divisor+1
  3895  0A01  160A  118A  2202  120A  158A  	fcall	___lwdiv
  3896  0A06  0876               	movf	?___lwdiv,w
  3897  0A07  160A  158A  26A2  120A  158A  	fcall	___bmul
  3898  0A0C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3899  0A0D  0084               	movwf	4
  3900  0A0E  160A  118A  200A  120A  158A  	fcall	stringdir
  3901  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0A15  00AB               	movwf	___ftmul@f2
  3904  0A16  160A  118A  200A  120A  158A  	fcall	stringdir
  3905  0A1B  00AC               	movwf	___ftmul@f2+1
  3906  0A1C  160A  118A  200A  120A  158A  	fcall	stringdir
  3907  0A21  00AD               	movwf	___ftmul@f2+2
  3908  0A22  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3909  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0A29  0828               	movf	?___ftmul,w
  3912  0A2A  00C4               	movwf	_fround$1076
  3913  0A2B  0829               	movf	?___ftmul+1,w
  3914  0A2C  00C5               	movwf	_fround$1076+1
  3915  0A2D  082A               	movf	?___ftmul+2,w
  3916  0A2E  00C6               	movwf	_fround$1076+2
  3917  0A2F                     l2460:
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3920  0A2F  3000               	movlw	0
  3921  0A30  00A8               	movwf	___ftmul@f1
  3922  0A31  3000               	movlw	0
  3923  0A32  00A9               	movwf	___ftmul@f1+1
  3924  0A33  303F               	movlw	63
  3925  0A34  00AA               	movwf	___ftmul@f1+2
  3926  0A35  0844               	movf	_fround$1076,w
  3927  0A36  00AB               	movwf	___ftmul@f2
  3928  0A37  0845               	movf	_fround$1076+1,w
  3929  0A38  00AC               	movwf	___ftmul@f2+1
  3930  0A39  0846               	movf	_fround$1076+2,w
  3931  0A3A  00AD               	movwf	___ftmul@f2+2
  3932  0A3B  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3933  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0A42  0828               	movf	?___ftmul,w
  3936  0A43  00B8               	movwf	?_fround
  3937  0A44  0829               	movf	?___ftmul+1,w
  3938  0A45  00B9               	movwf	?_fround+1
  3939  0A46  082A               	movf	?___ftmul+2,w
  3940  0A47  00BA               	movwf	?_fround+2
  3941  0A48  2A7C               	goto	l319
  3942  0A49                     l2464:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3945  0A49  3000               	movlw	0
  3946  0A4A  00A8               	movwf	___ftmul@f1
  3947  0A4B  3000               	movlw	0
  3948  0A4C  00A9               	movwf	___ftmul@f1+1
  3949  0A4D  303F               	movlw	63
  3950  0A4E  00AA               	movwf	___ftmul@f1+2
  3951  0A4F  3003               	movlw	3
  3952  0A50  00BB               	movwf	??_fround
  3953  0A51  083B               	movf	??_fround,w
  3954  0A52  00A4               	movwf	___bmul@multiplicand
  3955  0A53  0847               	movf	fround@prec,w
  3956  0A54  160A  158A  26A2  120A  158A  	fcall	___bmul
  3957  0A59  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3958  0A5A  0084               	movwf	4
  3959  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  3960  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0A62  00AB               	movwf	___ftmul@f2
  3963  0A63  160A  118A  200A  120A  158A  	fcall	stringdir
  3964  0A68  00AC               	movwf	___ftmul@f2+1
  3965  0A69  160A  118A  200A  120A  158A  	fcall	stringdir
  3966  0A6E  00AD               	movwf	___ftmul@f2+2
  3967  0A6F  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3968  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0A76  0828               	movf	?___ftmul,w
  3971  0A77  00B8               	movwf	?_fround
  3972  0A78  0829               	movf	?___ftmul+1,w
  3973  0A79  00B9               	movwf	?_fround+1
  3974  0A7A  082A               	movf	?___ftmul+2,w
  3975  0A7B  00BA               	movwf	?_fround+2
  3976  0A7C                     l319:
  3977  0A7C  0008               	return
  3978  0A7D                     __end_of_fround:
  3979                           
  3980                           	psect	text9
  3981  1148                     __ptext9:	
  3982 ;; *************** function ___lwmod *****************
  3983 ;; Defined at:
  3984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  divisor         2    0[COMMON] unsigned int 
  3987 ;;  dividend        2    2[COMMON] unsigned int 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  counter         1    5[COMMON] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  2    0[COMMON] unsigned int 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         4       0       0       0       0
  4000 ;;      Locals:         1       0       0       0       0
  4001 ;;      Temps:          1       0       0       0       0
  4002 ;;      Totals:         6       0       0       0       0
  4003 ;;Total ram usage:        6 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_fround
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function ___lwmod
  4014  1148                     ___lwmod:
  4015  1148                     l2374:	
  4016                           ;incstack = 0
  4017                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4018                           
  4019  1148  0870               	movf	___lwmod@divisor,w
  4020  1149  0471               	iorwf	___lwmod@divisor+1,w
  4021  114A  1903               	btfsc	3,2
  4022  114B  294D               	goto	u3131
  4023  114C  294E               	goto	u3130
  4024  114D                     u3131:
  4025  114D  297D               	goto	l2392
  4026  114E                     u3130:
  4027  114E                     l2376:
  4028  114E  01F5               	clrf	___lwmod@counter
  4029  114F  0AF5               	incf	___lwmod@counter,f
  4030  1150  295C               	goto	l2382
  4031  1151                     l2378:
  4032  1151  3001               	movlw	1
  4033  1152                     u3145:
  4034  1152  1003               	clrc
  4035  1153  0DF0               	rlf	___lwmod@divisor,f
  4036  1154  0DF1               	rlf	___lwmod@divisor+1,f
  4037  1155  3EFF               	addlw	-1
  4038  1156  1D03               	skipz
  4039  1157  2952               	goto	u3145
  4040  1158                     l2380:
  4041  1158  3001               	movlw	1
  4042  1159  00F4               	movwf	??___lwmod
  4043  115A  0874               	movf	??___lwmod,w
  4044  115B  07F5               	addwf	___lwmod@counter,f
  4045  115C                     l2382:
  4046  115C  1FF1               	btfss	___lwmod@divisor+1,7
  4047  115D  295F               	goto	u3151
  4048  115E  2960               	goto	u3150
  4049  115F                     u3151:
  4050  115F  2951               	goto	l2378
  4051  1160                     u3150:
  4052  1160                     l2384:
  4053  1160  0871               	movf	___lwmod@divisor+1,w
  4054  1161  0273               	subwf	___lwmod@dividend+1,w
  4055  1162  1D03               	skipz
  4056  1163  2966               	goto	u3165
  4057  1164  0870               	movf	___lwmod@divisor,w
  4058  1165  0272               	subwf	___lwmod@dividend,w
  4059  1166                     u3165:
  4060  1166  1C03               	skipc
  4061  1167  2969               	goto	u3161
  4062  1168  296A               	goto	u3160
  4063  1169                     u3161:
  4064  1169  2970               	goto	l2388
  4065  116A                     u3160:
  4066  116A                     l2386:
  4067  116A  0870               	movf	___lwmod@divisor,w
  4068  116B  02F2               	subwf	___lwmod@dividend,f
  4069  116C  0871               	movf	___lwmod@divisor+1,w
  4070  116D  1C03               	skipc
  4071  116E  03F3               	decf	___lwmod@dividend+1,f
  4072  116F  02F3               	subwf	___lwmod@dividend+1,f
  4073  1170                     l2388:
  4074  1170  3001               	movlw	1
  4075  1171                     u3175:
  4076  1171  1003               	clrc
  4077  1172  0CF1               	rrf	___lwmod@divisor+1,f
  4078  1173  0CF0               	rrf	___lwmod@divisor,f
  4079  1174  3EFF               	addlw	-1
  4080  1175  1D03               	skipz
  4081  1176  2971               	goto	u3175
  4082  1177                     l2390:
  4083  1177  3001               	movlw	1
  4084  1178  02F5               	subwf	___lwmod@counter,f
  4085  1179  1D03               	btfss	3,2
  4086  117A  297C               	goto	u3181
  4087  117B  297D               	goto	u3180
  4088  117C                     u3181:
  4089  117C  2960               	goto	l2384
  4090  117D                     u3180:
  4091  117D                     l2392:
  4092  117D  0873               	movf	___lwmod@dividend+1,w
  4093  117E  00F1               	movwf	?___lwmod+1
  4094  117F  0872               	movf	___lwmod@dividend,w
  4095  1180  00F0               	movwf	?___lwmod
  4096  1181                     l874:
  4097  1181  0008               	return
  4098  1182                     __end_of___lwmod:
  4099                           
  4100                           	psect	text10
  4101  1202                     __ptext10:	
  4102 ;; *************** function ___lwdiv *****************
  4103 ;; Defined at:
  4104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  divisor         2    6[COMMON] unsigned int 
  4107 ;;  dividend        2    8[COMMON] unsigned int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  quotient        2   11[COMMON] unsigned int 
  4110 ;;  counter         1   13[COMMON] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    6[COMMON] unsigned int 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         4       0       0       0       0
  4121 ;;      Locals:         3       0       0       0       0
  4122 ;;      Temps:          1       0       0       0       0
  4123 ;;      Totals:         8       0       0       0       0
  4124 ;;Total ram usage:        8 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_fround
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function ___lwdiv
  4135  1202                     ___lwdiv:
  4136  1202                     l2348:	
  4137                           ;incstack = 0
  4138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4139                           
  4140  1202  01FB               	clrf	___lwdiv@quotient
  4141  1203  01FC               	clrf	___lwdiv@quotient+1
  4142  1204                     l2350:
  4143  1204  0876               	movf	___lwdiv@divisor,w
  4144  1205  0477               	iorwf	___lwdiv@divisor+1,w
  4145  1206  1903               	btfsc	3,2
  4146  1207  2A09               	goto	u3061
  4147  1208  2A0A               	goto	u3060
  4148  1209                     u3061:
  4149  1209  2A41               	goto	l2370
  4150  120A                     u3060:
  4151  120A                     l2352:
  4152  120A  01FD               	clrf	___lwdiv@counter
  4153  120B  0AFD               	incf	___lwdiv@counter,f
  4154  120C  2A18               	goto	l2358
  4155  120D                     l2354:
  4156  120D  3001               	movlw	1
  4157  120E                     u3075:
  4158  120E  1003               	clrc
  4159  120F  0DF6               	rlf	___lwdiv@divisor,f
  4160  1210  0DF7               	rlf	___lwdiv@divisor+1,f
  4161  1211  3EFF               	addlw	-1
  4162  1212  1D03               	skipz
  4163  1213  2A0E               	goto	u3075
  4164  1214                     l2356:
  4165  1214  3001               	movlw	1
  4166  1215  00FA               	movwf	??___lwdiv
  4167  1216  087A               	movf	??___lwdiv,w
  4168  1217  07FD               	addwf	___lwdiv@counter,f
  4169  1218                     l2358:
  4170  1218  1FF7               	btfss	___lwdiv@divisor+1,7
  4171  1219  2A1B               	goto	u3081
  4172  121A  2A1C               	goto	u3080
  4173  121B                     u3081:
  4174  121B  2A0D               	goto	l2354
  4175  121C                     u3080:
  4176  121C                     l2360:
  4177  121C  3001               	movlw	1
  4178  121D                     u3095:
  4179  121D  1003               	clrc
  4180  121E  0DFB               	rlf	___lwdiv@quotient,f
  4181  121F  0DFC               	rlf	___lwdiv@quotient+1,f
  4182  1220  3EFF               	addlw	-1
  4183  1221  1D03               	skipz
  4184  1222  2A1D               	goto	u3095
  4185  1223  0877               	movf	___lwdiv@divisor+1,w
  4186  1224  0279               	subwf	___lwdiv@dividend+1,w
  4187  1225  1D03               	skipz
  4188  1226  2A29               	goto	u3105
  4189  1227  0876               	movf	___lwdiv@divisor,w
  4190  1228  0278               	subwf	___lwdiv@dividend,w
  4191  1229                     u3105:
  4192  1229  1C03               	skipc
  4193  122A  2A2C               	goto	u3101
  4194  122B  2A2D               	goto	u3100
  4195  122C                     u3101:
  4196  122C  2A34               	goto	l2366
  4197  122D                     u3100:
  4198  122D                     l2362:
  4199  122D  0876               	movf	___lwdiv@divisor,w
  4200  122E  02F8               	subwf	___lwdiv@dividend,f
  4201  122F  0877               	movf	___lwdiv@divisor+1,w
  4202  1230  1C03               	skipc
  4203  1231  03F9               	decf	___lwdiv@dividend+1,f
  4204  1232  02F9               	subwf	___lwdiv@dividend+1,f
  4205  1233                     l2364:
  4206  1233  147B               	bsf	___lwdiv@quotient,0
  4207  1234                     l2366:
  4208  1234  3001               	movlw	1
  4209  1235                     u3115:
  4210  1235  1003               	clrc
  4211  1236  0CF7               	rrf	___lwdiv@divisor+1,f
  4212  1237  0CF6               	rrf	___lwdiv@divisor,f
  4213  1238  3EFF               	addlw	-1
  4214  1239  1D03               	skipz
  4215  123A  2A35               	goto	u3115
  4216  123B                     l2368:
  4217  123B  3001               	movlw	1
  4218  123C  02FD               	subwf	___lwdiv@counter,f
  4219  123D  1D03               	btfss	3,2
  4220  123E  2A40               	goto	u3121
  4221  123F  2A41               	goto	u3120
  4222  1240                     u3121:
  4223  1240  2A1C               	goto	l2360
  4224  1241                     u3120:
  4225  1241                     l2370:
  4226  1241  087C               	movf	___lwdiv@quotient+1,w
  4227  1242  00F7               	movwf	?___lwdiv+1
  4228  1243  087B               	movf	___lwdiv@quotient,w
  4229  1244  00F6               	movwf	?___lwdiv
  4230  1245                     l864:
  4231  1245  0008               	return
  4232  1246                     __end_of___lwdiv:
  4233                           
  4234                           	psect	text11
  4235  15EF                     __ptext11:	
  4236 ;; *************** function ___ftmul *****************
  4237 ;; Defined at:
  4238 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  f1              3    8[BANK0 ] float 
  4241 ;;  f2              3   11[BANK0 ] float 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  4244 ;;  sign            1   23[BANK0 ] unsigned char 
  4245 ;;  cntr            1   22[BANK0 ] unsigned char 
  4246 ;;  exp             1   18[BANK0 ] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  3    8[BANK0 ] float 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       6       0       0       0
  4257 ;;      Locals:         0       6       0       0       0
  4258 ;;      Temps:          0       4       0       0       0
  4259 ;;      Totals:         0      16       0       0       0
  4260 ;;Total ram usage:       16 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    1
  4263 ;; This function calls:
  4264 ;;		___ftpack
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;;		_fround
  4268 ;;		_scale
  4269 ;;		_sprintf
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function ___ftmul
  4275  15EF                     ___ftmul:
  4276  15EF                     l2298:	
  4277                           ;incstack = 0
  4278                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4279                           
  4280  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  4281  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  4282  15F1  0828               	movf	___ftmul@f1,w
  4283  15F2  00AE               	movwf	??___ftmul
  4284  15F3  0829               	movf	___ftmul@f1+1,w
  4285  15F4  00AF               	movwf	??___ftmul+1
  4286  15F5  082A               	movf	___ftmul@f1+2,w
  4287  15F6  00B0               	movwf	??___ftmul+2
  4288  15F7  1003               	clrc
  4289  15F8  0D2F               	rlf	??___ftmul+1,w
  4290  15F9  0D30               	rlf	??___ftmul+2,w
  4291  15FA  00B1               	movwf	??___ftmul+3
  4292  15FB  0831               	movf	??___ftmul+3,w
  4293  15FC  00B2               	movwf	___ftmul@exp
  4294  15FD  0832               	movf	___ftmul@exp,w
  4295  15FE  1D03               	btfss	3,2
  4296  15FF  2E01               	goto	u2921
  4297  1600  2E02               	goto	u2920
  4298  1601                     u2921:
  4299  1601  2E09               	goto	l2304
  4300  1602                     u2920:
  4301  1602                     l2300:
  4302  1602  3000               	movlw	0
  4303  1603  00A8               	movwf	?___ftmul
  4304  1604  3000               	movlw	0
  4305  1605  00A9               	movwf	?___ftmul+1
  4306  1606  3000               	movlw	0
  4307  1607  00AA               	movwf	?___ftmul+2
  4308  1608  2ED3               	goto	l731
  4309  1609                     l2304:
  4310  1609  082B               	movf	___ftmul@f2,w
  4311  160A  00AE               	movwf	??___ftmul
  4312  160B  082C               	movf	___ftmul@f2+1,w
  4313  160C  00AF               	movwf	??___ftmul+1
  4314  160D  082D               	movf	___ftmul@f2+2,w
  4315  160E  00B0               	movwf	??___ftmul+2
  4316  160F  1003               	clrc
  4317  1610  0D2F               	rlf	??___ftmul+1,w
  4318  1611  0D30               	rlf	??___ftmul+2,w
  4319  1612  00B1               	movwf	??___ftmul+3
  4320  1613  0831               	movf	??___ftmul+3,w
  4321  1614  00B7               	movwf	___ftmul@sign
  4322  1615  0837               	movf	___ftmul@sign,w
  4323  1616  1D03               	btfss	3,2
  4324  1617  2E19               	goto	u2931
  4325  1618  2E1A               	goto	u2930
  4326  1619                     u2931:
  4327  1619  2E21               	goto	l2310
  4328  161A                     u2930:
  4329  161A                     l2306:
  4330  161A  3000               	movlw	0
  4331  161B  00A8               	movwf	?___ftmul
  4332  161C  3000               	movlw	0
  4333  161D  00A9               	movwf	?___ftmul+1
  4334  161E  3000               	movlw	0
  4335  161F  00AA               	movwf	?___ftmul+2
  4336  1620  2ED3               	goto	l731
  4337  1621                     l2310:
  4338  1621  0837               	movf	___ftmul@sign,w
  4339  1622  3E7B               	addlw	123
  4340  1623  00AE               	movwf	??___ftmul
  4341  1624  082E               	movf	??___ftmul,w
  4342  1625  07B2               	addwf	___ftmul@exp,f
  4343  1626  0828               	movf	___ftmul@f1,w
  4344  1627  00AE               	movwf	??___ftmul
  4345  1628  0829               	movf	___ftmul@f1+1,w
  4346  1629  00AF               	movwf	??___ftmul+1
  4347  162A  082A               	movf	___ftmul@f1+2,w
  4348  162B  00B0               	movwf	??___ftmul+2
  4349  162C  3010               	movlw	16
  4350  162D                     u2945:
  4351  162D  1003               	clrc
  4352  162E  0CB0               	rrf	??___ftmul+2,f
  4353  162F  0CAF               	rrf	??___ftmul+1,f
  4354  1630  0CAE               	rrf	??___ftmul,f
  4355  1631                     u2940:
  4356  1631  3EFF               	addlw	-1
  4357  1632  1D03               	skipz
  4358  1633  2E2D               	goto	u2945
  4359  1634  082E               	movf	??___ftmul,w
  4360  1635  00B1               	movwf	??___ftmul+3
  4361  1636  0831               	movf	??___ftmul+3,w
  4362  1637  00B7               	movwf	___ftmul@sign
  4363  1638  082B               	movf	___ftmul@f2,w
  4364  1639  00AE               	movwf	??___ftmul
  4365  163A  082C               	movf	___ftmul@f2+1,w
  4366  163B  00AF               	movwf	??___ftmul+1
  4367  163C  082D               	movf	___ftmul@f2+2,w
  4368  163D  00B0               	movwf	??___ftmul+2
  4369  163E  3010               	movlw	16
  4370  163F                     u2955:
  4371  163F  1003               	clrc
  4372  1640  0CB0               	rrf	??___ftmul+2,f
  4373  1641  0CAF               	rrf	??___ftmul+1,f
  4374  1642  0CAE               	rrf	??___ftmul,f
  4375  1643                     u2950:
  4376  1643  3EFF               	addlw	-1
  4377  1644  1D03               	skipz
  4378  1645  2E3F               	goto	u2955
  4379  1646  082E               	movf	??___ftmul,w
  4380  1647  00B1               	movwf	??___ftmul+3
  4381  1648  0831               	movf	??___ftmul+3,w
  4382  1649  06B7               	xorwf	___ftmul@sign,f
  4383  164A  3080               	movlw	128
  4384  164B  00AE               	movwf	??___ftmul
  4385  164C  082E               	movf	??___ftmul,w
  4386  164D  05B7               	andwf	___ftmul@sign,f
  4387  164E                     l2312:
  4388  164E  17A9               	bsf	___ftmul@f1+1,7
  4389  164F                     l2314:
  4390  164F  17AC               	bsf	___ftmul@f2+1,7
  4391  1650                     l2316:
  4392  1650  30FF               	movlw	255
  4393  1651  05AB               	andwf	___ftmul@f2,f
  4394  1652  30FF               	movlw	255
  4395  1653  05AC               	andwf	___ftmul@f2+1,f
  4396  1654  3000               	movlw	0
  4397  1655  05AD               	andwf	___ftmul@f2+2,f
  4398  1656                     l2318:
  4399  1656  3000               	movlw	0
  4400  1657  00B3               	movwf	___ftmul@f3_as_product
  4401  1658  3000               	movlw	0
  4402  1659  00B4               	movwf	___ftmul@f3_as_product+1
  4403  165A  3000               	movlw	0
  4404  165B  00B5               	movwf	___ftmul@f3_as_product+2
  4405  165C                     l2320:
  4406  165C  3007               	movlw	7
  4407  165D  00AE               	movwf	??___ftmul
  4408  165E  082E               	movf	??___ftmul,w
  4409  165F  00B6               	movwf	___ftmul@cntr
  4410  1660                     l2322:
  4411  1660  1C28               	btfss	___ftmul@f1,0
  4412  1661  2E63               	goto	u2961
  4413  1662  2E64               	goto	u2960
  4414  1663                     u2961:
  4415  1663  2E74               	goto	l2326
  4416  1664                     u2960:
  4417  1664                     l2324:
  4418  1664  082B               	movf	___ftmul@f2,w
  4419  1665  07B3               	addwf	___ftmul@f3_as_product,f
  4420  1666  082C               	movf	___ftmul@f2+1,w
  4421  1667  1103               	clrz
  4422  1668  1803               	skipnc
  4423  1669  0A2C               	incf	___ftmul@f2+1,w
  4424  166A  1903               	skipnz
  4425  166B  2E6D               	goto	u2971
  4426  166C  07B4               	addwf	___ftmul@f3_as_product+1,f
  4427  166D                     u2971:
  4428  166D  082D               	movf	___ftmul@f2+2,w
  4429  166E  1103               	clrz
  4430  166F  1803               	skipnc
  4431  1670  0A2D               	incf	___ftmul@f2+2,w
  4432  1671  1903               	skipnz
  4433  1672  2E74               	goto	u2972
  4434  1673  07B5               	addwf	___ftmul@f3_as_product+2,f
  4435  1674                     u2972:
  4436  1674                     l2326:
  4437  1674  3001               	movlw	1
  4438  1675                     u2985:
  4439  1675  1003               	clrc
  4440  1676  0CAA               	rrf	___ftmul@f1+2,f
  4441  1677  0CA9               	rrf	___ftmul@f1+1,f
  4442  1678  0CA8               	rrf	___ftmul@f1,f
  4443  1679  3EFF               	addlw	-1
  4444  167A  1D03               	skipz
  4445  167B  2E75               	goto	u2985
  4446  167C                     l2328:
  4447  167C  3001               	movlw	1
  4448  167D                     u2995:
  4449  167D  1003               	clrc
  4450  167E  0DAB               	rlf	___ftmul@f2,f
  4451  167F  0DAC               	rlf	___ftmul@f2+1,f
  4452  1680  0DAD               	rlf	___ftmul@f2+2,f
  4453  1681  3EFF               	addlw	-1
  4454  1682  1D03               	skipz
  4455  1683  2E7D               	goto	u2995
  4456  1684                     l2330:
  4457  1684  3001               	movlw	1
  4458  1685  02B6               	subwf	___ftmul@cntr,f
  4459  1686  1D03               	btfss	3,2
  4460  1687  2E89               	goto	u3001
  4461  1688  2E8A               	goto	u3000
  4462  1689                     u3001:
  4463  1689  2E60               	goto	l2322
  4464  168A                     u3000:
  4465  168A                     l2332:
  4466  168A  3009               	movlw	9
  4467  168B  00AE               	movwf	??___ftmul
  4468  168C  082E               	movf	??___ftmul,w
  4469  168D  00B6               	movwf	___ftmul@cntr
  4470  168E                     l2334:
  4471  168E  1C28               	btfss	___ftmul@f1,0
  4472  168F  2E91               	goto	u3011
  4473  1690  2E92               	goto	u3010
  4474  1691                     u3011:
  4475  1691  2EA2               	goto	l2338
  4476  1692                     u3010:
  4477  1692                     l2336:
  4478  1692  082B               	movf	___ftmul@f2,w
  4479  1693  07B3               	addwf	___ftmul@f3_as_product,f
  4480  1694  082C               	movf	___ftmul@f2+1,w
  4481  1695  1103               	clrz
  4482  1696  1803               	skipnc
  4483  1697  0A2C               	incf	___ftmul@f2+1,w
  4484  1698  1903               	skipnz
  4485  1699  2E9B               	goto	u3021
  4486  169A  07B4               	addwf	___ftmul@f3_as_product+1,f
  4487  169B                     u3021:
  4488  169B  082D               	movf	___ftmul@f2+2,w
  4489  169C  1103               	clrz
  4490  169D  1803               	skipnc
  4491  169E  0A2D               	incf	___ftmul@f2+2,w
  4492  169F  1903               	skipnz
  4493  16A0  2EA2               	goto	u3022
  4494  16A1  07B5               	addwf	___ftmul@f3_as_product+2,f
  4495  16A2                     u3022:
  4496  16A2                     l2338:
  4497  16A2  3001               	movlw	1
  4498  16A3                     u3035:
  4499  16A3  1003               	clrc
  4500  16A4  0CAA               	rrf	___ftmul@f1+2,f
  4501  16A5  0CA9               	rrf	___ftmul@f1+1,f
  4502  16A6  0CA8               	rrf	___ftmul@f1,f
  4503  16A7  3EFF               	addlw	-1
  4504  16A8  1D03               	skipz
  4505  16A9  2EA3               	goto	u3035
  4506  16AA                     l2340:
  4507  16AA  3001               	movlw	1
  4508  16AB                     u3045:
  4509  16AB  1003               	clrc
  4510  16AC  0CB5               	rrf	___ftmul@f3_as_product+2,f
  4511  16AD  0CB4               	rrf	___ftmul@f3_as_product+1,f
  4512  16AE  0CB3               	rrf	___ftmul@f3_as_product,f
  4513  16AF  3EFF               	addlw	-1
  4514  16B0  1D03               	skipz
  4515  16B1  2EAB               	goto	u3045
  4516  16B2                     l2342:
  4517  16B2  3001               	movlw	1
  4518  16B3  02B6               	subwf	___ftmul@cntr,f
  4519  16B4  1D03               	btfss	3,2
  4520  16B5  2EB7               	goto	u3051
  4521  16B6  2EB8               	goto	u3050
  4522  16B7                     u3051:
  4523  16B7  2E8E               	goto	l2334
  4524  16B8                     u3050:
  4525  16B8                     l2344:
  4526  16B8  0833               	movf	___ftmul@f3_as_product,w
  4527  16B9  00F0               	movwf	___ftpack@arg
  4528  16BA  0834               	movf	___ftmul@f3_as_product+1,w
  4529  16BB  00F1               	movwf	___ftpack@arg+1
  4530  16BC  0835               	movf	___ftmul@f3_as_product+2,w
  4531  16BD  00F2               	movwf	___ftpack@arg+2
  4532  16BE  0832               	movf	___ftmul@exp,w
  4533  16BF  00AE               	movwf	??___ftmul
  4534  16C0  082E               	movf	??___ftmul,w
  4535  16C1  00F3               	movwf	___ftpack@exp
  4536  16C2  0837               	movf	___ftmul@sign,w
  4537  16C3  00AF               	movwf	??___ftmul+1
  4538  16C4  082F               	movf	??___ftmul+1,w
  4539  16C5  00F4               	movwf	___ftpack@sign
  4540  16C6  160A  118A  242A  160A  118A  	fcall	___ftpack
  4541  16CB  0870               	movf	?___ftpack,w
  4542  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  4543  16CD  1303               	bcf	3,6	;RP1=0, select bank0
  4544  16CE  00A8               	movwf	?___ftmul
  4545  16CF  0871               	movf	?___ftpack+1,w
  4546  16D0  00A9               	movwf	?___ftmul+1
  4547  16D1  0872               	movf	?___ftpack+2,w
  4548  16D2  00AA               	movwf	?___ftmul+2
  4549  16D3                     l731:
  4550  16D3  0008               	return
  4551  16D4                     __end_of___ftmul:
  4552                           
  4553                           	psect	text12
  4554  1EA2                     __ptext12:	
  4555 ;; *************** function ___bmul *****************
  4556 ;; Defined at:
  4557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  multiplier      1    wreg     unsigned char 
  4560 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4563 ;;  product         1    6[BANK0 ] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      unsigned char 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         0       1       0       0       0
  4574 ;;      Locals:         0       2       0       0       0
  4575 ;;      Temps:          0       1       0       0       0
  4576 ;;      Totals:         0       4       0       0       0
  4577 ;;Total ram usage:        4 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_fround
  4583 ;;		_scale
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function ___bmul
  4589  1EA2                     ___bmul:
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4593                           ;___bmul@multiplier stored from wreg
  4594  1EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4595  1EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4596  1EA4  00A7               	movwf	___bmul@multiplier
  4597  1EA5                     l2132:
  4598  1EA5  01A6               	clrf	___bmul@product
  4599  1EA6                     l2134:
  4600  1EA6  1C27               	btfss	___bmul@multiplier,0
  4601  1EA7  2EA9               	goto	u2471
  4602  1EA8  2EAA               	goto	u2470
  4603  1EA9                     u2471:
  4604  1EA9  2EAE               	goto	l2138
  4605  1EAA                     u2470:
  4606  1EAA                     l2136:
  4607  1EAA  0824               	movf	___bmul@multiplicand,w
  4608  1EAB  00A5               	movwf	??___bmul
  4609  1EAC  0825               	movf	??___bmul,w
  4610  1EAD  07A6               	addwf	___bmul@product,f
  4611  1EAE                     l2138:
  4612  1EAE  1003               	clrc
  4613  1EAF  0DA4               	rlf	___bmul@multiplicand,f
  4614  1EB0                     l2140:
  4615  1EB0  1003               	clrc
  4616  1EB1  0CA7               	rrf	___bmul@multiplier,f
  4617  1EB2  0827               	movf	___bmul@multiplier,w
  4618  1EB3  1D03               	btfss	3,2
  4619  1EB4  2EB6               	goto	u2481
  4620  1EB5  2EB7               	goto	u2480
  4621  1EB6                     u2481:
  4622  1EB6  2EA6               	goto	l2134
  4623  1EB7                     u2480:
  4624  1EB7                     l2142:
  4625  1EB7  0826               	movf	___bmul@product,w
  4626  1EB8                     l448:
  4627  1EB8  0008               	return
  4628  1EB9                     __end_of___bmul:
  4629                           
  4630                           	psect	text13
  4631  1532                     __ptext13:	
  4632 ;; *************** function __tdiv_to_l_ *****************
  4633 ;; Defined at:
  4634 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  f1              3    0[COMMON] float 
  4637 ;;  f2              3    3[COMMON] float 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  quot            4    0[BANK0 ] unsigned long 
  4640 ;;  exp1            1    5[BANK0 ] unsigned char 
  4641 ;;  cntr            1    4[BANK0 ] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  4    0[COMMON] unsigned long 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4651 ;;      Params:         6       0       0       0       0
  4652 ;;      Locals:         0       6       0       0       0
  4653 ;;      Temps:          4       0       0       0       0
  4654 ;;      Totals:        10       6       0       0       0
  4655 ;;Total ram usage:       16 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_sprintf
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function __tdiv_to_l_
  4666  1532                     __tdiv_to_l_:
  4667  1532                     l2520:	
  4668                           ;incstack = 0
  4669                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4670                           
  4671  1532  0870               	movf	__tdiv_to_l_@f1,w
  4672  1533  00F6               	movwf	??__tdiv_to_l_
  4673  1534  0871               	movf	__tdiv_to_l_@f1+1,w
  4674  1535  00F7               	movwf	??__tdiv_to_l_+1
  4675  1536  0872               	movf	__tdiv_to_l_@f1+2,w
  4676  1537  00F8               	movwf	??__tdiv_to_l_+2
  4677  1538  1003               	clrc
  4678  1539  0D77               	rlf	??__tdiv_to_l_+1,w
  4679  153A  0D78               	rlf	??__tdiv_to_l_+2,w
  4680  153B  00F9               	movwf	??__tdiv_to_l_+3
  4681  153C  0879               	movf	??__tdiv_to_l_+3,w
  4682  153D  1283               	bcf	3,5	;RP0=0, select bank0
  4683  153E  1303               	bcf	3,6	;RP1=0, select bank0
  4684  153F  00A5               	movwf	__tdiv_to_l_@exp1
  4685  1540  0825               	movf	__tdiv_to_l_@exp1,w
  4686  1541  1D03               	btfss	3,2
  4687  1542  2D44               	goto	u3301
  4688  1543  2D45               	goto	u3300
  4689  1544                     u3301:
  4690  1544  2D4E               	goto	l2526
  4691  1545                     u3300:
  4692  1545                     l2522:
  4693  1545  3000               	movlw	0
  4694  1546  00F3               	movwf	?__tdiv_to_l_+3
  4695  1547  3000               	movlw	0
  4696  1548  00F2               	movwf	?__tdiv_to_l_+2
  4697  1549  3000               	movlw	0
  4698  154A  00F1               	movwf	?__tdiv_to_l_+1
  4699  154B  3000               	movlw	0
  4700  154C  00F0               	movwf	?__tdiv_to_l_
  4701  154D  2DEE               	goto	l707
  4702  154E                     l2526:
  4703  154E  0873               	movf	__tdiv_to_l_@f2,w
  4704  154F  00F6               	movwf	??__tdiv_to_l_
  4705  1550  0874               	movf	__tdiv_to_l_@f2+1,w
  4706  1551  00F7               	movwf	??__tdiv_to_l_+1
  4707  1552  0875               	movf	__tdiv_to_l_@f2+2,w
  4708  1553  00F8               	movwf	??__tdiv_to_l_+2
  4709  1554  1003               	clrc
  4710  1555  0D77               	rlf	??__tdiv_to_l_+1,w
  4711  1556  0D78               	rlf	??__tdiv_to_l_+2,w
  4712  1557  00F9               	movwf	??__tdiv_to_l_+3
  4713  1558  0879               	movf	??__tdiv_to_l_+3,w
  4714  1559  00A4               	movwf	__tdiv_to_l_@cntr
  4715  155A  0824               	movf	__tdiv_to_l_@cntr,w
  4716  155B  1D03               	btfss	3,2
  4717  155C  2D5E               	goto	u3311
  4718  155D  2D5F               	goto	u3310
  4719  155E                     u3311:
  4720  155E  2D60               	goto	l708
  4721  155F                     u3310:
  4722  155F  2D45               	goto	l2522
  4723  1560                     l708:
  4724  1560  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4725  1561                     l2532:
  4726  1561  30FF               	movlw	255
  4727  1562  05F0               	andwf	__tdiv_to_l_@f1,f
  4728  1563  30FF               	movlw	255
  4729  1564  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4730  1565  3000               	movlw	0
  4731  1566  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4732  1567                     l2534:
  4733  1567  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4734  1568  30FF               	movlw	255
  4735  1569  05F3               	andwf	__tdiv_to_l_@f2,f
  4736  156A  30FF               	movlw	255
  4737  156B  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4738  156C  3000               	movlw	0
  4739  156D  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4740  156E  3000               	movlw	0
  4741  156F  00A3               	movwf	__tdiv_to_l_@quot+3
  4742  1570  3000               	movlw	0
  4743  1571  00A2               	movwf	__tdiv_to_l_@quot+2
  4744  1572  3000               	movlw	0
  4745  1573  00A1               	movwf	__tdiv_to_l_@quot+1
  4746  1574  3000               	movlw	0
  4747  1575  00A0               	movwf	__tdiv_to_l_@quot
  4748  1576                     l2536:
  4749  1576  307F               	movlw	127
  4750  1577  02A5               	subwf	__tdiv_to_l_@exp1,f
  4751  1578                     l2538:
  4752  1578  3098               	movlw	152
  4753  1579  0724               	addwf	__tdiv_to_l_@cntr,w
  4754  157A  00F6               	movwf	??__tdiv_to_l_
  4755  157B  0876               	movf	??__tdiv_to_l_,w
  4756  157C  02A5               	subwf	__tdiv_to_l_@exp1,f
  4757  157D  3018               	movlw	24
  4758  157E  00F6               	movwf	??__tdiv_to_l_
  4759  157F  0876               	movf	??__tdiv_to_l_,w
  4760  1580  00A4               	movwf	__tdiv_to_l_@cntr
  4761  1581                     l2540:
  4762  1581  3001               	movlw	1
  4763  1582  00F6               	movwf	??__tdiv_to_l_
  4764  1583                     u3325:
  4765  1583  1003               	clrc
  4766  1584  0DA0               	rlf	__tdiv_to_l_@quot,f
  4767  1585  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4768  1586  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4769  1587  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4770  1588  0BF6               	decfsz	??__tdiv_to_l_,f
  4771  1589  2D83               	goto	u3325
  4772  158A                     l2542:
  4773  158A  0875               	movf	__tdiv_to_l_@f2+2,w
  4774  158B  0272               	subwf	__tdiv_to_l_@f1+2,w
  4775  158C  1D03               	skipz
  4776  158D  2D94               	goto	u3335
  4777  158E  0874               	movf	__tdiv_to_l_@f2+1,w
  4778  158F  0271               	subwf	__tdiv_to_l_@f1+1,w
  4779  1590  1D03               	skipz
  4780  1591  2D94               	goto	u3335
  4781  1592  0873               	movf	__tdiv_to_l_@f2,w
  4782  1593  0270               	subwf	__tdiv_to_l_@f1,w
  4783  1594                     u3335:
  4784  1594  1C03               	skipc
  4785  1595  2D97               	goto	u3331
  4786  1596  2D98               	goto	u3330
  4787  1597                     u3331:
  4788  1597  2DA3               	goto	l2548
  4789  1598                     u3330:
  4790  1598                     l2544:
  4791  1598  0873               	movf	__tdiv_to_l_@f2,w
  4792  1599  02F0               	subwf	__tdiv_to_l_@f1,f
  4793  159A  0874               	movf	__tdiv_to_l_@f2+1,w
  4794  159B  1C03               	skipc
  4795  159C  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4796  159D  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4797  159E  0875               	movf	__tdiv_to_l_@f2+2,w
  4798  159F  1C03               	skipc
  4799  15A0  0A75               	incf	__tdiv_to_l_@f2+2,w
  4800  15A1  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4801  15A2                     l2546:
  4802  15A2  1420               	bsf	__tdiv_to_l_@quot,0
  4803  15A3                     l2548:
  4804  15A3  3001               	movlw	1
  4805  15A4                     u3345:
  4806  15A4  1003               	clrc
  4807  15A5  0DF0               	rlf	__tdiv_to_l_@f1,f
  4808  15A6  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4809  15A7  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4810  15A8  3EFF               	addlw	-1
  4811  15A9  1D03               	skipz
  4812  15AA  2DA4               	goto	u3345
  4813  15AB                     l2550:
  4814  15AB  3001               	movlw	1
  4815  15AC  02A4               	subwf	__tdiv_to_l_@cntr,f
  4816  15AD  1D03               	btfss	3,2
  4817  15AE  2DB0               	goto	u3351
  4818  15AF  2DB1               	goto	u3350
  4819  15B0                     u3351:
  4820  15B0  2D81               	goto	l2540
  4821  15B1                     u3350:
  4822  15B1                     l711:
  4823  15B1  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4824  15B2  2DB4               	goto	u3361
  4825  15B3  2DB5               	goto	u3360
  4826  15B4                     u3361:
  4827  15B4  2DCF               	goto	l2560
  4828  15B5                     u3360:
  4829  15B5                     l2552:
  4830  15B5  0825               	movf	__tdiv_to_l_@exp1,w
  4831  15B6  3A80               	xorlw	128
  4832  15B7  3E97               	addlw	151
  4833  15B8  1803               	skipnc
  4834  15B9  2DBB               	goto	u3371
  4835  15BA  2DBC               	goto	u3370
  4836  15BB                     u3371:
  4837  15BB  2DBD               	goto	l2558
  4838  15BC                     u3370:
  4839  15BC  2D45               	goto	l2522
  4840  15BD                     l2558:
  4841  15BD  3001               	movlw	1
  4842  15BE                     u3385:
  4843  15BE  1003               	clrc
  4844  15BF  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4845  15C0  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4846  15C1  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4847  15C2  0CA0               	rrf	__tdiv_to_l_@quot,f
  4848  15C3  3EFF               	addlw	-1
  4849  15C4  1D03               	skipz
  4850  15C5  2DBE               	goto	u3385
  4851  15C6  3001               	movlw	1
  4852  15C7  00F6               	movwf	??__tdiv_to_l_
  4853  15C8  0876               	movf	??__tdiv_to_l_,w
  4854  15C9  07A5               	addwf	__tdiv_to_l_@exp1,f
  4855  15CA  1D03               	btfss	3,2
  4856  15CB  2DCD               	goto	u3391
  4857  15CC  2DCE               	goto	u3390
  4858  15CD                     u3391:
  4859  15CD  2DBD               	goto	l2558
  4860  15CE                     u3390:
  4861  15CE  2DE6               	goto	l2568
  4862  15CF                     l2560:
  4863  15CF  3018               	movlw	24
  4864  15D0  0225               	subwf	__tdiv_to_l_@exp1,w
  4865  15D1  1C03               	skipc
  4866  15D2  2DD4               	goto	u3401
  4867  15D3  2DD5               	goto	u3400
  4868  15D4                     u3401:
  4869  15D4  2DE1               	goto	l718
  4870  15D5                     u3400:
  4871  15D5  2D45               	goto	l2522
  4872  15D6                     l2566:
  4873  15D6  3001               	movlw	1
  4874  15D7  00F6               	movwf	??__tdiv_to_l_
  4875  15D8                     u3415:
  4876  15D8  1003               	clrc
  4877  15D9  0DA0               	rlf	__tdiv_to_l_@quot,f
  4878  15DA  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4879  15DB  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4880  15DC  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4881  15DD  0BF6               	decfsz	??__tdiv_to_l_,f
  4882  15DE  2DD8               	goto	u3415
  4883  15DF  3001               	movlw	1
  4884  15E0  02A5               	subwf	__tdiv_to_l_@exp1,f
  4885  15E1                     l718:
  4886  15E1  0825               	movf	__tdiv_to_l_@exp1,w
  4887  15E2  1D03               	btfss	3,2
  4888  15E3  2DE5               	goto	u3421
  4889  15E4  2DE6               	goto	u3420
  4890  15E5                     u3421:
  4891  15E5  2DD6               	goto	l2566
  4892  15E6                     u3420:
  4893  15E6                     l2568:
  4894  15E6  0823               	movf	__tdiv_to_l_@quot+3,w
  4895  15E7  00F3               	movwf	?__tdiv_to_l_+3
  4896  15E8  0822               	movf	__tdiv_to_l_@quot+2,w
  4897  15E9  00F2               	movwf	?__tdiv_to_l_+2
  4898  15EA  0821               	movf	__tdiv_to_l_@quot+1,w
  4899  15EB  00F1               	movwf	?__tdiv_to_l_+1
  4900  15EC  0820               	movf	__tdiv_to_l_@quot,w
  4901  15ED  00F0               	movwf	?__tdiv_to_l_
  4902  15EE                     l707:
  4903  15EE  0008               	return
  4904  15EF                     __end_of__tdiv_to_l_:
  4905                           
  4906                           	psect	text14
  4907  16D4                     __ptext14:	
  4908 ;; *************** function __div_to_l_ *****************
  4909 ;; Defined at:
  4910 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  f1              3    0[COMMON] unsigned long 
  4913 ;;  f2              3    3[COMMON] unsigned long 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  quot            4    0[BANK0 ] unsigned long 
  4916 ;;  exp1            1    5[BANK0 ] unsigned char 
  4917 ;;  cntr            1    4[BANK0 ] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  4    0[COMMON] unsigned long 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4927 ;;      Params:         6       0       0       0       0
  4928 ;;      Locals:         0       6       0       0       0
  4929 ;;      Temps:          8       0       0       0       0
  4930 ;;      Totals:        14       6       0       0       0
  4931 ;;Total ram usage:       20 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_sprintf
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function __div_to_l_
  4942  16D4                     __div_to_l_:
  4943  16D4                     l2572:	
  4944                           ;incstack = 0
  4945                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4946                           
  4947  16D4  3070               	movlw	low (__div_to_l_@f1| 0)
  4948  16D5  0084               	movwf	4
  4949  16D6  0800               	movf	0,w
  4950  16D7  00F6               	movwf	??__div_to_l_
  4951  16D8  0A84               	incf	4,f
  4952  16D9  0800               	movf	0,w
  4953  16DA  00F7               	movwf	??__div_to_l_+1
  4954  16DB  0A84               	incf	4,f
  4955  16DC  0800               	movf	0,w
  4956  16DD  00F8               	movwf	??__div_to_l_+2
  4957  16DE  0A84               	incf	4,f
  4958  16DF  0800               	movf	0,w
  4959  16E0  00F9               	movwf	??__div_to_l_+3
  4960  16E1  1003               	clrc
  4961  16E2  0D78               	rlf	??__div_to_l_+2,w
  4962  16E3  0D79               	rlf	??__div_to_l_+3,w
  4963  16E4  00FA               	movwf	??__div_to_l_+4
  4964  16E5  087A               	movf	??__div_to_l_+4,w
  4965  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  4966  16E7  1303               	bcf	3,6	;RP1=0, select bank0
  4967  16E8  00A5               	movwf	__div_to_l_@exp1
  4968  16E9  0825               	movf	__div_to_l_@exp1,w
  4969  16EA  1D03               	btfss	3,2
  4970  16EB  2EED               	goto	u3431
  4971  16EC  2EEE               	goto	u3430
  4972  16ED                     u3431:
  4973  16ED  2EF7               	goto	l2578
  4974  16EE                     u3430:
  4975  16EE                     l2574:
  4976  16EE  3000               	movlw	0
  4977  16EF  00F3               	movwf	?__div_to_l_+3
  4978  16F0  3000               	movlw	0
  4979  16F1  00F2               	movwf	?__div_to_l_+2
  4980  16F2  3000               	movlw	0
  4981  16F3  00F1               	movwf	?__div_to_l_+1
  4982  16F4  3000               	movlw	0
  4983  16F5  00F0               	movwf	?__div_to_l_
  4984  16F6  2FFF               	goto	l628
  4985  16F7                     l2578:
  4986  16F7  3073               	movlw	low (__div_to_l_@f2| 0)
  4987  16F8  0084               	movwf	4
  4988  16F9  0800               	movf	0,w
  4989  16FA  00F6               	movwf	??__div_to_l_
  4990  16FB  0A84               	incf	4,f
  4991  16FC  0800               	movf	0,w
  4992  16FD  00F7               	movwf	??__div_to_l_+1
  4993  16FE  0A84               	incf	4,f
  4994  16FF  0800               	movf	0,w
  4995  1700  00F8               	movwf	??__div_to_l_+2
  4996  1701  0A84               	incf	4,f
  4997  1702  0800               	movf	0,w
  4998  1703  00F9               	movwf	??__div_to_l_+3
  4999  1704  1003               	clrc
  5000  1705  0D78               	rlf	??__div_to_l_+2,w
  5001  1706  0D79               	rlf	??__div_to_l_+3,w
  5002  1707  00FA               	movwf	??__div_to_l_+4
  5003  1708  087A               	movf	??__div_to_l_+4,w
  5004  1709  00A4               	movwf	__div_to_l_@cntr
  5005  170A  0824               	movf	__div_to_l_@cntr,w
  5006  170B  1D03               	btfss	3,2
  5007  170C  2F0E               	goto	u3441
  5008  170D  2F0F               	goto	u3440
  5009  170E                     u3441:
  5010  170E  2F10               	goto	l2584
  5011  170F                     u3440:
  5012  170F  2EEE               	goto	l2574
  5013  1710                     l2584:
  5014  1710  3070               	movlw	low (__div_to_l_@f1| 0)
  5015  1711  0084               	movwf	4
  5016  1712  3000               	movlw	0
  5017  1713  0480               	iorwf	0,f
  5018  1714  0A84               	incf	4,f
  5019  1715  3000               	movlw	0
  5020  1716  0480               	iorwf	0,f
  5021  1717  0A84               	incf	4,f
  5022  1718  3080               	movlw	128
  5023  1719  0480               	iorwf	0,f
  5024  171A  0A84               	incf	4,f
  5025  171B  3000               	movlw	0
  5026  171C  0480               	iorwf	0,f
  5027  171D  3070               	movlw	low (__div_to_l_@f1| 0)
  5028  171E  0084               	movwf	4
  5029  171F  30FF               	movlw	255
  5030  1720  0580               	andwf	0,f
  5031  1721  0A84               	incf	4,f
  5032  1722  30FF               	movlw	255
  5033  1723  0580               	andwf	0,f
  5034  1724  0A84               	incf	4,f
  5035  1725  30FF               	movlw	255
  5036  1726  0580               	andwf	0,f
  5037  1727  0A84               	incf	4,f
  5038  1728  3000               	movlw	0
  5039  1729  0580               	andwf	0,f
  5040  172A  3073               	movlw	low (__div_to_l_@f2| 0)
  5041  172B  0084               	movwf	4
  5042  172C  3000               	movlw	0
  5043  172D  0480               	iorwf	0,f
  5044  172E  0A84               	incf	4,f
  5045  172F  3000               	movlw	0
  5046  1730  0480               	iorwf	0,f
  5047  1731  0A84               	incf	4,f
  5048  1732  3080               	movlw	128
  5049  1733  0480               	iorwf	0,f
  5050  1734  0A84               	incf	4,f
  5051  1735  3000               	movlw	0
  5052  1736  0480               	iorwf	0,f
  5053  1737  3073               	movlw	low (__div_to_l_@f2| 0)
  5054  1738  0084               	movwf	4
  5055  1739  30FF               	movlw	255
  5056  173A  0580               	andwf	0,f
  5057  173B  0A84               	incf	4,f
  5058  173C  30FF               	movlw	255
  5059  173D  0580               	andwf	0,f
  5060  173E  0A84               	incf	4,f
  5061  173F  30FF               	movlw	255
  5062  1740  0580               	andwf	0,f
  5063  1741  0A84               	incf	4,f
  5064  1742  3000               	movlw	0
  5065  1743  0580               	andwf	0,f
  5066  1744                     l2586:
  5067  1744  3000               	movlw	0
  5068  1745  00A3               	movwf	__div_to_l_@quot+3
  5069  1746  3000               	movlw	0
  5070  1747  00A2               	movwf	__div_to_l_@quot+2
  5071  1748  3000               	movlw	0
  5072  1749  00A1               	movwf	__div_to_l_@quot+1
  5073  174A  3000               	movlw	0
  5074  174B  00A0               	movwf	__div_to_l_@quot
  5075  174C                     l2588:
  5076  174C  307F               	movlw	127
  5077  174D  02A5               	subwf	__div_to_l_@exp1,f
  5078  174E                     l2590:
  5079  174E  30A0               	movlw	160
  5080  174F  0724               	addwf	__div_to_l_@cntr,w
  5081  1750  00F6               	movwf	??__div_to_l_
  5082  1751  0876               	movf	??__div_to_l_,w
  5083  1752  02A5               	subwf	__div_to_l_@exp1,f
  5084  1753                     l2592:
  5085  1753  3020               	movlw	32
  5086  1754  00F6               	movwf	??__div_to_l_
  5087  1755  0876               	movf	??__div_to_l_,w
  5088  1756  00A4               	movwf	__div_to_l_@cntr
  5089  1757                     l2594:
  5090  1757  3001               	movlw	1
  5091  1758  00F6               	movwf	??__div_to_l_
  5092  1759                     u3455:
  5093  1759  1003               	clrc
  5094  175A  0DA0               	rlf	__div_to_l_@quot,f
  5095  175B  0DA1               	rlf	__div_to_l_@quot+1,f
  5096  175C  0DA2               	rlf	__div_to_l_@quot+2,f
  5097  175D  0DA3               	rlf	__div_to_l_@quot+3,f
  5098  175E  0BF6               	decfsz	??__div_to_l_,f
  5099  175F  2F59               	goto	u3455
  5100  1760                     l2596:
  5101  1760  3073               	movlw	low (__div_to_l_@f2| 0)
  5102  1761  0084               	movwf	4
  5103  1762  0800               	movf	0,w
  5104  1763  00F6               	movwf	??__div_to_l_
  5105  1764  0A84               	incf	4,f
  5106  1765  0800               	movf	0,w
  5107  1766  00F7               	movwf	??__div_to_l_+1
  5108  1767  0A84               	incf	4,f
  5109  1768  0800               	movf	0,w
  5110  1769  00F8               	movwf	??__div_to_l_+2
  5111  176A  0A84               	incf	4,f
  5112  176B  0800               	movf	0,w
  5113  176C  00F9               	movwf	??__div_to_l_+3
  5114  176D  3070               	movlw	low (__div_to_l_@f1| 0)
  5115  176E  0084               	movwf	4
  5116  176F  0800               	movf	0,w
  5117  1770  00FA               	movwf	??__div_to_l_+4
  5118  1771  0A84               	incf	4,f
  5119  1772  0800               	movf	0,w
  5120  1773  00FB               	movwf	??__div_to_l_+5
  5121  1774  0A84               	incf	4,f
  5122  1775  0800               	movf	0,w
  5123  1776  00FC               	movwf	??__div_to_l_+6
  5124  1777  0A84               	incf	4,f
  5125  1778  0800               	movf	0,w
  5126  1779  00FD               	movwf	??__div_to_l_+7
  5127  177A  0879               	movf	??__div_to_l_+3,w
  5128  177B  027D               	subwf	??__div_to_l_+7,w
  5129  177C  1D03               	skipz
  5130  177D  2F88               	goto	u3465
  5131  177E  0878               	movf	??__div_to_l_+2,w
  5132  177F  027C               	subwf	??__div_to_l_+6,w
  5133  1780  1D03               	skipz
  5134  1781  2F88               	goto	u3465
  5135  1782  0877               	movf	??__div_to_l_+1,w
  5136  1783  027B               	subwf	??__div_to_l_+5,w
  5137  1784  1D03               	skipz
  5138  1785  2F88               	goto	u3465
  5139  1786  0876               	movf	??__div_to_l_,w
  5140  1787  027A               	subwf	??__div_to_l_+4,w
  5141  1788                     u3465:
  5142  1788  1C03               	skipc
  5143  1789  2F8B               	goto	u3461
  5144  178A  2F8C               	goto	u3460
  5145  178B                     u3461:
  5146  178B  2FAF               	goto	l631
  5147  178C                     u3460:
  5148  178C                     l2598:
  5149  178C  3073               	movlw	low (__div_to_l_@f2| 0)
  5150  178D  0084               	movwf	4
  5151  178E  0800               	movf	0,w
  5152  178F  00F6               	movwf	??__div_to_l_
  5153  1790  0A84               	incf	4,f
  5154  1791  0800               	movf	0,w
  5155  1792  00F7               	movwf	??__div_to_l_+1
  5156  1793  0A84               	incf	4,f
  5157  1794  0800               	movf	0,w
  5158  1795  00F8               	movwf	??__div_to_l_+2
  5159  1796  0A84               	incf	4,f
  5160  1797  0800               	movf	0,w
  5161  1798  00F9               	movwf	??__div_to_l_+3
  5162  1799  3070               	movlw	low (__div_to_l_@f1| 0)
  5163  179A  0084               	movwf	4
  5164  179B  0876               	movf	??__div_to_l_,w
  5165  179C  0280               	subwf	0,f
  5166  179D  0A84               	incf	4,f
  5167  179E  0877               	movf	??__div_to_l_+1,w
  5168  179F  1C03               	skipc
  5169  17A0  0F77               	incfsz	??__div_to_l_+1,w
  5170  17A1  0280               	subwf	0,f
  5171  17A2  0A84               	incf	4,f
  5172  17A3  0878               	movf	??__div_to_l_+2,w
  5173  17A4  1C03               	skipc
  5174  17A5  0F78               	incfsz	??__div_to_l_+2,w
  5175  17A6  0280               	subwf	0,f
  5176  17A7  0A84               	incf	4,f
  5177  17A8  0879               	movf	??__div_to_l_+3,w
  5178  17A9  1C03               	skipc
  5179  17AA  0A79               	incf	??__div_to_l_+3,w
  5180  17AB  0280               	subwf	0,f
  5181  17AC  3003               	movlw	3
  5182  17AD  0284               	subwf	4,f
  5183  17AE                     l2600:
  5184  17AE  1420               	bsf	__div_to_l_@quot,0
  5185  17AF                     l631:
  5186  17AF  3070               	movlw	low (__div_to_l_@f1| 0)
  5187  17B0  0084               	movwf	4
  5188  17B1  1003               	clrc
  5189  17B2  0D80               	rlf	0,f
  5190  17B3  0A84               	incf	4,f
  5191  17B4  0D80               	rlf	0,f
  5192  17B5  0A84               	incf	4,f
  5193  17B6  0D80               	rlf	0,f
  5194  17B7  0A84               	incf	4,f
  5195  17B8  0D80               	rlf	0,f
  5196  17B9  0384               	decf	4,f
  5197  17BA  0384               	decf	4,f
  5198  17BB  0384               	decf	4,f
  5199  17BC                     l2602:
  5200  17BC  3001               	movlw	1
  5201  17BD  02A4               	subwf	__div_to_l_@cntr,f
  5202  17BE  1D03               	btfss	3,2
  5203  17BF  2FC1               	goto	u3471
  5204  17C0  2FC2               	goto	u3470
  5205  17C1                     u3471:
  5206  17C1  2F57               	goto	l2594
  5207  17C2                     u3470:
  5208  17C2                     l632:
  5209  17C2  1FA5               	btfss	__div_to_l_@exp1,7
  5210  17C3  2FC5               	goto	u3481
  5211  17C4  2FC6               	goto	u3480
  5212  17C5                     u3481:
  5213  17C5  2FE0               	goto	l2612
  5214  17C6                     u3480:
  5215  17C6                     l2604:
  5216  17C6  0825               	movf	__div_to_l_@exp1,w
  5217  17C7  3A80               	xorlw	128
  5218  17C8  3E9F               	addlw	159
  5219  17C9  1803               	skipnc
  5220  17CA  2FCC               	goto	u3491
  5221  17CB  2FCD               	goto	u3490
  5222  17CC                     u3491:
  5223  17CC  2FCE               	goto	l2610
  5224  17CD                     u3490:
  5225  17CD  2EEE               	goto	l2574
  5226  17CE                     l2610:
  5227  17CE  3001               	movlw	1
  5228  17CF                     u3505:
  5229  17CF  1003               	clrc
  5230  17D0  0CA3               	rrf	__div_to_l_@quot+3,f
  5231  17D1  0CA2               	rrf	__div_to_l_@quot+2,f
  5232  17D2  0CA1               	rrf	__div_to_l_@quot+1,f
  5233  17D3  0CA0               	rrf	__div_to_l_@quot,f
  5234  17D4  3EFF               	addlw	-1
  5235  17D5  1D03               	skipz
  5236  17D6  2FCF               	goto	u3505
  5237  17D7  3001               	movlw	1
  5238  17D8  00F6               	movwf	??__div_to_l_
  5239  17D9  0876               	movf	??__div_to_l_,w
  5240  17DA  07A5               	addwf	__div_to_l_@exp1,f
  5241  17DB  1D03               	btfss	3,2
  5242  17DC  2FDE               	goto	u3511
  5243  17DD  2FDF               	goto	u3510
  5244  17DE                     u3511:
  5245  17DE  2FCE               	goto	l2610
  5246  17DF                     u3510:
  5247  17DF  2FF7               	goto	l2620
  5248  17E0                     l2612:
  5249  17E0  3020               	movlw	32
  5250  17E1  0225               	subwf	__div_to_l_@exp1,w
  5251  17E2  1C03               	skipc
  5252  17E3  2FE5               	goto	u3521
  5253  17E4  2FE6               	goto	u3520
  5254  17E5                     u3521:
  5255  17E5  2FF2               	goto	l639
  5256  17E6                     u3520:
  5257  17E6  2EEE               	goto	l2574
  5258  17E7                     l2618:
  5259  17E7  3001               	movlw	1
  5260  17E8  00F6               	movwf	??__div_to_l_
  5261  17E9                     u3535:
  5262  17E9  1003               	clrc
  5263  17EA  0DA0               	rlf	__div_to_l_@quot,f
  5264  17EB  0DA1               	rlf	__div_to_l_@quot+1,f
  5265  17EC  0DA2               	rlf	__div_to_l_@quot+2,f
  5266  17ED  0DA3               	rlf	__div_to_l_@quot+3,f
  5267  17EE  0BF6               	decfsz	??__div_to_l_,f
  5268  17EF  2FE9               	goto	u3535
  5269  17F0  3001               	movlw	1
  5270  17F1  02A5               	subwf	__div_to_l_@exp1,f
  5271  17F2                     l639:
  5272  17F2  0825               	movf	__div_to_l_@exp1,w
  5273  17F3  1D03               	btfss	3,2
  5274  17F4  2FF6               	goto	u3541
  5275  17F5  2FF7               	goto	u3540
  5276  17F6                     u3541:
  5277  17F6  2FE7               	goto	l2618
  5278  17F7                     u3540:
  5279  17F7                     l2620:
  5280  17F7  0823               	movf	__div_to_l_@quot+3,w
  5281  17F8  00F3               	movwf	?__div_to_l_+3
  5282  17F9  0822               	movf	__div_to_l_@quot+2,w
  5283  17FA  00F2               	movwf	?__div_to_l_+2
  5284  17FB  0821               	movf	__div_to_l_@quot+1,w
  5285  17FC  00F1               	movwf	?__div_to_l_+1
  5286  17FD  0820               	movf	__div_to_l_@quot,w
  5287  17FE  00F0               	movwf	?__div_to_l_
  5288  17FF                     l628:
  5289  17FF  0008               	return
  5290  1800                     __end_of__div_to_l_:
  5291                           
  5292                           	psect	text15
  5293  1F81                     __ptext15:	
  5294 ;; *************** function ___wmul *****************
  5295 ;; Defined at:
  5296 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  multiplier      2    0[COMMON] unsigned int 
  5299 ;;  multiplicand    2    2[COMMON] unsigned int 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  product         2    4[COMMON] unsigned int 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  2    0[COMMON] unsigned int 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5311 ;;      Params:         4       0       0       0       0
  5312 ;;      Locals:         2       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0
  5314 ;;      Totals:         6       0       0       0       0
  5315 ;;Total ram usage:        6 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_sprintf
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function ___wmul
  5326  1F81                     ___wmul:
  5327  1F81                     l2624:	
  5328                           ;incstack = 0
  5329                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5330                           
  5331  1F81  01F4               	clrf	___wmul@product
  5332  1F82  01F5               	clrf	___wmul@product+1
  5333  1F83                     l2626:
  5334  1F83  1C70               	btfss	___wmul@multiplier,0
  5335  1F84  2F86               	goto	u3551
  5336  1F85  2F87               	goto	u3550
  5337  1F86                     u3551:
  5338  1F86  2F8D               	goto	l422
  5339  1F87                     u3550:
  5340  1F87                     l2628:
  5341  1F87  0872               	movf	___wmul@multiplicand,w
  5342  1F88  07F4               	addwf	___wmul@product,f
  5343  1F89  1803               	skipnc
  5344  1F8A  0AF5               	incf	___wmul@product+1,f
  5345  1F8B  0873               	movf	___wmul@multiplicand+1,w
  5346  1F8C  07F5               	addwf	___wmul@product+1,f
  5347  1F8D                     l422:
  5348  1F8D  3001               	movlw	1
  5349  1F8E                     u3565:
  5350  1F8E  1003               	clrc
  5351  1F8F  0DF2               	rlf	___wmul@multiplicand,f
  5352  1F90  0DF3               	rlf	___wmul@multiplicand+1,f
  5353  1F91  3EFF               	addlw	-1
  5354  1F92  1D03               	skipz
  5355  1F93  2F8E               	goto	u3565
  5356  1F94                     l2630:
  5357  1F94  3001               	movlw	1
  5358  1F95                     u3575:
  5359  1F95  1003               	clrc
  5360  1F96  0CF1               	rrf	___wmul@multiplier+1,f
  5361  1F97  0CF0               	rrf	___wmul@multiplier,f
  5362  1F98  3EFF               	addlw	-1
  5363  1F99  1D03               	skipz
  5364  1F9A  2F95               	goto	u3575
  5365  1F9B                     l2632:
  5366  1F9B  0870               	movf	___wmul@multiplier,w
  5367  1F9C  0471               	iorwf	___wmul@multiplier+1,w
  5368  1F9D  1D03               	btfss	3,2
  5369  1F9E  2FA0               	goto	u3581
  5370  1F9F  2FA1               	goto	u3580
  5371  1FA0                     u3581:
  5372  1FA0  2F83               	goto	l2626
  5373  1FA1                     u3580:
  5374  1FA1                     l2634:
  5375  1FA1  0875               	movf	___wmul@product+1,w
  5376  1FA2  00F1               	movwf	?___wmul+1
  5377  1FA3  0874               	movf	___wmul@product,w
  5378  1FA4  00F0               	movwf	?___wmul
  5379  1FA5                     l424:
  5380  1FA5  0008               	return
  5381  1FA6                     __end_of___wmul:
  5382                           
  5383                           	psect	text16
  5384  1FD1                     __ptext16:	
  5385 ;; *************** function ___lltoft *****************
  5386 ;; Defined at:
  5387 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  c               4    8[COMMON] unsigned long 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  exp             1   13[COMMON] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  3    8[COMMON] float 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0, pclath, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5401 ;;      Params:         4       0       0       0       0
  5402 ;;      Locals:         1       0       0       0       0
  5403 ;;      Temps:          1       0       0       0       0
  5404 ;;      Totals:         6       0       0       0       0
  5405 ;;Total ram usage:        6 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    1
  5408 ;; This function calls:
  5409 ;;		___ftpack
  5410 ;; This function is called by:
  5411 ;;		_sprintf
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function ___lltoft
  5417  1FD1                     ___lltoft:
  5418  1FD1                     l2760:	
  5419                           ;incstack = 0
  5420                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5421                           
  5422  1FD1  308E               	movlw	142
  5423  1FD2  00FC               	movwf	??___lltoft
  5424  1FD3  087C               	movf	??___lltoft,w
  5425  1FD4  00FD               	movwf	___lltoft@exp
  5426  1FD5  2FE3               	goto	l2764
  5427  1FD6                     l2762:
  5428  1FD6  3001               	movlw	1
  5429  1FD7                     u3875:
  5430  1FD7  1003               	clrc
  5431  1FD8  0CFB               	rrf	___lltoft@c+3,f
  5432  1FD9  0CFA               	rrf	___lltoft@c+2,f
  5433  1FDA  0CF9               	rrf	___lltoft@c+1,f
  5434  1FDB  0CF8               	rrf	___lltoft@c,f
  5435  1FDC  3EFF               	addlw	-1
  5436  1FDD  1D03               	skipz
  5437  1FDE  2FD7               	goto	u3875
  5438  1FDF  3001               	movlw	1
  5439  1FE0  00FC               	movwf	??___lltoft
  5440  1FE1  087C               	movf	??___lltoft,w
  5441  1FE2  07FD               	addwf	___lltoft@exp,f
  5442  1FE3                     l2764:
  5443  1FE3  30FF               	movlw	255
  5444  1FE4  057B               	andwf	___lltoft@c+3,w
  5445  1FE5  1D03               	btfss	3,2
  5446  1FE6  2FE8               	goto	u3881
  5447  1FE7  2FE9               	goto	u3880
  5448  1FE8                     u3881:
  5449  1FE8  2FD6               	goto	l2762
  5450  1FE9                     u3880:
  5451  1FE9                     l2766:
  5452  1FE9  0878               	movf	___lltoft@c,w
  5453  1FEA  00F0               	movwf	___ftpack@arg
  5454  1FEB  0879               	movf	___lltoft@c+1,w
  5455  1FEC  00F1               	movwf	___ftpack@arg+1
  5456  1FED  087A               	movf	___lltoft@c+2,w
  5457  1FEE  00F2               	movwf	___ftpack@arg+2
  5458  1FEF  087D               	movf	___lltoft@exp,w
  5459  1FF0  00FC               	movwf	??___lltoft
  5460  1FF1  087C               	movf	??___lltoft,w
  5461  1FF2  00F3               	movwf	___ftpack@exp
  5462  1FF3  01F4               	clrf	___ftpack@sign
  5463  1FF4  160A  118A  242A  160A  158A  	fcall	___ftpack
  5464  1FF9  0870               	movf	?___ftpack,w
  5465  1FFA  00F8               	movwf	?___lltoft
  5466  1FFB  0871               	movf	?___ftpack+1,w
  5467  1FFC  00F9               	movwf	?___lltoft+1
  5468  1FFD  0872               	movf	?___ftpack+2,w
  5469  1FFE  00FA               	movwf	?___lltoft+2
  5470  1FFF                     l801:
  5471  1FFF  0008               	return
  5472  2000                     __end_of___lltoft:
  5473                           
  5474                           	psect	text17
  5475  1246                     __ptext17:	
  5476 ;; *************** function ___llmod *****************
  5477 ;; Defined at:
  5478 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  divisor         4    0[BANK0 ] unsigned long 
  5481 ;;  dividend        4    4[BANK0 ] unsigned long 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  counter         1    9[BANK0 ] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  4    0[BANK0 ] unsigned long 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         0       8       0       0       0
  5494 ;;      Locals:         0       1       0       0       0
  5495 ;;      Temps:          0       1       0       0       0
  5496 ;;      Totals:         0      10       0       0       0
  5497 ;;Total ram usage:       10 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_sprintf
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function ___llmod
  5508  1246                     ___llmod:
  5509  1246                     l2740:	
  5510                           ;incstack = 0
  5511                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5512                           
  5513  1246  1283               	bcf	3,5	;RP0=0, select bank0
  5514  1247  1303               	bcf	3,6	;RP1=0, select bank0
  5515  1248  0823               	movf	___llmod@divisor+3,w
  5516  1249  0422               	iorwf	___llmod@divisor+2,w
  5517  124A  0421               	iorwf	___llmod@divisor+1,w
  5518  124B  0420               	iorwf	___llmod@divisor,w
  5519  124C  1903               	skipnz
  5520  124D  2A4F               	goto	u3811
  5521  124E  2A50               	goto	u3810
  5522  124F                     u3811:
  5523  124F  2A93               	goto	l2756
  5524  1250                     u3810:
  5525  1250                     l2742:
  5526  1250  01A9               	clrf	___llmod@counter
  5527  1251  0AA9               	incf	___llmod@counter,f
  5528  1252  2A60               	goto	l2746
  5529  1253                     l2744:
  5530  1253  3001               	movlw	1
  5531  1254  00A8               	movwf	??___llmod
  5532  1255                     u3825:
  5533  1255  1003               	clrc
  5534  1256  0DA0               	rlf	___llmod@divisor,f
  5535  1257  0DA1               	rlf	___llmod@divisor+1,f
  5536  1258  0DA2               	rlf	___llmod@divisor+2,f
  5537  1259  0DA3               	rlf	___llmod@divisor+3,f
  5538  125A  0BA8               	decfsz	??___llmod,f
  5539  125B  2A55               	goto	u3825
  5540  125C  3001               	movlw	1
  5541  125D  00A8               	movwf	??___llmod
  5542  125E  0828               	movf	??___llmod,w
  5543  125F  07A9               	addwf	___llmod@counter,f
  5544  1260                     l2746:
  5545  1260  1FA3               	btfss	___llmod@divisor+3,7
  5546  1261  2A63               	goto	u3831
  5547  1262  2A64               	goto	u3830
  5548  1263                     u3831:
  5549  1263  2A53               	goto	l2744
  5550  1264                     u3830:
  5551  1264                     l2748:
  5552  1264  0823               	movf	___llmod@divisor+3,w
  5553  1265  0227               	subwf	___llmod@dividend+3,w
  5554  1266  1D03               	skipz
  5555  1267  2A72               	goto	u3845
  5556  1268  0822               	movf	___llmod@divisor+2,w
  5557  1269  0226               	subwf	___llmod@dividend+2,w
  5558  126A  1D03               	skipz
  5559  126B  2A72               	goto	u3845
  5560  126C  0821               	movf	___llmod@divisor+1,w
  5561  126D  0225               	subwf	___llmod@dividend+1,w
  5562  126E  1D03               	skipz
  5563  126F  2A72               	goto	u3845
  5564  1270  0820               	movf	___llmod@divisor,w
  5565  1271  0224               	subwf	___llmod@dividend,w
  5566  1272                     u3845:
  5567  1272  1C03               	skipc
  5568  1273  2A75               	goto	u3841
  5569  1274  2A76               	goto	u3840
  5570  1275                     u3841:
  5571  1275  2A84               	goto	l2752
  5572  1276                     u3840:
  5573  1276                     l2750:
  5574  1276  0820               	movf	___llmod@divisor,w
  5575  1277  02A4               	subwf	___llmod@dividend,f
  5576  1278  0821               	movf	___llmod@divisor+1,w
  5577  1279  1C03               	skipc
  5578  127A  0F21               	incfsz	___llmod@divisor+1,w
  5579  127B  02A5               	subwf	___llmod@dividend+1,f
  5580  127C  0822               	movf	___llmod@divisor+2,w
  5581  127D  1C03               	skipc
  5582  127E  0F22               	incfsz	___llmod@divisor+2,w
  5583  127F  02A6               	subwf	___llmod@dividend+2,f
  5584  1280  0823               	movf	___llmod@divisor+3,w
  5585  1281  1C03               	skipc
  5586  1282  0F23               	incfsz	___llmod@divisor+3,w
  5587  1283  02A7               	subwf	___llmod@dividend+3,f
  5588  1284                     l2752:
  5589  1284  3001               	movlw	1
  5590  1285                     u3855:
  5591  1285  1003               	clrc
  5592  1286  0CA3               	rrf	___llmod@divisor+3,f
  5593  1287  0CA2               	rrf	___llmod@divisor+2,f
  5594  1288  0CA1               	rrf	___llmod@divisor+1,f
  5595  1289  0CA0               	rrf	___llmod@divisor,f
  5596  128A  3EFF               	addlw	-1
  5597  128B  1D03               	skipz
  5598  128C  2A85               	goto	u3855
  5599  128D                     l2754:
  5600  128D  3001               	movlw	1
  5601  128E  02A9               	subwf	___llmod@counter,f
  5602  128F  1D03               	btfss	3,2
  5603  1290  2A92               	goto	u3861
  5604  1291  2A93               	goto	u3860
  5605  1292                     u3861:
  5606  1292  2A64               	goto	l2748
  5607  1293                     u3860:
  5608  1293                     l2756:
  5609  1293  0827               	movf	___llmod@dividend+3,w
  5610  1294  00A3               	movwf	?___llmod+3
  5611  1295  0826               	movf	___llmod@dividend+2,w
  5612  1296  00A2               	movwf	?___llmod+2
  5613  1297  0825               	movf	___llmod@dividend+1,w
  5614  1298  00A1               	movwf	?___llmod+1
  5615  1299  0824               	movf	___llmod@dividend,w
  5616  129A  00A0               	movwf	?___llmod
  5617  129B                     l793:
  5618  129B  0008               	return
  5619  129C                     __end_of___llmod:
  5620                           
  5621                           	psect	text18
  5622  135B                     __ptext18:	
  5623 ;; *************** function ___lldiv *****************
  5624 ;; Defined at:
  5625 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  divisor         4    0[COMMON] unsigned long 
  5628 ;;  dividend        4    4[COMMON] unsigned long 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  quotient        4    9[COMMON] unsigned long 
  5631 ;;  counter         1   13[COMMON] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  4    0[COMMON] unsigned long 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5641 ;;      Params:         8       0       0       0       0
  5642 ;;      Locals:         5       0       0       0       0
  5643 ;;      Temps:          1       0       0       0       0
  5644 ;;      Totals:        14       0       0       0       0
  5645 ;;Total ram usage:       14 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_sprintf
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           
  5655                           ;psect for function ___lldiv
  5656  135B                     ___lldiv:
  5657  135B                     l2638:	
  5658                           ;incstack = 0
  5659                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5660                           
  5661  135B  3000               	movlw	0
  5662  135C  00FC               	movwf	___lldiv@quotient+3
  5663  135D  3000               	movlw	0
  5664  135E  00FB               	movwf	___lldiv@quotient+2
  5665  135F  3000               	movlw	0
  5666  1360  00FA               	movwf	___lldiv@quotient+1
  5667  1361  3000               	movlw	0
  5668  1362  00F9               	movwf	___lldiv@quotient
  5669  1363  0873               	movf	___lldiv@divisor+3,w
  5670  1364  0472               	iorwf	___lldiv@divisor+2,w
  5671  1365  0471               	iorwf	___lldiv@divisor+1,w
  5672  1366  0470               	iorwf	___lldiv@divisor,w
  5673  1367  1903               	skipnz
  5674  1368  2B6A               	goto	u3591
  5675  1369  2B6B               	goto	u3590
  5676  136A                     u3591:
  5677  136A  2BB8               	goto	l2658
  5678  136B                     u3590:
  5679  136B                     l2640:
  5680  136B  01FD               	clrf	___lldiv@counter
  5681  136C  0AFD               	incf	___lldiv@counter,f
  5682  136D  2B7B               	goto	l2644
  5683  136E                     l2642:
  5684  136E  3001               	movlw	1
  5685  136F  00F8               	movwf	??___lldiv
  5686  1370                     u3605:
  5687  1370  1003               	clrc
  5688  1371  0DF0               	rlf	___lldiv@divisor,f
  5689  1372  0DF1               	rlf	___lldiv@divisor+1,f
  5690  1373  0DF2               	rlf	___lldiv@divisor+2,f
  5691  1374  0DF3               	rlf	___lldiv@divisor+3,f
  5692  1375  0BF8               	decfsz	??___lldiv,f
  5693  1376  2B70               	goto	u3605
  5694  1377  3001               	movlw	1
  5695  1378  00F8               	movwf	??___lldiv
  5696  1379  0878               	movf	??___lldiv,w
  5697  137A  07FD               	addwf	___lldiv@counter,f
  5698  137B                     l2644:
  5699  137B  1FF3               	btfss	___lldiv@divisor+3,7
  5700  137C  2B7E               	goto	u3611
  5701  137D  2B7F               	goto	u3610
  5702  137E                     u3611:
  5703  137E  2B6E               	goto	l2642
  5704  137F                     u3610:
  5705  137F                     l2646:
  5706  137F  3001               	movlw	1
  5707  1380  00F8               	movwf	??___lldiv
  5708  1381                     u3625:
  5709  1381  1003               	clrc
  5710  1382  0DF9               	rlf	___lldiv@quotient,f
  5711  1383  0DFA               	rlf	___lldiv@quotient+1,f
  5712  1384  0DFB               	rlf	___lldiv@quotient+2,f
  5713  1385  0DFC               	rlf	___lldiv@quotient+3,f
  5714  1386  0BF8               	decfsz	??___lldiv,f
  5715  1387  2B81               	goto	u3625
  5716  1388                     l2648:
  5717  1388  0873               	movf	___lldiv@divisor+3,w
  5718  1389  0277               	subwf	___lldiv@dividend+3,w
  5719  138A  1D03               	skipz
  5720  138B  2B96               	goto	u3635
  5721  138C  0872               	movf	___lldiv@divisor+2,w
  5722  138D  0276               	subwf	___lldiv@dividend+2,w
  5723  138E  1D03               	skipz
  5724  138F  2B96               	goto	u3635
  5725  1390  0871               	movf	___lldiv@divisor+1,w
  5726  1391  0275               	subwf	___lldiv@dividend+1,w
  5727  1392  1D03               	skipz
  5728  1393  2B96               	goto	u3635
  5729  1394  0870               	movf	___lldiv@divisor,w
  5730  1395  0274               	subwf	___lldiv@dividend,w
  5731  1396                     u3635:
  5732  1396  1C03               	skipc
  5733  1397  2B99               	goto	u3631
  5734  1398  2B9A               	goto	u3630
  5735  1399                     u3631:
  5736  1399  2BA9               	goto	l2654
  5737  139A                     u3630:
  5738  139A                     l2650:
  5739  139A  0870               	movf	___lldiv@divisor,w
  5740  139B  02F4               	subwf	___lldiv@dividend,f
  5741  139C  0871               	movf	___lldiv@divisor+1,w
  5742  139D  1C03               	skipc
  5743  139E  0F71               	incfsz	___lldiv@divisor+1,w
  5744  139F  02F5               	subwf	___lldiv@dividend+1,f
  5745  13A0  0872               	movf	___lldiv@divisor+2,w
  5746  13A1  1C03               	skipc
  5747  13A2  0F72               	incfsz	___lldiv@divisor+2,w
  5748  13A3  02F6               	subwf	___lldiv@dividend+2,f
  5749  13A4  0873               	movf	___lldiv@divisor+3,w
  5750  13A5  1C03               	skipc
  5751  13A6  0F73               	incfsz	___lldiv@divisor+3,w
  5752  13A7  02F7               	subwf	___lldiv@dividend+3,f
  5753  13A8                     l2652:
  5754  13A8  1479               	bsf	___lldiv@quotient,0
  5755  13A9                     l2654:
  5756  13A9  3001               	movlw	1
  5757  13AA                     u3645:
  5758  13AA  1003               	clrc
  5759  13AB  0CF3               	rrf	___lldiv@divisor+3,f
  5760  13AC  0CF2               	rrf	___lldiv@divisor+2,f
  5761  13AD  0CF1               	rrf	___lldiv@divisor+1,f
  5762  13AE  0CF0               	rrf	___lldiv@divisor,f
  5763  13AF  3EFF               	addlw	-1
  5764  13B0  1D03               	skipz
  5765  13B1  2BAA               	goto	u3645
  5766  13B2                     l2656:
  5767  13B2  3001               	movlw	1
  5768  13B3  02FD               	subwf	___lldiv@counter,f
  5769  13B4  1D03               	btfss	3,2
  5770  13B5  2BB7               	goto	u3651
  5771  13B6  2BB8               	goto	u3650
  5772  13B7                     u3651:
  5773  13B7  2B7F               	goto	l2646
  5774  13B8                     u3650:
  5775  13B8                     l2658:
  5776  13B8  087C               	movf	___lldiv@quotient+3,w
  5777  13B9  00F3               	movwf	?___lldiv+3
  5778  13BA  087B               	movf	___lldiv@quotient+2,w
  5779  13BB  00F2               	movwf	?___lldiv+2
  5780  13BC  087A               	movf	___lldiv@quotient+1,w
  5781  13BD  00F1               	movwf	?___lldiv+1
  5782  13BE  0879               	movf	___lldiv@quotient,w
  5783  13BF  00F0               	movwf	?___lldiv
  5784  13C0                     l458:
  5785  13C0  0008               	return
  5786  13C1                     __end_of___lldiv:
  5787                           
  5788                           	psect	text19
  5789  14A6                     __ptext19:	
  5790 ;; *************** function ___fttol *****************
  5791 ;; Defined at:
  5792 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  f1              3   33[BANK0 ] float 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  lval            4   42[BANK0 ] unsigned long 
  5797 ;;  exp1            1   46[BANK0 ] unsigned char 
  5798 ;;  sign1           1   41[BANK0 ] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  4   33[BANK0 ] long 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         0       4       0       0       0
  5809 ;;      Locals:         0       6       0       0       0
  5810 ;;      Temps:          0       4       0       0       0
  5811 ;;      Totals:         0      14       0       0       0
  5812 ;;Total ram usage:       14 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_sprintf
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function ___fttol
  5823  14A6                     ___fttol:
  5824  14A6                     l2698:	
  5825                           ;incstack = 0
  5826                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5827                           
  5828  14A6  1283               	bcf	3,5	;RP0=0, select bank0
  5829  14A7  1303               	bcf	3,6	;RP1=0, select bank0
  5830  14A8  0841               	movf	___fttol@f1,w
  5831  14A9  00C5               	movwf	??___fttol
  5832  14AA  0842               	movf	___fttol@f1+1,w
  5833  14AB  00C6               	movwf	??___fttol+1
  5834  14AC  0843               	movf	___fttol@f1+2,w
  5835  14AD  00C7               	movwf	??___fttol+2
  5836  14AE  1003               	clrc
  5837  14AF  0D46               	rlf	??___fttol+1,w
  5838  14B0  0D47               	rlf	??___fttol+2,w
  5839  14B1  00C8               	movwf	??___fttol+3
  5840  14B2  0848               	movf	??___fttol+3,w
  5841  14B3  00CE               	movwf	___fttol@exp1
  5842  14B4  084E               	movf	___fttol@exp1,w
  5843  14B5  1D03               	btfss	3,2
  5844  14B6  2CB8               	goto	u3711
  5845  14B7  2CB9               	goto	u3710
  5846  14B8                     u3711:
  5847  14B8  2CC2               	goto	l2704
  5848  14B9                     u3710:
  5849  14B9                     l2700:
  5850  14B9  3000               	movlw	0
  5851  14BA  00C4               	movwf	?___fttol+3
  5852  14BB  3000               	movlw	0
  5853  14BC  00C3               	movwf	?___fttol+2
  5854  14BD  3000               	movlw	0
  5855  14BE  00C2               	movwf	?___fttol+1
  5856  14BF  3000               	movlw	0
  5857  14C0  00C1               	movwf	?___fttol
  5858  14C1  2D31               	goto	l752
  5859  14C2                     l2704:
  5860  14C2  0841               	movf	___fttol@f1,w
  5861  14C3  00C5               	movwf	??___fttol
  5862  14C4  0842               	movf	___fttol@f1+1,w
  5863  14C5  00C6               	movwf	??___fttol+1
  5864  14C6  0843               	movf	___fttol@f1+2,w
  5865  14C7  00C7               	movwf	??___fttol+2
  5866  14C8  3017               	movlw	23
  5867  14C9                     u3725:
  5868  14C9  1003               	clrc
  5869  14CA  0CC7               	rrf	??___fttol+2,f
  5870  14CB  0CC6               	rrf	??___fttol+1,f
  5871  14CC  0CC5               	rrf	??___fttol,f
  5872  14CD                     u3720:
  5873  14CD  3EFF               	addlw	-1
  5874  14CE  1D03               	skipz
  5875  14CF  2CC9               	goto	u3725
  5876  14D0  0845               	movf	??___fttol,w
  5877  14D1  00C8               	movwf	??___fttol+3
  5878  14D2  0848               	movf	??___fttol+3,w
  5879  14D3  00C9               	movwf	___fttol@sign1
  5880  14D4                     l2706:
  5881  14D4  17C2               	bsf	___fttol@f1+1,7
  5882  14D5                     l2708:
  5883  14D5  30FF               	movlw	255
  5884  14D6  05C1               	andwf	___fttol@f1,f
  5885  14D7  30FF               	movlw	255
  5886  14D8  05C2               	andwf	___fttol@f1+1,f
  5887  14D9  3000               	movlw	0
  5888  14DA  05C3               	andwf	___fttol@f1+2,f
  5889  14DB                     l2710:
  5890  14DB  0841               	movf	___fttol@f1,w
  5891  14DC  00CA               	movwf	___fttol@lval
  5892  14DD  0842               	movf	___fttol@f1+1,w
  5893  14DE  00CB               	movwf	___fttol@lval+1
  5894  14DF  0843               	movf	___fttol@f1+2,w
  5895  14E0  00CC               	movwf	___fttol@lval+2
  5896  14E1  01CD               	clrf	___fttol@lval+3
  5897  14E2                     l2712:
  5898  14E2  308E               	movlw	142
  5899  14E3  02CE               	subwf	___fttol@exp1,f
  5900  14E4                     l2714:
  5901  14E4  1FCE               	btfss	___fttol@exp1,7
  5902  14E5  2CE7               	goto	u3731
  5903  14E6  2CE8               	goto	u3730
  5904  14E7                     u3731:
  5905  14E7  2D02               	goto	l2724
  5906  14E8                     u3730:
  5907  14E8                     l2716:
  5908  14E8  084E               	movf	___fttol@exp1,w
  5909  14E9  3A80               	xorlw	128
  5910  14EA  3E8F               	addlw	143
  5911  14EB  1803               	skipnc
  5912  14EC  2CEE               	goto	u3741
  5913  14ED  2CEF               	goto	u3740
  5914  14EE                     u3741:
  5915  14EE  2CF0               	goto	l2722
  5916  14EF                     u3740:
  5917  14EF  2CB9               	goto	l2700
  5918  14F0                     l2722:
  5919  14F0  3001               	movlw	1
  5920  14F1                     u3755:
  5921  14F1  1003               	clrc
  5922  14F2  0CCD               	rrf	___fttol@lval+3,f
  5923  14F3  0CCC               	rrf	___fttol@lval+2,f
  5924  14F4  0CCB               	rrf	___fttol@lval+1,f
  5925  14F5  0CCA               	rrf	___fttol@lval,f
  5926  14F6  3EFF               	addlw	-1
  5927  14F7  1D03               	skipz
  5928  14F8  2CF1               	goto	u3755
  5929  14F9  3001               	movlw	1
  5930  14FA  00C5               	movwf	??___fttol
  5931  14FB  0845               	movf	??___fttol,w
  5932  14FC  07CE               	addwf	___fttol@exp1,f
  5933  14FD  1D03               	btfss	3,2
  5934  14FE  2D00               	goto	u3761
  5935  14FF  2D01               	goto	u3760
  5936  1500                     u3761:
  5937  1500  2CF0               	goto	l2722
  5938  1501                     u3760:
  5939  1501  2D19               	goto	l2732
  5940  1502                     l2724:
  5941  1502  3018               	movlw	24
  5942  1503  024E               	subwf	___fttol@exp1,w
  5943  1504  1C03               	skipc
  5944  1505  2D07               	goto	u3771
  5945  1506  2D08               	goto	u3770
  5946  1507                     u3771:
  5947  1507  2D14               	goto	l759
  5948  1508                     u3770:
  5949  1508  2CB9               	goto	l2700
  5950  1509                     l2730:
  5951  1509  3001               	movlw	1
  5952  150A  00C5               	movwf	??___fttol
  5953  150B                     u3785:
  5954  150B  1003               	clrc
  5955  150C  0DCA               	rlf	___fttol@lval,f
  5956  150D  0DCB               	rlf	___fttol@lval+1,f
  5957  150E  0DCC               	rlf	___fttol@lval+2,f
  5958  150F  0DCD               	rlf	___fttol@lval+3,f
  5959  1510  0BC5               	decfsz	??___fttol,f
  5960  1511  2D0B               	goto	u3785
  5961  1512  3001               	movlw	1
  5962  1513  02CE               	subwf	___fttol@exp1,f
  5963  1514                     l759:
  5964  1514  084E               	movf	___fttol@exp1,w
  5965  1515  1D03               	btfss	3,2
  5966  1516  2D18               	goto	u3791
  5967  1517  2D19               	goto	u3790
  5968  1518                     u3791:
  5969  1518  2D09               	goto	l2730
  5970  1519                     u3790:
  5971  1519                     l2732:
  5972  1519  0849               	movf	___fttol@sign1,w
  5973  151A  1903               	btfsc	3,2
  5974  151B  2D1D               	goto	u3801
  5975  151C  2D1E               	goto	u3800
  5976  151D                     u3801:
  5977  151D  2D29               	goto	l2736
  5978  151E                     u3800:
  5979  151E                     l2734:
  5980  151E  09CA               	comf	___fttol@lval,f
  5981  151F  09CB               	comf	___fttol@lval+1,f
  5982  1520  09CC               	comf	___fttol@lval+2,f
  5983  1521  09CD               	comf	___fttol@lval+3,f
  5984  1522  0ACA               	incf	___fttol@lval,f
  5985  1523  1903               	skipnz
  5986  1524  0ACB               	incf	___fttol@lval+1,f
  5987  1525  1903               	skipnz
  5988  1526  0ACC               	incf	___fttol@lval+2,f
  5989  1527  1903               	skipnz
  5990  1528  0ACD               	incf	___fttol@lval+3,f
  5991  1529                     l2736:
  5992  1529  084D               	movf	___fttol@lval+3,w
  5993  152A  00C4               	movwf	?___fttol+3
  5994  152B  084C               	movf	___fttol@lval+2,w
  5995  152C  00C3               	movwf	?___fttol+2
  5996  152D  084B               	movf	___fttol@lval+1,w
  5997  152E  00C2               	movwf	?___fttol+1
  5998  152F  084A               	movf	___fttol@lval,w
  5999  1530  00C1               	movwf	?___fttol
  6000  1531                     l752:
  6001  1531  0008               	return
  6002  1532                     __end_of___fttol:
  6003                           
  6004                           	psect	text20
  6005  1F5C                     __ptext20:	
  6006 ;; *************** function ___ftsub *****************
  6007 ;; Defined at:
  6008 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  f2              3   53[BANK0 ] float 
  6011 ;;  f1              3   56[BANK0 ] float 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  3   53[BANK0 ] float 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6023 ;;      Params:         0       6       0       0       0
  6024 ;;      Locals:         0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0
  6026 ;;      Totals:         0       6       0       0       0
  6027 ;;Total ram usage:        6 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    2
  6030 ;; This function calls:
  6031 ;;		___ftadd
  6032 ;; This function is called by:
  6033 ;;		_sprintf
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function ___ftsub
  6039  1F5C                     ___ftsub:
  6040  1F5C                     l2690:	
  6041                           ;incstack = 0
  6042                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6043                           
  6044  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
  6045  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
  6046  1F5E  0857               	movf	___ftsub@f2+2,w
  6047  1F5F  0456               	iorwf	___ftsub@f2+1,w
  6048  1F60  0455               	iorwf	___ftsub@f2,w
  6049  1F61  1903               	skipnz
  6050  1F62  2F64               	goto	u3701
  6051  1F63  2F65               	goto	u3700
  6052  1F64                     u3701:
  6053  1F64  2F67               	goto	l2694
  6054  1F65                     u3700:
  6055  1F65                     l2692:
  6056  1F65  3080               	movlw	128
  6057  1F66  06D7               	xorwf	___ftsub@f2+2,f
  6058  1F67                     l2694:
  6059  1F67  0858               	movf	___ftsub@f1,w
  6060  1F68  00C8               	movwf	___ftadd@f1
  6061  1F69  0859               	movf	___ftsub@f1+1,w
  6062  1F6A  00C9               	movwf	___ftadd@f1+1
  6063  1F6B  085A               	movf	___ftsub@f1+2,w
  6064  1F6C  00CA               	movwf	___ftadd@f1+2
  6065  1F6D  0855               	movf	___ftsub@f2,w
  6066  1F6E  00CB               	movwf	___ftadd@f2
  6067  1F6F  0856               	movf	___ftsub@f2+1,w
  6068  1F70  00CC               	movwf	___ftadd@f2+1
  6069  1F71  0857               	movf	___ftsub@f2+2,w
  6070  1F72  00CD               	movwf	___ftadd@f2+2
  6071  1F73  120A  118A  2010  160A  158A  	fcall	___ftadd
  6072  1F78  1283               	bcf	3,5	;RP0=0, select bank0
  6073  1F79  1303               	bcf	3,6	;RP1=0, select bank0
  6074  1F7A  0848               	movf	?___ftadd,w
  6075  1F7B  00D5               	movwf	?___ftsub
  6076  1F7C  0849               	movf	?___ftadd+1,w
  6077  1F7D  00D6               	movwf	?___ftsub+1
  6078  1F7E  084A               	movf	?___ftadd+2,w
  6079  1F7F  00D7               	movwf	?___ftsub+2
  6080  1F80                     l748:
  6081  1F80  0008               	return
  6082  1F81                     __end_of___ftsub:
  6083                           
  6084                           	psect	text21
  6085  0010                     __ptext21:	
  6086 ;; *************** function ___ftadd *****************
  6087 ;; Defined at:
  6088 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  f1              3   40[BANK0 ] float 
  6091 ;;  f2              3   43[BANK0 ] float 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  exp1            1   52[BANK0 ] unsigned char 
  6094 ;;  exp2            1   51[BANK0 ] unsigned char 
  6095 ;;  sign            1   50[BANK0 ] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  3   40[BANK0 ] float 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6105 ;;      Params:         0       6       0       0       0
  6106 ;;      Locals:         0       3       0       0       0
  6107 ;;      Temps:          0       4       0       0       0
  6108 ;;      Totals:         0      13       0       0       0
  6109 ;;Total ram usage:       13 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    1
  6112 ;; This function calls:
  6113 ;;		___ftpack
  6114 ;; This function is called by:
  6115 ;;		_sprintf
  6116 ;;		___ftsub
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           
  6121                           ;psect for function ___ftadd
  6122  0010                     ___ftadd:
  6123  0010                     l2228:	
  6124                           ;incstack = 0
  6125                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6126                           
  6127  0010  1283               	bcf	3,5	;RP0=0, select bank0
  6128  0011  1303               	bcf	3,6	;RP1=0, select bank0
  6129  0012  0848               	movf	___ftadd@f1,w
  6130  0013  00CE               	movwf	??___ftadd
  6131  0014  0849               	movf	___ftadd@f1+1,w
  6132  0015  00CF               	movwf	??___ftadd+1
  6133  0016  084A               	movf	___ftadd@f1+2,w
  6134  0017  00D0               	movwf	??___ftadd+2
  6135  0018  1003               	clrc
  6136  0019  0D4F               	rlf	??___ftadd+1,w
  6137  001A  0D50               	rlf	??___ftadd+2,w
  6138  001B  00D1               	movwf	??___ftadd+3
  6139  001C  0851               	movf	??___ftadd+3,w
  6140  001D  00D4               	movwf	___ftadd@exp1
  6141  001E  084B               	movf	___ftadd@f2,w
  6142  001F  00CE               	movwf	??___ftadd
  6143  0020  084C               	movf	___ftadd@f2+1,w
  6144  0021  00CF               	movwf	??___ftadd+1
  6145  0022  084D               	movf	___ftadd@f2+2,w
  6146  0023  00D0               	movwf	??___ftadd+2
  6147  0024  1003               	clrc
  6148  0025  0D4F               	rlf	??___ftadd+1,w
  6149  0026  0D50               	rlf	??___ftadd+2,w
  6150  0027  00D1               	movwf	??___ftadd+3
  6151  0028  0851               	movf	??___ftadd+3,w
  6152  0029  00D3               	movwf	___ftadd@exp2
  6153  002A  0854               	movf	___ftadd@exp1,w
  6154  002B  1903               	btfsc	3,2
  6155  002C  282E               	goto	u2681
  6156  002D  282F               	goto	u2680
  6157  002E                     u2681:
  6158  002E  283F               	goto	l2234
  6159  002F                     u2680:
  6160  002F                     l2230:
  6161  002F  0853               	movf	___ftadd@exp2,w
  6162  0030  0254               	subwf	___ftadd@exp1,w
  6163  0031  1803               	skipnc
  6164  0032  2834               	goto	u2691
  6165  0033  2835               	goto	u2690
  6166  0034                     u2691:
  6167  0034  2846               	goto	l2238
  6168  0035                     u2690:
  6169  0035                     l2232:
  6170  0035  0853               	movf	___ftadd@exp2,w
  6171  0036  00CE               	movwf	??___ftadd
  6172  0037  0854               	movf	___ftadd@exp1,w
  6173  0038  02CE               	subwf	??___ftadd,f
  6174  0039  3019               	movlw	25
  6175  003A  024E               	subwf	??___ftadd,w
  6176  003B  1C03               	skipc
  6177  003C  283E               	goto	u2701
  6178  003D  283F               	goto	u2700
  6179  003E                     u2701:
  6180  003E  2846               	goto	l2238
  6181  003F                     u2700:
  6182  003F                     l2234:
  6183  003F  084B               	movf	___ftadd@f2,w
  6184  0040  00C8               	movwf	?___ftadd
  6185  0041  084C               	movf	___ftadd@f2+1,w
  6186  0042  00C9               	movwf	?___ftadd+1
  6187  0043  084D               	movf	___ftadd@f2+2,w
  6188  0044  00CA               	movwf	?___ftadd+2
  6189  0045  2945               	goto	l668
  6190  0046                     l2238:
  6191  0046  0853               	movf	___ftadd@exp2,w
  6192  0047  1903               	btfsc	3,2
  6193  0048  284A               	goto	u2711
  6194  0049  284B               	goto	u2710
  6195  004A                     u2711:
  6196  004A  285B               	goto	l671
  6197  004B                     u2710:
  6198  004B                     l2240:
  6199  004B  0854               	movf	___ftadd@exp1,w
  6200  004C  0253               	subwf	___ftadd@exp2,w
  6201  004D  1803               	skipnc
  6202  004E  2850               	goto	u2721
  6203  004F  2851               	goto	u2720
  6204  0050                     u2721:
  6205  0050  285C               	goto	l2244
  6206  0051                     u2720:
  6207  0051                     l2242:
  6208  0051  0854               	movf	___ftadd@exp1,w
  6209  0052  00CE               	movwf	??___ftadd
  6210  0053  0853               	movf	___ftadd@exp2,w
  6211  0054  02CE               	subwf	??___ftadd,f
  6212  0055  3019               	movlw	25
  6213  0056  024E               	subwf	??___ftadd,w
  6214  0057  1C03               	skipc
  6215  0058  285A               	goto	u2731
  6216  0059  285B               	goto	u2730
  6217  005A                     u2731:
  6218  005A  285C               	goto	l2244
  6219  005B                     u2730:
  6220  005B                     l671:
  6221  005B  2945               	goto	l668
  6222  005C                     l2244:
  6223  005C  3006               	movlw	6
  6224  005D  00CE               	movwf	??___ftadd
  6225  005E  084E               	movf	??___ftadd,w
  6226  005F  00D2               	movwf	___ftadd@sign
  6227  0060                     l2246:
  6228  0060  1FCA               	btfss	___ftadd@f1+2,7
  6229  0061  2863               	goto	u2741
  6230  0062  2864               	goto	u2740
  6231  0063                     u2741:
  6232  0063  2865               	goto	l672
  6233  0064                     u2740:
  6234  0064                     l2248:
  6235  0064  17D2               	bsf	___ftadd@sign,7
  6236  0065                     l672:
  6237  0065  1FCD               	btfss	___ftadd@f2+2,7
  6238  0066  2868               	goto	u2751
  6239  0067  2869               	goto	u2750
  6240  0068                     u2751:
  6241  0068  286A               	goto	l673
  6242  0069                     u2750:
  6243  0069                     l2250:
  6244  0069  1752               	bsf	___ftadd@sign,6
  6245  006A                     l673:
  6246  006A  17C9               	bsf	___ftadd@f1+1,7
  6247  006B                     l2252:
  6248  006B  30FF               	movlw	255
  6249  006C  05C8               	andwf	___ftadd@f1,f
  6250  006D  30FF               	movlw	255
  6251  006E  05C9               	andwf	___ftadd@f1+1,f
  6252  006F  3000               	movlw	0
  6253  0070  05CA               	andwf	___ftadd@f1+2,f
  6254  0071                     l2254:
  6255  0071  17CC               	bsf	___ftadd@f2+1,7
  6256  0072  30FF               	movlw	255
  6257  0073  05CB               	andwf	___ftadd@f2,f
  6258  0074  30FF               	movlw	255
  6259  0075  05CC               	andwf	___ftadd@f2+1,f
  6260  0076  3000               	movlw	0
  6261  0077  05CD               	andwf	___ftadd@f2+2,f
  6262  0078  0853               	movf	___ftadd@exp2,w
  6263  0079  0254               	subwf	___ftadd@exp1,w
  6264  007A  1803               	skipnc
  6265  007B  287D               	goto	u2761
  6266  007C  287E               	goto	u2760
  6267  007D                     u2761:
  6268  007D  28AA               	goto	l2266
  6269  007E                     u2760:
  6270  007E                     l2256:
  6271  007E  3001               	movlw	1
  6272  007F                     u2775:
  6273  007F  1003               	clrc
  6274  0080  0DCB               	rlf	___ftadd@f2,f
  6275  0081  0DCC               	rlf	___ftadd@f2+1,f
  6276  0082  0DCD               	rlf	___ftadd@f2+2,f
  6277  0083  3EFF               	addlw	-1
  6278  0084  1D03               	skipz
  6279  0085  287F               	goto	u2775
  6280  0086  3001               	movlw	1
  6281  0087  02D3               	subwf	___ftadd@exp2,f
  6282  0088                     l2258:
  6283  0088  0853               	movf	___ftadd@exp2,w
  6284  0089  0654               	xorwf	___ftadd@exp1,w
  6285  008A  1903               	skipnz
  6286  008B  288D               	goto	u2781
  6287  008C  288E               	goto	u2780
  6288  008D                     u2781:
  6289  008D  28A3               	goto	l2264
  6290  008E                     u2780:
  6291  008E                     l2260:
  6292  008E  3001               	movlw	1
  6293  008F  02D2               	subwf	___ftadd@sign,f
  6294  0090  0852               	movf	___ftadd@sign,w
  6295  0091  3907               	andlw	7
  6296  0092  1D03               	btfss	3,2
  6297  0093  2895               	goto	u2791
  6298  0094  2896               	goto	u2790
  6299  0095                     u2791:
  6300  0095  287E               	goto	l2256
  6301  0096                     u2790:
  6302  0096  28A3               	goto	l2264
  6303  0097                     l2262:
  6304  0097  3001               	movlw	1
  6305  0098                     u2805:
  6306  0098  1003               	clrc
  6307  0099  0CCA               	rrf	___ftadd@f1+2,f
  6308  009A  0CC9               	rrf	___ftadd@f1+1,f
  6309  009B  0CC8               	rrf	___ftadd@f1,f
  6310  009C  3EFF               	addlw	-1
  6311  009D  1D03               	skipz
  6312  009E  2898               	goto	u2805
  6313  009F  3001               	movlw	1
  6314  00A0  00CE               	movwf	??___ftadd
  6315  00A1  084E               	movf	??___ftadd,w
  6316  00A2  07D4               	addwf	___ftadd@exp1,f
  6317  00A3                     l2264:
  6318  00A3  0854               	movf	___ftadd@exp1,w
  6319  00A4  0653               	xorwf	___ftadd@exp2,w
  6320  00A5  1D03               	skipz
  6321  00A6  28A8               	goto	u2811
  6322  00A7  28A9               	goto	u2810
  6323  00A8                     u2811:
  6324  00A8  2897               	goto	l2262
  6325  00A9                     u2810:
  6326  00A9  28DB               	goto	l682
  6327  00AA                     l2266:
  6328  00AA  0854               	movf	___ftadd@exp1,w
  6329  00AB  0253               	subwf	___ftadd@exp2,w
  6330  00AC  1803               	skipnc
  6331  00AD  28AF               	goto	u2821
  6332  00AE  28B0               	goto	u2820
  6333  00AF                     u2821:
  6334  00AF  28DB               	goto	l682
  6335  00B0                     u2820:
  6336  00B0                     l2268:
  6337  00B0  3001               	movlw	1
  6338  00B1                     u2835:
  6339  00B1  1003               	clrc
  6340  00B2  0DC8               	rlf	___ftadd@f1,f
  6341  00B3  0DC9               	rlf	___ftadd@f1+1,f
  6342  00B4  0DCA               	rlf	___ftadd@f1+2,f
  6343  00B5  3EFF               	addlw	-1
  6344  00B6  1D03               	skipz
  6345  00B7  28B1               	goto	u2835
  6346  00B8  3001               	movlw	1
  6347  00B9  02D4               	subwf	___ftadd@exp1,f
  6348  00BA                     l2270:
  6349  00BA  0853               	movf	___ftadd@exp2,w
  6350  00BB  0654               	xorwf	___ftadd@exp1,w
  6351  00BC  1903               	skipnz
  6352  00BD  28BF               	goto	u2841
  6353  00BE  28C0               	goto	u2840
  6354  00BF                     u2841:
  6355  00BF  28D5               	goto	l2276
  6356  00C0                     u2840:
  6357  00C0                     l2272:
  6358  00C0  3001               	movlw	1
  6359  00C1  02D2               	subwf	___ftadd@sign,f
  6360  00C2  0852               	movf	___ftadd@sign,w
  6361  00C3  3907               	andlw	7
  6362  00C4  1D03               	btfss	3,2
  6363  00C5  28C7               	goto	u2851
  6364  00C6  28C8               	goto	u2850
  6365  00C7                     u2851:
  6366  00C7  28B0               	goto	l2268
  6367  00C8                     u2850:
  6368  00C8  28D5               	goto	l2276
  6369  00C9                     l2274:
  6370  00C9  3001               	movlw	1
  6371  00CA                     u2865:
  6372  00CA  1003               	clrc
  6373  00CB  0CCD               	rrf	___ftadd@f2+2,f
  6374  00CC  0CCC               	rrf	___ftadd@f2+1,f
  6375  00CD  0CCB               	rrf	___ftadd@f2,f
  6376  00CE  3EFF               	addlw	-1
  6377  00CF  1D03               	skipz
  6378  00D0  28CA               	goto	u2865
  6379  00D1  3001               	movlw	1
  6380  00D2  00CE               	movwf	??___ftadd
  6381  00D3  084E               	movf	??___ftadd,w
  6382  00D4  07D3               	addwf	___ftadd@exp2,f
  6383  00D5                     l2276:
  6384  00D5  0854               	movf	___ftadd@exp1,w
  6385  00D6  0653               	xorwf	___ftadd@exp2,w
  6386  00D7  1D03               	skipz
  6387  00D8  28DA               	goto	u2871
  6388  00D9  28DB               	goto	u2870
  6389  00DA                     u2871:
  6390  00DA  28C9               	goto	l2274
  6391  00DB                     u2870:
  6392  00DB                     l682:
  6393  00DB  1FD2               	btfss	___ftadd@sign,7
  6394  00DC  28DE               	goto	u2881
  6395  00DD  28DF               	goto	u2880
  6396  00DE                     u2881:
  6397  00DE  28EF               	goto	l2280
  6398  00DF                     u2880:
  6399  00DF                     l2278:
  6400  00DF  30FF               	movlw	255
  6401  00E0  06C8               	xorwf	___ftadd@f1,f
  6402  00E1  30FF               	movlw	255
  6403  00E2  06C9               	xorwf	___ftadd@f1+1,f
  6404  00E3  30FF               	movlw	255
  6405  00E4  06CA               	xorwf	___ftadd@f1+2,f
  6406  00E5  3001               	movlw	1
  6407  00E6  07C8               	addwf	___ftadd@f1,f
  6408  00E7  3000               	movlw	0
  6409  00E8  1803               	skipnc
  6410  00E9  3001               	movlw	1
  6411  00EA  07C9               	addwf	___ftadd@f1+1,f
  6412  00EB  3000               	movlw	0
  6413  00EC  1803               	skipnc
  6414  00ED  3001               	movlw	1
  6415  00EE  07CA               	addwf	___ftadd@f1+2,f
  6416  00EF                     l2280:
  6417  00EF  1F52               	btfss	___ftadd@sign,6
  6418  00F0  28F2               	goto	u2891
  6419  00F1  28F3               	goto	u2890
  6420  00F2                     u2891:
  6421  00F2  2903               	goto	l2284
  6422  00F3                     u2890:
  6423  00F3                     l2282:
  6424  00F3  30FF               	movlw	255
  6425  00F4  06CB               	xorwf	___ftadd@f2,f
  6426  00F5  30FF               	movlw	255
  6427  00F6  06CC               	xorwf	___ftadd@f2+1,f
  6428  00F7  30FF               	movlw	255
  6429  00F8  06CD               	xorwf	___ftadd@f2+2,f
  6430  00F9  3001               	movlw	1
  6431  00FA  07CB               	addwf	___ftadd@f2,f
  6432  00FB  3000               	movlw	0
  6433  00FC  1803               	skipnc
  6434  00FD  3001               	movlw	1
  6435  00FE  07CC               	addwf	___ftadd@f2+1,f
  6436  00FF  3000               	movlw	0
  6437  0100  1803               	skipnc
  6438  0101  3001               	movlw	1
  6439  0102  07CD               	addwf	___ftadd@f2+2,f
  6440  0103                     l2284:
  6441  0103  01D2               	clrf	___ftadd@sign
  6442  0104                     l2286:
  6443  0104  0848               	movf	___ftadd@f1,w
  6444  0105  07CB               	addwf	___ftadd@f2,f
  6445  0106  0849               	movf	___ftadd@f1+1,w
  6446  0107  1103               	clrz
  6447  0108  1803               	skipnc
  6448  0109  0A49               	incf	___ftadd@f1+1,w
  6449  010A  1903               	skipnz
  6450  010B  290D               	goto	u2901
  6451  010C  07CC               	addwf	___ftadd@f2+1,f
  6452  010D                     u2901:
  6453  010D  084A               	movf	___ftadd@f1+2,w
  6454  010E  1103               	clrz
  6455  010F  1803               	skipnc
  6456  0110  0A4A               	incf	___ftadd@f1+2,w
  6457  0111  1903               	skipnz
  6458  0112  2914               	goto	u2902
  6459  0113  07CD               	addwf	___ftadd@f2+2,f
  6460  0114                     u2902:
  6461  0114                     l2288:
  6462  0114  1FCD               	btfss	___ftadd@f2+2,7
  6463  0115  2917               	goto	u2911
  6464  0116  2918               	goto	u2910
  6465  0117                     u2911:
  6466  0117  292A               	goto	l2294
  6467  0118                     u2910:
  6468  0118                     l2290:
  6469  0118  30FF               	movlw	255
  6470  0119  06CB               	xorwf	___ftadd@f2,f
  6471  011A  30FF               	movlw	255
  6472  011B  06CC               	xorwf	___ftadd@f2+1,f
  6473  011C  30FF               	movlw	255
  6474  011D  06CD               	xorwf	___ftadd@f2+2,f
  6475  011E  3001               	movlw	1
  6476  011F  07CB               	addwf	___ftadd@f2,f
  6477  0120  3000               	movlw	0
  6478  0121  1803               	skipnc
  6479  0122  3001               	movlw	1
  6480  0123  07CC               	addwf	___ftadd@f2+1,f
  6481  0124  3000               	movlw	0
  6482  0125  1803               	skipnc
  6483  0126  3001               	movlw	1
  6484  0127  07CD               	addwf	___ftadd@f2+2,f
  6485  0128                     l2292:
  6486  0128  01D2               	clrf	___ftadd@sign
  6487  0129  0AD2               	incf	___ftadd@sign,f
  6488  012A                     l2294:
  6489  012A  084B               	movf	___ftadd@f2,w
  6490  012B  00F0               	movwf	___ftpack@arg
  6491  012C  084C               	movf	___ftadd@f2+1,w
  6492  012D  00F1               	movwf	___ftpack@arg+1
  6493  012E  084D               	movf	___ftadd@f2+2,w
  6494  012F  00F2               	movwf	___ftpack@arg+2
  6495  0130  0854               	movf	___ftadd@exp1,w
  6496  0131  00CE               	movwf	??___ftadd
  6497  0132  084E               	movf	??___ftadd,w
  6498  0133  00F3               	movwf	___ftpack@exp
  6499  0134  0852               	movf	___ftadd@sign,w
  6500  0135  00CF               	movwf	??___ftadd+1
  6501  0136  084F               	movf	??___ftadd+1,w
  6502  0137  00F4               	movwf	___ftpack@sign
  6503  0138  160A  118A  242A  120A  118A  	fcall	___ftpack
  6504  013D  0870               	movf	?___ftpack,w
  6505  013E  1283               	bcf	3,5	;RP0=0, select bank0
  6506  013F  1303               	bcf	3,6	;RP1=0, select bank0
  6507  0140  00C8               	movwf	?___ftadd
  6508  0141  0871               	movf	?___ftpack+1,w
  6509  0142  00C9               	movwf	?___ftadd+1
  6510  0143  0872               	movf	?___ftpack+2,w
  6511  0144  00CA               	movwf	?___ftadd+2
  6512  0145                     l668:
  6513  0145  0008               	return
  6514  0146                     __end_of___ftadd:
  6515                           
  6516                           	psect	text22
  6517  10A2                     __ptext22:	
  6518 ;; *************** function ___ftneg *****************
  6519 ;; Defined at:
  6520 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  f1              3    0[COMMON] float 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  3    0[COMMON] float 
  6527 ;; Registers used:
  6528 ;;		wreg
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6534 ;;      Params:         3       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0
  6537 ;;      Totals:         3       0       0       0       0
  6538 ;;Total ram usage:        3 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_sprintf
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function ___ftneg
  6549  10A2                     ___ftneg:
  6550  10A2                     l2682:	
  6551                           ;incstack = 0
  6552                           ; Regs used in ___ftneg: [wreg]
  6553                           
  6554  10A2  0872               	movf	___ftneg@f1+2,w
  6555  10A3  0471               	iorwf	___ftneg@f1+1,w
  6556  10A4  0470               	iorwf	___ftneg@f1,w
  6557  10A5  1903               	skipnz
  6558  10A6  28A8               	goto	u3691
  6559  10A7  28A9               	goto	u3690
  6560  10A8                     u3691:
  6561  10A8  28AB               	goto	l2686
  6562  10A9                     u3690:
  6563  10A9                     l2684:
  6564  10A9  3080               	movlw	128
  6565  10AA  06F2               	xorwf	___ftneg@f1+2,f
  6566  10AB                     l2686:
  6567  10AB                     l742:
  6568  10AB  0008               	return
  6569  10AC                     __end_of___ftneg:
  6570                           
  6571                           	psect	text23
  6572  1110                     __ptext23:	
  6573 ;; *************** function ___ftge *****************
  6574 ;; Defined at:
  6575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  ff1             3    0[COMMON] float 
  6578 ;;  ff2             3    3[COMMON] float 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         6       0       0       0       0
  6591 ;;      Locals:         0       0       0       0       0
  6592 ;;      Temps:          0       0       0       0       0
  6593 ;;      Totals:         6       0       0       0       0
  6594 ;;Total ram usage:        6 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_sprintf
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function ___ftge
  6605  1110                     ___ftge:
  6606  1110                     l2662:	
  6607                           ;incstack = 0
  6608                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6609                           
  6610  1110  1FF2               	btfss	___ftge@ff1+2,7
  6611  1111  2913               	goto	u3661
  6612  1112  2914               	goto	u3660
  6613  1113                     u3661:
  6614  1113  2921               	goto	l2666
  6615  1114                     u3660:
  6616  1114                     l2664:
  6617  1114  0870               	movf	___ftge@ff1,w
  6618  1115  3C00               	sublw	0
  6619  1116  00F0               	movwf	___ftge@ff1
  6620  1117  0871               	movf	___ftge@ff1+1,w
  6621  1118  1C03               	skipc
  6622  1119  0F71               	incfsz	___ftge@ff1+1,w
  6623  111A  3C00               	sublw	0
  6624  111B  00F1               	movwf	___ftge@ff1+1
  6625  111C  0872               	movf	___ftge@ff1+2,w
  6626  111D  1C03               	skipc
  6627  111E  0F72               	incfsz	___ftge@ff1+2,w
  6628  111F  3C80               	sublw	128
  6629  1120  00F2               	movwf	___ftge@ff1+2
  6630  1121                     l2666:
  6631  1121  1FF5               	btfss	___ftge@ff2+2,7
  6632  1122  2924               	goto	u3671
  6633  1123  2925               	goto	u3670
  6634  1124                     u3671:
  6635  1124  2932               	goto	l2670
  6636  1125                     u3670:
  6637  1125                     l2668:
  6638  1125  0873               	movf	___ftge@ff2,w
  6639  1126  3C00               	sublw	0
  6640  1127  00F3               	movwf	___ftge@ff2
  6641  1128  0874               	movf	___ftge@ff2+1,w
  6642  1129  1C03               	skipc
  6643  112A  0F74               	incfsz	___ftge@ff2+1,w
  6644  112B  3C00               	sublw	0
  6645  112C  00F4               	movwf	___ftge@ff2+1
  6646  112D  0875               	movf	___ftge@ff2+2,w
  6647  112E  1C03               	skipc
  6648  112F  0F75               	incfsz	___ftge@ff2+2,w
  6649  1130  3C80               	sublw	128
  6650  1131  00F5               	movwf	___ftge@ff2+2
  6651  1132                     l2670:
  6652  1132  3080               	movlw	128
  6653  1133  06F2               	xorwf	___ftge@ff1+2,f
  6654  1134                     l2672:
  6655  1134  3080               	movlw	128
  6656  1135  06F5               	xorwf	___ftge@ff2+2,f
  6657  1136                     l2674:
  6658  1136  0875               	movf	___ftge@ff2+2,w
  6659  1137  0272               	subwf	___ftge@ff1+2,w
  6660  1138  1D03               	skipz
  6661  1139  2940               	goto	u3685
  6662  113A  0874               	movf	___ftge@ff2+1,w
  6663  113B  0271               	subwf	___ftge@ff1+1,w
  6664  113C  1D03               	skipz
  6665  113D  2940               	goto	u3685
  6666  113E  0873               	movf	___ftge@ff2,w
  6667  113F  0270               	subwf	___ftge@ff1,w
  6668  1140                     u3685:
  6669  1140  1803               	skipnc
  6670  1141  2943               	goto	u3681
  6671  1142  2944               	goto	u3680
  6672  1143                     u3681:
  6673  1143  2946               	goto	l2678
  6674  1144                     u3680:
  6675  1144                     l2676:
  6676  1144  1003               	clrc
  6677  1145  2947               	goto	l725
  6678  1146                     l2678:
  6679  1146  1403               	setc
  6680  1147                     l725:
  6681  1147  0008               	return
  6682  1148                     __end_of___ftge:
  6683                           
  6684                           	psect	text24
  6685  1ED5                     __ptext24:	
  6686 ;; *************** function _setup *****************
  6687 ;; Defined at:
  6688 ;;		line 113 in file "master.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, status,2, status,0, pclath, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6702 ;;      Params:         0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0
  6704 ;;      Temps:          0       0       0       0       0
  6705 ;;      Totals:         0       0       0       0       0
  6706 ;;Total ram usage:        0 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; Hardware stack levels required when called:    1
  6709 ;; This function calls:
  6710 ;;		_spiInit
  6711 ;; This function is called by:
  6712 ;;		_main
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           
  6717                           ;psect for function _setup
  6718  1ED5                     _setup:
  6719  1ED5                     l2770:	
  6720                           ;incstack = 0
  6721                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  6722                           
  6723  1ED5  1683               	bsf	3,5	;RP0=1, select bank3
  6724  1ED6  1703               	bsf	3,6	;RP1=1, select bank3
  6725  1ED7  0188               	clrf	8	;volatile
  6726  1ED8  0189               	clrf	9	;volatile
  6727  1ED9  1683               	bsf	3,5	;RP0=1, select bank1
  6728  1EDA  1303               	bcf	3,6	;RP1=0, select bank1
  6729  1EDB  0188               	clrf	8	;volatile
  6730  1EDC  0189               	clrf	9	;volatile
  6731  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
  6732  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
  6733  1EDF  0188               	clrf	8	;volatile
  6734  1EE0  0189               	clrf	9	;volatile
  6735  1EE1                     l2772:
  6736  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  6737  1EE2  1303               	bcf	3,6	;RP1=0, select bank1
  6738  1EE3  1087               	bcf	7,1	;volatile
  6739  1EE4                     l2774:
  6740  1EE4  1107               	bcf	7,2	;volatile
  6741  1EE5                     l2776:
  6742  1EE5  1283               	bcf	3,5	;RP0=0, select bank0
  6743  1EE6  1303               	bcf	3,6	;RP1=0, select bank0
  6744  1EE7  1507               	bsf	7,2	;volatile
  6745  1EE8                     l2778:
  6746  1EE8  1487               	bsf	7,1	;volatile
  6747  1EE9                     l2780:
  6748  1EE9  01F0               	clrf	spiInit@sDataSample
  6749  1EEA  01F1               	clrf	spiInit@sClockIdle
  6750  1EEB  01F2               	clrf	spiInit@sTransmitEdge
  6751  1EEC  3020               	movlw	32
  6752  1EED  160A  158A  268C  160A  158A  	fcall	_spiInit
  6753  1EF2                     l77:
  6754  1EF2  0008               	return
  6755  1EF3                     __end_of_setup:
  6756                           
  6757                           	psect	text25
  6758  1E8C                     __ptext25:	
  6759 ;; *************** function _spiInit *****************
  6760 ;; Defined at:
  6761 ;;		line 12 in file "SPI.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  sType           1    wreg     enum E1264
  6764 ;;  sDataSample     1    0[COMMON] enum E1272
  6765 ;;  sClockIdle      1    1[COMMON] enum E1276
  6766 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  sType           1    3[COMMON] enum E1264
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6778 ;;      Params:         3       0       0       0       0
  6779 ;;      Locals:         1       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0
  6781 ;;      Totals:         4       0       0       0       0
  6782 ;;Total ram usage:        4 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_setup
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function _spiInit
  6793  1E8C                     _spiInit:
  6794                           
  6795                           ;incstack = 0
  6796                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  6797                           ;spiInit@sType stored from wreg
  6798  1E8C  00F3               	movwf	spiInit@sType
  6799  1E8D                     l2408:
  6800                           
  6801                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  6802  1E8D  1683               	bsf	3,5	;RP0=1, select bank1
  6803  1E8E  1303               	bcf	3,6	;RP1=0, select bank1
  6804  1E8F  1287               	bcf	7,5	;volatile
  6805                           
  6806                           ;SPI.c: 15:     if(sType & 0b00000100)
  6807  1E90  1D73               	btfss	spiInit@sType,2
  6808  1E91  2E93               	goto	u3201
  6809  1E92  2E94               	goto	u3200
  6810  1E93                     u3201:
  6811  1E93  2E98               	goto	l2414
  6812  1E94                     u3200:
  6813  1E94                     l2410:
  6814                           
  6815                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  6816  1E94  0872               	movf	spiInit@sTransmitEdge,w
  6817  1E95  0094               	movwf	20	;volatile
  6818  1E96                     l2412:
  6819                           
  6820                           ;SPI.c: 18:         TRISC3 = 1;
  6821  1E96  1587               	bsf	7,3	;volatile
  6822                           
  6823                           ;SPI.c: 19:     }
  6824  1E97  2E9C               	goto	l93
  6825  1E98                     l2414:
  6826                           
  6827                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  6828  1E98  0870               	movf	spiInit@sDataSample,w
  6829  1E99  0472               	iorwf	spiInit@sTransmitEdge,w
  6830  1E9A  0094               	movwf	20	;volatile
  6831  1E9B                     l2416:
  6832                           
  6833                           ;SPI.c: 23:         TRISC3 = 0;
  6834  1E9B  1187               	bcf	7,3	;volatile
  6835  1E9C                     l93:	
  6836                           ;SPI.c: 24:     }
  6837                           
  6838                           
  6839                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  6840  1E9C  0873               	movf	spiInit@sType,w
  6841  1E9D  0471               	iorwf	spiInit@sClockIdle,w
  6842  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  6843  1E9F  1303               	bcf	3,6	;RP1=0, select bank0
  6844  1EA0  0094               	movwf	20	;volatile
  6845  1EA1                     l94:
  6846  1EA1  0008               	return
  6847  1EA2                     __end_of_spiInit:
  6848                           
  6849                           	psect	text26
  6850  1F13                     __ptext26:	
  6851 ;; *************** function _set_cursor *****************
  6852 ;; Defined at:
  6853 ;;		line 57 in file "LCD.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  a               1    wreg     unsigned char 
  6856 ;;  b               1    4[COMMON] unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  a               1    6[COMMON] unsigned char 
  6859 ;;  x               1    7[COMMON] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6869 ;;      Params:         1       0       0       0       0
  6870 ;;      Locals:         2       0       0       0       0
  6871 ;;      Temps:          1       0       0       0       0
  6872 ;;      Totals:         4       0       0       0       0
  6873 ;;Total ram usage:        4 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    2
  6876 ;; This function calls:
  6877 ;;		_CMDs
  6878 ;; This function is called by:
  6879 ;;		_main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _set_cursor
  6885  1F13                     _set_cursor:
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6889                           ;set_cursor@a stored from wreg
  6890  1F13  00F6               	movwf	set_cursor@a
  6891  1F14                     l2836:
  6892                           
  6893                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  6894  1F14  0376               	decf	set_cursor@a,w
  6895  1F15  1D03               	btfss	3,2
  6896  1F16  2F18               	goto	u3891
  6897  1F17  2F19               	goto	u3890
  6898  1F18                     u3891:
  6899  1F18  2F25               	goto	l2842
  6900  1F19                     u3890:
  6901  1F19                     l2838:
  6902                           
  6903                           ;LCD.c: 60:        x = 0x80 + b;
  6904  1F19  0874               	movf	set_cursor@b,w
  6905  1F1A  3E80               	addlw	128
  6906  1F1B  00F5               	movwf	??_set_cursor
  6907  1F1C  0875               	movf	??_set_cursor,w
  6908  1F1D  00F7               	movwf	set_cursor@x
  6909  1F1E                     l2840:
  6910                           
  6911                           ;LCD.c: 61:        CMDs(x);
  6912  1F1E  0877               	movf	set_cursor@x,w
  6913  1F1F  160A  158A  26F3  160A  158A  	fcall	_CMDs
  6914                           
  6915                           ;LCD.c: 62:     }
  6916  1F24  2F36               	goto	l205
  6917  1F25                     l2842:
  6918  1F25  3002               	movlw	2
  6919  1F26  0676               	xorwf	set_cursor@a,w
  6920  1F27  1D03               	btfss	3,2
  6921  1F28  2F2A               	goto	u3901
  6922  1F29  2F2B               	goto	u3900
  6923  1F2A                     u3901:
  6924  1F2A  2F36               	goto	l205
  6925  1F2B                     u3900:
  6926  1F2B                     l2844:
  6927                           
  6928                           ;LCD.c: 64:         x = 0xC0 + b;
  6929  1F2B  0874               	movf	set_cursor@b,w
  6930  1F2C  3EC0               	addlw	192
  6931  1F2D  00F5               	movwf	??_set_cursor
  6932  1F2E  0875               	movf	??_set_cursor,w
  6933  1F2F  00F7               	movwf	set_cursor@x
  6934  1F30                     l2846:
  6935                           
  6936                           ;LCD.c: 65:         CMDs(x);
  6937  1F30  0877               	movf	set_cursor@x,w
  6938  1F31  160A  158A  26F3  160A  158A  	fcall	_CMDs
  6939  1F36                     l205:
  6940  1F36  0008               	return
  6941  1F37                     __end_of_set_cursor:
  6942                           
  6943                           	psect	text27
  6944  10DE                     __ptext27:	
  6945 ;; *************** function _contador *****************
  6946 ;; Defined at:
  6947 ;;		line 86 in file "master.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0, pclath, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6961 ;;      Params:         0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0
  6963 ;;      Temps:          2       0       0       0       0
  6964 ;;      Totals:         2       0       0       0       0
  6965 ;;Total ram usage:        2 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    2
  6968 ;; This function calls:
  6969 ;;		_spiRead
  6970 ;;		_spiWrite
  6971 ;; This function is called by:
  6972 ;;		_main
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           
  6977                           ;psect for function _contador
  6978  10DE                     _contador:
  6979  10DE                     l2816:	
  6980                           ;incstack = 0
  6981                           ; Regs used in _contador: [wreg+status,2+status,0+pclath+cstack]
  6982                           
  6983                           
  6984                           ;master.c: 87:     TRISC1 = 0;
  6985  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  6986  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  6987  10E0  1107               	bcf	7,2	;volatile
  6988  10E1                     l2818:
  6989                           
  6990                           ;master.c: 88:     TRISC2 = 0;
  6991  10E1  3003               	movlw	3
  6992  10E2  00F2               	movwf	??_contador+1
  6993  10E3  3097               	movlw	151
  6994  10E4  00F1               	movwf	??_contador
  6995  10E5                     u4527:
  6996  10E5  0BF1               	decfsz	??_contador,f
  6997  10E6  28E5               	goto	u4527
  6998  10E7  0BF2               	decfsz	??_contador+1,f
  6999  10E8  28E5               	goto	u4527
  7000  10E9  28EA               	nop2
  7001  10EA                     l2820:
  7002                           
  7003                           ;master.c: 90:     PORTCbits.RC1 = 1;
  7004  10EA  3001               	movlw	1
  7005  10EB  160A  158A  264A  160A  118A  	fcall	_spiWrite
  7006  10F0                     l2822:
  7007                           
  7008                           ;master.c: 91:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  7009  10F0  160A  158A  2667  160A  118A  	fcall	_spiRead
  7010  10F5  00F1               	movwf	??_contador
  7011  10F6  0871               	movf	??_contador,w
  7012  10F7  1283               	bcf	3,5	;RP0=0, select bank0
  7013  10F8  1303               	bcf	3,6	;RP1=0, select bank0
  7014  10F9  00EE               	movwf	_cont
  7015  10FA  3003               	movlw	3
  7016  10FB  00F2               	movwf	??_contador+1
  7017  10FC  3097               	movlw	151
  7018  10FD  00F1               	movwf	??_contador
  7019  10FE                     u4537:
  7020  10FE  0BF1               	decfsz	??_contador,f
  7021  10FF  28FE               	goto	u4537
  7022  1100  0BF2               	decfsz	??_contador+1,f
  7023  1101  28FE               	goto	u4537
  7024  1102  2903               	nop2
  7025  1103                     l2824:
  7026  1103  1283               	bcf	3,5	;RP0=0, select bank0
  7027  1104  1303               	bcf	3,6	;RP1=0, select bank0
  7028  1105  1507               	bsf	7,2	;volatile
  7029  1106  3003               	movlw	3
  7030  1107  00F2               	movwf	??_contador+1
  7031  1108  3097               	movlw	151
  7032  1109  00F1               	movwf	??_contador
  7033  110A                     u4547:
  7034  110A  0BF1               	decfsz	??_contador,f
  7035  110B  290A               	goto	u4547
  7036  110C  0BF2               	decfsz	??_contador+1,f
  7037  110D  290A               	goto	u4547
  7038  110E  290F               	nop2
  7039  110F                     l71:
  7040  110F  0008               	return
  7041  1110                     __end_of_contador:
  7042                           
  7043                           	psect	text28
  7044  1E70                     __ptext28:	
  7045 ;; *************** function _config_txsta *****************
  7046 ;; Defined at:
  7047 ;;		line 9 in file "USART.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		None
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7061 ;;      Params:         0       0       0       0       0
  7062 ;;      Locals:         0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0
  7064 ;;      Totals:         0       0       0       0       0
  7065 ;;Total ram usage:        0 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_main
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           
  7075                           ;psect for function _config_txsta
  7076  1E70                     _config_txsta:
  7077  1E70                     l2784:	
  7078                           ;incstack = 0
  7079                           ; Regs used in _config_txsta: []
  7080                           
  7081                           
  7082                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  7083  1E70  1683               	bsf	3,5	;RP0=1, select bank1
  7084  1E71  1303               	bcf	3,6	;RP1=0, select bank1
  7085  1E72  1398               	bcf	24,7	;volatile
  7086                           
  7087                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  7088  1E73  1318               	bcf	24,6	;volatile
  7089                           
  7090                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  7091  1E74  1698               	bsf	24,5	;volatile
  7092                           
  7093                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  7094  1E75  1218               	bcf	24,4	;volatile
  7095                           
  7096                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  7097  1E76  1118               	bcf	24,2	;volatile
  7098                           
  7099                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  7100  1E77  1098               	bcf	24,1	;volatile
  7101                           
  7102                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  7103  1E78  1018               	bcf	24,0	;volatile
  7104  1E79                     l131:
  7105  1E79  0008               	return
  7106  1E7A                     __end_of_config_txsta:
  7107                           
  7108                           	psect	text29
  7109  1E57                     __ptext29:	
  7110 ;; *************** function _config_rcsta *****************
  7111 ;; Defined at:
  7112 ;;		line 19 in file "USART.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		status,2
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7126 ;;      Params:         0       0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0
  7129 ;;      Totals:         0       0       0       0       0
  7130 ;;Total ram usage:        0 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_main
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _config_rcsta
  7141  1E57                     _config_rcsta:
  7142  1E57                     l2786:	
  7143                           ;incstack = 0
  7144                           ; Regs used in _config_rcsta: [status,2]
  7145                           
  7146                           
  7147                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  7148  1E57  1283               	bcf	3,5	;RP0=0, select bank0
  7149  1E58  1303               	bcf	3,6	;RP1=0, select bank0
  7150  1E59  1798               	bsf	24,7	;volatile
  7151                           
  7152                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  7153  1E5A  1318               	bcf	24,6	;volatile
  7154                           
  7155                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  7156  1E5B  1298               	bcf	24,5	;volatile
  7157                           
  7158                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  7159  1E5C  1618               	bsf	24,4	;volatile
  7160  1E5D                     l2788:
  7161                           
  7162                           ;USART.c: 24:     RCREG = 0;
  7163  1E5D  019A               	clrf	26	;volatile
  7164  1E5E                     l134:
  7165  1E5E  0008               	return
  7166  1E5F                     __end_of_config_rcsta:
  7167                           
  7168                           	psect	text30
  7169  0003                     __ptext30:	
  7170 ;; *************** function _clear_LCD *****************
  7171 ;; Defined at:
  7172 ;;		line 52 in file "LCD.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      void 
  7179 ;; Registers used:
  7180 ;;		wreg, status,2, status,0, pclath, cstack
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7186 ;;      Params:         0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0
  7188 ;;      Temps:          0       0       0       0       0
  7189 ;;      Totals:         0       0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    2
  7193 ;; This function calls:
  7194 ;;		_CMDs
  7195 ;; This function is called by:
  7196 ;;		_main
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function _clear_LCD
  7202  0003                     _clear_LCD:
  7203  0003                     l2814:	
  7204                           ;incstack = 0
  7205                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  7206                           
  7207                           
  7208                           ;LCD.c: 53:     CMDs(0);
  7209  0003  3000               	movlw	0
  7210  0004  160A  158A  26F3  120A  118A  	fcall	_CMDs
  7211                           
  7212                           ;LCD.c: 54:     CMDs(1);
  7213  0009  3001               	movlw	1
  7214  000A  160A  158A  26F3  120A  118A  	fcall	_CMDs
  7215  000F                     l199:
  7216  000F  0008               	return
  7217  0010                     __end_of_clear_LCD:
  7218                           
  7219                           	psect	text31
  7220  0800                     __ptext31:	
  7221 ;; *************** function __baudios *****************
  7222 ;; Defined at:
  7223 ;;		line 5 in file "USART.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7237 ;;      Params:         0       0       0       0       0
  7238 ;;      Locals:         0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0
  7240 ;;      Totals:         0       0       0       0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_main
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           
  7251                           ;psect for function __baudios
  7252  0800                     __baudios:
  7253  0800                     l2782:	
  7254                           ;incstack = 0
  7255                           ; Regs used in __baudios: [wreg]
  7256                           
  7257                           
  7258                           ;USART.c: 6:     SPBRG = 12;
  7259  0800  300C               	movlw	12
  7260  0801  1683               	bsf	3,5	;RP0=1, select bank1
  7261  0802  1303               	bcf	3,6	;RP1=0, select bank1
  7262  0803  0099               	movwf	25	;volatile
  7263  0804                     l128:
  7264  0804  0008               	return
  7265  0805                     __end_of__baudios:
  7266                           
  7267                           	psect	text32
  7268  1F37                     __ptext32:	
  7269 ;; *************** function ___awtoft *****************
  7270 ;; Defined at:
  7271 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  c               2    8[COMMON] int 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  sign            1   13[COMMON] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  3    8[COMMON] float 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, pclath, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7285 ;;      Params:         3       0       0       0       0
  7286 ;;      Locals:         1       0       0       0       0
  7287 ;;      Temps:          2       0       0       0       0
  7288 ;;      Totals:         6       0       0       0       0
  7289 ;;Total ram usage:        6 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    1
  7292 ;; This function calls:
  7293 ;;		___ftpack
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function ___awtoft
  7301  1F37                     ___awtoft:
  7302  1F37                     l3156:	
  7303                           ;incstack = 0
  7304                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7305                           
  7306  1F37  01FD               	clrf	___awtoft@sign
  7307  1F38                     l3158:
  7308  1F38  1FF9               	btfss	___awtoft@c+1,7
  7309  1F39  2F3B               	goto	u4491
  7310  1F3A  2F3C               	goto	u4490
  7311  1F3B                     u4491:
  7312  1F3B  2F43               	goto	l3164
  7313  1F3C                     u4490:
  7314  1F3C                     l3160:
  7315  1F3C  09F8               	comf	___awtoft@c,f
  7316  1F3D  09F9               	comf	___awtoft@c+1,f
  7317  1F3E  0AF8               	incf	___awtoft@c,f
  7318  1F3F  1903               	skipnz
  7319  1F40  0AF9               	incf	___awtoft@c+1,f
  7320  1F41                     l3162:
  7321  1F41  01FD               	clrf	___awtoft@sign
  7322  1F42  0AFD               	incf	___awtoft@sign,f
  7323  1F43                     l3164:
  7324  1F43  0878               	movf	___awtoft@c,w
  7325  1F44  00F0               	movwf	___ftpack@arg
  7326  1F45  0879               	movf	___awtoft@c+1,w
  7327  1F46  00F1               	movwf	___ftpack@arg+1
  7328  1F47  01F2               	clrf	___ftpack@arg+2
  7329  1F48  308E               	movlw	142
  7330  1F49  00FB               	movwf	??___awtoft
  7331  1F4A  087B               	movf	??___awtoft,w
  7332  1F4B  00F3               	movwf	___ftpack@exp
  7333  1F4C  087D               	movf	___awtoft@sign,w
  7334  1F4D  00FC               	movwf	??___awtoft+1
  7335  1F4E  087C               	movf	??___awtoft+1,w
  7336  1F4F  00F4               	movwf	___ftpack@sign
  7337  1F50  160A  118A  242A  160A  158A  	fcall	___ftpack
  7338  1F55  0870               	movf	?___ftpack,w
  7339  1F56  00F8               	movwf	?___awtoft
  7340  1F57  0871               	movf	?___ftpack+1,w
  7341  1F58  00F9               	movwf	?___awtoft+1
  7342  1F59  0872               	movf	?___ftpack+2,w
  7343  1F5A  00FA               	movwf	?___awtoft+2
  7344  1F5B                     l624:
  7345  1F5B  0008               	return
  7346  1F5C                     __end_of___awtoft:
  7347                           
  7348                           	psect	text33
  7349  142A                     __ptext33:	
  7350 ;; *************** function ___ftpack *****************
  7351 ;; Defined at:
  7352 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  arg             3    0[COMMON] unsigned um
  7355 ;;  exp             1    3[COMMON] unsigned char 
  7356 ;;  sign            1    4[COMMON] unsigned char 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  3    0[COMMON] float 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7368 ;;      Params:         5       0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0
  7370 ;;      Temps:          3       0       0       0       0
  7371 ;;      Totals:         8       0       0       0       0
  7372 ;;Total ram usage:        8 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		___awtoft
  7378 ;;		___ftadd
  7379 ;;		___ftmul
  7380 ;;		___lltoft
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function ___ftpack
  7386  142A                     ___ftpack:
  7387  142A                     l2080:	
  7388                           ;incstack = 0
  7389                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7390                           
  7391  142A  0873               	movf	___ftpack@exp,w
  7392  142B  1903               	btfsc	3,2
  7393  142C  2C2E               	goto	u2261
  7394  142D  2C2F               	goto	u2260
  7395  142E                     u2261:
  7396  142E  2C36               	goto	l2084
  7397  142F                     u2260:
  7398  142F                     l2082:
  7399  142F  0872               	movf	___ftpack@arg+2,w
  7400  1430  0471               	iorwf	___ftpack@arg+1,w
  7401  1431  0470               	iorwf	___ftpack@arg,w
  7402  1432  1D03               	skipz
  7403  1433  2C35               	goto	u2271
  7404  1434  2C36               	goto	u2270
  7405  1435                     u2271:
  7406  1435  2C49               	goto	l2090
  7407  1436                     u2270:
  7408  1436                     l2084:
  7409  1436  3000               	movlw	0
  7410  1437  00F0               	movwf	?___ftpack
  7411  1438  3000               	movlw	0
  7412  1439  00F1               	movwf	?___ftpack+1
  7413  143A  3000               	movlw	0
  7414  143B  00F2               	movwf	?___ftpack+2
  7415  143C  2CA5               	goto	l647
  7416  143D                     l2088:
  7417  143D  3001               	movlw	1
  7418  143E  00F5               	movwf	??___ftpack
  7419  143F  0875               	movf	??___ftpack,w
  7420  1440  07F3               	addwf	___ftpack@exp,f
  7421  1441  3001               	movlw	1
  7422  1442                     u2285:
  7423  1442  1003               	clrc
  7424  1443  0CF2               	rrf	___ftpack@arg+2,f
  7425  1444  0CF1               	rrf	___ftpack@arg+1,f
  7426  1445  0CF0               	rrf	___ftpack@arg,f
  7427  1446  3EFF               	addlw	-1
  7428  1447  1D03               	skipz
  7429  1448  2C42               	goto	u2285
  7430  1449                     l2090:
  7431  1449  30FE               	movlw	254
  7432  144A  0572               	andwf	___ftpack@arg+2,w
  7433  144B  1D03               	btfss	3,2
  7434  144C  2C4E               	goto	u2291
  7435  144D  2C4F               	goto	u2290
  7436  144E                     u2291:
  7437  144E  2C3D               	goto	l2088
  7438  144F                     u2290:
  7439  144F  2C66               	goto	l651
  7440  1450                     l2092:
  7441  1450  3001               	movlw	1
  7442  1451  00F5               	movwf	??___ftpack
  7443  1452  0875               	movf	??___ftpack,w
  7444  1453  07F3               	addwf	___ftpack@exp,f
  7445  1454                     l2094:
  7446  1454  3001               	movlw	1
  7447  1455  07F0               	addwf	___ftpack@arg,f
  7448  1456  3000               	movlw	0
  7449  1457  1803               	skipnc
  7450  1458  3001               	movlw	1
  7451  1459  07F1               	addwf	___ftpack@arg+1,f
  7452  145A  3000               	movlw	0
  7453  145B  1803               	skipnc
  7454  145C  3001               	movlw	1
  7455  145D  07F2               	addwf	___ftpack@arg+2,f
  7456  145E                     l2096:
  7457  145E  3001               	movlw	1
  7458  145F                     u2305:
  7459  145F  1003               	clrc
  7460  1460  0CF2               	rrf	___ftpack@arg+2,f
  7461  1461  0CF1               	rrf	___ftpack@arg+1,f
  7462  1462  0CF0               	rrf	___ftpack@arg,f
  7463  1463  3EFF               	addlw	-1
  7464  1464  1D03               	skipz
  7465  1465  2C5F               	goto	u2305
  7466  1466                     l651:
  7467  1466  30FF               	movlw	255
  7468  1467  0572               	andwf	___ftpack@arg+2,w
  7469  1468  1D03               	btfss	3,2
  7470  1469  2C6B               	goto	u2311
  7471  146A  2C6C               	goto	u2310
  7472  146B                     u2311:
  7473  146B  2C50               	goto	l2092
  7474  146C                     u2310:
  7475  146C  2C77               	goto	l2100
  7476  146D                     l2098:
  7477  146D  3001               	movlw	1
  7478  146E  02F3               	subwf	___ftpack@exp,f
  7479  146F  3001               	movlw	1
  7480  1470                     u2325:
  7481  1470  1003               	clrc
  7482  1471  0DF0               	rlf	___ftpack@arg,f
  7483  1472  0DF1               	rlf	___ftpack@arg+1,f
  7484  1473  0DF2               	rlf	___ftpack@arg+2,f
  7485  1474  3EFF               	addlw	-1
  7486  1475  1D03               	skipz
  7487  1476  2C70               	goto	u2325
  7488  1477                     l2100:
  7489  1477  1BF1               	btfsc	___ftpack@arg+1,7
  7490  1478  2C7A               	goto	u2331
  7491  1479  2C7B               	goto	u2330
  7492  147A                     u2331:
  7493  147A  2C81               	goto	l658
  7494  147B                     u2330:
  7495  147B                     l2102:
  7496  147B  3002               	movlw	2
  7497  147C  0273               	subwf	___ftpack@exp,w
  7498  147D  1803               	skipnc
  7499  147E  2C80               	goto	u2341
  7500  147F  2C81               	goto	u2340
  7501  1480                     u2341:
  7502  1480  2C6D               	goto	l2098
  7503  1481                     u2340:
  7504  1481                     l658:
  7505  1481  1873               	btfsc	___ftpack@exp,0
  7506  1482  2C84               	goto	u2351
  7507  1483  2C85               	goto	u2350
  7508  1484                     u2351:
  7509  1484  2C8B               	goto	l659
  7510  1485                     u2350:
  7511  1485                     l2104:
  7512  1485  30FF               	movlw	255
  7513  1486  05F0               	andwf	___ftpack@arg,f
  7514  1487  307F               	movlw	127
  7515  1488  05F1               	andwf	___ftpack@arg+1,f
  7516  1489  30FF               	movlw	255
  7517  148A  05F2               	andwf	___ftpack@arg+2,f
  7518  148B                     l659:
  7519  148B  1003               	clrc
  7520  148C  0CF3               	rrf	___ftpack@exp,f
  7521  148D                     l2106:
  7522  148D  0873               	movf	___ftpack@exp,w
  7523  148E  00F5               	movwf	??___ftpack
  7524  148F  01F6               	clrf	??___ftpack+1
  7525  1490  01F7               	clrf	??___ftpack+2
  7526  1491  3010               	movlw	16
  7527  1492                     u2365:
  7528  1492  1003               	clrc
  7529  1493  0DF5               	rlf	??___ftpack,f
  7530  1494  0DF6               	rlf	??___ftpack+1,f
  7531  1495  0DF7               	rlf	??___ftpack+2,f
  7532  1496                     u2360:
  7533  1496  3EFF               	addlw	-1
  7534  1497  1D03               	skipz
  7535  1498  2C92               	goto	u2365
  7536  1499  0875               	movf	??___ftpack,w
  7537  149A  04F0               	iorwf	___ftpack@arg,f
  7538  149B  0876               	movf	??___ftpack+1,w
  7539  149C  04F1               	iorwf	___ftpack@arg+1,f
  7540  149D  0877               	movf	??___ftpack+2,w
  7541  149E  04F2               	iorwf	___ftpack@arg+2,f
  7542  149F                     l2108:
  7543  149F  0874               	movf	___ftpack@sign,w
  7544  14A0  1903               	btfsc	3,2
  7545  14A1  2CA3               	goto	u2371
  7546  14A2  2CA4               	goto	u2370
  7547  14A3                     u2371:
  7548  14A3  2CA5               	goto	l660
  7549  14A4                     u2370:
  7550  14A4                     l2110:
  7551  14A4  17F2               	bsf	___ftpack@arg+2,7
  7552  14A5                     l660:
  7553  14A5                     l647:
  7554  14A5  0008               	return
  7555  14A6                     __end_of___ftpack:
  7556                           
  7557                           	psect	text34
  7558  1FA6                     __ptext34:	
  7559 ;; *************** function _Write_USART_String *****************
  7560 ;; Defined at:
  7561 ;;		line 30 in file "USART.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  a               2    1[COMMON] PTR unsigned char 
  7564 ;;		 -> STR_3(13), BUFFER(20), 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  i               1    4[COMMON] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7576 ;;      Params:         2       0       0       0       0
  7577 ;;      Locals:         1       0       0       0       0
  7578 ;;      Temps:          1       0       0       0       0
  7579 ;;      Totals:         4       0       0       0       0
  7580 ;;Total ram usage:        4 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    1
  7583 ;; This function calls:
  7584 ;;		_Write_USART
  7585 ;; This function is called by:
  7586 ;;		_main
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _Write_USART_String
  7592  1FA6                     _Write_USART_String:
  7593  1FA6                     l3148:	
  7594                           ;incstack = 0
  7595                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7596                           
  7597                           
  7598                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  7599  1FA6  01F4               	clrf	Write_USART_String@i
  7600  1FA7  2FBD               	goto	l3154
  7601  1FA8                     l3150:
  7602                           
  7603                           ;USART.c: 33:         Write_USART(a[i]);
  7604  1FA8  0874               	movf	Write_USART_String@i,w
  7605  1FA9  0771               	addwf	Write_USART_String@a,w
  7606  1FAA  0084               	movwf	4
  7607  1FAB  0872               	movf	Write_USART_String@a+1,w
  7608  1FAC  1803               	skipnc
  7609  1FAD  0A72               	incf	Write_USART_String@a+1,w
  7610  1FAE  00FF               	movwf	btemp+1
  7611  1FAF  160A  118A  2000  160A  158A  	fcall	stringtab
  7612  1FB4  120A  158A  2005  160A  158A  	fcall	_Write_USART
  7613  1FB9                     l3152:
  7614                           
  7615                           ;USART.c: 34:     }
  7616  1FB9  3001               	movlw	1
  7617  1FBA  00F3               	movwf	??_Write_USART_String
  7618  1FBB  0873               	movf	??_Write_USART_String,w
  7619  1FBC  07F4               	addwf	Write_USART_String@i,f
  7620  1FBD                     l3154:
  7621  1FBD  0874               	movf	Write_USART_String@i,w
  7622  1FBE  0771               	addwf	Write_USART_String@a,w
  7623  1FBF  0084               	movwf	4
  7624  1FC0  0872               	movf	Write_USART_String@a+1,w
  7625  1FC1  1803               	skipnc
  7626  1FC2  0A72               	incf	Write_USART_String@a+1,w
  7627  1FC3  1283               	bcf	3,5	;RP0=0, select bank0
  7628  1FC4  1303               	bcf	3,6	;RP1=0, select bank0
  7629  1FC5  00FF               	movwf	btemp+1
  7630  1FC6  160A  118A  2000  160A  158A  	fcall	stringtab
  7631  1FCB  3A00               	xorlw	0
  7632  1FCC  1D03               	skipz
  7633  1FCD  2FCF               	goto	u4481
  7634  1FCE  2FD0               	goto	u4480
  7635  1FCF                     u4481:
  7636  1FCF  2FA8               	goto	l3150
  7637  1FD0                     u4480:
  7638  1FD0                     l146:
  7639  1FD0  0008               	return
  7640  1FD1                     __end_of_Write_USART_String:
  7641                           
  7642                           	psect	text35
  7643  0805                     __ptext35:	
  7644 ;; *************** function _Write_USART *****************
  7645 ;; Defined at:
  7646 ;;		line 26 in file "USART.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  a               1    wreg     unsigned char 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  a               1    0[COMMON] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7660 ;;      Params:         0       0       0       0       0
  7661 ;;      Locals:         1       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0
  7663 ;;      Totals:         1       0       0       0       0
  7664 ;;Total ram usage:        1 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_main
  7670 ;;		_Write_USART_String
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _Write_USART
  7676  0805                     _Write_USART:
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _Write_USART: [wreg]
  7680                           ;Write_USART@a stored from wreg
  7681  0805  00F0               	movwf	Write_USART@a
  7682  0806                     l2396:
  7683  0806                     l137:	
  7684                           ;USART.c: 27:     while(!TRMT);
  7685                           
  7686  0806  1683               	bsf	3,5	;RP0=1, select bank1
  7687  0807  1303               	bcf	3,6	;RP1=0, select bank1
  7688  0808  1C98               	btfss	24,1	;volatile
  7689  0809  280B               	goto	u3191
  7690  080A  280C               	goto	u3190
  7691  080B                     u3191:
  7692  080B  2806               	goto	l137
  7693  080C                     u3190:
  7694  080C                     l2398:
  7695                           
  7696                           ;USART.c: 28:     TXREG=a;
  7697  080C  0870               	movf	Write_USART@a,w
  7698  080D  1283               	bcf	3,5	;RP0=0, select bank0
  7699  080E  1303               	bcf	3,6	;RP1=0, select bank0
  7700  080F  0099               	movwf	25	;volatile
  7701  0810                     l140:
  7702  0810  0008               	return
  7703  0811                     __end_of_Write_USART:
  7704                           
  7705                           	psect	text36
  7706  12F5                     __ptext36:	
  7707 ;; *************** function _LCD_init *****************
  7708 ;; Defined at:
  7709 ;;		line 69 in file "LCD.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0, pclath, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7723 ;;      Params:         0       0       0       0       0
  7724 ;;      Locals:         0       0       0       0       0
  7725 ;;      Temps:          2       0       0       0       0
  7726 ;;      Totals:         2       0       0       0       0
  7727 ;;Total ram usage:        2 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    2
  7730 ;; This function calls:
  7731 ;;		_CMDs
  7732 ;; This function is called by:
  7733 ;;		_main
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           
  7738                           ;psect for function _LCD_init
  7739  12F5                     _LCD_init:
  7740  12F5                     l2790:	
  7741                           ;incstack = 0
  7742                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7743                           
  7744                           
  7745                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7746  12F5  301A               	movlw	26
  7747  12F6  00F5               	movwf	??_LCD_init+1
  7748  12F7  30F8               	movlw	248
  7749  12F8  00F4               	movwf	??_LCD_init
  7750  12F9                     u4557:
  7751  12F9  0BF4               	decfsz	??_LCD_init,f
  7752  12FA  2AF9               	goto	u4557
  7753  12FB  0BF5               	decfsz	??_LCD_init+1,f
  7754  12FC  2AF9               	goto	u4557
  7755  12FD  0000               	nop
  7756  12FE                     l2792:
  7757                           
  7758                           ;LCD.c: 71:     CMDs (0x30);
  7759  12FE  3030               	movlw	48
  7760  12FF  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7761  1304                     l2794:
  7762                           
  7763                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7764  1304  3007               	movlw	7
  7765  1305  00F5               	movwf	??_LCD_init+1
  7766  1306  307D               	movlw	125
  7767  1307  00F4               	movwf	??_LCD_init
  7768  1308                     u4567:
  7769  1308  0BF4               	decfsz	??_LCD_init,f
  7770  1309  2B08               	goto	u4567
  7771  130A  0BF5               	decfsz	??_LCD_init+1,f
  7772  130B  2B08               	goto	u4567
  7773                           
  7774                           ;LCD.c: 73:     CMDs (0x30);
  7775  130C  3030               	movlw	48
  7776  130D  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7777  1312                     l2796:
  7778                           
  7779                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7780  1312  3021               	movlw	33
  7781  1313  00F4               	movwf	??_LCD_init
  7782  1314                     u4577:
  7783  1314  0BF4               	decfsz	??_LCD_init,f
  7784  1315  2B14               	goto	u4577
  7785  1316                     l2798:
  7786                           
  7787                           ;LCD.c: 75:     CMDs (0x30);
  7788  1316  3030               	movlw	48
  7789  1317  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7790                           
  7791                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7792  131C  3021               	movlw	33
  7793  131D  00F4               	movwf	??_LCD_init
  7794  131E                     u4587:
  7795  131E  0BF4               	decfsz	??_LCD_init,f
  7796  131F  2B1E               	goto	u4587
  7797  1320                     l2800:
  7798                           
  7799                           ;LCD.c: 77:     CMDs (0x38);
  7800  1320  3038               	movlw	56
  7801  1321  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7802  1326                     l2802:
  7803                           
  7804                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7805  1326  3013               	movlw	19
  7806  1327  00F4               	movwf	??_LCD_init
  7807  1328                     u4597:
  7808  1328  0BF4               	decfsz	??_LCD_init,f
  7809  1329  2B28               	goto	u4597
  7810  132A  2B2B               	nop2
  7811                           
  7812                           ;LCD.c: 79:     CMDs (0x08);
  7813  132B  3008               	movlw	8
  7814  132C  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7815  1331                     l2804:
  7816                           
  7817                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7818  1331  3013               	movlw	19
  7819  1332  00F4               	movwf	??_LCD_init
  7820  1333                     u4607:
  7821  1333  0BF4               	decfsz	??_LCD_init,f
  7822  1334  2B33               	goto	u4607
  7823  1335  2B36               	nop2
  7824  1336                     l2806:
  7825                           
  7826                           ;LCD.c: 81:     CMDs (0x01);
  7827  1336  3001               	movlw	1
  7828  1337  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7829                           
  7830                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7831  133C  3007               	movlw	7
  7832  133D  00F5               	movwf	??_LCD_init+1
  7833  133E  307D               	movlw	125
  7834  133F  00F4               	movwf	??_LCD_init
  7835  1340                     u4617:
  7836  1340  0BF4               	decfsz	??_LCD_init,f
  7837  1341  2B40               	goto	u4617
  7838  1342  0BF5               	decfsz	??_LCD_init+1,f
  7839  1343  2B40               	goto	u4617
  7840  1344                     l2808:
  7841                           
  7842                           ;LCD.c: 83:     CMDs (0x06);
  7843  1344  3006               	movlw	6
  7844  1345  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7845  134A                     l2810:
  7846                           
  7847                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7848  134A  3013               	movlw	19
  7849  134B  00F4               	movwf	??_LCD_init
  7850  134C                     u4627:
  7851  134C  0BF4               	decfsz	??_LCD_init,f
  7852  134D  2B4C               	goto	u4627
  7853  134E  2B4F               	nop2
  7854                           
  7855                           ;LCD.c: 85:     CMDs (0x0C);
  7856  134F  300C               	movlw	12
  7857  1350  160A  158A  26F3  160A  118A  	fcall	_CMDs
  7858  1355                     l2812:
  7859                           
  7860                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7861  1355  3013               	movlw	19
  7862  1356  00F4               	movwf	??_LCD_init
  7863  1357                     u4637:
  7864  1357  0BF4               	decfsz	??_LCD_init,f
  7865  1358  2B57               	goto	u4637
  7866  1359  2B5A               	nop2
  7867  135A                     l208:
  7868  135A  0008               	return
  7869  135B                     __end_of_LCD_init:
  7870                           
  7871                           	psect	text37
  7872  1EF3                     __ptext37:	
  7873 ;; *************** function _CMDs *****************
  7874 ;; Defined at:
  7875 ;;		line 42 in file "LCD.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  a               1    wreg     unsigned char 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  a               1    3[COMMON] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  1    wreg      void 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0, pclath, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7889 ;;      Params:         0       0       0       0       0
  7890 ;;      Locals:         1       0       0       0       0
  7891 ;;      Temps:          2       0       0       0       0
  7892 ;;      Totals:         3       0       0       0       0
  7893 ;;Total ram usage:        3 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    1
  7896 ;; This function calls:
  7897 ;;		_port
  7898 ;; This function is called by:
  7899 ;;		_clear_LCD
  7900 ;;		_set_cursor
  7901 ;;		_LCD_init
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           
  7906                           ;psect for function _CMDs
  7907  1EF3                     _CMDs:
  7908                           
  7909                           ;incstack = 0
  7910                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  7911                           ;CMDs@a stored from wreg
  7912  1EF3  00F3               	movwf	CMDs@a
  7913  1EF4                     l2418:
  7914                           
  7915                           ;LCD.c: 43:     RE0 = 0;
  7916  1EF4  1283               	bcf	3,5	;RP0=0, select bank0
  7917  1EF5  1303               	bcf	3,6	;RP1=0, select bank0
  7918  1EF6  1009               	bcf	9,0	;volatile
  7919  1EF7                     l2420:
  7920                           
  7921                           ;LCD.c: 44:     port(a);
  7922  1EF7  0873               	movf	CMDs@a,w
  7923  1EF8  160A  118A  2182  160A  158A  	fcall	_port
  7924  1EFD                     l2422:
  7925                           
  7926                           ;LCD.c: 45:     RE1 = 1;
  7927  1EFD  1283               	bcf	3,5	;RP0=0, select bank0
  7928  1EFE  1303               	bcf	3,6	;RP1=0, select bank0
  7929  1EFF  1489               	bsf	9,1	;volatile
  7930  1F00                     l2424:
  7931                           
  7932                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7933  1F00  2F01               	nop2	;2 cycle nop
  7934  1F01  2F02               	nop2	;2 cycle nop
  7935  1F02  0000               	nop
  7936  1F03                     l2426:
  7937                           
  7938                           ;LCD.c: 47:     RE1 = 0;
  7939  1F03  1283               	bcf	3,5	;RP0=0, select bank0
  7940  1F04  1303               	bcf	3,6	;RP1=0, select bank0
  7941  1F05  1089               	bcf	9,1	;volatile
  7942  1F06                     l2428:
  7943                           
  7944                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7945  1F06  2F07               	nop2	;2 cycle nop
  7946  1F07  2F08               	nop2	;2 cycle nop
  7947  1F08  0000               	nop
  7948  1F09                     l2430:
  7949                           
  7950                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  7951  1F09  3003               	movlw	3
  7952  1F0A  00F2               	movwf	??_CMDs+1
  7953  1F0B  3097               	movlw	151
  7954  1F0C  00F1               	movwf	??_CMDs
  7955  1F0D                     u4647:
  7956  1F0D  0BF1               	decfsz	??_CMDs,f
  7957  1F0E  2F0D               	goto	u4647
  7958  1F0F  0BF2               	decfsz	??_CMDs+1,f
  7959  1F10  2F0D               	goto	u4647
  7960  1F11  2F12               	nop2
  7961  1F12                     l196:
  7962  1F12  0008               	return
  7963  1F13                     __end_of_CMDs:
  7964                           
  7965                           	psect	text38
  7966  1182                     __ptext38:	
  7967 ;; *************** function _port *****************
  7968 ;; Defined at:
  7969 ;;		line 7 in file "LCD.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  a               1    wreg     unsigned char 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  a               1    0[COMMON] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7983 ;;      Params:         0       0       0       0       0
  7984 ;;      Locals:         1       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0
  7986 ;;      Totals:         1       0       0       0       0
  7987 ;;Total ram usage:        1 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_CMDs
  7993 ;;		_write_char
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _port
  7999  1182                     _port:
  8000                           
  8001                           ;incstack = 0
  8002                           ; Regs used in _port: [wreg]
  8003                           ;port@a stored from wreg
  8004  1182  00F0               	movwf	port@a
  8005  1183                     l2114:
  8006                           
  8007                           ;LCD.c: 8:     if(a & 1){
  8008  1183  1C70               	btfss	port@a,0
  8009  1184  2986               	goto	u2391
  8010  1185  2987               	goto	u2390
  8011  1186                     u2391:
  8012  1186  298B               	goto	l177
  8013  1187                     u2390:
  8014  1187                     l2116:
  8015                           
  8016                           ;LCD.c: 9:         RD0=1;}
  8017  1187  1283               	bcf	3,5	;RP0=0, select bank0
  8018  1188  1303               	bcf	3,6	;RP1=0, select bank0
  8019  1189  1408               	bsf	8,0	;volatile
  8020  118A  298E               	goto	l178
  8021  118B                     l177:	
  8022                           ;LCD.c: 10:     else{
  8023                           
  8024                           
  8025                           ;LCD.c: 11:         RD0=0;}
  8026  118B  1283               	bcf	3,5	;RP0=0, select bank0
  8027  118C  1303               	bcf	3,6	;RP1=0, select bank0
  8028  118D  1008               	bcf	8,0	;volatile
  8029  118E                     l178:
  8030                           
  8031                           ;LCD.c: 12:     if(a & 2){
  8032  118E  1CF0               	btfss	port@a,1
  8033  118F  2991               	goto	u2401
  8034  1190  2992               	goto	u2400
  8035  1191                     u2401:
  8036  1191  2994               	goto	l179
  8037  1192                     u2400:
  8038  1192                     l2118:
  8039                           
  8040                           ;LCD.c: 13:         RD1=1;}
  8041  1192  1488               	bsf	8,1	;volatile
  8042  1193  2995               	goto	l180
  8043  1194                     l179:	
  8044                           ;LCD.c: 14:     else{
  8045                           
  8046                           
  8047                           ;LCD.c: 15:         RD1=0;}
  8048  1194  1088               	bcf	8,1	;volatile
  8049  1195                     l180:
  8050                           
  8051                           ;LCD.c: 16:     if(a & 4){
  8052  1195  1D70               	btfss	port@a,2
  8053  1196  2998               	goto	u2411
  8054  1197  2999               	goto	u2410
  8055  1198                     u2411:
  8056  1198  299B               	goto	l181
  8057  1199                     u2410:
  8058  1199                     l2120:
  8059                           
  8060                           ;LCD.c: 17:         RD2=1;}
  8061  1199  1508               	bsf	8,2	;volatile
  8062  119A  299C               	goto	l182
  8063  119B                     l181:	
  8064                           ;LCD.c: 18:     else{
  8065                           
  8066                           
  8067                           ;LCD.c: 19:         RD2=0;}
  8068  119B  1108               	bcf	8,2	;volatile
  8069  119C                     l182:
  8070                           
  8071                           ;LCD.c: 20:     if(a & 8){
  8072  119C  1DF0               	btfss	port@a,3
  8073  119D  299F               	goto	u2421
  8074  119E  29A0               	goto	u2420
  8075  119F                     u2421:
  8076  119F  29A2               	goto	l183
  8077  11A0                     u2420:
  8078  11A0                     l2122:
  8079                           
  8080                           ;LCD.c: 21:         RD3=1;}
  8081  11A0  1588               	bsf	8,3	;volatile
  8082  11A1  29A3               	goto	l184
  8083  11A2                     l183:	
  8084                           ;LCD.c: 22:     else{
  8085                           
  8086                           
  8087                           ;LCD.c: 23:         RD3=0;}
  8088  11A2  1188               	bcf	8,3	;volatile
  8089  11A3                     l184:
  8090                           
  8091                           ;LCD.c: 24:     if(a & 16){
  8092  11A3  1E70               	btfss	port@a,4
  8093  11A4  29A6               	goto	u2431
  8094  11A5  29A7               	goto	u2430
  8095  11A6                     u2431:
  8096  11A6  29A9               	goto	l185
  8097  11A7                     u2430:
  8098  11A7                     l2124:
  8099                           
  8100                           ;LCD.c: 25:         RD4=1;}
  8101  11A7  1608               	bsf	8,4	;volatile
  8102  11A8  29AA               	goto	l186
  8103  11A9                     l185:	
  8104                           ;LCD.c: 26:     else{
  8105                           
  8106                           
  8107                           ;LCD.c: 27:         RD4=0;}
  8108  11A9  1208               	bcf	8,4	;volatile
  8109  11AA                     l186:
  8110                           
  8111                           ;LCD.c: 28:     if(a & 32){
  8112  11AA  1EF0               	btfss	port@a,5
  8113  11AB  29AD               	goto	u2441
  8114  11AC  29AE               	goto	u2440
  8115  11AD                     u2441:
  8116  11AD  29B0               	goto	l187
  8117  11AE                     u2440:
  8118  11AE                     l2126:
  8119                           
  8120                           ;LCD.c: 29:         RD5=1;}
  8121  11AE  1688               	bsf	8,5	;volatile
  8122  11AF  29B1               	goto	l188
  8123  11B0                     l187:	
  8124                           ;LCD.c: 30:     else{
  8125                           
  8126                           
  8127                           ;LCD.c: 31:         RD5=0;}
  8128  11B0  1288               	bcf	8,5	;volatile
  8129  11B1                     l188:
  8130                           
  8131                           ;LCD.c: 32:     if(a & 64){
  8132  11B1  1F70               	btfss	port@a,6
  8133  11B2  29B4               	goto	u2451
  8134  11B3  29B5               	goto	u2450
  8135  11B4                     u2451:
  8136  11B4  29B7               	goto	l189
  8137  11B5                     u2450:
  8138  11B5                     l2128:
  8139                           
  8140                           ;LCD.c: 33:         RD6=1;}
  8141  11B5  1708               	bsf	8,6	;volatile
  8142  11B6  29B8               	goto	l190
  8143  11B7                     l189:	
  8144                           ;LCD.c: 34:     else{
  8145                           
  8146                           
  8147                           ;LCD.c: 35:         RD6=0;}
  8148  11B7  1308               	bcf	8,6	;volatile
  8149  11B8                     l190:
  8150                           
  8151                           ;LCD.c: 36:     if(a & 128){
  8152  11B8  1FF0               	btfss	port@a,7
  8153  11B9  29BB               	goto	u2461
  8154  11BA  29BC               	goto	u2460
  8155  11BB                     u2461:
  8156  11BB  29BE               	goto	l191
  8157  11BC                     u2460:
  8158  11BC                     l2130:
  8159                           
  8160                           ;LCD.c: 37:         RD7=1;}
  8161  11BC  1788               	bsf	8,7	;volatile
  8162  11BD  29BF               	goto	l193
  8163  11BE                     l191:	
  8164                           ;LCD.c: 38:     else{
  8165                           
  8166                           
  8167                           ;LCD.c: 39:         RD7=0;}
  8168  11BE  1388               	bcf	8,7	;volatile
  8169  11BF                     l193:
  8170  11BF  0008               	return
  8171  11C0                     __end_of_port:
  8172                           
  8173                           	psect	text39
  8174  10AC                     __ptext39:	
  8175 ;; *************** function _ADCread *****************
  8176 ;; Defined at:
  8177 ;;		line 98 in file "master.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0, pclath, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8191 ;;      Params:         0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0
  8193 ;;      Temps:          2       0       0       0       0
  8194 ;;      Totals:         2       0       0       0       0
  8195 ;;Total ram usage:        2 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    2
  8198 ;; This function calls:
  8199 ;;		_spiRead
  8200 ;;		_spiWrite
  8201 ;; This function is called by:
  8202 ;;		_main
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _ADCread
  8208  10AC                     _ADCread:
  8209  10AC                     l2826:	
  8210                           ;incstack = 0
  8211                           ; Regs used in _ADCread: [wreg+status,2+status,0+pclath+cstack]
  8212                           
  8213  10AC  1283               	bcf	3,5	;RP0=0, select bank0
  8214  10AD  1303               	bcf	3,6	;RP1=0, select bank0
  8215  10AE  1087               	bcf	7,1	;volatile
  8216  10AF                     l2828:
  8217  10AF  3003               	movlw	3
  8218  10B0  00F2               	movwf	??_ADCread+1
  8219  10B1  3097               	movlw	151
  8220  10B2  00F1               	movwf	??_ADCread
  8221  10B3                     u4657:
  8222  10B3  0BF1               	decfsz	??_ADCread,f
  8223  10B4  28B3               	goto	u4657
  8224  10B5  0BF2               	decfsz	??_ADCread+1,f
  8225  10B6  28B3               	goto	u4657
  8226  10B7  28B8               	nop2
  8227  10B8                     l2830:
  8228  10B8  3001               	movlw	1
  8229  10B9  160A  158A  264A  160A  118A  	fcall	_spiWrite
  8230  10BE                     l2832:
  8231  10BE  160A  158A  2667  160A  118A  	fcall	_spiRead
  8232  10C3  00F1               	movwf	??_ADCread
  8233  10C4  0871               	movf	??_ADCread,w
  8234  10C5  1283               	bcf	3,5	;RP0=0, select bank0
  8235  10C6  1303               	bcf	3,6	;RP1=0, select bank0
  8236  10C7  00ED               	movwf	_ADC
  8237  10C8  3003               	movlw	3
  8238  10C9  00F2               	movwf	??_ADCread+1
  8239  10CA  3097               	movlw	151
  8240  10CB  00F1               	movwf	??_ADCread
  8241  10CC                     u4667:
  8242  10CC  0BF1               	decfsz	??_ADCread,f
  8243  10CD  28CC               	goto	u4667
  8244  10CE  0BF2               	decfsz	??_ADCread+1,f
  8245  10CF  28CC               	goto	u4667
  8246  10D0  28D1               	nop2
  8247  10D1                     l2834:
  8248  10D1  1283               	bcf	3,5	;RP0=0, select bank0
  8249  10D2  1303               	bcf	3,6	;RP1=0, select bank0
  8250  10D3  1487               	bsf	7,1	;volatile
  8251  10D4  3003               	movlw	3
  8252  10D5  00F2               	movwf	??_ADCread+1
  8253  10D6  3097               	movlw	151
  8254  10D7  00F1               	movwf	??_ADCread
  8255  10D8                     u4677:
  8256  10D8  0BF1               	decfsz	??_ADCread,f
  8257  10D9  28D8               	goto	u4677
  8258  10DA  0BF2               	decfsz	??_ADCread+1,f
  8259  10DB  28D8               	goto	u4677
  8260  10DC  28DD               	nop2
  8261  10DD                     l74:
  8262  10DD  0008               	return
  8263  10DE                     __end_of_ADCread:
  8264                           
  8265                           	psect	text40
  8266  1E4A                     __ptext40:	
  8267 ;; *************** function _spiWrite *****************
  8268 ;; Defined at:
  8269 ;;		line 34 in file "SPI.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  dat             1    wreg     unsigned char 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  dat             1    0[COMMON] unsigned char 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8283 ;;      Params:         0       0       0       0       0
  8284 ;;      Locals:         1       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0
  8286 ;;      Totals:         1       0       0       0       0
  8287 ;;Total ram usage:        1 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		_contador
  8293 ;;		_ADCread
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           
  8298                           ;psect for function _spiWrite
  8299  1E4A                     _spiWrite:
  8300                           
  8301                           ;incstack = 0
  8302                           ; Regs used in _spiWrite: [wreg]
  8303                           ;spiWrite@dat stored from wreg
  8304  1E4A  00F0               	movwf	spiWrite@dat
  8305  1E4B                     l2400:
  8306                           
  8307                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  8308  1E4B  0870               	movf	spiWrite@dat,w
  8309  1E4C  1283               	bcf	3,5	;RP0=0, select bank0
  8310  1E4D  1303               	bcf	3,6	;RP1=0, select bank0
  8311  1E4E  0093               	movwf	19	;volatile
  8312  1E4F                     l103:
  8313  1E4F  0008               	return
  8314  1E50                     __end_of_spiWrite:
  8315                           
  8316                           	psect	text41
  8317  1E67                     __ptext41:	
  8318 ;; *************** function _spiRead *****************
  8319 ;; Defined at:
  8320 ;;		line 47 in file "SPI.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      unsigned char 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, pclath, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8334 ;;      Params:         0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    1
  8341 ;; This function calls:
  8342 ;;		_spiReceiveWait
  8343 ;; This function is called by:
  8344 ;;		_contador
  8345 ;;		_ADCread
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           
  8350                           ;psect for function _spiRead
  8351  1E67                     _spiRead:
  8352  1E67                     l2402:	
  8353                           ;incstack = 0
  8354                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8355                           
  8356                           
  8357                           ;SPI.c: 49:     spiReceiveWait();
  8358  1E67  160A  158A  2650  160A  158A  	fcall	_spiReceiveWait
  8359  1E6C                     l2404:
  8360                           
  8361                           ;SPI.c: 50:     return(SSPBUF);
  8362  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  8363  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
  8364  1E6E  0813               	movf	19,w	;volatile
  8365  1E6F                     l111:
  8366  1E6F  0008               	return
  8367  1E70                     __end_of_spiRead:
  8368                           
  8369                           	psect	text42
  8370  1E50                     __ptext42:	
  8371 ;; *************** function _spiReceiveWait *****************
  8372 ;; Defined at:
  8373 ;;		line 29 in file "SPI.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		None
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8387 ;;      Params:         0       0       0       0       0
  8388 ;;      Locals:         0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0
  8390 ;;      Totals:         0       0       0       0       0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_spiRead
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           
  8401                           ;psect for function _spiReceiveWait
  8402  1E50                     _spiReceiveWait:
  8403  1E50                     l2112:	
  8404                           ;incstack = 0
  8405                           ; Regs used in _spiReceiveWait: []
  8406                           
  8407  1E50                     l97:	
  8408                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  8409                           
  8410  1E50  1683               	bsf	3,5	;RP0=1, select bank1
  8411  1E51  1303               	bcf	3,6	;RP1=0, select bank1
  8412  1E52  1C14               	btfss	20,0	;volatile
  8413  1E53  2E55               	goto	u2381
  8414  1E54  2E56               	goto	u2380
  8415  1E55                     u2381:
  8416  1E55  2E50               	goto	l97
  8417  1E56                     u2380:
  8418  1E56                     l100:
  8419  1E56  0008               	return
  8420  1E57                     __end_of_spiReceiveWait:
  8421  007E                     btemp	set	126	;btemp
  8422  007E                     wtemp0	set	126
  8423                           
  8424                           	psect	config
  8425                           
  8426                           ;Config register CONFIG1 @ 0x2007
  8427                           ;	Oscillator Selection bits
  8428                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  8429                           ;	Watchdog Timer Enable bit
  8430                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8431                           ;	Power-up Timer Enable bit
  8432                           ;	PWRTE = OFF, PWRT disabled
  8433                           ;	RE3/MCLR pin function select bit
  8434                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8435                           ;	Code Protection bit
  8436                           ;	CP = OFF, Program memory code protection is disabled
  8437                           ;	Data Code Protection bit
  8438                           ;	CPD = OFF, Data memory code protection is disabled
  8439                           ;	Brown Out Reset Selection bits
  8440                           ;	BOREN = OFF, BOR disabled
  8441                           ;	Internal External Switchover bit
  8442                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8443                           ;	Fail-Safe Clock Monitor Enabled bit
  8444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8445                           ;	Low Voltage Programming Enable bit
  8446                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8447                           ;	In-Circuit Debugger Mode bit
  8448                           ;	DEBUG = 0x1, unprogrammed default
  8449  2007                     	org	8199
  8450  2007  20D6               	dw	8406
  8451                           
  8452                           ;Config register CONFIG2 @ 0x2008
  8453                           ;	Brown-out Reset Selection bit
  8454                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8455                           ;	Flash Program Memory Self Write Enable bits
  8456                           ;	WRT = OFF, Write protection off
  8457  2008                     	org	8200
  8458  2008  3FFF               	dw	16383
  8459                           
  8460                           	psect	text3_split_1
  8461  0146                     u4080:
  8462  0146                     l2952:
  8463  0146  1683               	bsf	3,5	;RP0=1, select bank1
  8464  0147  1303               	bcf	3,6	;RP1=0, select bank1
  8465  0148  0834               	movf	(sprintf@fval+2)^(0+128),w
  8466  0149  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  8467  014A  0432               	iorwf	sprintf@fval^(0+128),w
  8468  014B  1903               	skipnz
  8469  014C  294E               	goto	u4091
  8470  014D  294F               	goto	u4090
  8471  014E                     u4091:
  8472  014E  29DF               	goto	l2972
  8473  014F                     u4090:
  8474  014F                     l2954:
  8475  014F  0832               	movf	sprintf@fval^(0+128),w
  8476  0150  1283               	bcf	3,5	;RP0=0, select bank0
  8477  0151  1303               	bcf	3,6	;RP1=0, select bank0
  8478  0152  00C1               	movwf	___fttol@f1
  8479  0153  1683               	bsf	3,5	;RP0=1, select bank1
  8480  0154  1303               	bcf	3,6	;RP1=0, select bank1
  8481  0155  0833               	movf	(sprintf@fval+1)^(0+128),w
  8482  0156  1283               	bcf	3,5	;RP0=0, select bank0
  8483  0157  1303               	bcf	3,6	;RP1=0, select bank0
  8484  0158  00C2               	movwf	___fttol@f1+1
  8485  0159  1683               	bsf	3,5	;RP0=1, select bank1
  8486  015A  1303               	bcf	3,6	;RP1=0, select bank1
  8487  015B  0834               	movf	(sprintf@fval+2)^(0+128),w
  8488  015C  1283               	bcf	3,5	;RP0=0, select bank0
  8489  015D  1303               	bcf	3,6	;RP1=0, select bank0
  8490  015E  00C3               	movwf	___fttol@f1+2
  8491  015F  160A  118A  24A6  120A  118A  	fcall	___fttol
  8492  0164  1283               	bcf	3,5	;RP0=0, select bank0
  8493  0165  1303               	bcf	3,6	;RP1=0, select bank0
  8494  0166  0844               	movf	?___fttol+3,w
  8495  0167  0443               	iorwf	?___fttol+2,w
  8496  0168  0442               	iorwf	?___fttol+1,w
  8497  0169  0441               	iorwf	?___fttol,w
  8498  016A  1D03               	skipz
  8499  016B  296D               	goto	u4101
  8500  016C  296E               	goto	u4100
  8501  016D                     u4101:
  8502  016D  29DF               	goto	l2972
  8503  016E                     u4100:
  8504  016E                     l2956:
  8505  016E  1683               	bsf	3,5	;RP0=1, select bank1
  8506  016F  1303               	bcf	3,6	;RP1=0, select bank1
  8507  0170  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8508  0171  3A80               	xorlw	128
  8509  0172  00FF               	movwf	btemp+1
  8510  0173  3080               	movlw	128
  8511  0174  027F               	subwf	btemp+1,w
  8512  0175  1D03               	skipz
  8513  0176  2979               	goto	u4115
  8514  0177  3002               	movlw	2
  8515  0178  0230               	subwf	sprintf@eexp^(0+128),w
  8516  0179                     u4115:
  8517  0179  1C03               	skipc
  8518  017A  297C               	goto	u4111
  8519  017B  297D               	goto	u4110
  8520  017C                     u4111:
  8521  017C  29DF               	goto	l2972
  8522  017D                     u4110:
  8523  017D                     l2958:
  8524                           
  8525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8526  017D  1683               	bsf	3,5	;RP0=1, select bank1
  8527  017E  1303               	bcf	3,6	;RP1=0, select bank1
  8528  017F  0828               	movf	sprintf@tmpval^(0+128),w
  8529  0180  00F0               	movwf	___ftge@ff1
  8530  0181  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  8531  0182  00F1               	movwf	___ftge@ff1+1
  8532  0183  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  8533  0184  00F2               	movwf	___ftge@ff1+2
  8534  0185  3070               	movlw	112
  8535  0186  00F3               	movwf	___ftge@ff2
  8536  0187  3089               	movlw	137
  8537  0188  00F4               	movwf	___ftge@ff2+1
  8538  0189  3040               	movlw	64
  8539  018A  00F5               	movwf	___ftge@ff2+2
  8540  018B  160A  118A  2110  120A  118A  	fcall	___ftge
  8541  0190  1803               	btfsc	3,0
  8542  0191  2993               	goto	u4121
  8543  0192  2994               	goto	u4120
  8544  0193                     u4121:
  8545  0193  299D               	goto	l2962
  8546  0194                     u4120:
  8547  0194                     l2960:
  8548                           
  8549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8550  0194  30F7               	movlw	247
  8551  0195  1683               	bsf	3,5	;RP0=1, select bank1
  8552  0196  1303               	bcf	3,6	;RP1=0, select bank1
  8553  0197  07B0               	addwf	sprintf@eexp^(0+128),f
  8554  0198  1803               	skipnc
  8555  0199  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8556  019A  30FF               	movlw	255
  8557  019B  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8558                           
  8559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8560  019C  29A5               	goto	l2964
  8561  019D                     l2962:
  8562                           
  8563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8564  019D  30F8               	movlw	248
  8565  019E  1683               	bsf	3,5	;RP0=1, select bank1
  8566  019F  1303               	bcf	3,6	;RP1=0, select bank1
  8567  01A0  07B0               	addwf	sprintf@eexp^(0+128),f
  8568  01A1  1803               	skipnc
  8569  01A2  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8570  01A3  30FF               	movlw	255
  8571  01A4  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8572  01A5                     l2964:
  8573                           
  8574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  8575  01A5  0830               	movf	sprintf@eexp^(0+128),w
  8576  01A6  120A  158A  227D  120A  118A  	fcall	_scale
  8577  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  8578  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  8579  01AD  0838               	movf	?_scale,w
  8580  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  8581  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  8582  01B0  00A8               	movwf	sprintf@tmpval^(0+128)
  8583  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  8584  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  8585  01B3  0839               	movf	?_scale+1,w
  8586  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  8587  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  8588  01B6  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  8589  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  8590  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  8591  01B9  083A               	movf	?_scale+2,w
  8592  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  8593  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  8594  01BC  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  8595  01BD                     l2968:	
  8596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8597                           
  8598  01BD  0832               	movf	sprintf@fval^(0+128),w
  8599  01BE  00F0               	movwf	__tdiv_to_l_@f1
  8600  01BF  0833               	movf	(sprintf@fval+1)^(0+128),w
  8601  01C0  00F1               	movwf	__tdiv_to_l_@f1+1
  8602  01C1  0834               	movf	(sprintf@fval+2)^(0+128),w
  8603  01C2  00F2               	movwf	__tdiv_to_l_@f1+2
  8604  01C3  0828               	movf	sprintf@tmpval^(0+128),w
  8605  01C4  00F3               	movwf	__tdiv_to_l_@f2
  8606  01C5  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  8607  01C6  00F4               	movwf	__tdiv_to_l_@f2+1
  8608  01C7  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  8609  01C8  00F5               	movwf	__tdiv_to_l_@f2+2
  8610  01C9  160A  118A  2532  120A  118A  	fcall	__tdiv_to_l_
  8611  01CE  0873               	movf	?__tdiv_to_l_+3,w
  8612  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  8613  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  8614  01D1  00AF               	movwf	(sprintf@val+3)^(0+128)
  8615  01D2  0872               	movf	?__tdiv_to_l_+2,w
  8616  01D3  00AE               	movwf	(sprintf@val+2)^(0+128)
  8617  01D4  0871               	movf	?__tdiv_to_l_+1,w
  8618  01D5  00AD               	movwf	(sprintf@val+1)^(0+128)
  8619  01D6  0870               	movf	?__tdiv_to_l_,w
  8620  01D7  00AC               	movwf	sprintf@val^(0+128)
  8621  01D8                     l2970:
  8622                           
  8623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8624  01D8  3000               	movlw	0
  8625  01D9  00B2               	movwf	sprintf@fval^(0+128)
  8626  01DA  3000               	movlw	0
  8627  01DB  00B3               	movwf	(sprintf@fval+1)^(0+128)
  8628  01DC  3000               	movlw	0
  8629  01DD  00B4               	movwf	(sprintf@fval+2)^(0+128)
  8630                           
  8631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8632  01DE  2A4E               	goto	l2976
  8633  01DF                     l2972:
  8634                           
  8635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8636  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  8637  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  8638  01E1  0832               	movf	sprintf@fval^(0+128),w
  8639  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  8640  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  8641  01E4  00C1               	movwf	___fttol@f1
  8642  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  8643  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  8644  01E7  0833               	movf	(sprintf@fval+1)^(0+128),w
  8645  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  8646  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  8647  01EA  00C2               	movwf	___fttol@f1+1
  8648  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  8649  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  8650  01ED  0834               	movf	(sprintf@fval+2)^(0+128),w
  8651  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  8652  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  8653  01F0  00C3               	movwf	___fttol@f1+2
  8654  01F1  160A  118A  24A6  120A  118A  	fcall	___fttol
  8655  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  8656  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  8657  01F8  0844               	movf	?___fttol+3,w
  8658  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  8659  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  8660  01FB  00AF               	movwf	(sprintf@val+3)^(0+128)
  8661  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  8662  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  8663  01FE  0843               	movf	?___fttol+2,w
  8664  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  8665  0200  1303               	bcf	3,6	;RP1=0, select bank1
  8666  0201  00AE               	movwf	(sprintf@val+2)^(0+128)
  8667  0202  1283               	bcf	3,5	;RP0=0, select bank0
  8668  0203  1303               	bcf	3,6	;RP1=0, select bank0
  8669  0204  0842               	movf	?___fttol+1,w
  8670  0205  1683               	bsf	3,5	;RP0=1, select bank1
  8671  0206  1303               	bcf	3,6	;RP1=0, select bank1
  8672  0207  00AD               	movwf	(sprintf@val+1)^(0+128)
  8673  0208  1283               	bcf	3,5	;RP0=0, select bank0
  8674  0209  1303               	bcf	3,6	;RP1=0, select bank0
  8675  020A  0841               	movf	?___fttol,w
  8676  020B  1683               	bsf	3,5	;RP0=1, select bank1
  8677  020C  1303               	bcf	3,6	;RP1=0, select bank1
  8678  020D  00AC               	movwf	sprintf@val^(0+128)
  8679                           
  8680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8681  020E  082F               	movf	(sprintf@val+3)^(0+128),w
  8682  020F  00FB               	movwf	___lltoft@c+3
  8683  0210  082E               	movf	(sprintf@val+2)^(0+128),w
  8684  0211  00FA               	movwf	___lltoft@c+2
  8685  0212  082D               	movf	(sprintf@val+1)^(0+128),w
  8686  0213  00F9               	movwf	___lltoft@c+1
  8687  0214  082C               	movf	sprintf@val^(0+128),w
  8688  0215  00F8               	movwf	___lltoft@c
  8689  0216  160A  158A  27D1  120A  118A  	fcall	___lltoft
  8690  021B  0878               	movf	?___lltoft,w
  8691  021C  1283               	bcf	3,5	;RP0=0, select bank0
  8692  021D  1303               	bcf	3,6	;RP1=0, select bank0
  8693  021E  00D5               	movwf	___ftsub@f2
  8694  021F  0879               	movf	?___lltoft+1,w
  8695  0220  00D6               	movwf	___ftsub@f2+1
  8696  0221  087A               	movf	?___lltoft+2,w
  8697  0222  00D7               	movwf	___ftsub@f2+2
  8698  0223  1683               	bsf	3,5	;RP0=1, select bank1
  8699  0224  1303               	bcf	3,6	;RP1=0, select bank1
  8700  0225  0832               	movf	sprintf@fval^(0+128),w
  8701  0226  1283               	bcf	3,5	;RP0=0, select bank0
  8702  0227  1303               	bcf	3,6	;RP1=0, select bank0
  8703  0228  00D8               	movwf	___ftsub@f1
  8704  0229  1683               	bsf	3,5	;RP0=1, select bank1
  8705  022A  1303               	bcf	3,6	;RP1=0, select bank1
  8706  022B  0833               	movf	(sprintf@fval+1)^(0+128),w
  8707  022C  1283               	bcf	3,5	;RP0=0, select bank0
  8708  022D  1303               	bcf	3,6	;RP1=0, select bank0
  8709  022E  00D9               	movwf	___ftsub@f1+1
  8710  022F  1683               	bsf	3,5	;RP0=1, select bank1
  8711  0230  1303               	bcf	3,6	;RP1=0, select bank1
  8712  0231  0834               	movf	(sprintf@fval+2)^(0+128),w
  8713  0232  1283               	bcf	3,5	;RP0=0, select bank0
  8714  0233  1303               	bcf	3,6	;RP1=0, select bank0
  8715  0234  00DA               	movwf	___ftsub@f1+2
  8716  0235  160A  158A  275C  120A  118A  	fcall	___ftsub
  8717  023A  1283               	bcf	3,5	;RP0=0, select bank0
  8718  023B  1303               	bcf	3,6	;RP1=0, select bank0
  8719  023C  0855               	movf	?___ftsub,w
  8720  023D  1683               	bsf	3,5	;RP0=1, select bank1
  8721  023E  1303               	bcf	3,6	;RP1=0, select bank1
  8722  023F  00B2               	movwf	sprintf@fval^(0+128)
  8723  0240  1283               	bcf	3,5	;RP0=0, select bank0
  8724  0241  1303               	bcf	3,6	;RP1=0, select bank0
  8725  0242  0856               	movf	?___ftsub+1,w
  8726  0243  1683               	bsf	3,5	;RP0=1, select bank1
  8727  0244  1303               	bcf	3,6	;RP1=0, select bank1
  8728  0245  00B3               	movwf	(sprintf@fval+1)^(0+128)
  8729  0246  1283               	bcf	3,5	;RP0=0, select bank0
  8730  0247  1303               	bcf	3,6	;RP1=0, select bank0
  8731  0248  0857               	movf	?___ftsub+2,w
  8732  0249  1683               	bsf	3,5	;RP0=1, select bank1
  8733  024A  1303               	bcf	3,6	;RP1=0, select bank1
  8734  024B  00B4               	movwf	(sprintf@fval+2)^(0+128)
  8735  024C                     l2974:
  8736                           
  8737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8738  024C  01B0               	clrf	sprintf@eexp^(0+128)
  8739  024D  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  8740  024E                     l2976:
  8741                           
  8742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8743  024E  01B8               	clrf	sprintf@c^(0+128)
  8744  024F  0AB8               	incf	sprintf@c^(0+128),f
  8745  0250                     l2982:
  8746                           
  8747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8748  0250  0838               	movf	sprintf@c^(0+128),w
  8749  0251  1283               	bcf	3,5	;RP0=0, select bank0
  8750  0252  1303               	bcf	3,6	;RP1=0, select bank0
  8751  0253  00E1               	movwf	??_sprintf
  8752  0254  3001               	movlw	1
  8753  0255                     u4135:
  8754  0255  1003               	clrc
  8755  0256  0DE1               	rlf	??_sprintf,f
  8756  0257  3EFF               	addlw	-1
  8757  0258  1D03               	skipz
  8758  0259  2A55               	goto	u4135
  8759  025A  1003               	clrc
  8760  025B  0D61               	rlf	??_sprintf,w
  8761  025C  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8762  025D  0084               	movwf	4
  8763  025E  160A  118A  200A  120A  118A  	fcall	stringdir
  8764  0263  00E2               	movwf	??_sprintf+1
  8765  0264  160A  118A  200A  120A  118A  	fcall	stringdir
  8766  0269  00E3               	movwf	??_sprintf+2
  8767  026A  160A  118A  200A  120A  118A  	fcall	stringdir
  8768  026F  00E4               	movwf	??_sprintf+3
  8769  0270  160A  118A  200A  120A  118A  	fcall	stringdir
  8770  0275  00E5               	movwf	??_sprintf+4
  8771  0276  0865               	movf	??_sprintf+4,w
  8772  0277  1683               	bsf	3,5	;RP0=1, select bank1
  8773  0278  1303               	bcf	3,6	;RP1=0, select bank1
  8774  0279  022F               	subwf	(sprintf@val+3)^(0+128),w
  8775  027A  1D03               	skipz
  8776  027B  2A92               	goto	u4145
  8777  027C  1283               	bcf	3,5	;RP0=0, select bank0
  8778  027D  1303               	bcf	3,6	;RP1=0, select bank0
  8779  027E  0864               	movf	??_sprintf+3,w
  8780  027F  1683               	bsf	3,5	;RP0=1, select bank1
  8781  0280  1303               	bcf	3,6	;RP1=0, select bank1
  8782  0281  022E               	subwf	(sprintf@val+2)^(0+128),w
  8783  0282  1D03               	skipz
  8784  0283  2A92               	goto	u4145
  8785  0284  1283               	bcf	3,5	;RP0=0, select bank0
  8786  0285  1303               	bcf	3,6	;RP1=0, select bank0
  8787  0286  0863               	movf	??_sprintf+2,w
  8788  0287  1683               	bsf	3,5	;RP0=1, select bank1
  8789  0288  1303               	bcf	3,6	;RP1=0, select bank1
  8790  0289  022D               	subwf	(sprintf@val+1)^(0+128),w
  8791  028A  1D03               	skipz
  8792  028B  2A92               	goto	u4145
  8793  028C  1283               	bcf	3,5	;RP0=0, select bank0
  8794  028D  1303               	bcf	3,6	;RP1=0, select bank0
  8795  028E  0862               	movf	??_sprintf+1,w
  8796  028F  1683               	bsf	3,5	;RP0=1, select bank1
  8797  0290  1303               	bcf	3,6	;RP1=0, select bank1
  8798  0291  022C               	subwf	sprintf@val^(0+128),w
  8799  0292                     u4145:
  8800  0292  1803               	skipnc
  8801  0293  2A95               	goto	u4141
  8802  0294  2A96               	goto	u4140
  8803  0295                     u4141:
  8804  0295  2A97               	goto	l2986
  8805  0296                     u4140:
  8806  0296  2AA5               	goto	l2988
  8807  0297                     l2986:
  8808  0297  3001               	movlw	1
  8809  0298  1283               	bcf	3,5	;RP0=0, select bank0
  8810  0299  1303               	bcf	3,6	;RP1=0, select bank0
  8811  029A  00E1               	movwf	??_sprintf
  8812  029B  0861               	movf	??_sprintf,w
  8813  029C  1683               	bsf	3,5	;RP0=1, select bank1
  8814  029D  1303               	bcf	3,6	;RP1=0, select bank1
  8815  029E  07B8               	addwf	sprintf@c^(0+128),f
  8816  029F  300A               	movlw	10
  8817  02A0  0638               	xorwf	sprintf@c^(0+128),w
  8818  02A1  1D03               	btfss	3,2
  8819  02A2  2AA4               	goto	u4151
  8820  02A3  2AA5               	goto	u4150
  8821  02A4                     u4151:
  8822  02A4  2A50               	goto	l2982
  8823  02A5                     u4150:
  8824  02A5                     l2988:
  8825                           
  8826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  8827  02A5  0838               	movf	sprintf@c^(0+128),w
  8828  02A6  0736               	addwf	sprintf@prec^(0+128),w
  8829  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  8830  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  8831  02A9  00E1               	movwf	??_sprintf
  8832  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  8833  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  8834  02AC  0837               	movf	(sprintf@prec+1)^(0+128),w
  8835  02AD  1803               	skipnc
  8836  02AE  0A37               	incf	(sprintf@prec+1)^(0+128),w
  8837  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  8838  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  8839  02B1  00E2               	movwf	??_sprintf+1
  8840  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  8841  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  8842  02B4  0830               	movf	sprintf@eexp^(0+128),w
  8843  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  8844  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  8845  02B7  0761               	addwf	??_sprintf,w
  8846  02B8  00E3               	movwf	??_sprintf+2
  8847  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  8848  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  8849  02BB  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8850  02BC  1803               	skipnc
  8851  02BD  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  8852  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  8853  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  8854  02C0  0762               	addwf	??_sprintf+1,w
  8855  02C1  00E4               	movwf	??_sprintf+3
  8856  02C2  0863               	movf	??_sprintf+2,w
  8857  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  8858  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  8859  02C5  02A6               	subwf	sprintf@width^(0+128),f
  8860  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  8861  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  8862  02C8  0864               	movf	??_sprintf+3,w
  8863  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  8864  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  8865  02CB  1C03               	skipc
  8866  02CC  03A7               	decf	(sprintf@width+1)^(0+128),f
  8867  02CD  02A7               	subwf	(sprintf@width+1)^(0+128),f
  8868                           
  8869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  8870  02CE  0836               	movf	sprintf@prec^(0+128),w
  8871  02CF  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  8872  02D0  1903               	btfsc	3,2
  8873  02D1  2AD3               	goto	u4161
  8874  02D2  2AD4               	goto	u4160
  8875  02D3                     u4161:
  8876  02D3  2ADA               	goto	l2992
  8877  02D4                     u4160:
  8878  02D4                     l2990:
  8879                           
  8880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  8881  02D4  30FF               	movlw	255
  8882  02D5  07A6               	addwf	sprintf@width^(0+128),f
  8883  02D6  1803               	skipnc
  8884  02D7  0AA7               	incf	(sprintf@width+1)^(0+128),f
  8885  02D8  30FF               	movlw	255
  8886  02D9  07A7               	addwf	(sprintf@width+1)^(0+128),f
  8887  02DA                     l2992:
  8888                           
  8889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  8890  02DA  3003               	movlw	3
  8891  02DB  0524               	andwf	sprintf@flag^(0+128),w
  8892  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  8893  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  8894  02DE  00E1               	movwf	??_sprintf
  8895  02DF  3000               	movlw	0
  8896  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  8897  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  8898  02E2  0525               	andwf	(sprintf@flag+1)^(0+128),w
  8899  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  8900  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  8901  02E5  00E2               	movwf	??_sprintf+1
  8902  02E6  0861               	movf	??_sprintf,w
  8903  02E7  0462               	iorwf	??_sprintf+1,w
  8904  02E8  1903               	btfsc	3,2
  8905  02E9  2AEB               	goto	u4171
  8906  02EA  2AEC               	goto	u4170
  8907  02EB                     u4171:
  8908  02EB  2B09               	goto	l3002
  8909  02EC                     u4170:
  8910  02EC                     l2994:
  8911                           
  8912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  8913  02EC  30FF               	movlw	255
  8914  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  8915  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  8916  02EF  07A6               	addwf	sprintf@width^(0+128),f
  8917  02F0  1803               	skipnc
  8918  02F1  0AA7               	incf	(sprintf@width+1)^(0+128),f
  8919  02F2  30FF               	movlw	255
  8920  02F3  07A7               	addwf	(sprintf@width+1)^(0+128),f
  8921  02F4  2B09               	goto	l3002
  8922  02F5                     l2996:
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  8925  02F5  3020               	movlw	32
  8926  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  8927  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  8928  02F8  00E1               	movwf	??_sprintf
  8929  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  8930  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  8931  02FB  0835               	movf	sprintf@sp^(0+128),w
  8932  02FC  0084               	movwf	4
  8933  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  8934  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  8935  02FF  0861               	movf	??_sprintf,w
  8936  0300  1383               	bcf	3,7	;select IRP bank0
  8937  0301  0080               	movwf	0
  8938  0302                     l2998:
  8939  0302  3001               	movlw	1
  8940  0303  00E1               	movwf	??_sprintf
  8941  0304  0861               	movf	??_sprintf,w
  8942  0305  1683               	bsf	3,5	;RP0=1, select bank1
  8943  0306  1303               	bcf	3,6	;RP1=0, select bank1
  8944  0307  07B5               	addwf	sprintf@sp^(0+128),f
  8945  0308  2AEC               	goto	l2994
  8946  0309                     l3002:
  8947                           
  8948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  8949  0309  1683               	bsf	3,5	;RP0=1, select bank1
  8950  030A  1303               	bcf	3,6	;RP1=0, select bank1
  8951  030B  0827               	movf	(sprintf@width+1)^(0+128),w
  8952  030C  3A80               	xorlw	128
  8953  030D  00FF               	movwf	btemp+1
  8954  030E  3080               	movlw	128
  8955  030F  027F               	subwf	btemp+1,w
  8956  0310  1D03               	skipz
  8957  0311  2B14               	goto	u4185
  8958  0312  3001               	movlw	1
  8959  0313  0226               	subwf	sprintf@width^(0+128),w
  8960  0314                     u4185:
  8961  0314  1803               	skipnc
  8962  0315  2B17               	goto	u4181
  8963  0316  2B18               	goto	u4180
  8964  0317                     u4181:
  8965  0317  2AF5               	goto	l2996
  8966  0318                     u4180:
  8967  0318                     l3004:
  8968                           
  8969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  8970  0318  3003               	movlw	3
  8971  0319  1683               	bsf	3,5	;RP0=1, select bank1
  8972  031A  1303               	bcf	3,6	;RP1=0, select bank1
  8973  031B  0524               	andwf	sprintf@flag^(0+128),w
  8974  031C  1283               	bcf	3,5	;RP0=0, select bank0
  8975  031D  1303               	bcf	3,6	;RP1=0, select bank0
  8976  031E  00E1               	movwf	??_sprintf
  8977  031F  3000               	movlw	0
  8978  0320  1683               	bsf	3,5	;RP0=1, select bank1
  8979  0321  1303               	bcf	3,6	;RP1=0, select bank1
  8980  0322  0525               	andwf	(sprintf@flag+1)^(0+128),w
  8981  0323  1283               	bcf	3,5	;RP0=0, select bank0
  8982  0324  1303               	bcf	3,6	;RP1=0, select bank0
  8983  0325  00E2               	movwf	??_sprintf+1
  8984  0326  0861               	movf	??_sprintf,w
  8985  0327  0462               	iorwf	??_sprintf+1,w
  8986  0328  1903               	btfsc	3,2
  8987  0329  2B2B               	goto	u4191
  8988  032A  2B2C               	goto	u4190
  8989  032B                     u4191:
  8990  032B  2BD0               	goto	l381
  8991  032C                     u4190:
  8992  032C                     l3006:
  8993                           
  8994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  8995  032C  302D               	movlw	45
  8996  032D  00E1               	movwf	??_sprintf
  8997  032E  1683               	bsf	3,5	;RP0=1, select bank1
  8998  032F  1303               	bcf	3,6	;RP1=0, select bank1
  8999  0330  0835               	movf	sprintf@sp^(0+128),w
  9000  0331  0084               	movwf	4
  9001  0332  1283               	bcf	3,5	;RP0=0, select bank0
  9002  0333  1303               	bcf	3,6	;RP1=0, select bank0
  9003  0334  0861               	movf	??_sprintf,w
  9004  0335  1383               	bcf	3,7	;select IRP bank0
  9005  0336  0080               	movwf	0
  9006  0337                     l3008:
  9007  0337  3001               	movlw	1
  9008  0338  00E1               	movwf	??_sprintf
  9009  0339  0861               	movf	??_sprintf,w
  9010  033A  1683               	bsf	3,5	;RP0=1, select bank1
  9011  033B  1303               	bcf	3,6	;RP1=0, select bank1
  9012  033C  07B5               	addwf	sprintf@sp^(0+128),f
  9013  033D  2BD0               	goto	l381
  9014  033E                     l3010:
  9015                           
  9016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9017  033E  0838               	movf	sprintf@c^(0+128),w
  9018  033F  1283               	bcf	3,5	;RP0=0, select bank0
  9019  0340  1303               	bcf	3,6	;RP1=0, select bank0
  9020  0341  00E1               	movwf	??_sprintf
  9021  0342  3001               	movlw	1
  9022  0343                     u4205:
  9023  0343  1003               	clrc
  9024  0344  0DE1               	rlf	??_sprintf,f
  9025  0345  3EFF               	addlw	-1
  9026  0346  1D03               	skipz
  9027  0347  2B43               	goto	u4205
  9028  0348  1003               	clrc
  9029  0349  0D61               	rlf	??_sprintf,w
  9030  034A  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9031  034B  0084               	movwf	4
  9032  034C  160A  118A  200A  120A  118A  	fcall	stringdir
  9033  0351  00F0               	movwf	___lldiv@divisor
  9034  0352  160A  118A  200A  120A  118A  	fcall	stringdir
  9035  0357  00F1               	movwf	___lldiv@divisor+1
  9036  0358  160A  118A  200A  120A  118A  	fcall	stringdir
  9037  035D  00F2               	movwf	___lldiv@divisor+2
  9038  035E  160A  118A  200A  120A  118A  	fcall	stringdir
  9039  0363  00F3               	movwf	___lldiv@divisor+3
  9040  0364  1683               	bsf	3,5	;RP0=1, select bank1
  9041  0365  1303               	bcf	3,6	;RP1=0, select bank1
  9042  0366  082F               	movf	(sprintf@val+3)^(0+128),w
  9043  0367  00F7               	movwf	___lldiv@dividend+3
  9044  0368  082E               	movf	(sprintf@val+2)^(0+128),w
  9045  0369  00F6               	movwf	___lldiv@dividend+2
  9046  036A  082D               	movf	(sprintf@val+1)^(0+128),w
  9047  036B  00F5               	movwf	___lldiv@dividend+1
  9048  036C  082C               	movf	sprintf@val^(0+128),w
  9049  036D  00F4               	movwf	___lldiv@dividend
  9050  036E  160A  118A  235B  120A  118A  	fcall	___lldiv
  9051  0373  0873               	movf	?___lldiv+3,w
  9052  0374  1683               	bsf	3,5	;RP0=1, select bank1
  9053  0375  1303               	bcf	3,6	;RP1=0, select bank1
  9054  0376  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9055  0377  0872               	movf	?___lldiv+2,w
  9056  0378  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9057  0379  0871               	movf	?___lldiv+1,w
  9058  037A  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9059  037B  0870               	movf	?___lldiv,w
  9060  037C  00A8               	movwf	sprintf@tmpval^(0+128)
  9061  037D                     l3012:
  9062                           
  9063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9064  037D  3000               	movlw	0
  9065  037E  1283               	bcf	3,5	;RP0=0, select bank0
  9066  037F  1303               	bcf	3,6	;RP1=0, select bank0
  9067  0380  00A3               	movwf	___llmod@divisor+3
  9068  0381  3000               	movlw	0
  9069  0382  00A2               	movwf	___llmod@divisor+2
  9070  0383  3000               	movlw	0
  9071  0384  00A1               	movwf	___llmod@divisor+1
  9072  0385  300A               	movlw	10
  9073  0386  00A0               	movwf	___llmod@divisor
  9074  0387  1683               	bsf	3,5	;RP0=1, select bank1
  9075  0388  1303               	bcf	3,6	;RP1=0, select bank1
  9076  0389  082B               	movf	(sprintf@tmpval+3)^(0+128),w
  9077  038A  1283               	bcf	3,5	;RP0=0, select bank0
  9078  038B  1303               	bcf	3,6	;RP1=0, select bank0
  9079  038C  00A7               	movwf	___llmod@dividend+3
  9080  038D  1683               	bsf	3,5	;RP0=1, select bank1
  9081  038E  1303               	bcf	3,6	;RP1=0, select bank1
  9082  038F  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  9083  0390  1283               	bcf	3,5	;RP0=0, select bank0
  9084  0391  1303               	bcf	3,6	;RP1=0, select bank0
  9085  0392  00A6               	movwf	___llmod@dividend+2
  9086  0393  1683               	bsf	3,5	;RP0=1, select bank1
  9087  0394  1303               	bcf	3,6	;RP1=0, select bank1
  9088  0395  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  9089  0396  1283               	bcf	3,5	;RP0=0, select bank0
  9090  0397  1303               	bcf	3,6	;RP1=0, select bank0
  9091  0398  00A5               	movwf	___llmod@dividend+1
  9092  0399  1683               	bsf	3,5	;RP0=1, select bank1
  9093  039A  1303               	bcf	3,6	;RP1=0, select bank1
  9094  039B  0828               	movf	sprintf@tmpval^(0+128),w
  9095  039C  1283               	bcf	3,5	;RP0=0, select bank0
  9096  039D  1303               	bcf	3,6	;RP1=0, select bank0
  9097  039E  00A4               	movwf	___llmod@dividend
  9098  039F  160A  118A  2246  120A  118A  	fcall	___llmod
  9099  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  9100  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  9101  03A6  0823               	movf	?___llmod+3,w
  9102  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  9103  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  9104  03A9  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9105  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  9106  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  9107  03AC  0822               	movf	?___llmod+2,w
  9108  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  9109  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  9110  03AF  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9111  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  9112  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  9113  03B2  0821               	movf	?___llmod+1,w
  9114  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  9115  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  9116  03B5  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9117  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  9118  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  9119  03B8  0820               	movf	?___llmod,w
  9120  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  9121  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  9122  03BB  00A8               	movwf	sprintf@tmpval^(0+128)
  9123  03BC                     l3014:
  9124                           
  9125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9126  03BC  0828               	movf	sprintf@tmpval^(0+128),w
  9127  03BD  3E30               	addlw	48
  9128  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  9129  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  9130  03C0  00E1               	movwf	??_sprintf
  9131  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  9132  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  9133  03C3  0835               	movf	sprintf@sp^(0+128),w
  9134  03C4  0084               	movwf	4
  9135  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  9136  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  9137  03C7  0861               	movf	??_sprintf,w
  9138  03C8  1383               	bcf	3,7	;select IRP bank0
  9139  03C9  0080               	movwf	0
  9140  03CA  3001               	movlw	1
  9141  03CB  00E1               	movwf	??_sprintf
  9142  03CC  0861               	movf	??_sprintf,w
  9143  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  9144  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  9145  03CF  07B5               	addwf	sprintf@sp^(0+128),f
  9146  03D0                     l381:	
  9147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9148                           
  9149                           
  9150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9151  03D0  3001               	movlw	1
  9152  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  9153  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  9154  03D3  02B8               	subwf	sprintf@c^(0+128),f
  9155  03D4  0A38               	incf	sprintf@c^(0+128),w
  9156  03D5  1D03               	btfss	3,2
  9157  03D6  2BD8               	goto	u4211
  9158  03D7  2BD9               	goto	u4210
  9159  03D8                     u4211:
  9160  03D8  2B3E               	goto	l3010
  9161  03D9                     u4210:
  9162  03D9  2BF3               	goto	l3022
  9163  03DA                     l3016:
  9164                           
  9165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9166  03DA  3030               	movlw	48
  9167  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  9168  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  9169  03DD  00E1               	movwf	??_sprintf
  9170  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  9171  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  9172  03E0  0835               	movf	sprintf@sp^(0+128),w
  9173  03E1  0084               	movwf	4
  9174  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  9175  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  9176  03E4  0861               	movf	??_sprintf,w
  9177  03E5  1383               	bcf	3,7	;select IRP bank0
  9178  03E6  0080               	movwf	0
  9179  03E7                     l3018:
  9180  03E7  3001               	movlw	1
  9181  03E8  00E1               	movwf	??_sprintf
  9182  03E9  0861               	movf	??_sprintf,w
  9183  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  9184  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  9185  03EC  07B5               	addwf	sprintf@sp^(0+128),f
  9186  03ED                     l3020:
  9187                           
  9188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9189  03ED  30FF               	movlw	255
  9190  03EE  07B0               	addwf	sprintf@eexp^(0+128),f
  9191  03EF  1803               	skipnc
  9192  03F0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  9193  03F1  30FF               	movlw	255
  9194  03F2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  9195  03F3                     l3022:
  9196                           
  9197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9198  03F3  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9199  03F4  3A80               	xorlw	128
  9200  03F5  00FF               	movwf	btemp+1
  9201  03F6  3080               	movlw	128
  9202  03F7  027F               	subwf	btemp+1,w
  9203  03F8  1D03               	skipz
  9204  03F9  2BFC               	goto	u4225
  9205  03FA  3001               	movlw	1
  9206  03FB  0230               	subwf	sprintf@eexp^(0+128),w
  9207  03FC                     u4225:
  9208  03FC  1803               	skipnc
  9209  03FD  2BFF               	goto	u4221
  9210  03FE  2C00               	goto	u4220
  9211  03FF                     u4221:
  9212  03FF  2BDA               	goto	l3016
  9213  0400                     u4220:
  9214  0400                     l3024:
  9215                           
  9216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9217  0400  1683               	bsf	3,5	;RP0=1, select bank1
  9218  0401  1303               	bcf	3,6	;RP1=0, select bank1
  9219  0402  0837               	movf	(sprintf@prec+1)^(0+128),w
  9220  0403  3A80               	xorlw	128
  9221  0404  00FF               	movwf	btemp+1
  9222  0405  3080               	movlw	128
  9223  0406  027F               	subwf	btemp+1,w
  9224  0407  1D03               	skipz
  9225  0408  2C0B               	goto	u4235
  9226  0409  3009               	movlw	9
  9227  040A  0236               	subwf	sprintf@prec^(0+128),w
  9228  040B                     u4235:
  9229  040B  1C03               	skipc
  9230  040C  2C0E               	goto	u4231
  9231  040D  2C0F               	goto	u4230
  9232  040E                     u4231:
  9233  040E  2C18               	goto	l3028
  9234  040F                     u4230:
  9235  040F                     l3026:
  9236                           
  9237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9238  040F  3008               	movlw	8
  9239  0410  1283               	bcf	3,5	;RP0=0, select bank0
  9240  0411  1303               	bcf	3,6	;RP1=0, select bank0
  9241  0412  00E1               	movwf	??_sprintf
  9242  0413  0861               	movf	??_sprintf,w
  9243  0414  1683               	bsf	3,5	;RP0=1, select bank1
  9244  0415  1303               	bcf	3,6	;RP1=0, select bank1
  9245  0416  00B8               	movwf	sprintf@c^(0+128)
  9246  0417  2C22               	goto	l388
  9247  0418                     l3028:
  9248                           
  9249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9250  0418  1683               	bsf	3,5	;RP0=1, select bank1
  9251  0419  1303               	bcf	3,6	;RP1=0, select bank1
  9252  041A  0836               	movf	sprintf@prec^(0+128),w
  9253  041B  1283               	bcf	3,5	;RP0=0, select bank0
  9254  041C  1303               	bcf	3,6	;RP1=0, select bank0
  9255  041D  00E1               	movwf	??_sprintf
  9256  041E  0861               	movf	??_sprintf,w
  9257  041F  1683               	bsf	3,5	;RP0=1, select bank1
  9258  0420  1303               	bcf	3,6	;RP1=0, select bank1
  9259  0421  00B8               	movwf	sprintf@c^(0+128)
  9260  0422                     l388:
  9261                           
  9262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9263  0422  0838               	movf	sprintf@c^(0+128),w
  9264  0423  1283               	bcf	3,5	;RP0=0, select bank0
  9265  0424  1303               	bcf	3,6	;RP1=0, select bank0
  9266  0425  00E1               	movwf	??_sprintf
  9267  0426  01E2               	clrf	??_sprintf+1
  9268  0427  0861               	movf	??_sprintf,w
  9269  0428  1683               	bsf	3,5	;RP0=1, select bank1
  9270  0429  1303               	bcf	3,6	;RP1=0, select bank1
  9271  042A  02B6               	subwf	sprintf@prec^(0+128),f
  9272  042B  1283               	bcf	3,5	;RP0=0, select bank0
  9273  042C  1303               	bcf	3,6	;RP1=0, select bank0
  9274  042D  0862               	movf	??_sprintf+1,w
  9275  042E  1683               	bsf	3,5	;RP0=1, select bank1
  9276  042F  1303               	bcf	3,6	;RP1=0, select bank1
  9277  0430  1C03               	skipc
  9278  0431  03B7               	decf	(sprintf@prec+1)^(0+128),f
  9279  0432  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  9280  0433                     l3030:
  9281                           
  9282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9283  0433  0838               	movf	sprintf@c^(0+128),w
  9284  0434  1903               	btfsc	3,2
  9285  0435  2C37               	goto	u4241
  9286  0436  2C38               	goto	u4240
  9287  0437                     u4241:
  9288  0437  2C4B               	goto	l3036
  9289  0438                     u4240:
  9290  0438                     l3032:
  9291                           
  9292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9293  0438  302E               	movlw	46
  9294  0439  1283               	bcf	3,5	;RP0=0, select bank0
  9295  043A  1303               	bcf	3,6	;RP1=0, select bank0
  9296  043B  00E1               	movwf	??_sprintf
  9297  043C  1683               	bsf	3,5	;RP0=1, select bank1
  9298  043D  1303               	bcf	3,6	;RP1=0, select bank1
  9299  043E  0835               	movf	sprintf@sp^(0+128),w
  9300  043F  0084               	movwf	4
  9301  0440  1283               	bcf	3,5	;RP0=0, select bank0
  9302  0441  1303               	bcf	3,6	;RP1=0, select bank0
  9303  0442  0861               	movf	??_sprintf,w
  9304  0443  1383               	bcf	3,7	;select IRP bank0
  9305  0444  0080               	movwf	0
  9306  0445                     l3034:
  9307  0445  3001               	movlw	1
  9308  0446  00E1               	movwf	??_sprintf
  9309  0447  0861               	movf	??_sprintf,w
  9310  0448  1683               	bsf	3,5	;RP0=1, select bank1
  9311  0449  1303               	bcf	3,6	;RP1=0, select bank1
  9312  044A  07B5               	addwf	sprintf@sp^(0+128),f
  9313  044B                     l3036:
  9314                           
  9315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9316  044B  0838               	movf	sprintf@c^(0+128),w
  9317  044C  120A  158A  227D  120A  118A  	fcall	_scale
  9318  0451  1283               	bcf	3,5	;RP0=0, select bank0
  9319  0452  1303               	bcf	3,6	;RP1=0, select bank0
  9320  0453  0838               	movf	?_scale,w
  9321  0454  1683               	bsf	3,5	;RP0=1, select bank1
  9322  0455  1303               	bcf	3,6	;RP1=0, select bank1
  9323  0456  00A0               	movwf	_sprintf$1079^(0+128)
  9324  0457  1283               	bcf	3,5	;RP0=0, select bank0
  9325  0458  1303               	bcf	3,6	;RP1=0, select bank0
  9326  0459  0839               	movf	?_scale+1,w
  9327  045A  1683               	bsf	3,5	;RP0=1, select bank1
  9328  045B  1303               	bcf	3,6	;RP1=0, select bank1
  9329  045C  00A1               	movwf	(_sprintf$1079+1)^(0+128)
  9330  045D  1283               	bcf	3,5	;RP0=0, select bank0
  9331  045E  1303               	bcf	3,6	;RP1=0, select bank0
  9332  045F  083A               	movf	?_scale+2,w
  9333  0460  1683               	bsf	3,5	;RP0=1, select bank1
  9334  0461  1303               	bcf	3,6	;RP1=0, select bank1
  9335  0462  00A2               	movwf	(_sprintf$1079+2)^(0+128)
  9336  0463                     l3038:
  9337                           
  9338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9339  0463  0820               	movf	_sprintf$1079^(0+128),w
  9340  0464  1283               	bcf	3,5	;RP0=0, select bank0
  9341  0465  1303               	bcf	3,6	;RP1=0, select bank0
  9342  0466  00AB               	movwf	___ftmul@f2
  9343  0467  1683               	bsf	3,5	;RP0=1, select bank1
  9344  0468  1303               	bcf	3,6	;RP1=0, select bank1
  9345  0469  0821               	movf	(_sprintf$1079+1)^(0+128),w
  9346  046A  1283               	bcf	3,5	;RP0=0, select bank0
  9347  046B  1303               	bcf	3,6	;RP1=0, select bank0
  9348  046C  00AC               	movwf	___ftmul@f2+1
  9349  046D  1683               	bsf	3,5	;RP0=1, select bank1
  9350  046E  1303               	bcf	3,6	;RP1=0, select bank1
  9351  046F  0822               	movf	(_sprintf$1079+2)^(0+128),w
  9352  0470  1283               	bcf	3,5	;RP0=0, select bank0
  9353  0471  1303               	bcf	3,6	;RP1=0, select bank0
  9354  0472  00AD               	movwf	___ftmul@f2+2
  9355  0473  1683               	bsf	3,5	;RP0=1, select bank1
  9356  0474  1303               	bcf	3,6	;RP1=0, select bank1
  9357  0475  0832               	movf	sprintf@fval^(0+128),w
  9358  0476  1283               	bcf	3,5	;RP0=0, select bank0
  9359  0477  1303               	bcf	3,6	;RP1=0, select bank0
  9360  0478  00A8               	movwf	___ftmul@f1
  9361  0479  1683               	bsf	3,5	;RP0=1, select bank1
  9362  047A  1303               	bcf	3,6	;RP1=0, select bank1
  9363  047B  0833               	movf	(sprintf@fval+1)^(0+128),w
  9364  047C  1283               	bcf	3,5	;RP0=0, select bank0
  9365  047D  1303               	bcf	3,6	;RP1=0, select bank0
  9366  047E  00A9               	movwf	___ftmul@f1+1
  9367  047F  1683               	bsf	3,5	;RP0=1, select bank1
  9368  0480  1303               	bcf	3,6	;RP1=0, select bank1
  9369  0481  0834               	movf	(sprintf@fval+2)^(0+128),w
  9370  0482  1283               	bcf	3,5	;RP0=0, select bank0
  9371  0483  1303               	bcf	3,6	;RP1=0, select bank0
  9372  0484  00AA               	movwf	___ftmul@f1+2
  9373  0485  160A  118A  25EF  120A  118A  	fcall	___ftmul
  9374  048A  1283               	bcf	3,5	;RP0=0, select bank0
  9375  048B  1303               	bcf	3,6	;RP1=0, select bank0
  9376  048C  0828               	movf	?___ftmul,w
  9377  048D  00C1               	movwf	___fttol@f1
  9378  048E  0829               	movf	?___ftmul+1,w
  9379  048F  00C2               	movwf	___fttol@f1+1
  9380  0490  082A               	movf	?___ftmul+2,w
  9381  0491  00C3               	movwf	___fttol@f1+2
  9382  0492  160A  118A  24A6  120A  118A  	fcall	___fttol
  9383  0497  1283               	bcf	3,5	;RP0=0, select bank0
  9384  0498  1303               	bcf	3,6	;RP1=0, select bank0
  9385  0499  0844               	movf	?___fttol+3,w
  9386  049A  1683               	bsf	3,5	;RP0=1, select bank1
  9387  049B  1303               	bcf	3,6	;RP1=0, select bank1
  9388  049C  00AF               	movwf	(sprintf@val+3)^(0+128)
  9389  049D  1283               	bcf	3,5	;RP0=0, select bank0
  9390  049E  1303               	bcf	3,6	;RP1=0, select bank0
  9391  049F  0843               	movf	?___fttol+2,w
  9392  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  9393  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  9394  04A2  00AE               	movwf	(sprintf@val+2)^(0+128)
  9395  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  9396  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  9397  04A5  0842               	movf	?___fttol+1,w
  9398  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  9399  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  9400  04A8  00AD               	movwf	(sprintf@val+1)^(0+128)
  9401  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  9402  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  9403  04AB  0841               	movf	?___fttol,w
  9404  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  9405  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  9406  04AE  00AC               	movwf	sprintf@val^(0+128)
  9407                           
  9408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9409  04AF  2D9D               	goto	l3048
  9410  04B0                     l3040:
  9411                           
  9412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9413  04B0  0838               	movf	sprintf@c^(0+128),w
  9414  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  9415  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  9416  04B3  00E1               	movwf	??_sprintf
  9417  04B4  3001               	movlw	1
  9418  04B5                     u4255:
  9419  04B5  1003               	clrc
  9420  04B6  0DE1               	rlf	??_sprintf,f
  9421  04B7  3EFF               	addlw	-1
  9422  04B8  1D03               	skipz
  9423  04B9  2CB5               	goto	u4255
  9424  04BA  1003               	clrc
  9425  04BB  0D61               	rlf	??_sprintf,w
  9426  04BC  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9427  04BD  0084               	movwf	4
  9428  04BE  160A  118A  200A  120A  118A  	fcall	stringdir
  9429  04C3  00F0               	movwf	___lldiv@divisor
  9430  04C4  160A  118A  200A  120A  118A  	fcall	stringdir
  9431  04C9  00F1               	movwf	___lldiv@divisor+1
  9432  04CA  160A  118A  200A  120A  118A  	fcall	stringdir
  9433  04CF  00F2               	movwf	___lldiv@divisor+2
  9434  04D0  160A  118A  200A  120A  118A  	fcall	stringdir
  9435  04D5  00F3               	movwf	___lldiv@divisor+3
  9436  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  9437  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  9438  04D8  082F               	movf	(sprintf@val+3)^(0+128),w
  9439  04D9  00F7               	movwf	___lldiv@dividend+3
  9440  04DA  082E               	movf	(sprintf@val+2)^(0+128),w
  9441  04DB  00F6               	movwf	___lldiv@dividend+2
  9442  04DC  082D               	movf	(sprintf@val+1)^(0+128),w
  9443  04DD  00F5               	movwf	___lldiv@dividend+1
  9444  04DE  082C               	movf	sprintf@val^(0+128),w
  9445  04DF  00F4               	movwf	___lldiv@dividend
  9446  04E0  160A  118A  235B  120A  118A  	fcall	___lldiv
  9447  04E5  0873               	movf	?___lldiv+3,w
  9448  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  9449  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  9450  04E8  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9451  04E9  0872               	movf	?___lldiv+2,w
  9452  04EA  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9453  04EB  0871               	movf	?___lldiv+1,w
  9454  04EC  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9455  04ED  0870               	movf	?___lldiv,w
  9456  04EE  00A8               	movwf	sprintf@tmpval^(0+128)
  9457  04EF                     l3042:
  9458                           
  9459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9460  04EF  3000               	movlw	0
  9461  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  9462  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  9463  04F2  00A3               	movwf	___llmod@divisor+3
  9464  04F3  3000               	movlw	0
  9465  04F4  00A2               	movwf	___llmod@divisor+2
  9466  04F5  3000               	movlw	0
  9467  04F6  00A1               	movwf	___llmod@divisor+1
  9468  04F7  300A               	movlw	10
  9469  04F8  00A0               	movwf	___llmod@divisor
  9470  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  9471  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  9472  04FB  082B               	movf	(sprintf@tmpval+3)^(0+128),w
  9473  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  9474  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  9475  04FE  00A7               	movwf	___llmod@dividend+3
  9476  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  9477  0500  1303               	bcf	3,6	;RP1=0, select bank1
  9478  0501  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  9479  0502  1283               	bcf	3,5	;RP0=0, select bank0
  9480  0503  1303               	bcf	3,6	;RP1=0, select bank0
  9481  0504  00A6               	movwf	___llmod@dividend+2
  9482  0505  1683               	bsf	3,5	;RP0=1, select bank1
  9483  0506  1303               	bcf	3,6	;RP1=0, select bank1
  9484  0507  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  9485  0508  1283               	bcf	3,5	;RP0=0, select bank0
  9486  0509  1303               	bcf	3,6	;RP1=0, select bank0
  9487  050A  00A5               	movwf	___llmod@dividend+1
  9488  050B  1683               	bsf	3,5	;RP0=1, select bank1
  9489  050C  1303               	bcf	3,6	;RP1=0, select bank1
  9490  050D  0828               	movf	sprintf@tmpval^(0+128),w
  9491  050E  1283               	bcf	3,5	;RP0=0, select bank0
  9492  050F  1303               	bcf	3,6	;RP1=0, select bank0
  9493  0510  00A4               	movwf	___llmod@dividend
  9494  0511  160A  118A  2246  120A  118A  	fcall	___llmod
  9495  0516  1283               	bcf	3,5	;RP0=0, select bank0
  9496  0517  1303               	bcf	3,6	;RP1=0, select bank0
  9497  0518  0823               	movf	?___llmod+3,w
  9498  0519  1683               	bsf	3,5	;RP0=1, select bank1
  9499  051A  1303               	bcf	3,6	;RP1=0, select bank1
  9500  051B  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9501  051C  1283               	bcf	3,5	;RP0=0, select bank0
  9502  051D  1303               	bcf	3,6	;RP1=0, select bank0
  9503  051E  0822               	movf	?___llmod+2,w
  9504  051F  1683               	bsf	3,5	;RP0=1, select bank1
  9505  0520  1303               	bcf	3,6	;RP1=0, select bank1
  9506  0521  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9507  0522  1283               	bcf	3,5	;RP0=0, select bank0
  9508  0523  1303               	bcf	3,6	;RP1=0, select bank0
  9509  0524  0821               	movf	?___llmod+1,w
  9510  0525  1683               	bsf	3,5	;RP0=1, select bank1
  9511  0526  1303               	bcf	3,6	;RP1=0, select bank1
  9512  0527  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9513  0528  1283               	bcf	3,5	;RP0=0, select bank0
  9514  0529  1303               	bcf	3,6	;RP1=0, select bank0
  9515  052A  0820               	movf	?___llmod,w
  9516  052B  1683               	bsf	3,5	;RP0=1, select bank1
  9517  052C  1303               	bcf	3,6	;RP1=0, select bank1
  9518  052D  00A8               	movwf	sprintf@tmpval^(0+128)
  9519  052E                     l3044:
  9520                           
  9521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9522  052E  0828               	movf	sprintf@tmpval^(0+128),w
  9523  052F  3E30               	addlw	48
  9524  0530  1283               	bcf	3,5	;RP0=0, select bank0
  9525  0531  1303               	bcf	3,6	;RP1=0, select bank0
  9526  0532  00E1               	movwf	??_sprintf
  9527  0533  1683               	bsf	3,5	;RP0=1, select bank1
  9528  0534  1303               	bcf	3,6	;RP1=0, select bank1
  9529  0535  0835               	movf	sprintf@sp^(0+128),w
  9530  0536  0084               	movwf	4
  9531  0537  1283               	bcf	3,5	;RP0=0, select bank0
  9532  0538  1303               	bcf	3,6	;RP1=0, select bank0
  9533  0539  0861               	movf	??_sprintf,w
  9534  053A  1383               	bcf	3,7	;select IRP bank0
  9535  053B  0080               	movwf	0
  9536  053C  3001               	movlw	1
  9537  053D  00E1               	movwf	??_sprintf
  9538  053E  0861               	movf	??_sprintf,w
  9539  053F  1683               	bsf	3,5	;RP0=1, select bank1
  9540  0540  1303               	bcf	3,6	;RP1=0, select bank1
  9541  0541  07B5               	addwf	sprintf@sp^(0+128),f
  9542  0542                     l3046:
  9543                           
  9544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9545  0542  0838               	movf	sprintf@c^(0+128),w
  9546  0543  1283               	bcf	3,5	;RP0=0, select bank0
  9547  0544  1303               	bcf	3,6	;RP1=0, select bank0
  9548  0545  00E1               	movwf	??_sprintf
  9549  0546  3001               	movlw	1
  9550  0547                     u4265:
  9551  0547  1003               	clrc
  9552  0548  0DE1               	rlf	??_sprintf,f
  9553  0549  3EFF               	addlw	-1
  9554  054A  1D03               	skipz
  9555  054B  2D47               	goto	u4265
  9556  054C  1003               	clrc
  9557  054D  0D61               	rlf	??_sprintf,w
  9558  054E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9559  054F  0084               	movwf	4
  9560  0550  160A  118A  200A  120A  118A  	fcall	stringdir
  9561  0555  00A0               	movwf	___llmod@divisor
  9562  0556  160A  118A  200A  120A  118A  	fcall	stringdir
  9563  055B  00A1               	movwf	___llmod@divisor+1
  9564  055C  160A  118A  200A  120A  118A  	fcall	stringdir
  9565  0561  00A2               	movwf	___llmod@divisor+2
  9566  0562  160A  118A  200A  120A  118A  	fcall	stringdir
  9567  0567  00A3               	movwf	___llmod@divisor+3
  9568  0568  1683               	bsf	3,5	;RP0=1, select bank1
  9569  0569  1303               	bcf	3,6	;RP1=0, select bank1
  9570  056A  082F               	movf	(sprintf@val+3)^(0+128),w
  9571  056B  1283               	bcf	3,5	;RP0=0, select bank0
  9572  056C  1303               	bcf	3,6	;RP1=0, select bank0
  9573  056D  00A7               	movwf	___llmod@dividend+3
  9574  056E  1683               	bsf	3,5	;RP0=1, select bank1
  9575  056F  1303               	bcf	3,6	;RP1=0, select bank1
  9576  0570  082E               	movf	(sprintf@val+2)^(0+128),w
  9577  0571  1283               	bcf	3,5	;RP0=0, select bank0
  9578  0572  1303               	bcf	3,6	;RP1=0, select bank0
  9579  0573  00A6               	movwf	___llmod@dividend+2
  9580  0574  1683               	bsf	3,5	;RP0=1, select bank1
  9581  0575  1303               	bcf	3,6	;RP1=0, select bank1
  9582  0576  082D               	movf	(sprintf@val+1)^(0+128),w
  9583  0577  1283               	bcf	3,5	;RP0=0, select bank0
  9584  0578  1303               	bcf	3,6	;RP1=0, select bank0
  9585  0579  00A5               	movwf	___llmod@dividend+1
  9586  057A  1683               	bsf	3,5	;RP0=1, select bank1
  9587  057B  1303               	bcf	3,6	;RP1=0, select bank1
  9588  057C  082C               	movf	sprintf@val^(0+128),w
  9589  057D  1283               	bcf	3,5	;RP0=0, select bank0
  9590  057E  1303               	bcf	3,6	;RP1=0, select bank0
  9591  057F  00A4               	movwf	___llmod@dividend
  9592  0580  160A  118A  2246  120A  118A  	fcall	___llmod
  9593  0585  1283               	bcf	3,5	;RP0=0, select bank0
  9594  0586  1303               	bcf	3,6	;RP1=0, select bank0
  9595  0587  0823               	movf	?___llmod+3,w
  9596  0588  1683               	bsf	3,5	;RP0=1, select bank1
  9597  0589  1303               	bcf	3,6	;RP1=0, select bank1
  9598  058A  00AF               	movwf	(sprintf@val+3)^(0+128)
  9599  058B  1283               	bcf	3,5	;RP0=0, select bank0
  9600  058C  1303               	bcf	3,6	;RP1=0, select bank0
  9601  058D  0822               	movf	?___llmod+2,w
  9602  058E  1683               	bsf	3,5	;RP0=1, select bank1
  9603  058F  1303               	bcf	3,6	;RP1=0, select bank1
  9604  0590  00AE               	movwf	(sprintf@val+2)^(0+128)
  9605  0591  1283               	bcf	3,5	;RP0=0, select bank0
  9606  0592  1303               	bcf	3,6	;RP1=0, select bank0
  9607  0593  0821               	movf	?___llmod+1,w
  9608  0594  1683               	bsf	3,5	;RP0=1, select bank1
  9609  0595  1303               	bcf	3,6	;RP1=0, select bank1
  9610  0596  00AD               	movwf	(sprintf@val+1)^(0+128)
  9611  0597  1283               	bcf	3,5	;RP0=0, select bank0
  9612  0598  1303               	bcf	3,6	;RP1=0, select bank0
  9613  0599  0820               	movf	?___llmod,w
  9614  059A  1683               	bsf	3,5	;RP0=1, select bank1
  9615  059B  1303               	bcf	3,6	;RP1=0, select bank1
  9616  059C  00AC               	movwf	sprintf@val^(0+128)
  9617  059D                     l3048:
  9618                           
  9619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9620  059D  3001               	movlw	1
  9621  059E  02B8               	subwf	sprintf@c^(0+128),f
  9622  059F  0A38               	incf	sprintf@c^(0+128),w
  9623  05A0  1D03               	btfss	3,2
  9624  05A1  2DA3               	goto	u4271
  9625  05A2  2DA4               	goto	u4270
  9626  05A3                     u4271:
  9627  05A3  2CB0               	goto	l3040
  9628  05A4                     u4270:
  9629  05A4  2DBE               	goto	l3056
  9630  05A5                     l3050:
  9631                           
  9632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9633  05A5  3030               	movlw	48
  9634  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  9635  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  9636  05A8  00E1               	movwf	??_sprintf
  9637  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  9638  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  9639  05AB  0835               	movf	sprintf@sp^(0+128),w
  9640  05AC  0084               	movwf	4
  9641  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  9642  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  9643  05AF  0861               	movf	??_sprintf,w
  9644  05B0  1383               	bcf	3,7	;select IRP bank0
  9645  05B1  0080               	movwf	0
  9646  05B2                     l3052:
  9647  05B2  3001               	movlw	1
  9648  05B3  00E1               	movwf	??_sprintf
  9649  05B4  0861               	movf	??_sprintf,w
  9650  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  9651  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  9652  05B7  07B5               	addwf	sprintf@sp^(0+128),f
  9653  05B8                     l3054:
  9654                           
  9655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9656  05B8  30FF               	movlw	255
  9657  05B9  07B6               	addwf	sprintf@prec^(0+128),f
  9658  05BA  1803               	skipnc
  9659  05BB  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9660  05BC  30FF               	movlw	255
  9661  05BD  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9662  05BE                     l3056:
  9663                           
  9664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9665  05BE  0836               	movf	sprintf@prec^(0+128),w
  9666  05BF  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9667  05C0  1D03               	btfss	3,2
  9668  05C1  2DC3               	goto	u4281
  9669  05C2  2DC4               	goto	u4280
  9670  05C3                     u4281:
  9671  05C3  2DA5               	goto	l3050
  9672  05C4                     u4280:
  9673  05C4  2FCE               	goto	l3136
  9674  05C5                     l3058:
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9677  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  9678  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  9679  05C7  0823               	movf	sprintf@ap^(0+128),w
  9680  05C8  0084               	movwf	4
  9681  05C9  1383               	bcf	3,7	;select IRP bank0
  9682  05CA  0800               	movf	0,w
  9683  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  9684  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  9685  05CD  00E1               	movwf	??_sprintf
  9686  05CE  0A84               	incf	4,f
  9687  05CF  0800               	movf	0,w
  9688  05D0  00E2               	movwf	??_sprintf+1
  9689  05D1  0861               	movf	??_sprintf,w
  9690  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  9691  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  9692  05D4  00AC               	movwf	sprintf@val^(0+128)
  9693  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  9694  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  9695  05D7  0862               	movf	??_sprintf+1,w
  9696  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  9697  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  9698  05DA  00AD               	movwf	(sprintf@val+1)^(0+128)
  9699  05DB  3000               	movlw	0
  9700  05DC  1BAD               	btfsc	(sprintf@val+1)^(0+128),7
  9701  05DD  30FF               	movlw	255
  9702  05DE  00AE               	movwf	(sprintf@val+2)^(0+128)
  9703  05DF  00AF               	movwf	(sprintf@val+3)^(0+128)
  9704  05E0                     l3060:
  9705  05E0  3002               	movlw	2
  9706  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  9707  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  9708  05E3  00E1               	movwf	??_sprintf
  9709  05E4  0861               	movf	??_sprintf,w
  9710  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  9711  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  9712  05E7  07A3               	addwf	sprintf@ap^(0+128),f
  9713  05E8                     l3062:
  9714                           
  9715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  9716  05E8  1FAF               	btfss	(sprintf@val+3)^(0+128),7
  9717  05E9  2DEB               	goto	u4291
  9718  05EA  2DEC               	goto	u4290
  9719  05EB                     u4291:
  9720  05EB  2DFB               	goto	l3068
  9721  05EC                     u4290:
  9722  05EC                     l3064:
  9723                           
  9724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9725  05EC  3003               	movlw	3
  9726  05ED  04A4               	iorwf	sprintf@flag^(0+128),f
  9727  05EE  3000               	movlw	0
  9728  05EF  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  9729  05F0                     l3066:
  9730                           
  9731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9732  05F0  09AC               	comf	sprintf@val^(0+128),f
  9733  05F1  09AD               	comf	(sprintf@val+1)^(0+128),f
  9734  05F2  09AE               	comf	(sprintf@val+2)^(0+128),f
  9735  05F3  09AF               	comf	(sprintf@val+3)^(0+128),f
  9736  05F4  0AAC               	incf	sprintf@val^(0+128),f
  9737  05F5  1903               	skipnz
  9738  05F6  0AAD               	incf	(sprintf@val+1)^(0+128),f
  9739  05F7  1903               	skipnz
  9740  05F8  0AAE               	incf	(sprintf@val+2)^(0+128),f
  9741  05F9  1903               	skipnz
  9742  05FA  0AAF               	incf	(sprintf@val+3)^(0+128),f
  9743  05FB                     l3068:
  9744                           
  9745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  9746  05FB  0836               	movf	sprintf@prec^(0+128),w
  9747  05FC  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9748  05FD  1D03               	btfss	3,2
  9749  05FE  2E00               	goto	u4301
  9750  05FF  2E01               	goto	u4300
  9751  0600                     u4301:
  9752  0600  2E0F               	goto	l3074
  9753  0601                     u4300:
  9754  0601                     l3070:
  9755  0601  082F               	movf	(sprintf@val+3)^(0+128),w
  9756  0602  042E               	iorwf	(sprintf@val+2)^(0+128),w
  9757  0603  042D               	iorwf	(sprintf@val+1)^(0+128),w
  9758  0604  042C               	iorwf	sprintf@val^(0+128),w
  9759  0605  1D03               	skipz
  9760  0606  2E08               	goto	u4311
  9761  0607  2E09               	goto	u4310
  9762  0608                     u4311:
  9763  0608  2E0F               	goto	l3074
  9764  0609                     u4310:
  9765  0609                     l3072:
  9766                           
  9767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9768  0609  3001               	movlw	1
  9769  060A  07B6               	addwf	sprintf@prec^(0+128),f
  9770  060B  1803               	skipnc
  9771  060C  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9772  060D  3000               	movlw	0
  9773  060E  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9774  060F                     l3074:
  9775                           
  9776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9777  060F  01B8               	clrf	sprintf@c^(0+128)
  9778  0610  0AB8               	incf	sprintf@c^(0+128),f
  9779  0611                     l3080:
  9780                           
  9781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  9782  0611  0838               	movf	sprintf@c^(0+128),w
  9783  0612  1283               	bcf	3,5	;RP0=0, select bank0
  9784  0613  1303               	bcf	3,6	;RP1=0, select bank0
  9785  0614  00E1               	movwf	??_sprintf
  9786  0615  3001               	movlw	1
  9787  0616                     u4325:
  9788  0616  1003               	clrc
  9789  0617  0DE1               	rlf	??_sprintf,f
  9790  0618  3EFF               	addlw	-1
  9791  0619  1D03               	skipz
  9792  061A  2E16               	goto	u4325
  9793  061B  1003               	clrc
  9794  061C  0D61               	rlf	??_sprintf,w
  9795  061D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9796  061E  0084               	movwf	4
  9797  061F  160A  118A  200A  120A  118A  	fcall	stringdir
  9798  0624  00E2               	movwf	??_sprintf+1
  9799  0625  160A  118A  200A  120A  118A  	fcall	stringdir
  9800  062A  00E3               	movwf	??_sprintf+2
  9801  062B  160A  118A  200A  120A  118A  	fcall	stringdir
  9802  0630  00E4               	movwf	??_sprintf+3
  9803  0631  160A  118A  200A  120A  118A  	fcall	stringdir
  9804  0636  00E5               	movwf	??_sprintf+4
  9805  0637  0865               	movf	??_sprintf+4,w
  9806  0638  1683               	bsf	3,5	;RP0=1, select bank1
  9807  0639  1303               	bcf	3,6	;RP1=0, select bank1
  9808  063A  022F               	subwf	(sprintf@val+3)^(0+128),w
  9809  063B  1D03               	skipz
  9810  063C  2E53               	goto	u4335
  9811  063D  1283               	bcf	3,5	;RP0=0, select bank0
  9812  063E  1303               	bcf	3,6	;RP1=0, select bank0
  9813  063F  0864               	movf	??_sprintf+3,w
  9814  0640  1683               	bsf	3,5	;RP0=1, select bank1
  9815  0641  1303               	bcf	3,6	;RP1=0, select bank1
  9816  0642  022E               	subwf	(sprintf@val+2)^(0+128),w
  9817  0643  1D03               	skipz
  9818  0644  2E53               	goto	u4335
  9819  0645  1283               	bcf	3,5	;RP0=0, select bank0
  9820  0646  1303               	bcf	3,6	;RP1=0, select bank0
  9821  0647  0863               	movf	??_sprintf+2,w
  9822  0648  1683               	bsf	3,5	;RP0=1, select bank1
  9823  0649  1303               	bcf	3,6	;RP1=0, select bank1
  9824  064A  022D               	subwf	(sprintf@val+1)^(0+128),w
  9825  064B  1D03               	skipz
  9826  064C  2E53               	goto	u4335
  9827  064D  1283               	bcf	3,5	;RP0=0, select bank0
  9828  064E  1303               	bcf	3,6	;RP1=0, select bank0
  9829  064F  0862               	movf	??_sprintf+1,w
  9830  0650  1683               	bsf	3,5	;RP0=1, select bank1
  9831  0651  1303               	bcf	3,6	;RP1=0, select bank1
  9832  0652  022C               	subwf	sprintf@val^(0+128),w
  9833  0653                     u4335:
  9834  0653  1803               	skipnc
  9835  0654  2E56               	goto	u4331
  9836  0655  2E57               	goto	u4330
  9837  0656                     u4331:
  9838  0656  2E58               	goto	l3084
  9839  0657                     u4330:
  9840  0657  2E66               	goto	l3086
  9841  0658                     l3084:
  9842  0658  3001               	movlw	1
  9843  0659  1283               	bcf	3,5	;RP0=0, select bank0
  9844  065A  1303               	bcf	3,6	;RP1=0, select bank0
  9845  065B  00E1               	movwf	??_sprintf
  9846  065C  0861               	movf	??_sprintf,w
  9847  065D  1683               	bsf	3,5	;RP0=1, select bank1
  9848  065E  1303               	bcf	3,6	;RP1=0, select bank1
  9849  065F  07B8               	addwf	sprintf@c^(0+128),f
  9850  0660  300A               	movlw	10
  9851  0661  0638               	xorwf	sprintf@c^(0+128),w
  9852  0662  1D03               	btfss	3,2
  9853  0663  2E65               	goto	u4341
  9854  0664  2E66               	goto	u4340
  9855  0665                     u4341:
  9856  0665  2E11               	goto	l3080
  9857  0666                     u4340:
  9858  0666                     l3086:
  9859                           
  9860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9861  0666  0837               	movf	(sprintf@prec+1)^(0+128),w
  9862  0667  3A80               	xorlw	128
  9863  0668  3C80               	sublw	128
  9864  0669  1D03               	skipz
  9865  066A  2E6D               	goto	u4355
  9866  066B  0836               	movf	sprintf@prec^(0+128),w
  9867  066C  0238               	subwf	sprintf@c^(0+128),w
  9868  066D                     u4355:
  9869  066D  1803               	skipnc
  9870  066E  2E70               	goto	u4351
  9871  066F  2E71               	goto	u4350
  9872  0670                     u4351:
  9873  0670  2E7C               	goto	l3090
  9874  0671                     u4350:
  9875  0671                     l3088:
  9876                           
  9877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9878  0671  1683               	bsf	3,5	;RP0=1, select bank1
  9879  0672  1303               	bcf	3,6	;RP1=0, select bank1
  9880  0673  0836               	movf	sprintf@prec^(0+128),w
  9881  0674  1283               	bcf	3,5	;RP0=0, select bank0
  9882  0675  1303               	bcf	3,6	;RP1=0, select bank0
  9883  0676  00E1               	movwf	??_sprintf
  9884  0677  0861               	movf	??_sprintf,w
  9885  0678  1683               	bsf	3,5	;RP0=1, select bank1
  9886  0679  1303               	bcf	3,6	;RP1=0, select bank1
  9887  067A  00B8               	movwf	sprintf@c^(0+128)
  9888  067B  2EA0               	goto	l3094
  9889  067C                     l3090:
  9890  067C  1683               	bsf	3,5	;RP0=1, select bank1
  9891  067D  1303               	bcf	3,6	;RP1=0, select bank1
  9892  067E  0837               	movf	(sprintf@prec+1)^(0+128),w
  9893  067F  3A80               	xorlw	128
  9894  0680  1283               	bcf	3,5	;RP0=0, select bank0
  9895  0681  1303               	bcf	3,6	;RP1=0, select bank0
  9896  0682  00E1               	movwf	??_sprintf
  9897  0683  3080               	movlw	128
  9898  0684  0261               	subwf	??_sprintf,w
  9899  0685  1D03               	skipz
  9900  0686  2E8B               	goto	u4365
  9901  0687  1683               	bsf	3,5	;RP0=1, select bank1
  9902  0688  1303               	bcf	3,6	;RP1=0, select bank1
  9903  0689  0838               	movf	sprintf@c^(0+128),w
  9904  068A  0236               	subwf	sprintf@prec^(0+128),w
  9905  068B                     u4365:
  9906  068B  1803               	skipnc
  9907  068C  2E8E               	goto	u4361
  9908  068D  2E8F               	goto	u4360
  9909  068E                     u4361:
  9910  068E  2EA0               	goto	l3094
  9911  068F                     u4360:
  9912  068F                     l3092:
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9915  068F  1683               	bsf	3,5	;RP0=1, select bank1
  9916  0690  1303               	bcf	3,6	;RP1=0, select bank1
  9917  0691  0838               	movf	sprintf@c^(0+128),w
  9918  0692  1283               	bcf	3,5	;RP0=0, select bank0
  9919  0693  1303               	bcf	3,6	;RP1=0, select bank0
  9920  0694  00E1               	movwf	??_sprintf
  9921  0695  01E2               	clrf	??_sprintf+1
  9922  0696  0861               	movf	??_sprintf,w
  9923  0697  1683               	bsf	3,5	;RP0=1, select bank1
  9924  0698  1303               	bcf	3,6	;RP1=0, select bank1
  9925  0699  00B6               	movwf	sprintf@prec^(0+128)
  9926  069A  1283               	bcf	3,5	;RP0=0, select bank0
  9927  069B  1303               	bcf	3,6	;RP1=0, select bank0
  9928  069C  0862               	movf	??_sprintf+1,w
  9929  069D  1683               	bsf	3,5	;RP0=1, select bank1
  9930  069E  1303               	bcf	3,6	;RP1=0, select bank1
  9931  069F  00B7               	movwf	(sprintf@prec+1)^(0+128)
  9932  06A0                     l3094:
  9933                           
  9934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9935  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  9936  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  9937  06A2  0826               	movf	sprintf@width^(0+128),w
  9938  06A3  0427               	iorwf	(sprintf@width+1)^(0+128),w
  9939  06A4  1903               	btfsc	3,2
  9940  06A5  2EA7               	goto	u4371
  9941  06A6  2EA8               	goto	u4370
  9942  06A7                     u4371:
  9943  06A7  2EC2               	goto	l3100
  9944  06A8                     u4370:
  9945  06A8                     l3096:
  9946  06A8  3003               	movlw	3
  9947  06A9  0524               	andwf	sprintf@flag^(0+128),w
  9948  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  9949  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  9950  06AC  00E1               	movwf	??_sprintf
  9951  06AD  3000               	movlw	0
  9952  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  9953  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  9954  06B0  0525               	andwf	(sprintf@flag+1)^(0+128),w
  9955  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  9956  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  9957  06B3  00E2               	movwf	??_sprintf+1
  9958  06B4  0861               	movf	??_sprintf,w
  9959  06B5  0462               	iorwf	??_sprintf+1,w
  9960  06B6  1903               	btfsc	3,2
  9961  06B7  2EB9               	goto	u4381
  9962  06B8  2EBA               	goto	u4380
  9963  06B9                     u4381:
  9964  06B9  2EC2               	goto	l3100
  9965  06BA                     u4380:
  9966  06BA                     l3098:
  9967                           
  9968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9969  06BA  30FF               	movlw	255
  9970  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  9971  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  9972  06BD  07A6               	addwf	sprintf@width^(0+128),f
  9973  06BE  1803               	skipnc
  9974  06BF  0AA7               	incf	(sprintf@width+1)^(0+128),f
  9975  06C0  30FF               	movlw	255
  9976  06C1  07A7               	addwf	(sprintf@width+1)^(0+128),f
  9977  06C2                     l3100:
  9978                           
  9979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9980  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  9981  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  9982  06C4  1F25               	btfss	(sprintf@flag+1)^(0+128),6
  9983  06C5  2EC7               	goto	u4391
  9984  06C6  2EC8               	goto	u4390
  9985  06C7                     u4391:
  9986  06C7  2EEB               	goto	l3108
  9987  06C8                     u4390:
  9988  06C8                     l3102:
  9989                           
  9990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9991  06C8  0837               	movf	(sprintf@prec+1)^(0+128),w
  9992  06C9  3A80               	xorlw	128
  9993  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  9994  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  9995  06CC  00E1               	movwf	??_sprintf
  9996  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  9997  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  9998  06CF  0827               	movf	(sprintf@width+1)^(0+128),w
  9999  06D0  3A80               	xorlw	128
 10000  06D1  1283               	bcf	3,5	;RP0=0, select bank0
 10001  06D2  1303               	bcf	3,6	;RP1=0, select bank0
 10002  06D3  0261               	subwf	??_sprintf,w
 10003  06D4  1D03               	skipz
 10004  06D5  2EDA               	goto	u4405
 10005  06D6  1683               	bsf	3,5	;RP0=1, select bank1
 10006  06D7  1303               	bcf	3,6	;RP1=0, select bank1
 10007  06D8  0826               	movf	sprintf@width^(0+128),w
 10008  06D9  0236               	subwf	sprintf@prec^(0+128),w
 10009  06DA                     u4405:
 10010  06DA  1803               	skipnc
 10011  06DB  2EDD               	goto	u4401
 10012  06DC  2EDE               	goto	u4400
 10013  06DD                     u4401:
 10014  06DD  2EE7               	goto	l3106
 10015  06DE                     u4400:
 10016  06DE                     l3104:
 10017                           
 10018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10019  06DE  1683               	bsf	3,5	;RP0=1, select bank1
 10020  06DF  1303               	bcf	3,6	;RP1=0, select bank1
 10021  06E0  0836               	movf	sprintf@prec^(0+128),w
 10022  06E1  02A6               	subwf	sprintf@width^(0+128),f
 10023  06E2  0837               	movf	(sprintf@prec+1)^(0+128),w
 10024  06E3  1C03               	skipc
 10025  06E4  03A7               	decf	(sprintf@width+1)^(0+128),f
 10026  06E5  02A7               	subwf	(sprintf@width+1)^(0+128),f
 10027  06E6  2EEB               	goto	l3108
 10028  06E7                     l3106:
 10029                           
 10030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10031  06E7  1683               	bsf	3,5	;RP0=1, select bank1
 10032  06E8  1303               	bcf	3,6	;RP1=0, select bank1
 10033  06E9  01A6               	clrf	sprintf@width^(0+128)
 10034  06EA  01A7               	clrf	(sprintf@width+1)^(0+128)
 10035  06EB                     l3108:
 10036                           
 10037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10038  06EB  0827               	movf	(sprintf@width+1)^(0+128),w
 10039  06EC  3A80               	xorlw	128
 10040  06ED  3C80               	sublw	128
 10041  06EE  1D03               	skipz
 10042  06EF  2EF2               	goto	u4415
 10043  06F0  0826               	movf	sprintf@width^(0+128),w
 10044  06F1  0238               	subwf	sprintf@c^(0+128),w
 10045  06F2                     u4415:
 10046  06F2  1803               	skipnc
 10047  06F3  2EF5               	goto	u4411
 10048  06F4  2EF6               	goto	u4410
 10049  06F5                     u4411:
 10050  06F5  2F0A               	goto	l3112
 10051  06F6                     u4410:
 10052  06F6                     l3110:
 10053                           
 10054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10055  06F6  1683               	bsf	3,5	;RP0=1, select bank1
 10056  06F7  1303               	bcf	3,6	;RP1=0, select bank1
 10057  06F8  0838               	movf	sprintf@c^(0+128),w
 10058  06F9  1283               	bcf	3,5	;RP0=0, select bank0
 10059  06FA  1303               	bcf	3,6	;RP1=0, select bank0
 10060  06FB  00E1               	movwf	??_sprintf
 10061  06FC  01E2               	clrf	??_sprintf+1
 10062  06FD  0861               	movf	??_sprintf,w
 10063  06FE  1683               	bsf	3,5	;RP0=1, select bank1
 10064  06FF  1303               	bcf	3,6	;RP1=0, select bank1
 10065  0700  02A6               	subwf	sprintf@width^(0+128),f
 10066  0701  1283               	bcf	3,5	;RP0=0, select bank0
 10067  0702  1303               	bcf	3,6	;RP1=0, select bank0
 10068  0703  0862               	movf	??_sprintf+1,w
 10069  0704  1683               	bsf	3,5	;RP0=1, select bank1
 10070  0705  1303               	bcf	3,6	;RP1=0, select bank1
 10071  0706  1C03               	skipc
 10072  0707  03A7               	decf	(sprintf@width+1)^(0+128),f
 10073  0708  02A7               	subwf	(sprintf@width+1)^(0+128),f
 10074  0709  2F0E               	goto	l3114
 10075  070A                     l3112:
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10078  070A  1683               	bsf	3,5	;RP0=1, select bank1
 10079  070B  1303               	bcf	3,6	;RP1=0, select bank1
 10080  070C  01A6               	clrf	sprintf@width^(0+128)
 10081  070D  01A7               	clrf	(sprintf@width+1)^(0+128)
 10082  070E                     l3114:
 10083                           
 10084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10085  070E  0826               	movf	sprintf@width^(0+128),w
 10086  070F  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10087  0710  1903               	btfsc	3,2
 10088  0711  2F13               	goto	u4421
 10089  0712  2F14               	goto	u4420
 10090  0713                     u4421:
 10091  0713  2F33               	goto	l3122
 10092  0714                     u4420:
 10093  0714                     l3116:
 10094                           
 10095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10096  0714  3020               	movlw	32
 10097  0715  1283               	bcf	3,5	;RP0=0, select bank0
 10098  0716  1303               	bcf	3,6	;RP1=0, select bank0
 10099  0717  00E1               	movwf	??_sprintf
 10100  0718  1683               	bsf	3,5	;RP0=1, select bank1
 10101  0719  1303               	bcf	3,6	;RP1=0, select bank1
 10102  071A  0835               	movf	sprintf@sp^(0+128),w
 10103  071B  0084               	movwf	4
 10104  071C  1283               	bcf	3,5	;RP0=0, select bank0
 10105  071D  1303               	bcf	3,6	;RP1=0, select bank0
 10106  071E  0861               	movf	??_sprintf,w
 10107  071F  1383               	bcf	3,7	;select IRP bank0
 10108  0720  0080               	movwf	0
 10109  0721                     l3118:
 10110  0721  3001               	movlw	1
 10111  0722  00E1               	movwf	??_sprintf
 10112  0723  0861               	movf	??_sprintf,w
 10113  0724  1683               	bsf	3,5	;RP0=1, select bank1
 10114  0725  1303               	bcf	3,6	;RP1=0, select bank1
 10115  0726  07B5               	addwf	sprintf@sp^(0+128),f
 10116  0727                     l3120:
 10117  0727  30FF               	movlw	255
 10118  0728  07A6               	addwf	sprintf@width^(0+128),f
 10119  0729  1803               	skipnc
 10120  072A  0AA7               	incf	(sprintf@width+1)^(0+128),f
 10121  072B  30FF               	movlw	255
 10122  072C  07A7               	addwf	(sprintf@width+1)^(0+128),f
 10123  072D  0826               	movf	sprintf@width^(0+128),w
 10124  072E  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10125  072F  1D03               	btfss	3,2
 10126  0730  2F32               	goto	u4431
 10127  0731  2F33               	goto	u4430
 10128  0732                     u4431:
 10129  0732  2F14               	goto	l3116
 10130  0733                     u4430:
 10131  0733                     l3122:
 10132                           
 10133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10134  0733  3003               	movlw	3
 10135  0734  0524               	andwf	sprintf@flag^(0+128),w
 10136  0735  1283               	bcf	3,5	;RP0=0, select bank0
 10137  0736  1303               	bcf	3,6	;RP1=0, select bank0
 10138  0737  00E1               	movwf	??_sprintf
 10139  0738  3000               	movlw	0
 10140  0739  1683               	bsf	3,5	;RP0=1, select bank1
 10141  073A  1303               	bcf	3,6	;RP1=0, select bank1
 10142  073B  0525               	andwf	(sprintf@flag+1)^(0+128),w
 10143  073C  1283               	bcf	3,5	;RP0=0, select bank0
 10144  073D  1303               	bcf	3,6	;RP1=0, select bank0
 10145  073E  00E2               	movwf	??_sprintf+1
 10146  073F  0861               	movf	??_sprintf,w
 10147  0740  0462               	iorwf	??_sprintf+1,w
 10148  0741  1903               	btfsc	3,2
 10149  0742  2F44               	goto	u4441
 10150  0743  2F45               	goto	u4440
 10151  0744                     u4441:
 10152  0744  2FBE               	goto	l3134
 10153  0745                     u4440:
 10154  0745                     l3124:
 10155                           
 10156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10157  0745  302D               	movlw	45
 10158  0746  00E1               	movwf	??_sprintf
 10159  0747  1683               	bsf	3,5	;RP0=1, select bank1
 10160  0748  1303               	bcf	3,6	;RP1=0, select bank1
 10161  0749  0835               	movf	sprintf@sp^(0+128),w
 10162  074A  0084               	movwf	4
 10163  074B  1283               	bcf	3,5	;RP0=0, select bank0
 10164  074C  1303               	bcf	3,6	;RP1=0, select bank0
 10165  074D  0861               	movf	??_sprintf,w
 10166  074E  1383               	bcf	3,7	;select IRP bank0
 10167  074F  0080               	movwf	0
 10168  0750                     l3126:
 10169  0750  3001               	movlw	1
 10170  0751  00E1               	movwf	??_sprintf
 10171  0752  0861               	movf	??_sprintf,w
 10172  0753  1683               	bsf	3,5	;RP0=1, select bank1
 10173  0754  1303               	bcf	3,6	;RP1=0, select bank1
 10174  0755  07B5               	addwf	sprintf@sp^(0+128),f
 10175  0756  2FBE               	goto	l3134
 10176  0757                     l3128:
 10177                           
 10178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10179  0757  3000               	movlw	0
 10180  0758  1283               	bcf	3,5	;RP0=0, select bank0
 10181  0759  1303               	bcf	3,6	;RP1=0, select bank0
 10182  075A  00A3               	movwf	___llmod@divisor+3
 10183  075B  3000               	movlw	0
 10184  075C  00A2               	movwf	___llmod@divisor+2
 10185  075D  3000               	movlw	0
 10186  075E  00A1               	movwf	___llmod@divisor+1
 10187  075F  300A               	movlw	10
 10188  0760  00A0               	movwf	___llmod@divisor
 10189  0761  1683               	bsf	3,5	;RP0=1, select bank1
 10190  0762  1303               	bcf	3,6	;RP1=0, select bank1
 10191  0763  0836               	movf	sprintf@prec^(0+128),w
 10192  0764  1283               	bcf	3,5	;RP0=0, select bank0
 10193  0765  1303               	bcf	3,6	;RP1=0, select bank0
 10194  0766  00E1               	movwf	??_sprintf
 10195  0767  3001               	movlw	1
 10196  0768                     u4455:
 10197  0768  1003               	clrc
 10198  0769  0DE1               	rlf	??_sprintf,f
 10199  076A  3EFF               	addlw	-1
 10200  076B  1D03               	skipz
 10201  076C  2F68               	goto	u4455
 10202  076D  1003               	clrc
 10203  076E  0D61               	rlf	??_sprintf,w
 10204  076F  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10205  0770  0084               	movwf	4
 10206  0771  160A  118A  200A  120A  118A  	fcall	stringdir
 10207  0776  00F0               	movwf	___lldiv@divisor
 10208  0777  160A  118A  200A  120A  118A  	fcall	stringdir
 10209  077C  00F1               	movwf	___lldiv@divisor+1
 10210  077D  160A  118A  200A  120A  118A  	fcall	stringdir
 10211  0782  00F2               	movwf	___lldiv@divisor+2
 10212  0783  160A  118A  200A  120A  118A  	fcall	stringdir
 10213  0788  00F3               	movwf	___lldiv@divisor+3
 10214  0789  1683               	bsf	3,5	;RP0=1, select bank1
 10215  078A  1303               	bcf	3,6	;RP1=0, select bank1
 10216  078B  082F               	movf	(sprintf@val+3)^(0+128),w
 10217  078C  00F7               	movwf	___lldiv@dividend+3
 10218  078D  082E               	movf	(sprintf@val+2)^(0+128),w
 10219  078E  00F6               	movwf	___lldiv@dividend+2
 10220  078F  082D               	movf	(sprintf@val+1)^(0+128),w
 10221  0790  00F5               	movwf	___lldiv@dividend+1
 10222  0791  082C               	movf	sprintf@val^(0+128),w
 10223  0792  00F4               	movwf	___lldiv@dividend
 10224  0793  160A  118A  235B  120A  118A  	fcall	___lldiv
 10225  0798  0873               	movf	?___lldiv+3,w
 10226  0799  1283               	bcf	3,5	;RP0=0, select bank0
 10227  079A  1303               	bcf	3,6	;RP1=0, select bank0
 10228  079B  00A7               	movwf	___llmod@dividend+3
 10229  079C  0872               	movf	?___lldiv+2,w
 10230  079D  00A6               	movwf	___llmod@dividend+2
 10231  079E  0871               	movf	?___lldiv+1,w
 10232  079F  00A5               	movwf	___llmod@dividend+1
 10233  07A0  0870               	movf	?___lldiv,w
 10234  07A1  00A4               	movwf	___llmod@dividend
 10235  07A2  160A  118A  2246  120A  118A  	fcall	___llmod
 10236  07A7  1283               	bcf	3,5	;RP0=0, select bank0
 10237  07A8  1303               	bcf	3,6	;RP1=0, select bank0
 10238  07A9  0820               	movf	?___llmod,w
 10239  07AA  3E30               	addlw	48
 10240  07AB  00E2               	movwf	??_sprintf+1
 10241  07AC  0862               	movf	??_sprintf+1,w
 10242  07AD  1683               	bsf	3,5	;RP0=1, select bank1
 10243  07AE  1303               	bcf	3,6	;RP1=0, select bank1
 10244  07AF  00B8               	movwf	sprintf@c^(0+128)
 10245  07B0                     l3130:
 10246                           
 10247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10248  07B0  0838               	movf	sprintf@c^(0+128),w
 10249  07B1  1283               	bcf	3,5	;RP0=0, select bank0
 10250  07B2  1303               	bcf	3,6	;RP1=0, select bank0
 10251  07B3  00E1               	movwf	??_sprintf
 10252  07B4  1683               	bsf	3,5	;RP0=1, select bank1
 10253  07B5  1303               	bcf	3,6	;RP1=0, select bank1
 10254  07B6  0835               	movf	sprintf@sp^(0+128),w
 10255  07B7  0084               	movwf	4
 10256  07B8  1283               	bcf	3,5	;RP0=0, select bank0
 10257  07B9  1303               	bcf	3,6	;RP1=0, select bank0
 10258  07BA  0861               	movf	??_sprintf,w
 10259  07BB  1383               	bcf	3,7	;select IRP bank0
 10260  07BC  0080               	movwf	0
 10261  07BD  2F50               	goto	l3126
 10262  07BE                     l3134:
 10263                           
 10264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10265  07BE  30FF               	movlw	255
 10266  07BF  1683               	bsf	3,5	;RP0=1, select bank1
 10267  07C0  1303               	bcf	3,6	;RP1=0, select bank1
 10268  07C1  07B6               	addwf	sprintf@prec^(0+128),f
 10269  07C2  1803               	skipnc
 10270  07C3  0AB7               	incf	(sprintf@prec+1)^(0+128),f
 10271  07C4  30FF               	movlw	255
 10272  07C5  07B7               	addwf	(sprintf@prec+1)^(0+128),f
 10273  07C6  0A36               	incf	sprintf@prec^(0+128),w
 10274  07C7  1D03               	skipz
 10275  07C8  2FCD               	goto	u4461
 10276  07C9  0A37               	incf	(sprintf@prec+1)^(0+128),w
 10277  07CA  1D03               	btfss	3,2
 10278  07CB  2FCD               	goto	u4461
 10279  07CC  2FCE               	goto	u4460
 10280  07CD                     u4461:
 10281  07CD  2F57               	goto	l3128
 10282  07CE                     u4460:
 10283  07CE                     l3136:
 10284                           
 10285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10286  07CE  3001               	movlw	1
 10287  07CF  1283               	bcf	3,5	;RP0=0, select bank0
 10288  07D0  07DB               	addwf	sprintf@f,f
 10289  07D1  30FF               	movlw	-1
 10290  07D2  075B               	addwf	sprintf@f,w
 10291  07D3  0084               	movwf	4
 10292  07D4  160A  118A  200A  120A  118A  	fcall	stringdir
 10293  07D9  00E1               	movwf	??_sprintf
 10294  07DA  0861               	movf	??_sprintf,w
 10295  07DB  1683               	bsf	3,5	;RP0=1, select bank1
 10296  07DC  1303               	bcf	3,6	;RP1=0, select bank1
 10297  07DD  00B8               	movwf	sprintf@c^(0+128)
 10298  07DE  0838               	movf	sprintf@c^(0+128),w
 10299  07DF  1D03               	btfss	3,2
 10300  07E0  2FE2               	goto	u4471
 10301  07E1  2FE5               	goto	u4470
 10302  07E2                     u4471:
 10303  07E2  120A  158A  2D36   	goto	l2858
 10304  07E5                     u4470:
 10305  07E5                     l3138:
 10306                           
 10307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10308  07E5  1683               	bsf	3,5	;RP0=1, select bank1
 10309  07E6  1303               	bcf	3,6	;RP1=0, select bank1
 10310  07E7  0835               	movf	sprintf@sp^(0+128),w
 10311  07E8  0084               	movwf	4
 10312  07E9  1383               	bcf	3,7	;select IRP bank0
 10313  07EA  0180               	clrf	0
 10314  07EB                     l418:
 10315  07EB  0008               	return
 10316  07EC                     __end_of_sprintf:

Data Sizes:
    Strings     24
    Constant    118
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     25      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[14]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[13]), BUFFER(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _write_string->_write_char
    _write_char->_port
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___ftmul->___awtoft
    ___ftmul->___lwdiv
    ___bmul->___lwdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _setup->_spiInit
    _set_cursor->_CMDs
    _contador->_spiWrite
    _clear_LCD->_CMDs
    ___awtoft->___ftpack
    _Write_USART_String->_Write_USART
    _LCD_init->_CMDs
    _CMDs->_port
    _ADCread->_spiWrite

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   40674
                                             71 BANK0      3     3      0
                            _ADCread
                           _LCD_init
                        _Write_USART
                 _Write_USART_String
                           ___awtoft
                            ___ftmul
                           __baudios
                          _clear_LCD
                       _config_rcsta
                       _config_txsta
                           _contador
                         _set_cursor
                              _setup
                            _sprintf
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     394
                                              3 COMMON     7     5      2
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     198
                                              1 COMMON     2     2      0
                               _port
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    36      6   32917
                                             59 BANK0     12     6      6
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6840
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5625
                                             24 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3863
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2069
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     583
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3172
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2999
                                             40 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     291
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     438
                                              4 COMMON     4     3      1
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _contador                                             2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     198
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2091
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     198
                                              4 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     198
                                              1 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _port                                                 1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCread                                              2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCread
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LCD_init
     _CMDs
       _port
   _Write_USART
   _Write_USART_String
     _Write_USART
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   __baudios
   _clear_LCD
     _CMDs
       _port
   _config_rcsta
   _config_txsta
   _contador
     _spiRead
       _spiReceiveWait
     _spiWrite
   _set_cursor
     _CMDs
       _port
   _setup
     _spiInit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _write_string
     _write_char
       _port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     19      2D       7       56.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 16:53:05 2021

                          pc 0002               ___bmul@product 0026                  _SSPSTATbits 0094  
                         l71 110F                           l65 082F                           l74 10DD  
                         l93 1E9C                           l77 1EF2                           l94 1EA1  
                         l97 1E50                           _V1 006A                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072                 ___ftadd@exp1 0054  
               ___ftadd@exp2 0053         __size_of_Write_USART 000C                 ___ftadd@sign 0052  
                        l100 1E56                          l111 1E6F                          l103 1E4F  
                        l131 1E79                          l211 1ED4                          l140 0810  
                        l205 1F36                          l134 1E5E                          l208 135A  
                        l128 0804                          l137 0806                          l217 1201  
                        l146 1FD0                          l180 1195                          l181 119B  
                        l190 11B8                          l182 119C                          l422 1F8D  
                        l326 0D27                          l191 11BE                          l183 11A2  
                        l319 0A7C                          _ADC 006D                          l184 11A3  
                        l424 1FA5                          l193 11BF                          l185 11A9  
                        l177 118B                          l186 11AA                          l178 118E  
                        l418 07EB                          l187 11B0                          l179 1194  
                        l188 11B1                          l196 1F12                          l348 0E1A  
                        l189 11B7                          l605 1429                          l381 03D0  
                        l199 000F                          l631 17AF                          l711 15B1  
                        l624 1F5B                          l632 17C2                          l448 1EB8  
                        l801 1FFF                          l458 13C0                          l618 12F4  
                        l651 1466                          l707 15EE                          l731 16D3  
                        l660 14A5                          l628 17FF                          l708 1560  
                        l388 0422                          l725 1147                          l742 10AB  
                        l718 15E1                          l647 14A5                          l671 005B  
                        l639 17F2                          l672 0065                          l752 1531  
                        l673 006A                          l658 1481                          l682 00DB  
                        l659 148B                          l668 0145                          l748 1F80  
                        l759 1514                          l864 1245                          l793 129B  
                        l874 1181                          l884 1E8B                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RE0 0048  
                        _RD3 0043                          _RE1 0049                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0076  
            __end_of_ADCread 10DE  __size_of_Write_USART_String 002B                         l2100 1477  
                       l2110 14A4                         l2102 147B                         l2112 1E50  
                       l2120 1199                         l2104 1485                         l2200 12AC  
                       l2130 11BC                         l2122 11A0                         l2114 1183  
                       l2106 148D                         l2210 12C5                         l2202 12B1  
                       l3010 033E                         l3002 0309                         l2124 11A7  
                       l2116 1187                         l2108 149F                         l2140 1EB0  
                       l2132 1EA5                         l2300 1602                         l2212 12C9  
                       l2204 12B7                         l2220 12E6                         l3100 06C2  
                       l3020 03ED                         l3012 037D                         l3004 0318  
                       l2126 11AE                         l2118 1192                         l2230 002F  
                       l2142 1EB7                         l2134 1EA6                         l2310 1621  
                       l2150 13C8                         l2222 12EB                         l2214 12D3  
                       l2206 12BA                         l3110 06F6                         l3102 06C8  
                       l3030 0433                         l3022 03F3                         l3014 03BC  
                       l3006 032C                         l2400 1E4B                         l2128 11B5  
                       l2080 142A                         l2240 004B                         l2232 0035  
                       l2136 1EAA                         l2320 165C                         l2312 164E  
                       l2304 1609                         l2160 13DC                         l2152 13CD  
                       l2224 12F0                         l2216 12D9                         l2208 12C1  
                       l3120 0727                         l3112 070A                         l3104 06DE  
                       l3040 04B0                         l3032 0438                         l3024 0400  
                       l3016 03DA                         l3008 0337                         l2402 1E67  
                       l2090 1449                         l2082 142F                         l2410 1E94  
                       l2250 0069                         l2242 0051                         l2234 003F  
                       l2138 1EAE                         l2330 1684                         l2322 1660  
                       l2314 164F                         l2306 161A                         l2170 13F2  
                       l2162 13DE                         l2154 13CF                         l2146 13C1  
                       l2218 12E0                         l3130 07B0                         l3122 0733  
                       l3114 070E                         l3106 06E7                         l3050 05A5  
                       l3042 04EF                         l3034 0445                         l3026 040F  
                       l3018 03E7                         l2404 1E6C                         l2420 1EF7  
                       l2092 1450                         l2084 1436                         l2412 1E96  
                       l2260 008E                         l2252 006B                         l2244 005C  
                       l2228 0010                         l2340 16AA                         l2332 168A  
                       l2324 1664                         l2316 1650                         l2180 1415  
                       l2172 13F6                         l2164 13E4                         l2156 13D3  
                       l2148 13C4                         l2500 0C9D                         l3124 0745  
                       l3116 0714                         l3108 06EB                         l3060 05E0  
                       l3052 05B2                         l3044 052E                         l3036 044B  
                       l3028 0418                         l2430 1F09                         l2422 1EFD  
                       l3150 1FA8                         l2094 1454                         l2414 1E98  
                       l2270 00BA                         l2262 0097                         l2254 0071  
                       l2246 0060                         l2238 0046                         l2342 16B2  
                       l2334 168E                         l2326 1674                         l2318 1656  
                       l2350 1204                         l2510 1E7C                         l2174 1407  
                       l2166 13E7                         l2182 141B                         l2158 13D8  
                       l2190 129C                         l3126 0750                         l3134 07BE  
                       l3118 0721                         l3070 0601                         l3062 05E8  
                       l3054 05B8                         l3046 0542                         l3038 0463  
                       l3222 0E36                         l2424 1F00                         l3152 1FB9  
                       l2096 145E                         l2088 143D                         l3160 1F3C  
                       l2416 1E9B                         l2408 1E8D                         l2280 00EF  
                       l2272 00C0                         l2264 00A3                         l2256 007E  
                       l2248 0064                         l2600 17AE                         l2520 1532  
                       l2344 16B8                         l2336 1692                         l2328 167C  
                       l2360 121C                         l2352 120A                         l2512 1E82  
                       l2184 1420                         l2176 140D                         l2168 13EE  
                       l2192 129D                         l2504 0D07                         l3128 0757  
                       l3080 0611                         l3072 0609                         l3064 05EC  
                       l3056 05BE                         l3048 059D                         l3136 07CE  
                       l2440 1EC9                         l2432 1EBA                         l2426 1F03  
                       l2418 1EF4                         l3154 1FBD                         l2098 146D  
                       l3162 1F41                         l2290 0118                         l2282 00F3  
                       l2274 00C9                         l2258 0088                         l2266 00AA  
                       l2610 17CE                         l2602 17BC                         l2522 1545  
                       l2338 16A2                         l2362 122D                         l2354 120D  
                       l2370 1241                         l2450 09A2                         l2514 1E88  
                       l2186 1425                         l2178 140E                         l2194 12A1  
                       l3090 067C                         l3074 060F                         l3066 05F0  
                       l3058 05C5                         l3138 07E5                         l2442 1ECC  
                       l2434 1EBD                         l3170 081B                         l2428 1F06  
                       l3148 1FA6                         l3164 1F43                         l3156 1F37  
                       l2292 0128                         l2284 0103                         l2276 00D5  
                       l2268 00B0                         l2700 14B9                         l2620 17F7  
                       l2604 17C6                         l2612 17E0                         l2540 1581  
                       l2532 1561                         l2364 1233                         l2356 1214  
                       l2348 1202                         l2380 1158                         l2460 0A2F  
                       l2516 1E8A                         l2508 1E7B                         l2196 12A6  
                       l3092 068F                         l3084 0658                         l3068 05FB  
                       l2444 1ECF                         l2436 1EC3                         l3180 0897  
                       l3172 0820                         l3158 1F38                         l2294 012A  
                       l2286 0104                         l2278 00DF                         l2710 14DB  
                       l2630 1F94                         l2550 15AB                         l2542 158A  
                       l2534 1567                         l2526 154E                         l2366 1234  
                       l2358 1218                         l2390 1177                         l2382 115C  
                       l2374 1148                         l2446 08DF                         l2198 12A8  
                       l2470 0A84                         l3094 06A0                         l3086 0666  
                       l2438 1EC6                         l3190 08CA                         l3182 08A0  
                       l3174 0846                         l2800 1320                         l2288 0114  
                       l2712 14E2                         l2704 14C2                         l2640 136B  
                       l2632 1F9B                         l2624 1F81                         l2552 15B5  
                       l2560 15CF                         l2544 1598                         l2536 1576  
                       l2368 123B                         l2384 1160                         l2376 114E  
                       l2392 117D                         l2464 0A49                         l2448 08E5  
                       l2456 09BC                         l2480 0B45                         l2472 0A86  
                       l3096 06A8                         l3088 0671                         l3184 08A9  
                       l3176 084F                         l3168 0811                         l2810 134A  
                       l2802 1326                         l2730 1509                         l2722 14F0  
                       l2714 14E4                         l2706 14D4                         l2650 139A  
                       l2642 136E                         l2634 1FA1                         l2626 1F83  
                       l2618 17E7                         l2546 15A2                         l2538 1578  
                       l2298 15EF                         l2386 116A                         l2378 1151  
                       l2458 09C2                         l2482 0B4C                         l2474 0A8D  
                       l2490 0BD7                         l3098 06BA                         l3186 08AF  
                       l3178 088F                         l2812 1355                         l2804 1331  
                       l2396 0806                         l2820 10EA                         l2732 1519  
                       l2716 14E8                         l2724 1502                         l2708 14D5  
                       l2652 13A8                         l2644 137B                         l2740 1246  
                       l2628 1F87                         l2572 16D4                         l2548 15A3  
                       l2388 1170                         l2492 0BDE                         l2468 0A80  
                       l2900 0E1E                         l3188 08B5                         l2830 10B8  
                       l2806 1336                         l2398 080C                         l2814 0003  
                       l2822 10F0                         l2670 1132                         l2662 1110  
                       l2734 151E                         l2654 13A9                         l2646 137F  
                       l2638 135B                         l2750 1276                         l2742 1250  
                       l2590 174E                         l2574 16EE                         l2566 15D6  
                       l2558 15BD                         l2486 0BB6                         l2910 0E6F  
                       l2902 0E44                         l2832 10BE                         l2808 1344  
                       l2824 1103                         l2816 10DE                         l2840 1F1E  
                       l2672 1134                         l2664 1114                         l2736 1529  
                       l2656 13B2                         l2648 1388                         l2752 1284  
                       l2744 1253                         l2760 1FD1                         l2592 1753  
                       l2584 1710                         l2568 15E6                         l2920 0EA9  
                       l2912 0E77                         l2904 0E5A                         l2834 10D1  
                       l2826 10AC                         l2818 10E1                         l2842 1F25  
                       l2770 1ED5                         l2674 1136                         l2666 1121  
                       l2682 10A2                         l2690 1F5C                         l2658 13B8  
                       l2754 128D                         l2746 1260                         l2762 1FD6  
                       l2594 1757                         l2586 1744                         l2578 16F7  
                       l2498 0C96                         l2930 0F09                         l2922 0EB0  
                       l2914 0E8C                         l2906 0E60                         l2850 11C3  
                       l2828 10AF                         l2844 1F2B                         l2836 1F14  
                       l2780 1EE9                         l2772 1EE1                         l2676 1144  
                       l2668 1125                         l2684 10A9                         l2692 1F65  
                       l2748 1264                         l2756 1293                         l2764 1FE3  
                       l2596 1760                         l2588 174C                         l2940 0F7A  
                       l2932 0F0D                         l2924 0EDD                         l2916 0EA1  
                       l2908 0E64                         l2860 0D3C                         l2852 11DF  
                       l2790 12F5                         l2782 0800                         l2846 1F30  
                       l2838 1F19                         l2774 1EE4                         l2678 1146  
                       l2686 10AB                         l2694 1F67                         l2766 1FE9  
                       l2598 178C                         l2950 0FEA                         l2942 0F83  
                       l2934 0F13                         l2926 0EE3                         l2918 0EA5  
                       l2870 0D6A                         l2862 0D49                         l2854 11E5  
                       l2792 12FE                         l2784 1E70                         l2776 1EE5  
                       l2960 0194                         l2952 0146                         l2944 0F9A  
                       l2936 0F2C                         l2928 0EF6                         l2880 0DBE  
                       l2872 0D7F                         l2864 0D50                         l2856 0D2B  
                       l2848 11C0                         l2794 1304                         l2786 1E57  
                       l2778 1EE8                         l2698 14A6                         l2970 01D8  
                       l2962 019D                         l2954 014F                         l2938 0F65  
                       l2946 0FA2                         l2890 0DFC                         l2882 0DC1  
                       l2874 0D9A                         l2866 0D54                         l2858 0D36  
                       l2796 1312                         l2788 1E5D                         l2964 01A5  
                       l2956 016E                         l2972 01DF                         l2948 0FB1  
                       l2892 0E02                         l2884 0DC7                         l2876 0DA0  
                       l2868 0D66                         l2798 1316                         l2990 02D4  
                       l2982 0250                         l2974 024C                         l2958 017D  
                       l2886 0DCC                         l2894 0E14                         l2878 0DB0  
                       l2992 02DA                         l2976 024E                         l2968 01BD  
                       l2896 0E18                         l2888 0DE1                         l2994 02EC  
                       l2986 0297                         l2996 02F5                         l2988 02A5  
                       l2998 0302                         STR_1 1086                         STR_2 1094  
                       STR_3 1087                         _CMDs 1EF3                         u3000 168A  
                       u3001 1689                         u3010 1692                         u3011 1691  
                       u3100 122D                         u3021 169B                         u3101 122C  
                       u2310 146C                         u3022 16A2                         u2311 146B  
                       u2400 1192                         u3200 1E94                         u3120 1241  
                       u4000 0E60                         u2401 1191                         u2305 145F  
                       u3201 1E93                         u3121 1240                         u3105 1229  
                       u4001 0E5F                         u2410 1199                         u2330 147B  
                       u3050 16B8                         u3130 114E                         u3210 08E5  
                       u4010 0E8C                         u2411 1198                         u2331 147A  
                       u3051 16B7                         u3035 16A3                         u3115 1235  
                       u3131 114D                         u3211 08E4                         u4011 0E8B  
                       u2420 11A0                         u2340 1481                         u2260 142F  
                       u3300 1545                         u3060 120A                         u3220 09C2  
                       u2500 13D3                         u4100 016E                         u4020 0EB0  
                       u2421 119F                         u2341 1480                         u2325 1470  
                       u2261 142E                         u3301 1544                         u3045 16AB  
                       u3061 1209                         u3221 09C1                         u2501 13D2  
                       u4101 016D                         u4021 0EAF                         u2430 11A7  
                       u2350 1485                         u2270 1436                         u3310 155F  
                       u3150 1160                         u2510 13E4                         u3230 0A84  
                       u4110 017D                         u4030 0EC6                         u2431 11A6  
                       u2351 1484                         u2271 1435                         u3311 155E  
                       u3151 115F                         u2511 13E3                         u3231 0A83  
                       u4111 017C                         u2440 11AE                         u2360 1496  
                       u3400 15D5                         u3080 121C                         u3160 116A  
                       u2600 12AC                         u3240 0A8D                         u4120 0194  
                       u4040 0F0D                         u2441 11AD                         u3401 15D4  
                       u3081 121B                         u3161 1169                         u3145 1152  
                       u2601 12AB                         u3241 0A8C                         u4121 0193  
                       u4041 0F0C                         u2450 11B5                         u2370 14A4  
                       u2290 144F                         u3330 1598                         u2530 13F6  
                       u2610 12B7                         u3250 0B4C                         u4210 03D9  
                       u4050 0F7A                         u2451 11B4                         u2371 14A3  
                       u2291 144E                         u3331 1597                         u3075 120E  
                       u2531 13F5                         u2611 12B6                         u3251 0B4B  
                       u4211 03D8                         u4115 0179                         u4051 0F79  
                       u4035 0EC1                         u2380 1E56                         u2460 11BC  
                       u2700 003F                         u3420 15E6                         u3180 117D  
                       u3260 0BDE                         u4300 0601                         u4220 0400  
                       u4140 0296                         u4060 0F9A                         u2381 1E55  
                       u2461 11BB                         u2365 1492                         u2285 1442  
                       u2701 003E                         u3421 15E5                         u3325 1583  
                       u3181 117C                         u3165 1166                         u2525 13E8  
                       u3261 0BDD                         u4301 0600                         u4221 03FF  
                       u4205 0343                         u4141 0295                         u4061 0F99  
                       u2390 1187                         u3190 080C                         u2710 004B  
                       u3510 17DF                         u3430 16EE                         u3350 15B1  
                       u2470 1EAA                         u2550 1407                         u2630 12C9  
                       u3270 0C9D                         u4310 0609                         u4230 040F  
                       u4150 02A5                         u4070 0FB1                         u2391 1186  
                       u3191 080B                         u2711 004A                         u3511 17DE  
                       u3431 16ED                         u3415 15D8                         u3351 15B0  
                       u3335 1594                         u2471 1EA9                         u3095 121D  
                       u3175 1171                         u2551 1406                         u2631 12C8  
                       u3271 0C9C                         u4311 0608                         u4231 040E  
                       u4151 02A4                         u4135 0255                         u4071 0FB0  
                       u2720 0051                         u3520 17E6                         u3440 170F  
                       u3360 15B5                         u2480 1EB7                         u3280 1E82  
                       u2640 12D3                         u4400 06DE                         u4240 0438  
                       u4160 02D4                         u4080 0146                         u2721 0050  
                       u3521 17E5                         u3505 17CF                         u3441 170E  
                       u3361 15B4                         u3345 15A4                         u2481 1EB6  
                       u3281 1E81                         u2545 13F7                         u2641 12D2  
                       u2625 12BB                         u4401 06DD                         u4241 0437  
                       u4225 03FC                         u4161 02D3                         u4145 0292  
                       u4081 0FFA                         u2810 00A9                         u2730 005B  
                       u3610 137F                         u3370 15BC                         u3290 1E88  
                       u2570 141B                         u2490 13C8                         u4410 06F6  
                       u4330 0657                         u4170 02EC                         u4090 014F  
                       u2811 00A8                         u2731 005A                         u3611 137E  
                       u3371 15BB                         u3291 1E87                         u2571 141A  
                       u2555 1403                         u2491 13C7                         u4411 06F5  
                       u4331 0656                         u4235 040B                         u4171 02EB  
                       u4091 014E                         u4075 0FAD                         u2820 00B0  
                       u2740 0064                         u3700 1F65                         u3540 17F7  
                       u3460 178C                         u2580 1420                         u2660 12E6  
                       u4420 0714                         u4340 0666                         u4180 0318  
                       u2901 010D                         u2821 00AF                         u2805 0098  
                       u2741 0063                         u3701 1F64                         u3605 1370  
                       u3541 17F6                         u3461 178B                         u2581 141F  
                       u2565 140F                         u2661 12E5                         u2645 12CF  
                       u4421 0713                         u4405 06DA                         u4341 0665  
                       u4325 0616                         u4181 0317                         u4085 0FF5  
                       u2910 0118                         u2902 0114                         u2750 0069  
                       u3710 14B9                         u3630 139A                         u3550 1F87  
                       u3470 17C2                         u3390 15CE                         u2670 12EB  
                       u2590 12A1                         u4430 0733                         u4350 0671  
                       u4270 05A4                         u4190 032C                         u2911 0117  
                       u2751 0068                         u3711 14B8                         u3631 1399  
                       u3551 1F86                         u3535 17E9                         u3471 17C1  
                       u3455 1759                         u3391 15CD                         u2671 12EA  
                       u2655 12DA                         u2591 12A0                         u4431 0732  
                       u4415 06F2                         u4351 0670                         u4335 0653  
                       u4271 05A3                         u4255 04B5                         u4191 032B  
                       u2840 00C0                         u2760 007E                         u2680 002F  
                       u3800 151E                         u3720 14CD                         u3480 17C6  
                       u2920 1602                         u4440 0745                         u4360 068F  
                       u4280 05C4                         u2841 00BF                         u2761 007D  
                       u2681 002E                         u3801 151D                         u3625 1381  
                       u3481 17C5                         u3465 1788                         u3385 15BE  
                       u2921 1601                         u4441 0744                         u4361 068E  
                       u4281 05C3                         u4265 0547                         u4185 0314  
                       u2850 00C8                         u2690 0035                         u3730 14E8  
                       u3650 13B8                         u3810 1250                         u3490 17CD  
                       u2930 161A                         u4370 06A8                         u4290 05EC  
                       u2851 00C7                         u2835 00B1                         u2691 0034  
                       u3731 14E7                         u3651 13B7                         u3635 1396  
                       u3811 124F                         u3491 17CC                         u2931 1619  
                       u4371 06A7                         u4355 066D                         u4291 05EB  
                       u4507 08D2                         u3900 1F2B                         u3660 1114  
                       u2780 008E                         u3740 14EF                         u3580 1FA1  
                       u2940 1631                         u4460 07CE                         u4380 06BA  
                       u3901 1F2A                         u3661 1113                         u2781 008D  
                       u3741 14EE                         u3725 14C9                         u3645 13AA  
                       u3581 1FA0                         u3565 1F8E                         u4461 07CD  
                       u4381 06B9                         u4365 068B                         u4517 1ED1  
                       u3670 1125                         u2870 00DB                         u2790 0096  
                       u3590 136B                         u3830 1264                         u2950 1643  
                       u4470 07E5                         u4390 06C8                         u3910 11CD  
                       u4607 1333                         u4527 10E5                         u3671 1124  
                       u2871 00DA                         u2791 0095                         u2775 007F  
                       u3591 136A                         u3831 1263                         u3575 1F95  
                       u4471 07E2                         u4455 0768                         u4391 06C7  
                       u4480 1FD0                         u3680 1144                         u2880 00DF  
                       u3760 1501                         u3840 1276                         u2960 1664  
                       u3920 11EF                         u4617 1340                         u4481 1FCF  
                       u4537 10FE                         u3681 1143                         u2881 00DE  
                       u2865 00CA                         u3761 1500                         u3841 1275  
                       u3825 1255                         u2961 1663                         u2945 162D  
                       u4490 1F3C                         u3690 10A9                         u2890 00F3  
                       u3770 1508                         u3930 1201                         u4627 134C  
                       u4491 1F3B                         u4547 110A                         u3691 10A8  
                       u2891 00F2                         u3771 1507                         u3755 14F1  
                       u2971 166D                         u2955 163F                         u3931 1200  
                       u3860 1293                         u2972 1674                         u3940 0D3C  
                       _RCIF 0065                         u4637 1357                         u4557 12F9  
                       u3685 1140                         u3861 1292                         u3845 1272  
                       u3941 0D3B                         u3790 1519                         u3950 0D66  
                       u4647 1F0D                         u4567 1308                         u3791 1518  
                       u3855 1285                         u3951 0D65                         u3880 1FE9  
                       u3960 0DB0                         u4657 10B3                         u4577 1314  
                       u3785 150B                         u3881 1FE8                         u2985 1675  
                       u3961 0DAF                         u3890 1F19                         u3970 0DBE  
                       u4667 10CC                         u4587 131E                         u3891 1F18  
                       u3875 1FD7                         u2995 167D                         u3971 0DBD  
                       u3980 0E13                         u4677 10D8                         u4597 1328  
                       u3981 0E12                         u3990 0E5A                         u3991 0E57  
                       _TRMT 04C1                         _cont 006E                         _main 0811  
               ___ftpack@arg 0070                 ___ftpack@exp 0073                         _port 1182  
                       btemp 007E                         start 0000               ??_config_rcsta 0070  
             ??_config_txsta 0070                 _sprintf$1079 00A0            ___bmul@multiplier 0027  
               ___ftmul@cntr 0036                 ___ftmul@sign 0037                 ___fttol@exp1 004E  
               ___fttol@lval 004A                        CMDs@a 0073                        ?_CMDs 0070  
           __end_of_LCD_init 135B                        ?_main 0070              __end_of___awdiv 142A  
            __end_of___ftadd 0146              __end_of___awmod 12F5                        ?_port 0070  
            __end_of___ftneg 10AC                        _ANSEL 0188              __end_of___lldiv 13C1  
            __end_of___ftmul 16D4              ___awdiv@divisor 0077              __end_of___llmod 129C  
            __end_of___ftsub 1F81              __end_of___fttol 1532              __end_of___lwdiv 1246  
              write_string@a 0073                write_string@i 0078              __end_of___lwmod 1182  
            ___awdiv@counter 0020                        _RCREG 001A                        _SPBRG 0099  
                      _PORTD 0008                        _PORTE 0009                        _TRISD 0088  
                      _TRISE 0089                        _TXREG 0019                 ___lltoft@exp 007D  
              ___awtoft@sign 007D              __end_of_dpowers 1086                        _scale 0A7D  
            __end_of_isdigit 1E8C                ___ftpack@sign 0074                        _setup 1ED5  
                      pclath 000A              __end_of_spiInit 1EA2              __end_of_spiRead 1E70  
                      port@a 0070                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07EC                 __end_of_CMDs 1F13              __initialization 07EC  
               __end_of_main 08DC                 __end_of_port 11C0                       ??_CMDs 0071  
                  ??_ADCread 0071                       ??_main 0067                ___fttol@sign1 0049  
                     ??_port 0070        __size_of_write_string 0042         __size_of__tdiv_to_l_ 00BD  
           ___llmod@dividend 0024                       ?_scale 0038             ___awdiv@dividend 0079  
                     ?_setup 0070             __end_of___awtoft 1F5C             __end_of___ftpack 14A6  
                     _ANSELH 0189             __end_of__baudios 0805                       _BUFFER 00B9  
           __end_of___lltoft 2000                       _TRISC1 0439                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISC5 043D                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__powers_ 1037                       ___bmul 1EA2  
                     ___ftge 1110             __end_of_contador 1110                 _write_string 11C0  
                     ___wmul 1F81                    ??___awdiv 007B                    ??___ftadd 004E  
                  ??___awmod 0074                    ??___ftneg 0073                    ??___lldiv 0078  
                  ??___ftmul 002E                    ??___llmod 0028                    ??___ftsub 007E  
                  ??___fttol 0045                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _fround 08DC             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075        ___ftmul@f3_as_product 0033                    ??_isdigit 0070  
       __end_of_config_rcsta 1E5F             __end_of_spiWrite 1E50         __end_of_config_txsta 1E7A  
                  ??_spiInit 0073                    ??_spiRead 0070                    ??_sprintf 0061  
    __end_of__initialization 07FC                   ___ftadd@f1 0048                   ___ftadd@f2 004B  
                 ___ftge@ff1 0070                   ___ftge@ff2 0073                    ?_LCD_init 0070  
                 ___ftneg@f1 0070                   ___awtoft@c 0078          ___bmul@multiplicand 0024  
                 ___ftmul@f1 0028                   ___ftmul@f2 002B                   ___ftsub@f1 0058  
                 ___ftsub@f2 0055                   ___fttol@f1 0041               __pcstackCOMMON 0070  
                 ___lltoft@c 0078                __end_of_scale 0D28                __end_of_setup 1EF3  
         __size_of_clear_LCD 000D                   __div_to_l_ 16D4              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 003B              __div_to_l_@quot 0020  
               sprintf@width 00A6                      ??_setup 0074                 Write_USART@a 0070  
                 __pbssBANK0 006A                   __pbssBANK1 00B9                   ??_LCD_init 0074  
              __div_to_l_@f1 0070                __div_to_l_@f2 0073                   __pmaintext 0811  
                    ?___bmul 0024                      ?___ftge 0070                      ?___wmul 0070  
              ??_Write_USART 0070      __size_of_spiReceiveWait 0007                      ?_fround 0038  
                  ?___awtoft 0078                    ?___ftpack 0070                    ?__baudios 0070  
                    _ADCread 10AC                    ?___lltoft 0078   __end_of_Write_USART_String 1FD1  
                    _SSPSTAT 0094                   __stringtab 1000                    ?_contador 0070  
          __end_of_clear_LCD 0010            __end_of__npowers_ 105E                   _scale$1078 003D  
                  ?_spiWrite 0070              __size_of___bmul 0017              __size_of___ftge 0038  
                    ___awdiv 13C1                      ___ftadd 0010                      ___awmod 129C  
                    ___ftneg 10A2                      ___lldiv 135B              __size_of___wmul 0025  
                    ___ftmul 15EF                      ___llmod 1246                      ___ftsub 1F5C  
                    ___fttol 14A6                      ___lwdiv 1202                      ___lwmod 1148  
                 ??___awtoft 007B        __size_of_config_rcsta 0008                   ??___ftpack 0075  
                 ??__baudios 0070              __size_of_fround 01A1                   ??___lltoft 007C  
                    __ptext1 11C0                      __ptext2 1EB9        __size_of_config_txsta 000A  
                    __ptext3 0D28                      __ptext4 0A7D                      __ptext5 129C  
                    __ptext6 13C1                      __ptext7 1E7A                      __ptext8 08DC  
                    __ptext9 1148                  ?__div_to_l_ 0070                      _dpowers 105E  
        __end_of_Write_USART 0811                      _isdigit 1E7A             ___awmod@dividend 0072  
                    _spiInit 1E8C                      _spiRead 1E67                  set_cursor@a 0076  
                set_cursor@b 0074                  set_cursor@x 0077                      _sprintf 0D28  
                    clrloop0 1E60         end_of_initialization 07FC                   ??_contador 0071  
            ___lldiv@divisor 0070              ___lldiv@counter 007D                 _config_rcsta 1E57  
                 _set_cursor 1F13                 _config_txsta 1E70                    _RCSTAbits 0018  
                 ??_spiWrite 0070                      psplit$0 D0036               __tdiv_to_l_@f1 0070  
             __tdiv_to_l_@f2 0073                ??__tdiv_to_l_ 0076                    _PORTCbits 0007  
                spiWrite@dat 0070                    _TXSTAbits 0098          __size_of__div_to_l_ 012C  
          __size_of_LCD_init 0066                  ___ftmul@exp 0032               _spiReceiveWait 1E50  
             __end_of___bmul 1EB9               __end_of___ftge 1148                  _Write_USART 0805  
             __end_of___wmul 1FA6                   _write_char 1EB9               __end_of_fround 0A7D  
          pnum$text3_split_1 0036          start_initialization 07EC          __end_of__tdiv_to_l_ 15EF  
            ___llmod@divisor 0020              ___llmod@counter 0029                  ?_set_cursor 0074  
     __end_of_spiReceiveWait 1E57                     ??___bmul 0025                     ??___ftge 0076  
                   ??___wmul 0074                     ??_fround 003B                     ?_ADCread 0070  
              sprintf@tmpval 00A8                   fround@prec 0047            __size_of___awtoft 0025  
          __size_of___ftpack 007C            __size_of__baudios 0005            __size_of___lltoft 002F  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
                sprintf@flag 00A4                  sprintf@eexp 00B0                  sprintf@fval 00B2  
         _Write_USART_String 1FA6                  sprintf@prec 00B6            __size_of_contador 0032  
                  _clear_LCD 0003             ___lwdiv@dividend 0078              ?_spiReceiveWait 0070  
        ?_Write_USART_String 0071                     ?___awdiv 0077                     ?___ftadd 0048  
                   ?___awmod 0070                     ?___ftneg 0070                     ?___lldiv 0070  
                   ?___ftmul 0028                     ?___llmod 0020                     ?___ftsub 0055  
                  __npowers_ 1037                     ?___fttol 0041                     ?___lwdiv 0076  
                   ?___lwmod 0070                  ?_write_char 0070            __size_of_spiWrite 0006  
                  __pstrings 1000                  __tdiv_to_l_ 1532                 ??__div_to_l_ 0076  
                   ?_isdigit 0070                     ?_spiInit 0070                     ?_spiRead 0070  
       ??_Write_USART_String 0073             ___lwdiv@quotient 007B          __size_of_set_cursor 0024  
                   ?_sprintf 005B               __size_of_scale 02AB               __size_of_setup 001E  
       spiInit@sTransmitEdge 0072               ___wmul@product 0074                     _LCD_init 12F5  
                  clear_ram0 1E5F                   ?_clear_LCD 0070           spiInit@sDataSample 0070  
         __end_of__div_to_l_ 1800                ?_write_string 0073                  __stringbase 100F  
          ___wmul@multiplier 0070             __size_of_ADCread 0032                  write_char@a 0072  
        __size_of_write_char 001C               ??_write_string 0075                 ?_Write_USART 0070  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftneg 000A             __size_of___lldiv 0066             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                     ___awtoft 1F37  
                   ___ftpack 142A                     __baudios 0800                  _fround$1076 0044  
                _fround$1077 0041           __end_of__stringtab 1010                     ___lltoft 1FD1  
                _isdigit$881 0070                   sprintf@val 00AC             __size_of_isdigit 0012  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 1202  
                   __ptext11 15EF                     __ptext20 1F5C                     __ptext12 1EA2  
                   __ptext21 0010                     __ptext13 1532                     __ptext30 0003  
                   __ptext22 10A2                     __ptext14 16D4                     __ptext31 0800  
                   __ptext23 1110                     __ptext15 1F81                     __ptext40 1E4A  
                   __ptext32 1F37                     __ptext24 1ED5                     __ptext16 1FD1  
                   __ptext41 1E67                     __ptext33 142A                     __ptext25 1E8C  
                   __ptext17 1246                     __ptext42 1E50                     __ptext34 1FA6  
                   __ptext26 1F13                     __ptext18 135B                     __ptext35 0805  
                   __ptext27 10DE                     __ptext19 14A6                     __ptext36 12F5  
                   __ptext28 1E70                     __ptext37 1EF3                     __ptext29 1E57  
                   __ptext38 1182                     __ptext39 10AC             __size_of_spiInit 0016  
           __size_of_spiRead 0009                     __powers_ 1010                     _contador 10DE  
           __size_of_sprintf FAC4                __size_of_CMDs 0020                __size_of_main 00CB  
                  pnum$text3 000D                __size_of_port 003E                  ??_clear_LCD 0074  
               ??_set_cursor 0075                     _spiWrite 1E4A                 spiInit@sType 0073  
          spiInit@sClockIdle 0071          Write_USART_String@a 0071          Write_USART_String@i 0074  
                   isdigit@c 0071                     scale@scl 0040           __end_of_set_cursor 1F37  
                  sprintf@ap 00A3             __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024  
                  sprintf@sp 00B5             __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074             ??_spiReceiveWait 0070                    stringcode 100A  
               ??_write_char 0071                 ?__tdiv_to_l_ 0070                     sprintf@c 00B8  
                   sprintf@f 005B             ___lldiv@quotient 0079              ___lwmod@divisor 0070  
            ___lwmod@counter 0075                     stringdir 100A                     stringtab 1000  
       __end_of_write_string 1202           __end_of_write_char 1ED5                ?_config_rcsta 0070  
              ?_config_txsta 0070  
