

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 15:35:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text3_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  1000                     __pstrings:
   486  1000                     stringtab:
   487  1000                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  1000  1BFF               	btfsc	btemp+1,7
   491  1001  280A               	ljmp	stringcode
   492  1002  1383               	bcf	3,7
   493  1003  187F               	btfsc	btemp+1,0
   494  1004  1783               	bsf	3,7
   495  1005  0800               	movf	0,w
   496  1006  0A84               	incf	4,f
   497  1007  1903               	skipnz
   498  1008  0AFF               	incf	btemp+1,f
   499  1009  0008               	return
   500  100A                     stringcode:
   501  100A                     stringdir:
   502  100A  3010               	movlw	high stringdir
   503  100B  008A               	movwf	10
   504  100C  0804               	movf	4,w
   505  100D  0A84               	incf	4,f
   506  100E  0782               	addwf	2,f
   507  100F                     __stringbase:
   508  100F  3400               	retlw	0
   509  1010                     __end_of__stringtab:
   510  1010                     __powers_:
   511  1010  3400               	retlw	0
   512  1011  3480               	retlw	128
   513  1012  343F               	retlw	63
   514  1013  3400               	retlw	0
   515  1014  3420               	retlw	32
   516  1015  3441               	retlw	65
   517  1016  3400               	retlw	0
   518  1017  34C8               	retlw	200
   519  1018  3442               	retlw	66
   520  1019  3400               	retlw	0
   521  101A  347A               	retlw	122
   522  101B  3444               	retlw	68
   523  101C  3440               	retlw	64
   524  101D  341C               	retlw	28
   525  101E  3446               	retlw	70
   526  101F  3450               	retlw	80
   527  1020  34C3               	retlw	195
   528  1021  3447               	retlw	71
   529  1022  3424               	retlw	36
   530  1023  3474               	retlw	116
   531  1024  3449               	retlw	73
   532  1025  3497               	retlw	151
   533  1026  3418               	retlw	24
   534  1027  344B               	retlw	75
   535  1028  34BC               	retlw	188
   536  1029  34BE               	retlw	190
   537  102A  344C               	retlw	76
   538  102B  346B               	retlw	107
   539  102C  346E               	retlw	110
   540  102D  344E               	retlw	78
   541  102E  3403               	retlw	3
   542  102F  3415               	retlw	21
   543  1030  3450               	retlw	80
   544  1031  3479               	retlw	121
   545  1032  34AD               	retlw	173
   546  1033  3460               	retlw	96
   547  1034  34F3               	retlw	243
   548  1035  3449               	retlw	73
   549  1036  3471               	retlw	113
   550  1037                     __end_of__powers_:
   551  1037                     __npowers_:
   552  1037  3400               	retlw	0
   553  1038  3480               	retlw	128
   554  1039  343F               	retlw	63
   555  103A  34CD               	retlw	205
   556  103B  34CC               	retlw	204
   557  103C  343D               	retlw	61
   558  103D  34D7               	retlw	215
   559  103E  3423               	retlw	35
   560  103F  343C               	retlw	60
   561  1040  3412               	retlw	18
   562  1041  3483               	retlw	131
   563  1042  343A               	retlw	58
   564  1043  34B7               	retlw	183
   565  1044  34D1               	retlw	209
   566  1045  3438               	retlw	56
   567  1046  34C6               	retlw	198
   568  1047  3427               	retlw	39
   569  1048  3437               	retlw	55
   570  1049  3438               	retlw	56
   571  104A  3486               	retlw	134
   572  104B  3435               	retlw	53
   573  104C  34C0               	retlw	192
   574  104D  34D6               	retlw	214
   575  104E  3433               	retlw	51
   576  104F  34CC               	retlw	204
   577  1050  342B               	retlw	43
   578  1051  3432               	retlw	50
   579  1052  3470               	retlw	112
   580  1053  3489               	retlw	137
   581  1054  3430               	retlw	48
   582  1055  34E7               	retlw	231
   583  1056  34DB               	retlw	219
   584  1057  342E               	retlw	46
   585  1058  34E5               	retlw	229
   586  1059  343C               	retlw	60
   587  105A  341E               	retlw	30
   588  105B  3442               	retlw	66
   589  105C  34A2               	retlw	162
   590  105D  340D               	retlw	13
   591  105E                     __end_of__npowers_:
   592  105E                     _dpowers:
   593  105E  3401               	retlw	1
   594  105F  3400               	retlw	0
   595  1060  3400               	retlw	0
   596  1061  3400               	retlw	0
   597  1062  340A               	retlw	10
   598  1063  3400               	retlw	0
   599  1064  3400               	retlw	0
   600  1065  3400               	retlw	0
   601  1066  3464               	retlw	100
   602  1067  3400               	retlw	0
   603  1068  3400               	retlw	0
   604  1069  3400               	retlw	0
   605  106A  34E8               	retlw	232
   606  106B  3403               	retlw	3
   607  106C  3400               	retlw	0
   608  106D  3400               	retlw	0
   609  106E  3410               	retlw	16
   610  106F  3427               	retlw	39
   611  1070  3400               	retlw	0
   612  1071  3400               	retlw	0
   613  1072  34A0               	retlw	160
   614  1073  3486               	retlw	134
   615  1074  3401               	retlw	1
   616  1075  3400               	retlw	0
   617  1076  3440               	retlw	64
   618  1077  3442               	retlw	66
   619  1078  340F               	retlw	15
   620  1079  3400               	retlw	0
   621  107A  3480               	retlw	128
   622  107B  3496               	retlw	150
   623  107C  3498               	retlw	152
   624  107D  3400               	retlw	0
   625  107E  3400               	retlw	0
   626  107F  34E1               	retlw	225
   627  1080  34F5               	retlw	245
   628  1081  3405               	retlw	5
   629  1082  3400               	retlw	0
   630  1083  34CA               	retlw	202
   631  1084  349A               	retlw	154
   632  1085  343B               	retlw	59
   633  1086                     __end_of_dpowers:
   634  0019                     _TXREG	set	25
   635  001A                     _RCREG	set	26
   636  0018                     _RCSTAbits	set	24
   637  0013                     _SSPBUF	set	19
   638  0014                     _SSPCON	set	20
   639  0009                     _PORTE	set	9
   640  0008                     _PORTD	set	8
   641  0007                     _PORTCbits	set	7
   642  0049                     _RE1	set	73
   643  0048                     _RE0	set	72
   644  0047                     _RD7	set	71
   645  0046                     _RD6	set	70
   646  0045                     _RD5	set	69
   647  0044                     _RD4	set	68
   648  0043                     _RD3	set	67
   649  0042                     _RD2	set	66
   650  0041                     _RD1	set	65
   651  0040                     _RD0	set	64
   652  0065                     _RCIF	set	101
   653  0098                     _TXSTAbits	set	152
   654  0099                     _SPBRG	set	153
   655  0094                     _SSPSTATbits	set	148
   656  0094                     _SSPSTAT	set	148
   657  0089                     _TRISE	set	137
   658  0088                     _TRISD	set	136
   659  04C1                     _TRMT	set	1217
   660  043B                     _TRISC3	set	1083
   661  043D                     _TRISC5	set	1085
   662  043A                     _TRISC2	set	1082
   663  0439                     _TRISC1	set	1081
   664  0189                     _ANSELH	set	393
   665  0188                     _ANSEL	set	392
   666  1086                     STR_1:
   667  1086  3453               	retlw	83	;'S'
   668  1087  3431               	retlw	49	;'1'
   669  1088  3420               	retlw	32	;' '
   670  1089  3420               	retlw	32	;' '
   671  108A  3420               	retlw	32	;' '
   672  108B  3453               	retlw	83	;'S'
   673  108C  3432               	retlw	50	;'2'
   674  108D  3420               	retlw	32	;' '
   675  108E  3420               	retlw	32	;' '
   676  108F  3420               	retlw	32	;' '
   677  1090  3453               	retlw	83	;'S'
   678  1091  3433               	retlw	51	;'3'
   679  1092  3400               	retlw	0
   680  1093                     STR_2:
   681  1093  3425               	retlw	37	;'%'
   682  1094  3432               	retlw	50	;'2'
   683  1095  342E               	retlw	46	;'.'
   684  1096  3431               	retlw	49	;'1'
   685  1097  3466               	retlw	102	;'f'
   686  1098  3420               	retlw	32	;' '
   687  1099  3425               	retlw	37	;'%'
   688  109A  3464               	retlw	100	;'d'
   689  109B  3400               	retlw	0
   690  1086                     
   691                           	psect	cinit
   692  07ED                     start_initialization:	
   693                           ; #config settings
   694                           
   695  07ED                     __initialization:
   696                           
   697                           ; Clear objects allocated to BANK0
   698  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   699  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   700  07EF  01EA               	clrf	__pbssBANK0& (0+127)
   701  07F0  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   702  07F1  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   703  07F2  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   704                           
   705                           ; Clear objects allocated to BANK1
   706  07F3  1383               	bcf	3,7	;select IRP bank0
   707  07F4  30B9               	movlw	low __pbssBANK1
   708  07F5  0084               	movwf	4
   709  07F6  30CD               	movlw	low (__pbssBANK1+20)
   710  07F7  160A  158A  268E  120A  118A  	fcall	clear_ram0
   711  07FC                     end_of_initialization:	
   712                           ;End of C runtime variable initialization code
   713                           
   714  07FC                     __end_of__initialization:
   715  07FC  0183               	clrf	3
   716  07FD  160A  118A  2D4B   	ljmp	_main	;jump to C main() function
   717                           
   718                           	psect	bssBANK0
   719  006A                     __pbssBANK0:
   720  006A                     _V1:
   721  006A                     	ds	3
   722  006D                     _cont:
   723  006D                     	ds	1
   724                           
   725                           	psect	bssBANK1
   726  00B9                     __pbssBANK1:
   727  00B9                     _BUFFER:
   728  00B9                     	ds	20
   729                           
   730                           	psect	clrtext
   731  1E8E                     clear_ram0:	
   732                           ;	Called with FSR containing the base address, and
   733                           ;	W with the last address+1
   734                           
   735  1E8E  0064               	clrwdt	;clear the watchdog before getting into this loop
   736  1E8F                     clrloop0:
   737  1E8F  0180               	clrf	0	;clear RAM location pointed to by FSR
   738  1E90  0A84               	incf	4,f	;increment pointer
   739  1E91  0604               	xorwf	4,w	;XOR with final address
   740  1E92  1903               	btfsc	3,2	;have we reached the end yet?
   741  1E93  3400               	retlw	0	;all done for this memory range, return
   742  1E94  0604               	xorwf	4,w	;XOR again to restore value
   743  1E95  2E8F               	goto	clrloop0	;do the next byte
   744                           
   745                           	psect	cstackBANK1
   746  00A0                     __pcstackBANK1:
   747  00A0                     _sprintf$1078:
   748                           
   749                           ; 3 bytes @ 0x0
   750  00A0                     	ds	3
   751  00A3                     sprintf@ap:
   752                           
   753                           ; 1 bytes @ 0x3
   754  00A3                     	ds	1
   755  00A4                     sprintf@flag:
   756                           
   757                           ; 2 bytes @ 0x4
   758  00A4                     	ds	2
   759  00A6                     sprintf@width:
   760                           
   761                           ; 2 bytes @ 0x6
   762  00A6                     	ds	2
   763  00A8                     sprintf@tmpval:
   764                           
   765                           ; 4 bytes @ 0x8
   766  00A8                     	ds	4
   767  00AC                     sprintf@val:
   768                           
   769                           ; 4 bytes @ 0xC
   770  00AC                     	ds	4
   771  00B0                     sprintf@eexp:
   772                           
   773                           ; 2 bytes @ 0x10
   774  00B0                     	ds	2
   775  00B2                     sprintf@fval:
   776                           
   777                           ; 3 bytes @ 0x12
   778  00B2                     	ds	3
   779  00B5                     sprintf@sp:
   780                           
   781                           ; 1 bytes @ 0x15
   782  00B5                     	ds	1
   783  00B6                     sprintf@prec:
   784                           
   785                           ; 2 bytes @ 0x16
   786  00B6                     	ds	2
   787  00B8                     sprintf@c:
   788                           
   789                           ; 1 bytes @ 0x18
   790  00B8                     	ds	1
   791                           
   792                           	psect	cstackCOMMON
   793  0070                     __pcstackCOMMON:
   794  0070                     ?_isdigit:
   795  0070                     ?___ftge:	
   796                           ; 1 bit 
   797                           
   798  0070                     ?_setup:	
   799                           ; 1 bit 
   800                           
   801  0070                     ?__baudios:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ??__baudios:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_config_txsta:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ??_config_txsta:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_config_rcsta:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ??_config_rcsta:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_LCD_init:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_clear_LCD:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_contador:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_ADCread:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Write_USART:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ??_Write_USART:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_spiWrite:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ??_spiWrite:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_spiRead:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_spiRead:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_spiInit:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ??_isdigit:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_main:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_spiReceiveWait:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ??_spiReceiveWait:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_port:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??_port:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_CMDs:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_write_char:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?___wmul:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?___awmod:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0070                     ?___lwmod:	
   883                           ; 2 bytes @ 0x0
   884                           
   885  0070                     ?___ftpack:	
   886                           ; 2 bytes @ 0x0
   887                           
   888  0070                     ?___ftneg:	
   889                           ; 3 bytes @ 0x0
   890                           
   891  0070                     ?__tdiv_to_l_:	
   892                           ; 3 bytes @ 0x0
   893                           
   894  0070                     ?__div_to_l_:	
   895                           ; 4 bytes @ 0x0
   896                           
   897  0070                     ?___lldiv:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0070                     spiInit@sDataSample:	
   901                           ; 4 bytes @ 0x0
   902                           
   903  0070                     spiWrite@dat:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     Write_USART@a:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     port@a:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     _isdigit$880:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ___wmul@multiplier:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ___awmod@divisor:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0070                     ___lwmod@divisor:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0070                     __div_to_l_@f1:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  0070                     ___ftpack@arg:	
   928                           ; 3 bytes @ 0x0
   929                           
   930  0070                     __tdiv_to_l_@f1:	
   931                           ; 3 bytes @ 0x0
   932                           
   933  0070                     ___ftge@ff1:	
   934                           ; 3 bytes @ 0x0
   935                           
   936  0070                     ___ftneg@f1:	
   937                           ; 3 bytes @ 0x0
   938                           
   939  0070                     ___lldiv@divisor:	
   940                           ; 3 bytes @ 0x0
   941                           
   942                           
   943                           ; 4 bytes @ 0x0
   944  0070                     	ds	1
   945  0071                     ??_contador:
   946  0071                     ?_Write_USART_String:	
   947                           ; 1 bytes @ 0x1
   948                           
   949  0071                     ??_CMDs:	
   950                           ; 1 bytes @ 0x1
   951                           
   952  0071                     ??_write_char:	
   953                           ; 1 bytes @ 0x1
   954                           
   955  0071                     spiInit@sClockIdle:	
   956                           ; 1 bytes @ 0x1
   957                           
   958  0071                     isdigit@c:	
   959                           ; 1 bytes @ 0x1
   960                           
   961  0071                     Write_USART_String@a:	
   962                           ; 1 bytes @ 0x1
   963                           
   964                           
   965                           ; 2 bytes @ 0x1
   966  0071                     	ds	1
   967  0072                     spiInit@sTransmitEdge:
   968  0072                     write_char@a:	
   969                           ; 1 bytes @ 0x2
   970                           
   971  0072                     ___wmul@multiplicand:	
   972                           ; 1 bytes @ 0x2
   973                           
   974  0072                     ___awmod@dividend:	
   975                           ; 2 bytes @ 0x2
   976                           
   977  0072                     ___lwmod@dividend:	
   978                           ; 2 bytes @ 0x2
   979                           
   980                           
   981                           ; 2 bytes @ 0x2
   982  0072                     	ds	1
   983  0073                     ?_write_string:
   984  0073                     ??_Write_USART_String:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     ??_spiInit:	
   988                           ; 1 bytes @ 0x3
   989                           
   990  0073                     ??___ftneg:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     spiInit@sType:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     CMDs@a:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     ___ftpack@exp:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     write_string@a:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     __div_to_l_@f2:	
  1006                           ; 2 bytes @ 0x3
  1007                           
  1008  0073                     __tdiv_to_l_@f2:	
  1009                           ; 3 bytes @ 0x3
  1010                           
  1011  0073                     ___ftge@ff2:	
  1012                           ; 3 bytes @ 0x3
  1013                           
  1014                           
  1015                           ; 3 bytes @ 0x3
  1016  0073                     	ds	1
  1017  0074                     ??_setup:
  1018  0074                     ??_LCD_init:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021  0074                     ??_clear_LCD:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024  0074                     ?_set_cursor:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027  0074                     ??___wmul:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  0074                     ??___awmod:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  0074                     ??___lwmod:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  0074                     Write_USART_String@i:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  0074                     set_cursor@b:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042  0074                     ___ftpack@sign:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045  0074                     ___wmul@product:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048  0074                     ___lldiv@dividend:	
  1049                           ; 2 bytes @ 0x4
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x4
  1053  0074                     	ds	1
  1054  0075                     ??_set_cursor:
  1055  0075                     ??_write_string:	
  1056                           ; 1 bytes @ 0x5
  1057                           
  1058  0075                     ??___ftpack:	
  1059                           ; 1 bytes @ 0x5
  1060                           
  1061  0075                     ___awmod@counter:	
  1062                           ; 1 bytes @ 0x5
  1063                           
  1064  0075                     ___lwmod@counter:	
  1065                           ; 1 bytes @ 0x5
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0x5
  1069  0075                     	ds	1
  1070  0076                     ??__tdiv_to_l_:
  1071  0076                     ??__div_to_l_:	
  1072                           ; 1 bytes @ 0x6
  1073                           
  1074  0076                     ??___ftge:	
  1075                           ; 1 bytes @ 0x6
  1076                           
  1077  0076                     ?___lwdiv:	
  1078                           ; 1 bytes @ 0x6
  1079                           
  1080  0076                     set_cursor@a:	
  1081                           ; 2 bytes @ 0x6
  1082                           
  1083  0076                     ___awmod@sign:	
  1084                           ; 1 bytes @ 0x6
  1085                           
  1086  0076                     ___lwdiv@divisor:	
  1087                           ; 1 bytes @ 0x6
  1088                           
  1089                           
  1090                           ; 2 bytes @ 0x6
  1091  0076                     	ds	1
  1092  0077                     ?___awdiv:
  1093  0077                     set_cursor@x:	
  1094                           ; 2 bytes @ 0x7
  1095                           
  1096  0077                     ___awdiv@divisor:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099                           
  1100                           ; 2 bytes @ 0x7
  1101  0077                     	ds	1
  1102  0078                     ??___lldiv:
  1103  0078                     ?___lbtoft:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  0078                     ?___lltoft:	
  1107                           ; 3 bytes @ 0x8
  1108                           
  1109  0078                     write_string@i:	
  1110                           ; 3 bytes @ 0x8
  1111                           
  1112  0078                     ___lwdiv@dividend:	
  1113                           ; 2 bytes @ 0x8
  1114                           
  1115  0078                     ___lltoft@c:	
  1116                           ; 2 bytes @ 0x8
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x8
  1120  0078                     	ds	1
  1121  0079                     ___awdiv@dividend:
  1122  0079                     ___lldiv@quotient:	
  1123                           ; 2 bytes @ 0x9
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x9
  1127  0079                     	ds	1
  1128  007A                     ??___lwdiv:
  1129                           
  1130                           ; 1 bytes @ 0xA
  1131  007A                     	ds	1
  1132  007B                     ??___awdiv:
  1133  007B                     ___lbtoft@c:	
  1134                           ; 1 bytes @ 0xB
  1135                           
  1136  007B                     ___lwdiv@quotient:	
  1137                           ; 1 bytes @ 0xB
  1138                           
  1139                           
  1140                           ; 2 bytes @ 0xB
  1141  007B                     	ds	1
  1142  007C                     ??_ADCread:
  1143  007C                     ??___lltoft:	
  1144                           ; 1 bytes @ 0xC
  1145                           
  1146                           
  1147                           ; 1 bytes @ 0xC
  1148  007C                     	ds	1
  1149  007D                     ___lldiv@counter:
  1150  007D                     ___lltoft@exp:	
  1151                           ; 1 bytes @ 0xD
  1152                           
  1153  007D                     ___lwdiv@counter:	
  1154                           ; 1 bytes @ 0xD
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0xD
  1158  007D                     	ds	1
  1159  007E                     ??___ftsub:
  1160                           
  1161                           	psect	cstackBANK0
  1162  0020                     __pcstackBANK0:	
  1163                           ; 1 bytes @ 0xE
  1164                           
  1165  0020                     ??___lbtoft:
  1166  0020                     ?___llmod:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0020                     ___awdiv@counter:	
  1170                           ; 4 bytes @ 0x0
  1171                           
  1172  0020                     __div_to_l_@quot:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0020                     __tdiv_to_l_@quot:	
  1176                           ; 4 bytes @ 0x0
  1177                           
  1178  0020                     ___llmod@divisor:	
  1179                           ; 4 bytes @ 0x0
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0x0
  1183  0020                     	ds	1
  1184  0021                     ___awdiv@sign:
  1185                           
  1186                           ; 1 bytes @ 0x1
  1187  0021                     	ds	1
  1188  0022                     ___awdiv@quotient:
  1189                           
  1190                           ; 2 bytes @ 0x2
  1191  0022                     	ds	2
  1192  0024                     ?___bmul:
  1193  0024                     ___bmul@multiplicand:	
  1194                           ; 1 bytes @ 0x4
  1195                           
  1196  0024                     __div_to_l_@cntr:	
  1197                           ; 1 bytes @ 0x4
  1198                           
  1199  0024                     __tdiv_to_l_@cntr:	
  1200                           ; 1 bytes @ 0x4
  1201                           
  1202  0024                     ___llmod@dividend:	
  1203                           ; 1 bytes @ 0x4
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x4
  1207  0024                     	ds	1
  1208  0025                     ??___bmul:
  1209  0025                     __div_to_l_@exp1:	
  1210                           ; 1 bytes @ 0x5
  1211                           
  1212  0025                     __tdiv_to_l_@exp1:	
  1213                           ; 1 bytes @ 0x5
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x5
  1217  0025                     	ds	1
  1218  0026                     ___bmul@product:
  1219                           
  1220                           ; 1 bytes @ 0x6
  1221  0026                     	ds	1
  1222  0027                     ___bmul@multiplier:
  1223                           
  1224                           ; 1 bytes @ 0x7
  1225  0027                     	ds	1
  1226  0028                     ??___llmod:
  1227  0028                     ?___ftmul:	
  1228                           ; 1 bytes @ 0x8
  1229                           
  1230  0028                     ___ftmul@f1:	
  1231                           ; 3 bytes @ 0x8
  1232                           
  1233                           
  1234                           ; 3 bytes @ 0x8
  1235  0028                     	ds	1
  1236  0029                     ___llmod@counter:
  1237                           
  1238                           ; 1 bytes @ 0x9
  1239  0029                     	ds	2
  1240  002B                     ___ftmul@f2:
  1241                           
  1242                           ; 3 bytes @ 0xB
  1243  002B                     	ds	3
  1244  002E                     ??___ftmul:
  1245                           
  1246                           ; 1 bytes @ 0xE
  1247  002E                     	ds	4
  1248  0032                     ___ftmul@exp:
  1249                           
  1250                           ; 1 bytes @ 0x12
  1251  0032                     	ds	1
  1252  0033                     ___ftmul@f3_as_product:
  1253                           
  1254                           ; 3 bytes @ 0x13
  1255  0033                     	ds	3
  1256  0036                     ___ftmul@cntr:
  1257                           
  1258                           ; 1 bytes @ 0x16
  1259  0036                     	ds	1
  1260  0037                     ___ftmul@sign:
  1261                           
  1262                           ; 1 bytes @ 0x17
  1263  0037                     	ds	1
  1264  0038                     ?_fround:
  1265  0038                     ?_scale:	
  1266                           ; 3 bytes @ 0x18
  1267                           
  1268                           
  1269                           ; 3 bytes @ 0x18
  1270  0038                     	ds	3
  1271  003B                     ??_fround:
  1272  003B                     ??_scale:	
  1273                           ; 1 bytes @ 0x1B
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x1B
  1277  003B                     	ds	2
  1278  003D                     _scale$1077:
  1279                           
  1280                           ; 3 bytes @ 0x1D
  1281  003D                     	ds	3
  1282  0040                     scale@scl:
  1283                           
  1284                           ; 1 bytes @ 0x20
  1285  0040                     	ds	1
  1286  0041                     ?___fttol:
  1287  0041                     ___fttol@f1:	
  1288                           ; 4 bytes @ 0x21
  1289                           
  1290  0041                     _fround$1076:	
  1291                           ; 3 bytes @ 0x21
  1292                           
  1293                           
  1294                           ; 3 bytes @ 0x21
  1295  0041                     	ds	3
  1296  0044                     _fround$1075:
  1297                           
  1298                           ; 3 bytes @ 0x24
  1299  0044                     	ds	1
  1300  0045                     ??___fttol:
  1301                           
  1302                           ; 1 bytes @ 0x25
  1303  0045                     	ds	2
  1304  0047                     fround@prec:
  1305                           
  1306                           ; 1 bytes @ 0x27
  1307  0047                     	ds	1
  1308  0048                     ?___ftadd:
  1309  0048                     ___ftadd@f1:	
  1310                           ; 3 bytes @ 0x28
  1311                           
  1312                           
  1313                           ; 3 bytes @ 0x28
  1314  0048                     	ds	1
  1315  0049                     ___fttol@sign1:
  1316                           
  1317                           ; 1 bytes @ 0x29
  1318  0049                     	ds	1
  1319  004A                     ___fttol@lval:
  1320                           
  1321                           ; 4 bytes @ 0x2A
  1322  004A                     	ds	1
  1323  004B                     ___ftadd@f2:
  1324                           
  1325                           ; 3 bytes @ 0x2B
  1326  004B                     	ds	3
  1327  004E                     ??___ftadd:
  1328  004E                     ___fttol@exp1:	
  1329                           ; 1 bytes @ 0x2E
  1330                           
  1331                           
  1332                           ; 1 bytes @ 0x2E
  1333  004E                     	ds	4
  1334  0052                     ___ftadd@sign:
  1335                           
  1336                           ; 1 bytes @ 0x32
  1337  0052                     	ds	1
  1338  0053                     ___ftadd@exp2:
  1339                           
  1340                           ; 1 bytes @ 0x33
  1341  0053                     	ds	1
  1342  0054                     ___ftadd@exp1:
  1343                           
  1344                           ; 1 bytes @ 0x34
  1345  0054                     	ds	1
  1346  0055                     ?___ftsub:
  1347  0055                     ___ftsub@f2:	
  1348                           ; 3 bytes @ 0x35
  1349                           
  1350                           
  1351                           ; 3 bytes @ 0x35
  1352  0055                     	ds	3
  1353  0058                     ___ftsub@f1:
  1354                           
  1355                           ; 3 bytes @ 0x38
  1356  0058                     	ds	3
  1357  005B                     ?_sprintf:
  1358  005B                     sprintf@f:	
  1359                           ; 2 bytes @ 0x3B
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x3B
  1363  005B                     	ds	6
  1364  0061                     ??_sprintf:
  1365                           
  1366                           ; 1 bytes @ 0x41
  1367  0061                     	ds	6
  1368  0067                     ??_main:
  1369                           
  1370                           ; 1 bytes @ 0x47
  1371  0067                     	ds	3
  1372                           
  1373                           	psect	maintext
  1374  154B                     __pmaintext:	
  1375 ;;
  1376 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1377 ;;
  1378 ;; *************** function _main *****************
  1379 ;; Defined at:
  1380 ;;		line 52 in file "master.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : B00/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0
  1396 ;;      Temps:          0       3       0       0       0
  1397 ;;      Totals:         0       3       0       0       0
  1398 ;;Total ram usage:        3 bytes
  1399 ;; Hardware stack levels required when called:    4
  1400 ;; This function calls:
  1401 ;;		_ADCread
  1402 ;;		_LCD_init
  1403 ;;		_Write_USART
  1404 ;;		_Write_USART_String
  1405 ;;		__baudios
  1406 ;;		_clear_LCD
  1407 ;;		_config_rcsta
  1408 ;;		_config_txsta
  1409 ;;		_contador
  1410 ;;		_set_cursor
  1411 ;;		_setup
  1412 ;;		_sprintf
  1413 ;;		_write_string
  1414 ;; This function is called by:
  1415 ;;		Startup code after reset
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _main
  1421  154B                     _main:
  1422  154B                     l3148:	
  1423                           ;incstack = 0
  1424                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1425                           
  1426                           
  1427                           ;master.c: 53: 
  1428  154B  120A  158A  2001  160A  118A  	fcall	_setup
  1429                           
  1430                           ;master.c: 54:     spiWrite(1);
  1431  1550  160A  158A  2674  160A  118A  	fcall	__baudios
  1432  1555                     l3150:
  1433                           
  1434                           ;master.c: 55:     cont = spiRead();
  1435  1555  160A  158A  269F  160A  118A  	fcall	_config_txsta
  1436  155A                     l3152:
  1437                           
  1438                           ;master.c: 56: 
  1439  155A  160A  158A  2686  160A  118A  	fcall	_config_rcsta
  1440                           
  1441                           ;master.c: 57:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1442  155F  160A  118A  230E  160A  118A  	fcall	_LCD_init
  1443                           
  1444                           ;master.c: 58:     PORTCbits.RC2 = 1;
  1445  1564  120A  118A  2004  160A  118A  	fcall	_clear_LCD
  1446  1569                     l63:	
  1447                           ;master.c: 59:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1448                           
  1449                           
  1450                           ;master.c: 60: }
  1451  1569  160A  118A  20BD  160A  118A  	fcall	_contador
  1452                           
  1453                           ;master.c: 61: 
  1454  156E  160A  118A  2127  160A  118A  	fcall	_ADCread
  1455                           
  1456                           ;master.c: 63:     PORTCbits.RC1 = 0;
  1457  1573  120A  118A  2004  160A  118A  	fcall	_clear_LCD
  1458                           
  1459                           ;master.c: 64:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1460  1578  01F4               	clrf	set_cursor@b
  1461  1579  0AF4               	incf	set_cursor@b,f
  1462  157A  3001               	movlw	1
  1463  157B  160A  158A  2738  160A  118A  	fcall	_set_cursor
  1464  1580                     l3154:
  1465                           
  1466                           ;master.c: 65: 
  1467  1580  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1468  1581  00F3               	movwf	write_string@a
  1469  1582  3080               	movlw	128
  1470  1583  00F4               	movwf	write_string@a+1
  1471  1584  160A  118A  21D9  160A  118A  	fcall	_write_string
  1472  1589                     l3156:
  1473                           
  1474                           ;master.c: 67:     V1 = spiRead();
  1475  1589  3084               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1476  158A  1283               	bcf	3,5	;RP0=0, select bank0
  1477  158B  1303               	bcf	3,6	;RP1=0, select bank0
  1478  158C  00E7               	movwf	??_main
  1479  158D  0867               	movf	??_main,w
  1480  158E  00DB               	movwf	sprintf@f
  1481  158F  086A               	movf	_V1,w
  1482  1590  00DC               	movwf	?_sprintf+1
  1483  1591  086B               	movf	_V1+1,w
  1484  1592  00DD               	movwf	?_sprintf+2
  1485  1593  086C               	movf	_V1+2,w
  1486  1594  00DE               	movwf	?_sprintf+3
  1487  1595  086D               	movf	_cont,w
  1488  1596  00E8               	movwf	??_main+1
  1489  1597  01E9               	clrf	??_main+2
  1490  1598  0868               	movf	??_main+1,w
  1491  1599  00DF               	movwf	?_sprintf+4
  1492  159A  0869               	movf	??_main+2,w
  1493  159B  00E0               	movwf	?_sprintf+5
  1494  159C  30B9               	movlw	(low (_BUFFER| 0))& (0+255)
  1495  159D  120A  158A  2528  160A  118A  	fcall	_sprintf
  1496                           
  1497                           ;master.c: 69:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1498  15A2  01F4               	clrf	set_cursor@b
  1499  15A3  0AF4               	incf	set_cursor@b,f
  1500  15A4  3002               	movlw	2
  1501  15A5  160A  158A  2738  160A  118A  	fcall	_set_cursor
  1502  15AA                     l3158:
  1503                           
  1504                           ;master.c: 70:     PORTCbits.RC1 = 1;
  1505  15AA  30B9               	movlw	(low (_BUFFER| 0))& (0+255)
  1506  15AB  00F3               	movwf	write_string@a
  1507  15AC  3000               	movlw	0
  1508  15AD  00F4               	movwf	write_string@a+1
  1509  15AE  160A  118A  21D9  160A  118A  	fcall	_write_string
  1510  15B3                     l3160:
  1511                           
  1512                           ;master.c: 72: }
  1513  15B3  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1514  15B4  00F1               	movwf	Write_USART_String@a
  1515  15B5  3080               	movlw	128
  1516  15B6  00F2               	movwf	Write_USART_String@a+1
  1517  15B7  160A  158A  27A6  160A  118A  	fcall	_Write_USART_String
  1518                           
  1519                           ;master.c: 73: 
  1520  15BC  300D               	movlw	13
  1521  15BD  160A  158A  26B3  160A  118A  	fcall	_Write_USART
  1522                           
  1523                           ;master.c: 74: 
  1524  15C2  300A               	movlw	10
  1525  15C3  160A  158A  26B3  160A  118A  	fcall	_Write_USART
  1526  15C8                     l3162:
  1527                           
  1528                           ;master.c: 76: 
  1529  15C8  30B9               	movlw	(low (_BUFFER| 0))& (0+255)
  1530  15C9  00F1               	movwf	Write_USART_String@a
  1531  15CA  3000               	movlw	0
  1532  15CB  00F2               	movwf	Write_USART_String@a+1
  1533  15CC  160A  158A  27A6  160A  118A  	fcall	_Write_USART_String
  1534  15D1                     l3164:
  1535                           
  1536                           ;master.c: 77: void setup(void) {
  1537  15D1  300D               	movlw	13
  1538  15D2  160A  158A  26B3  160A  118A  	fcall	_Write_USART
  1539  15D7                     l3166:
  1540                           
  1541                           ;master.c: 78:     ANSEL = 0;
  1542  15D7  300A               	movlw	10
  1543  15D8  160A  158A  26B3  160A  118A  	fcall	_Write_USART
  1544  15DD                     l3168:
  1545                           
  1546                           ;master.c: 80:     TRISD = 0;
  1547  15DD  3006               	movlw	6
  1548  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1549  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1550  15E0  00E9               	movwf	??_main+2
  1551  15E1  3013               	movlw	19
  1552  15E2  00E8               	movwf	??_main+1
  1553  15E3  30AD               	movlw	173
  1554  15E4  00E7               	movwf	??_main
  1555  15E5                     u4487:
  1556  15E5  0BE7               	decfsz	??_main,f
  1557  15E6  2DE5               	goto	u4487
  1558  15E7  0BE8               	decfsz	??_main+1,f
  1559  15E8  2DE5               	goto	u4487
  1560  15E9  0BE9               	decfsz	??_main+2,f
  1561  15EA  2DE5               	goto	u4487
  1562  15EB  2D69               	goto	l63
  1563  15EC  120A  118A  2800   	ljmp	start
  1564  15EF                     __end_of_main:
  1565                           
  1566                           	psect	text1
  1567  11D9                     __ptext1:	
  1568 ;; *************** function _write_string *****************
  1569 ;; Defined at:
  1570 ;;		line 99 in file "LCD.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  a               2    3[COMMON] PTR unsigned char 
  1573 ;;		 -> BUFFER(20), STR_1(13), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  i               2    8[COMMON] int 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         2       0       0       0       0
  1586 ;;      Locals:         2       0       0       0       0
  1587 ;;      Temps:          3       0       0       0       0
  1588 ;;      Totals:         7       0       0       0       0
  1589 ;;Total ram usage:        7 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    2
  1592 ;; This function calls:
  1593 ;;		_write_char
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _write_string
  1601  11D9                     _write_string:
  1602  11D9                     l2840:	
  1603                           ;incstack = 0
  1604                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1605                           
  1606                           
  1607                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
  1608  11D9  01F8               	clrf	write_string@i
  1609  11DA  01F9               	clrf	write_string@i+1
  1610  11DB  29FE               	goto	l2846
  1611  11DC                     l2842:
  1612                           
  1613                           ;LCD.c: 102:  write_char(a[i]);
  1614  11DC  0878               	movf	write_string@i,w
  1615  11DD  0773               	addwf	write_string@a,w
  1616  11DE  00F6               	movwf	??_write_string+1
  1617  11DF  0874               	movf	write_string@a+1,w
  1618  11E0  00F5               	movwf	??_write_string
  1619  11E1  1803               	skipnc
  1620  11E2  0AF5               	incf	??_write_string,f
  1621  11E3  1FF8               	btfss	write_string@i,7
  1622  11E4  29E6               	goto	u3900
  1623  11E5  03F5               	decf	??_write_string,f
  1624  11E6                     u3900:
  1625  11E6  0875               	movf	??_write_string,w
  1626  11E7  00F7               	movwf	??_write_string+2
  1627  11E8  0877               	movf	??_write_string+2,w
  1628  11E9  1283               	bcf	3,5	;RP0=0, select bank0
  1629  11EA  1303               	bcf	3,6	;RP1=0, select bank0
  1630  11EB  00FF               	movwf	btemp+1
  1631  11EC  0876               	movf	??_write_string+1,w
  1632  11ED  0084               	movwf	4
  1633  11EE  160A  118A  2000  160A  118A  	fcall	stringtab
  1634  11F3  160A  158A  26FE  160A  118A  	fcall	_write_char
  1635  11F8                     l2844:
  1636  11F8  3001               	movlw	1
  1637  11F9  07F8               	addwf	write_string@i,f
  1638  11FA  1803               	skipnc
  1639  11FB  0AF9               	incf	write_string@i+1,f
  1640  11FC  3000               	movlw	0
  1641  11FD  07F9               	addwf	write_string@i+1,f
  1642  11FE                     l2846:
  1643  11FE  0878               	movf	write_string@i,w
  1644  11FF  0773               	addwf	write_string@a,w
  1645  1200  00F6               	movwf	??_write_string+1
  1646  1201  0874               	movf	write_string@a+1,w
  1647  1202  00F5               	movwf	??_write_string
  1648  1203  1803               	skipnc
  1649  1204  0AF5               	incf	??_write_string,f
  1650  1205  1FF8               	btfss	write_string@i,7
  1651  1206  2A08               	goto	u3910
  1652  1207  03F5               	decf	??_write_string,f
  1653  1208                     u3910:
  1654  1208  0875               	movf	??_write_string,w
  1655  1209  00F7               	movwf	??_write_string+2
  1656  120A  0877               	movf	??_write_string+2,w
  1657  120B  1283               	bcf	3,5	;RP0=0, select bank0
  1658  120C  1303               	bcf	3,6	;RP1=0, select bank0
  1659  120D  00FF               	movwf	btemp+1
  1660  120E  0876               	movf	??_write_string+1,w
  1661  120F  0084               	movwf	4
  1662  1210  160A  118A  2000  160A  118A  	fcall	stringtab
  1663  1215  3A00               	xorlw	0
  1664  1216  1D03               	skipz
  1665  1217  2A19               	goto	u3921
  1666  1218  2A1A               	goto	u3920
  1667  1219                     u3921:
  1668  1219  29DC               	goto	l2842
  1669  121A                     u3920:
  1670  121A                     l215:
  1671  121A  0008               	return
  1672  121B                     __end_of_write_string:
  1673                           
  1674                           	psect	text2
  1675  1EFE                     __ptext2:	
  1676 ;; *************** function _write_char *****************
  1677 ;; Defined at:
  1678 ;;		line 89 in file "LCD.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  a               1    wreg     unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  a               1    2[COMMON] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0
  1695 ;;      Totals:         2       0       0       0       0
  1696 ;;Total ram usage:        2 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		_port
  1701 ;; This function is called by:
  1702 ;;		_write_string
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _write_char
  1708  1EFE                     _write_char:
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1712                           ;write_char@a stored from wreg
  1713  1EFE  00F2               	movwf	write_char@a
  1714  1EFF                     l2420:
  1715                           
  1716                           ;LCD.c: 90:     RE0 = 1;
  1717  1EFF  1283               	bcf	3,5	;RP0=0, select bank0
  1718  1F00  1303               	bcf	3,6	;RP1=0, select bank0
  1719  1F01  1409               	bsf	9,0	;volatile
  1720  1F02                     l2422:
  1721                           
  1722                           ;LCD.c: 91:     port(a);
  1723  1F02  0872               	movf	write_char@a,w
  1724  1F03  160A  118A  219B  160A  158A  	fcall	_port
  1725  1F08                     l2424:
  1726                           
  1727                           ;LCD.c: 92:     RE1 = 1;
  1728  1F08  1283               	bcf	3,5	;RP0=0, select bank0
  1729  1F09  1303               	bcf	3,6	;RP1=0, select bank0
  1730  1F0A  1489               	bsf	9,1	;volatile
  1731  1F0B                     l2426:
  1732                           
  1733                           ;LCD.c: 93:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1734  1F0B  2F0C               	nop2	;2 cycle nop
  1735  1F0C  2F0D               	nop2	;2 cycle nop
  1736  1F0D  0000               	nop
  1737  1F0E                     l2428:
  1738                           
  1739                           ;LCD.c: 94:     RE1 = 0;
  1740  1F0E  1283               	bcf	3,5	;RP0=0, select bank0
  1741  1F0F  1303               	bcf	3,6	;RP1=0, select bank0
  1742  1F10  1089               	bcf	9,1	;volatile
  1743  1F11                     l2430:
  1744                           
  1745                           ;LCD.c: 95:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1746  1F11  2F12               	nop2	;2 cycle nop
  1747  1F12  2F13               	nop2	;2 cycle nop
  1748  1F13  0000               	nop
  1749  1F14                     l2432:
  1750                           
  1751                           ;LCD.c: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1752  1F14  3010               	movlw	16
  1753  1F15  00F1               	movwf	??_write_char
  1754  1F16                     u4497:
  1755  1F16  0BF1               	decfsz	??_write_char,f
  1756  1F17  2F16               	goto	u4497
  1757  1F18  0000               	nop
  1758  1F19                     l209:
  1759  1F19  0008               	return
  1760  1F1A                     __end_of_write_char:
  1761                           
  1762                           	psect	text3
  1763  0D28                     __ptext3:	
  1764 ;; *************** function _sprintf *****************
  1765 ;; Defined at:
  1766 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  sp              1    wreg     PTR unsigned char 
  1769 ;;		 -> BUFFER(20), 
  1770 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  1771 ;;		 -> STR_2(9), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  1774 ;;		 -> BUFFER(20), 
  1775 ;;  val             4   12[BANK1 ] unsigned long 
  1776 ;;  tmpval          4    8[BANK1 ] struct .
  1777 ;;  fval            3   18[BANK1 ] struct .
  1778 ;;  prec            2   22[BANK1 ] int 
  1779 ;;  eexp            2   16[BANK1 ] int 
  1780 ;;  width           2    6[BANK1 ] int 
  1781 ;;  flag            2    4[BANK1 ] unsigned short 
  1782 ;;  cp              2    0        PTR const unsigned char 
  1783 ;;  len             2    0        unsigned int 
  1784 ;;  c               1   24[BANK1 ] unsigned char 
  1785 ;;  ap              1    3[BANK1 ] PTR void [1]
  1786 ;;		 -> ?_sprintf(2), 
  1787 ;;  d               1    0        unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2   59[BANK0 ] int 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       6       0       0       0
  1798 ;;      Locals:         0       0      25       0       0
  1799 ;;      Temps:          0       6       0       0       0
  1800 ;;      Totals:         0      12      25       0       0
  1801 ;;Total ram usage:       37 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		___awdiv
  1806 ;;		___ftadd
  1807 ;;		___ftge
  1808 ;;		___ftmul
  1809 ;;		___ftneg
  1810 ;;		___ftsub
  1811 ;;		___fttol
  1812 ;;		___lldiv
  1813 ;;		___llmod
  1814 ;;		___lltoft
  1815 ;;		___wmul
  1816 ;;		__div_to_l_
  1817 ;;		__tdiv_to_l_
  1818 ;;		_fround
  1819 ;;		_isdigit
  1820 ;;		_scale
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _sprintf
  1828  0D28                     _sprintf:
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1832                           ;sprintf@sp stored from wreg
  1833  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0D2A  00B5               	movwf	sprintf@sp^(0+128)
  1836  0D2B                     l2848:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1839  0D2B  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1840  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0D2E  00E1               	movwf	??_sprintf
  1843  0D2F  0861               	movf	??_sprintf,w
  1844  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  1846  0D32  00A3               	movwf	sprintf@ap^(0+128)
  1847  0D33                     L1:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1850  0D33  120A  118A  2FCF   	goto	l3128
  1851  0D36                     l2850:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1854  0D36  3025               	movlw	37
  1855  0D37  0638               	xorwf	sprintf@c^(0+128),w
  1856  0D38  1903               	btfsc	3,2
  1857  0D39  2D3B               	goto	u3931
  1858  0D3A  2D3C               	goto	u3930
  1859  0D3B                     u3931:
  1860  0D3B  2D50               	goto	l2856
  1861  0D3C                     u3930:
  1862  0D3C                     l2852:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1865  0D3C  0838               	movf	sprintf@c^(0+128),w
  1866  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0D3F  00E1               	movwf	??_sprintf
  1869  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  1870  0D41  1303               	bcf	3,6	;RP1=0, select bank1
  1871  0D42  0835               	movf	sprintf@sp^(0+128),w
  1872  0D43  0084               	movwf	4
  1873  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0D46  0861               	movf	??_sprintf,w
  1876  0D47  1383               	bcf	3,7	;select IRP bank0
  1877  0D48  0080               	movwf	0
  1878  0D49                     l2854:
  1879  0D49  3001               	movlw	1
  1880  0D4A  00E1               	movwf	??_sprintf
  1881  0D4B  0861               	movf	??_sprintf,w
  1882  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0D4E  07B5               	addwf	sprintf@sp^(0+128),f
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1887  0D4F  2D33               	goto	L1
  1888  0D50                     l2856:
  1889                           
  1890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1891  0D50  01A6               	clrf	sprintf@width^(0+128)
  1892  0D51  01A7               	clrf	(sprintf@width+1)^(0+128)
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1895  0D52  01A4               	clrf	sprintf@flag^(0+128)
  1896  0D53  01A5               	clrf	(sprintf@flag+1)^(0+128)
  1897  0D54                     l2858:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1900  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0D56  085B               	movf	sprintf@f,w
  1903  0D57  0084               	movwf	4
  1904  0D58  160A  118A  200A  120A  158A  	fcall	stringdir
  1905  0D5D  160A  158A  26BF  120A  158A  	fcall	_isdigit
  1906  0D62  1C03               	btfss	3,0
  1907  0D63  2D65               	goto	u3941
  1908  0D64  2D66               	goto	u3940
  1909  0D65                     u3941:
  1910  0D65  2DB0               	goto	l2870
  1911  0D66                     u3940:
  1912  0D66                     l2860:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1915  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0D68  01A6               	clrf	sprintf@width^(0+128)
  1918  0D69  01A7               	clrf	(sprintf@width+1)^(0+128)
  1919  0D6A                     l2862:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1922  0D6A  300A               	movlw	10
  1923  0D6B  00F0               	movwf	___wmul@multiplier
  1924  0D6C  3000               	movlw	0
  1925  0D6D  00F1               	movwf	___wmul@multiplier+1
  1926  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0D70  0827               	movf	(sprintf@width+1)^(0+128),w
  1929  0D71  00F3               	movwf	___wmul@multiplicand+1
  1930  0D72  0826               	movf	sprintf@width^(0+128),w
  1931  0D73  00F2               	movwf	___wmul@multiplicand
  1932  0D74  160A  158A  2781  120A  158A  	fcall	___wmul
  1933  0D79  0871               	movf	?___wmul+1,w
  1934  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0D7C  00A7               	movwf	(sprintf@width+1)^(0+128)
  1937  0D7D  0870               	movf	?___wmul,w
  1938  0D7E  00A6               	movwf	sprintf@width^(0+128)
  1939  0D7F                     l2864:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1942  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0D81  085B               	movf	sprintf@f,w
  1945  0D82  0084               	movwf	4
  1946  0D83  160A  118A  200A  120A  158A  	fcall	stringdir
  1947  0D88  3ED0               	addlw	208
  1948  0D89  00E1               	movwf	??_sprintf
  1949  0D8A  30FF               	movlw	255
  1950  0D8B  1803               	skipnc
  1951  0D8C  3000               	movlw	0
  1952  0D8D  00E2               	movwf	??_sprintf+1
  1953  0D8E  0861               	movf	??_sprintf,w
  1954  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0D91  07A6               	addwf	sprintf@width^(0+128),f
  1957  0D92  1803               	skipnc
  1958  0D93  0AA7               	incf	(sprintf@width+1)^(0+128),f
  1959  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0D96  0862               	movf	??_sprintf+1,w
  1962  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0D99  07A7               	addwf	(sprintf@width+1)^(0+128),f
  1965  0D9A                     l2866:
  1966  0D9A  3001               	movlw	1
  1967  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0D9D  00E1               	movwf	??_sprintf
  1970  0D9E  0861               	movf	??_sprintf,w
  1971  0D9F  07DB               	addwf	sprintf@f,f
  1972  0DA0                     l2868:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1975  0DA0  085B               	movf	sprintf@f,w
  1976  0DA1  0084               	movwf	4
  1977  0DA2  160A  118A  200A  120A  158A  	fcall	stringdir
  1978  0DA7  160A  158A  26BF  120A  158A  	fcall	_isdigit
  1979  0DAC  1803               	btfsc	3,0
  1980  0DAD  2DAF               	goto	u3951
  1981  0DAE  2DB0               	goto	u3950
  1982  0DAF                     u3951:
  1983  0DAF  2D6A               	goto	l2862
  1984  0DB0                     u3950:
  1985  0DB0                     l2870:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1988  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0DB2  085B               	movf	sprintf@f,w
  1991  0DB3  0084               	movwf	4
  1992  0DB4  160A  118A  200A  120A  158A  	fcall	stringdir
  1993  0DB9  3A2E               	xorlw	46
  1994  0DBA  1D03               	skipz
  1995  0DBB  2DBD               	goto	u3961
  1996  0DBC  2DBE               	goto	u3960
  1997  0DBD                     u3961:
  1998  0DBD  2E14               	goto	l2886
  1999  0DBE                     u3960:
  2000  0DBE                     l2872:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2003  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0DC0  1725               	bsf	(sprintf@flag^(0+128)+1),6
  2006  0DC1                     l2874:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2009  0DC1  3001               	movlw	1
  2010  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0DC4  00E1               	movwf	??_sprintf
  2013  0DC5  0861               	movf	??_sprintf,w
  2014  0DC6  07DB               	addwf	sprintf@f,f
  2015  0DC7                     l2876:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2018  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0DC9  01B6               	clrf	sprintf@prec^(0+128)
  2021  0DCA  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2024  0DCB  2E02               	goto	l2884
  2025  0DCC                     l2878:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2028  0DCC  300A               	movlw	10
  2029  0DCD  00F0               	movwf	___wmul@multiplier
  2030  0DCE  3000               	movlw	0
  2031  0DCF  00F1               	movwf	___wmul@multiplier+1
  2032  0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0DD1  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0DD2  0837               	movf	(sprintf@prec+1)^(0+128),w
  2035  0DD3  00F3               	movwf	___wmul@multiplicand+1
  2036  0DD4  0836               	movf	sprintf@prec^(0+128),w
  2037  0DD5  00F2               	movwf	___wmul@multiplicand
  2038  0DD6  160A  158A  2781  120A  158A  	fcall	___wmul
  2039  0DDB  0871               	movf	?___wmul+1,w
  2040  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0DDE  00B7               	movwf	(sprintf@prec+1)^(0+128)
  2043  0DDF  0870               	movf	?___wmul,w
  2044  0DE0  00B6               	movwf	sprintf@prec^(0+128)
  2045  0DE1                     l2880:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2048  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0DE3  085B               	movf	sprintf@f,w
  2051  0DE4  0084               	movwf	4
  2052  0DE5  160A  118A  200A  120A  158A  	fcall	stringdir
  2053  0DEA  3ED0               	addlw	208
  2054  0DEB  00E1               	movwf	??_sprintf
  2055  0DEC  30FF               	movlw	255
  2056  0DED  1803               	skipnc
  2057  0DEE  3000               	movlw	0
  2058  0DEF  00E2               	movwf	??_sprintf+1
  2059  0DF0  0861               	movf	??_sprintf,w
  2060  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0DF3  07B6               	addwf	sprintf@prec^(0+128),f
  2063  0DF4  1803               	skipnc
  2064  0DF5  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  2065  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0DF8  0862               	movf	??_sprintf+1,w
  2068  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2069  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2070  0DFB  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  2071  0DFC                     l2882:
  2072  0DFC  3001               	movlw	1
  2073  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0DFF  00E1               	movwf	??_sprintf
  2076  0E00  0861               	movf	??_sprintf,w
  2077  0E01  07DB               	addwf	sprintf@f,f
  2078  0E02                     l2884:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2081  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0E03  085B               	movf	sprintf@f,w
  2083  0E04  0084               	movwf	4
  2084  0E05  160A  118A  200A  120A  158A  	fcall	stringdir
  2085  0E0A  160A  158A  26BF  120A  158A  	fcall	_isdigit
  2086  0E0F  1803               	btfsc	3,0
  2087  0E10  2E12               	goto	u3971
  2088  0E11  2E13               	goto	u3970
  2089  0E12                     u3971:
  2090  0E12  2DCC               	goto	l2878
  2091  0E13                     u3970:
  2092  0E13  2E1E               	goto	l2892
  2093  0E14                     l2886:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2096  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0E16  01B6               	clrf	sprintf@prec^(0+128)
  2099  0E17  01B7               	clrf	(sprintf@prec+1)^(0+128)
  2100  0E18                     l2888:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2103  0E18  1625               	bsf	(sprintf@flag^(0+128)+1),4
  2104  0E19  2E1E               	goto	l2892
  2105  0E1A                     l346:	
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2107                           
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2110  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0E1C  1525               	bsf	(sprintf@flag^(0+128)+1),2
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2115  0E1D  2E44               	goto	l2894
  2116  0E1E                     l2892:
  2117  0E1E  3001               	movlw	1
  2118  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0E21  07DB               	addwf	sprintf@f,f
  2121  0E22  30FF               	movlw	-1
  2122  0E23  075B               	addwf	sprintf@f,w
  2123  0E24  0084               	movwf	4
  2124  0E25  160A  118A  200A  120A  158A  	fcall	stringdir
  2125  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  2126  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  2127  0E2C  00B8               	movwf	sprintf@c^(0+128)
  2128  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0E2F  00E1               	movwf	??_sprintf
  2131  0E30  01E2               	clrf	??_sprintf+1
  2132                           
  2133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2134                           ; Switch size 1, requested type "simple"
  2135                           ; Number of cases is 1, Range of values is 0 to 0
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            4     3 (average)
  2139                           ; direct_byte           11     8 (fixed)
  2140                           ; jumptable            260     6 (fixed)
  2141                           ;	Chosen strategy is simple_byte
  2142  0E31  0862               	movf	??_sprintf+1,w
  2143  0E32  3A00               	xorlw	0	; case 0
  2144  0E33  1903               	skipnz
  2145  0E34  2E36               	goto	l3200
  2146  0E35  2D33               	goto	L1
  2147  0E36                     l3200:
  2148                           
  2149                           ; Switch size 1, requested type "simple"
  2150                           ; Number of cases is 4, Range of values is 0 to 105
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte           13     7 (average)
  2154                           ; jumptable            260     6 (fixed)
  2155                           ;	Chosen strategy is simple_byte
  2156  0E36  0861               	movf	??_sprintf,w
  2157  0E37  3A00               	xorlw	0	; case 0
  2158  0E38  1903               	skipnz
  2159  0E39  2FFD               	goto	L3
  2160  0E3A  3A64               	xorlw	100	; case 100
  2161  0E3B  1903               	skipnz
  2162  0E3C  2E44               	goto	l2894
  2163  0E3D  3A02               	xorlw	2	; case 102
  2164  0E3E  1903               	skipnz
  2165  0E3F  2E1A               	goto	l346
  2166  0E40  3A0F               	xorlw	15	; case 105
  2167  0E41  1903               	skipnz
  2168  0E42  2E44               	goto	l2894
  2169  0E43  2D33               	goto	L1
  2170  0E44                     l2894:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2173  0E44  3000               	movlw	0
  2174  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  2175  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  2176  0E47  0524               	andwf	sprintf@flag^(0+128),w
  2177  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0E4A  00E1               	movwf	??_sprintf
  2180  0E4B  3007               	movlw	7
  2181  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0E4E  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2184  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0E51  00E2               	movwf	??_sprintf+1
  2187  0E52  0861               	movf	??_sprintf,w
  2188  0E53  0462               	iorwf	??_sprintf+1,w
  2189  0E54  1903               	btfsc	3,2
  2190  0E55  2E57               	goto	u3981
  2191  0E56  2E5A               	goto	u3980
  2192  0E57                     u3981:
  2193  0E57  120A  118A  2DC6   	goto	l3050
  2194  0E5A                     u3980:
  2195  0E5A                     l2896:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2198  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0E5C  1E25               	btfss	(sprintf@flag+1)^(0+128),4
  2201  0E5D  2E5F               	goto	u3991
  2202  0E5E  2E60               	goto	u3990
  2203  0E5F                     u3991:
  2204  0E5F  2E64               	goto	l2900
  2205  0E60                     u3990:
  2206  0E60                     l2898:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2209  0E60  3006               	movlw	6
  2210  0E61  00B6               	movwf	sprintf@prec^(0+128)
  2211  0E62  3000               	movlw	0
  2212  0E63  00B7               	movwf	(sprintf@prec^(0+128)+1)
  2213  0E64                     l2900:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2216  0E64  0823               	movf	sprintf@ap^(0+128),w
  2217  0E65  0084               	movwf	4
  2218  0E66  1383               	bcf	3,7	;select IRP bank0
  2219  0E67  0800               	movf	0,w
  2220  0E68  00B2               	movwf	sprintf@fval^(0+128)
  2221  0E69  0A84               	incf	4,f
  2222  0E6A  0800               	movf	0,w
  2223  0E6B  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2224  0E6C  0A84               	incf	4,f
  2225  0E6D  0800               	movf	0,w
  2226  0E6E  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2227  0E6F                     l2902:
  2228  0E6F  3003               	movlw	3
  2229  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0E72  00E1               	movwf	??_sprintf
  2232  0E73  0861               	movf	??_sprintf,w
  2233  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  2235  0E76  07A3               	addwf	sprintf@ap^(0+128),f
  2236  0E77                     l2904:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2239  0E77  0832               	movf	sprintf@fval^(0+128),w
  2240  0E78  00F0               	movwf	___ftge@ff1
  2241  0E79  0833               	movf	(sprintf@fval+1)^(0+128),w
  2242  0E7A  00F1               	movwf	___ftge@ff1+1
  2243  0E7B  0834               	movf	(sprintf@fval+2)^(0+128),w
  2244  0E7C  00F2               	movwf	___ftge@ff1+2
  2245  0E7D  3000               	movlw	0
  2246  0E7E  00F3               	movwf	___ftge@ff2
  2247  0E7F  3000               	movlw	0
  2248  0E80  00F4               	movwf	___ftge@ff2+1
  2249  0E81  3000               	movlw	0
  2250  0E82  00F5               	movwf	___ftge@ff2+2
  2251  0E83  160A  118A  20EF  120A  158A  	fcall	___ftge
  2252  0E88  1803               	btfsc	3,0
  2253  0E89  2E8B               	goto	u4001
  2254  0E8A  2E8C               	goto	u4000
  2255  0E8B                     u4001:
  2256  0E8B  2EA5               	goto	l2910
  2257  0E8C                     u4000:
  2258  0E8C                     l2906:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2261  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0E8E  0832               	movf	sprintf@fval^(0+128),w
  2264  0E8F  00F0               	movwf	___ftneg@f1
  2265  0E90  0833               	movf	(sprintf@fval+1)^(0+128),w
  2266  0E91  00F1               	movwf	___ftneg@f1+1
  2267  0E92  0834               	movf	(sprintf@fval+2)^(0+128),w
  2268  0E93  00F2               	movwf	___ftneg@f1+2
  2269  0E94  160A  158A  26A9  120A  158A  	fcall	___ftneg
  2270  0E99  0870               	movf	?___ftneg,w
  2271  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2272  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2273  0E9C  00B2               	movwf	sprintf@fval^(0+128)
  2274  0E9D  0871               	movf	?___ftneg+1,w
  2275  0E9E  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2276  0E9F  0872               	movf	?___ftneg+2,w
  2277  0EA0  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2278  0EA1                     l2908:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2281  0EA1  3003               	movlw	3
  2282  0EA2  04A4               	iorwf	sprintf@flag^(0+128),f
  2283  0EA3  3000               	movlw	0
  2284  0EA4  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  2285  0EA5                     l2910:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2288  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0EA7  01B0               	clrf	sprintf@eexp^(0+128)
  2291  0EA8  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2292  0EA9                     l2912:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2295  0EA9  0834               	movf	(sprintf@fval+2)^(0+128),w
  2296  0EAA  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  2297  0EAB  0432               	iorwf	sprintf@fval^(0+128),w
  2298  0EAC  1903               	skipnz
  2299  0EAD  2EAF               	goto	u4011
  2300  0EAE  2EB0               	goto	u4010
  2301  0EAF                     u4011:
  2302  0EAF  2FA2               	goto	l2938
  2303  0EB0                     u4010:
  2304  0EB0                     l2914:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2307  0EB0  30B2               	movlw	low (sprintf@fval| 0)
  2308  0EB1  0084               	movwf	4
  2309  0EB2  1383               	bcf	3,7	;select IRP bank1
  2310  0EB3  0800               	movf	0,w
  2311  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0EB6  00E1               	movwf	??_sprintf
  2314  0EB7  0A84               	incf	4,f
  2315  0EB8  0800               	movf	0,w
  2316  0EB9  00E2               	movwf	??_sprintf+1
  2317  0EBA  0A84               	incf	4,f
  2318  0EBB  0800               	movf	0,w
  2319  0EBC  00E3               	movwf	??_sprintf+2
  2320  0EBD  0A84               	incf	4,f
  2321  0EBE  0800               	movf	0,w
  2322  0EBF  00E4               	movwf	??_sprintf+3
  2323  0EC0  300F               	movlw	15
  2324  0EC1                     u4025:
  2325  0EC1  1003               	clrc
  2326  0EC2  0CE4               	rrf	??_sprintf+3,f
  2327  0EC3  0CE3               	rrf	??_sprintf+2,f
  2328  0EC4  0CE2               	rrf	??_sprintf+1,f
  2329  0EC5  0CE1               	rrf	??_sprintf,f
  2330  0EC6                     u4020:
  2331  0EC6  3EFF               	addlw	-1
  2332  0EC7  1D03               	skipz
  2333  0EC8  2EC1               	goto	u4025
  2334  0EC9  30FF               	movlw	255
  2335  0ECA  0561               	andwf	??_sprintf,w
  2336  0ECB  00E5               	movwf	??_sprintf+4
  2337  0ECC  3000               	movlw	0
  2338  0ECD  0562               	andwf	??_sprintf+1,w
  2339  0ECE  00E6               	movwf	??_sprintf+5
  2340  0ECF  0865               	movf	??_sprintf+4,w
  2341  0ED0  3E82               	addlw	130
  2342  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2344  0ED3  00B0               	movwf	sprintf@eexp^(0+128)
  2345  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0ED6  0866               	movf	??_sprintf+5,w
  2348  0ED7  1803               	skipnc
  2349  0ED8  3E01               	addlw	1
  2350  0ED9  3EFF               	addlw	255
  2351  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0EDC  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2354  0EDD                     l2916:
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2357  0EDD  30FF               	movlw	255
  2358  0EDE  07B0               	addwf	sprintf@eexp^(0+128),f
  2359  0EDF  1803               	skipnc
  2360  0EE0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2361  0EE1  30FF               	movlw	255
  2362  0EE2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2363  0EE3                     l2918:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2366  0EE3  3003               	movlw	3
  2367  0EE4  00F0               	movwf	___wmul@multiplier
  2368  0EE5  3000               	movlw	0
  2369  0EE6  00F1               	movwf	___wmul@multiplier+1
  2370  0EE7  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2371  0EE8  00F3               	movwf	___wmul@multiplicand+1
  2372  0EE9  0830               	movf	sprintf@eexp^(0+128),w
  2373  0EEA  00F2               	movwf	___wmul@multiplicand
  2374  0EEB  160A  158A  2781  120A  158A  	fcall	___wmul
  2375  0EF0  0871               	movf	?___wmul+1,w
  2376  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0EF3  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2379  0EF4  0870               	movf	?___wmul,w
  2380  0EF5  00B0               	movwf	sprintf@eexp^(0+128)
  2381  0EF6                     l2920:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2384  0EF6  300A               	movlw	10
  2385  0EF7  00F7               	movwf	___awdiv@divisor
  2386  0EF8  3000               	movlw	0
  2387  0EF9  00F8               	movwf	___awdiv@divisor+1
  2388  0EFA  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2389  0EFB  00FA               	movwf	___awdiv@dividend+1
  2390  0EFC  0830               	movf	sprintf@eexp^(0+128),w
  2391  0EFD  00F9               	movwf	___awdiv@dividend
  2392  0EFE  160A  118A  23DA  120A  158A  	fcall	___awdiv
  2393  0F03  0878               	movf	?___awdiv+1,w
  2394  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2396  0F06  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2397  0F07  0877               	movf	?___awdiv,w
  2398  0F08  00B0               	movwf	sprintf@eexp^(0+128)
  2399  0F09                     l2922:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2402  0F09  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2403  0F0A  2F0C               	goto	u4031
  2404  0F0B  2F0D               	goto	u4030
  2405  0F0C                     u4031:
  2406  0F0C  2F13               	goto	l2926
  2407  0F0D                     u4030:
  2408  0F0D                     l2924:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2411  0F0D  30FF               	movlw	255
  2412  0F0E  07B0               	addwf	sprintf@eexp^(0+128),f
  2413  0F0F  1803               	skipnc
  2414  0F10  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2415  0F11  30FF               	movlw	255
  2416  0F12  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2417  0F13                     l2926:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2420  0F13  0330               	decf	sprintf@eexp^(0+128),w
  2421  0F14  3AFF               	xorlw	255
  2422  0F15  120A  158A  227D  120A  158A  	fcall	_scale
  2423  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0F1C  0838               	movf	?_scale,w
  2426  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2427  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2428  0F1F  00A8               	movwf	sprintf@tmpval^(0+128)
  2429  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0F22  0839               	movf	?_scale+1,w
  2432  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  2434  0F25  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  2435  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0F28  083A               	movf	?_scale+2,w
  2438  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0F2B  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  2441  0F2C                     l2928:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2444  0F2C  0832               	movf	sprintf@fval^(0+128),w
  2445  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0F2F  00A8               	movwf	___ftmul@f1
  2448  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2450  0F32  0833               	movf	(sprintf@fval+1)^(0+128),w
  2451  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0F35  00A9               	movwf	___ftmul@f1+1
  2454  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0F38  0834               	movf	(sprintf@fval+2)^(0+128),w
  2457  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0F3B  00AA               	movwf	___ftmul@f1+2
  2460  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2461  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2462  0F3E  0828               	movf	sprintf@tmpval^(0+128),w
  2463  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0F41  00AB               	movwf	___ftmul@f2
  2466  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0F44  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2469  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0F47  00AC               	movwf	___ftmul@f2+1
  2472  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0F4A  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2475  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0F4D  00AD               	movwf	___ftmul@f2+2
  2478  0F4E  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2479  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0F55  0828               	movf	?___ftmul,w
  2482  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  2483  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  2484  0F58  00A8               	movwf	sprintf@tmpval^(0+128)
  2485  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0F5B  0829               	movf	?___ftmul+1,w
  2488  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0F5E  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  2491  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0F61  082A               	movf	?___ftmul+2,w
  2494  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0F64  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  2497  0F65                     l2930:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2500  0F65  0828               	movf	sprintf@tmpval^(0+128),w
  2501  0F66  00F0               	movwf	___ftge@ff1
  2502  0F67  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2503  0F68  00F1               	movwf	___ftge@ff1+1
  2504  0F69  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2505  0F6A  00F2               	movwf	___ftge@ff1+2
  2506  0F6B  3000               	movlw	0
  2507  0F6C  00F3               	movwf	___ftge@ff2
  2508  0F6D  3080               	movlw	128
  2509  0F6E  00F4               	movwf	___ftge@ff2+1
  2510  0F6F  303F               	movlw	63
  2511  0F70  00F5               	movwf	___ftge@ff2+2
  2512  0F71  160A  118A  20EF  120A  158A  	fcall	___ftge
  2513  0F76  1803               	btfsc	3,0
  2514  0F77  2F79               	goto	u4041
  2515  0F78  2F7A               	goto	u4040
  2516  0F79                     u4041:
  2517  0F79  2F83               	goto	l2934
  2518  0F7A                     u4040:
  2519  0F7A                     l2932:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2522  0F7A  30FF               	movlw	255
  2523  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0F7D  07B0               	addwf	sprintf@eexp^(0+128),f
  2526  0F7E  1803               	skipnc
  2527  0F7F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2528  0F80  30FF               	movlw	255
  2529  0F81  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2530  0F82  2FA2               	goto	l2938
  2531  0F83                     l2934:
  2532  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0F85  0828               	movf	sprintf@tmpval^(0+128),w
  2535  0F86  00F0               	movwf	___ftge@ff1
  2536  0F87  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  2537  0F88  00F1               	movwf	___ftge@ff1+1
  2538  0F89  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  2539  0F8A  00F2               	movwf	___ftge@ff1+2
  2540  0F8B  3000               	movlw	0
  2541  0F8C  00F3               	movwf	___ftge@ff2
  2542  0F8D  3020               	movlw	32
  2543  0F8E  00F4               	movwf	___ftge@ff2+1
  2544  0F8F  3041               	movlw	65
  2545  0F90  00F5               	movwf	___ftge@ff2+2
  2546  0F91  160A  118A  20EF  120A  158A  	fcall	___ftge
  2547  0F96  1C03               	btfss	3,0
  2548  0F97  2F99               	goto	u4051
  2549  0F98  2F9A               	goto	u4050
  2550  0F99                     u4051:
  2551  0F99  2FA2               	goto	l2938
  2552  0F9A                     u4050:
  2553  0F9A                     l2936:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2556  0F9A  3001               	movlw	1
  2557  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0F9D  07B0               	addwf	sprintf@eexp^(0+128),f
  2560  0F9E  1803               	skipnc
  2561  0F9F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2562  0FA0  3000               	movlw	0
  2563  0FA1  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2564  0FA2                     l2938:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2567  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0FA4  0837               	movf	(sprintf@prec+1)^(0+128),w
  2570  0FA5  3A80               	xorlw	128
  2571  0FA6  00FF               	movwf	btemp+1
  2572  0FA7  3080               	movlw	128
  2573  0FA8  027F               	subwf	btemp+1,w
  2574  0FA9  1D03               	skipz
  2575  0FAA  2FAD               	goto	u4065
  2576  0FAB  300D               	movlw	13
  2577  0FAC  0236               	subwf	sprintf@prec^(0+128),w
  2578  0FAD                     u4065:
  2579  0FAD  1803               	skipnc
  2580  0FAE  2FB0               	goto	u4061
  2581  0FAF  2FB1               	goto	u4060
  2582  0FB0                     u4061:
  2583  0FB0  2FEA               	goto	l2942
  2584  0FB1                     u4060:
  2585  0FB1                     l2940:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2588  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0FB3  0836               	movf	sprintf@prec^(0+128),w
  2591  0FB4  120A  158A  20DC  120A  158A  	fcall	_fround
  2592  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0FBB  0838               	movf	?_fround,w
  2595  0FBC  00C8               	movwf	___ftadd@f1
  2596  0FBD  0839               	movf	?_fround+1,w
  2597  0FBE  00C9               	movwf	___ftadd@f1+1
  2598  0FBF  083A               	movf	?_fround+2,w
  2599  0FC0  00CA               	movwf	___ftadd@f1+2
  2600  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2601  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2602  0FC3  0832               	movf	sprintf@fval^(0+128),w
  2603  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0FC6  00CB               	movwf	___ftadd@f2
  2606  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0FC9  0833               	movf	(sprintf@fval+1)^(0+128),w
  2609  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0FCC  00CC               	movwf	___ftadd@f2+1
  2612  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0FCF  0834               	movf	(sprintf@fval+2)^(0+128),w
  2615  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0FD2  00CD               	movwf	___ftadd@f2+2
  2618  0FD3  120A  118A  2011  120A  158A  	fcall	___ftadd
  2619  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0FDA  0848               	movf	?___ftadd,w
  2622  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0FDD  00B2               	movwf	sprintf@fval^(0+128)
  2625  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0FE0  0849               	movf	?___ftadd+1,w
  2628  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2630  0FE3  00B3               	movwf	(sprintf@fval+1)^(0+128)
  2631  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0FE6  084A               	movf	?___ftadd+2,w
  2634  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0FE9  00B4               	movwf	(sprintf@fval+2)^(0+128)
  2637  0FEA                     l2942:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2640  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0FEC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2643  0FED  3A80               	xorlw	128
  2644  0FEE  00FF               	movwf	btemp+1
  2645  0FEF  3080               	movlw	128
  2646  0FF0  027F               	subwf	btemp+1,w
  2647  0FF1  1D03               	skipz
  2648  0FF2  2FF5               	goto	u4075
  2649  0FF3  300A               	movlw	10
  2650  0FF4  0230               	subwf	sprintf@eexp^(0+128),w
  2651  0FF5                     u4075:
  2652  0FF5  1803               	skipnc
  2653  0FF6  2FFA               	goto	u4071
  2654  0FF7  120A  118A  2947   	goto	u4070
  2655  0FFA                     u4071:
  2656  0FFA  120A  118A  297E   	goto	l2950
  2657  0FFD                     L3:
  2658  0FFD                     L2:
  2659  0FFD  120A  118A  2FE6   	ljmp	l3130
  2660                           
  2661                           	psect	text4
  2662  0A7D                     __ptext4:	
  2663 ;; *************** function _scale *****************
  2664 ;; Defined at:
  2665 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  scl             1    wreg     char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  scl             1   32[BANK0 ] char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  3   24[BANK0 ] char 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       3       0       0       0
  2680 ;;      Locals:         0       4       0       0       0
  2681 ;;      Temps:          0       2       0       0       0
  2682 ;;      Totals:         0       9       0       0       0
  2683 ;;Total ram usage:        9 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    2
  2686 ;; This function calls:
  2687 ;;		___awdiv
  2688 ;;		___awmod
  2689 ;;		___bmul
  2690 ;;		___ftmul
  2691 ;; This function is called by:
  2692 ;;		_sprintf
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           
  2697                           ;psect for function _scale
  2698  0A7D                     _scale:
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2702                           ;scale@scl stored from wreg
  2703  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0A7F  00C0               	movwf	scale@scl
  2706  0A80                     l2456:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2709  0A80  1FC0               	btfss	scale@scl,7
  2710  0A81  2A83               	goto	u3221
  2711  0A82  2A84               	goto	u3220
  2712  0A83                     u3221:
  2713  0A83  2BD7               	goto	l2478
  2714  0A84                     u3220:
  2715  0A84                     l2458:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2718  0A84  09C0               	comf	scale@scl,f
  2719  0A85  0AC0               	incf	scale@scl,f
  2720  0A86                     l2460:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2723  0A86  0840               	movf	scale@scl,w
  2724  0A87  3A80               	xorlw	128
  2725  0A88  3E12               	addlw	-238
  2726  0A89  1C03               	skipc
  2727  0A8A  2A8C               	goto	u3231
  2728  0A8B  2A8D               	goto	u3230
  2729  0A8C                     u3231:
  2730  0A8C  2B45               	goto	l2468
  2731  0A8D                     u3230:
  2732  0A8D                     l2462:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2735  0A8D  3003               	movlw	3
  2736  0A8E  00BB               	movwf	??_scale
  2737  0A8F  083B               	movf	??_scale,w
  2738  0A90  00A4               	movwf	___bmul@multiplicand
  2739  0A91  0840               	movf	scale@scl,w
  2740  0A92  00F2               	movwf	___awmod@dividend
  2741  0A93  01F3               	clrf	___awmod@dividend+1
  2742  0A94  1BF2               	btfsc	___awmod@dividend,7
  2743  0A95  03F3               	decf	___awmod@dividend+1,f
  2744  0A96  3064               	movlw	100
  2745  0A97  00F0               	movwf	___awmod@divisor
  2746  0A98  3000               	movlw	0
  2747  0A99  00F1               	movwf	___awmod@divisor+1
  2748  0A9A  160A  118A  22B5  120A  158A  	fcall	___awmod
  2749  0A9F  0871               	movf	?___awmod+1,w
  2750  0AA0  00FA               	movwf	___awdiv@dividend+1
  2751  0AA1  0870               	movf	?___awmod,w
  2752  0AA2  00F9               	movwf	___awdiv@dividend
  2753  0AA3  300A               	movlw	10
  2754  0AA4  00F7               	movwf	___awdiv@divisor
  2755  0AA5  3000               	movlw	0
  2756  0AA6  00F8               	movwf	___awdiv@divisor+1
  2757  0AA7  160A  118A  23DA  120A  158A  	fcall	___awdiv
  2758  0AAC  0877               	movf	?___awdiv,w
  2759  0AAD  160A  158A  26E7  120A  158A  	fcall	___bmul
  2760  0AB2  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2761  0AB3  0084               	movwf	4
  2762  0AB4  160A  118A  200A  120A  158A  	fcall	stringdir
  2763  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0ABB  00A8               	movwf	___ftmul@f1
  2766  0ABC  160A  118A  200A  120A  158A  	fcall	stringdir
  2767  0AC1  00A9               	movwf	___ftmul@f1+1
  2768  0AC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2769  0AC7  00AA               	movwf	___ftmul@f1+2
  2770  0AC8  3003               	movlw	3
  2771  0AC9  00BC               	movwf	??_scale+1
  2772  0ACA  083C               	movf	??_scale+1,w
  2773  0ACB  00A4               	movwf	___bmul@multiplicand
  2774  0ACC  0840               	movf	scale@scl,w
  2775  0ACD  00F9               	movwf	___awdiv@dividend
  2776  0ACE  01FA               	clrf	___awdiv@dividend+1
  2777  0ACF  1BF9               	btfsc	___awdiv@dividend,7
  2778  0AD0  03FA               	decf	___awdiv@dividend+1,f
  2779  0AD1  3064               	movlw	100
  2780  0AD2  00F7               	movwf	___awdiv@divisor
  2781  0AD3  3000               	movlw	0
  2782  0AD4  00F8               	movwf	___awdiv@divisor+1
  2783  0AD5  160A  118A  23DA  120A  158A  	fcall	___awdiv
  2784  0ADA  0877               	movf	?___awdiv,w
  2785  0ADB  160A  158A  26E7  120A  158A  	fcall	___bmul
  2786  0AE0  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2787  0AE1  0084               	movwf	4
  2788  0AE2  160A  118A  200A  120A  158A  	fcall	stringdir
  2789  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0AE9  00AB               	movwf	___ftmul@f2
  2792  0AEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2793  0AEF  00AC               	movwf	___ftmul@f2+1
  2794  0AF0  160A  118A  200A  120A  158A  	fcall	stringdir
  2795  0AF5  00AD               	movwf	___ftmul@f2+2
  2796  0AF6  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2797  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0AFD  0828               	movf	?___ftmul,w
  2800  0AFE  00BD               	movwf	_scale$1077
  2801  0AFF  0829               	movf	?___ftmul+1,w
  2802  0B00  00BE               	movwf	_scale$1077+1
  2803  0B01  082A               	movf	?___ftmul+2,w
  2804  0B02  00BF               	movwf	_scale$1077+2
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2807  0B03  3003               	movlw	3
  2808  0B04  00BB               	movwf	??_scale
  2809  0B05  083B               	movf	??_scale,w
  2810  0B06  00A4               	movwf	___bmul@multiplicand
  2811  0B07  0840               	movf	scale@scl,w
  2812  0B08  00F2               	movwf	___awmod@dividend
  2813  0B09  01F3               	clrf	___awmod@dividend+1
  2814  0B0A  1BF2               	btfsc	___awmod@dividend,7
  2815  0B0B  03F3               	decf	___awmod@dividend+1,f
  2816  0B0C  300A               	movlw	10
  2817  0B0D  00F0               	movwf	___awmod@divisor
  2818  0B0E  3000               	movlw	0
  2819  0B0F  00F1               	movwf	___awmod@divisor+1
  2820  0B10  160A  118A  22B5  120A  158A  	fcall	___awmod
  2821  0B15  0870               	movf	?___awmod,w
  2822  0B16  160A  158A  26E7  120A  158A  	fcall	___bmul
  2823  0B1B  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2824  0B1C  0084               	movwf	4
  2825  0B1D  160A  118A  200A  120A  158A  	fcall	stringdir
  2826  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0B24  00A8               	movwf	___ftmul@f1
  2829  0B25  160A  118A  200A  120A  158A  	fcall	stringdir
  2830  0B2A  00A9               	movwf	___ftmul@f1+1
  2831  0B2B  160A  118A  200A  120A  158A  	fcall	stringdir
  2832  0B30  00AA               	movwf	___ftmul@f1+2
  2833  0B31  083D               	movf	_scale$1077,w
  2834  0B32  00AB               	movwf	___ftmul@f2
  2835  0B33  083E               	movf	_scale$1077+1,w
  2836  0B34  00AC               	movwf	___ftmul@f2+1
  2837  0B35  083F               	movf	_scale$1077+2,w
  2838  0B36  00AD               	movwf	___ftmul@f2+2
  2839  0B37  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2840  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0B3E  0828               	movf	?___ftmul,w
  2843  0B3F  00B8               	movwf	?_scale
  2844  0B40  0829               	movf	?___ftmul+1,w
  2845  0B41  00B9               	movwf	?_scale+1
  2846  0B42  082A               	movf	?___ftmul+2,w
  2847  0B43  00BA               	movwf	?_scale+2
  2848  0B44  2D27               	goto	l324
  2849  0B45                     l2468:
  2850  0B45  0840               	movf	scale@scl,w
  2851  0B46  3A80               	xorlw	128
  2852  0B47  3E75               	addlw	-139
  2853  0B48  1C03               	skipc
  2854  0B49  2B4B               	goto	u3241
  2855  0B4A  2B4C               	goto	u3240
  2856  0B4B                     u3241:
  2857  0B4B  2BB6               	goto	l2474
  2858  0B4C                     u3240:
  2859  0B4C                     l2470:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2862  0B4C  3003               	movlw	3
  2863  0B4D  00BB               	movwf	??_scale
  2864  0B4E  083B               	movf	??_scale,w
  2865  0B4F  00A4               	movwf	___bmul@multiplicand
  2866  0B50  0840               	movf	scale@scl,w
  2867  0B51  00F2               	movwf	___awmod@dividend
  2868  0B52  01F3               	clrf	___awmod@dividend+1
  2869  0B53  1BF2               	btfsc	___awmod@dividend,7
  2870  0B54  03F3               	decf	___awmod@dividend+1,f
  2871  0B55  300A               	movlw	10
  2872  0B56  00F0               	movwf	___awmod@divisor
  2873  0B57  3000               	movlw	0
  2874  0B58  00F1               	movwf	___awmod@divisor+1
  2875  0B59  160A  118A  22B5  120A  158A  	fcall	___awmod
  2876  0B5E  0870               	movf	?___awmod,w
  2877  0B5F  160A  158A  26E7  120A  158A  	fcall	___bmul
  2878  0B64  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2879  0B65  0084               	movwf	4
  2880  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  2881  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0B6D  00A8               	movwf	___ftmul@f1
  2884  0B6E  160A  118A  200A  120A  158A  	fcall	stringdir
  2885  0B73  00A9               	movwf	___ftmul@f1+1
  2886  0B74  160A  118A  200A  120A  158A  	fcall	stringdir
  2887  0B79  00AA               	movwf	___ftmul@f1+2
  2888  0B7A  3003               	movlw	3
  2889  0B7B  00BC               	movwf	??_scale+1
  2890  0B7C  083C               	movf	??_scale+1,w
  2891  0B7D  00A4               	movwf	___bmul@multiplicand
  2892  0B7E  0840               	movf	scale@scl,w
  2893  0B7F  00F9               	movwf	___awdiv@dividend
  2894  0B80  01FA               	clrf	___awdiv@dividend+1
  2895  0B81  1BF9               	btfsc	___awdiv@dividend,7
  2896  0B82  03FA               	decf	___awdiv@dividend+1,f
  2897  0B83  300A               	movlw	10
  2898  0B84  00F7               	movwf	___awdiv@divisor
  2899  0B85  3000               	movlw	0
  2900  0B86  00F8               	movwf	___awdiv@divisor+1
  2901  0B87  160A  118A  23DA  120A  158A  	fcall	___awdiv
  2902  0B8C  0877               	movf	?___awdiv,w
  2903  0B8D  160A  158A  26E7  120A  158A  	fcall	___bmul
  2904  0B92  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2905  0B93  0084               	movwf	4
  2906  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  2907  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0B9B  00AB               	movwf	___ftmul@f2
  2910  0B9C  160A  118A  200A  120A  158A  	fcall	stringdir
  2911  0BA1  00AC               	movwf	___ftmul@f2+1
  2912  0BA2  160A  118A  200A  120A  158A  	fcall	stringdir
  2913  0BA7  00AD               	movwf	___ftmul@f2+2
  2914  0BA8  160A  118A  25EF  120A  158A  	fcall	___ftmul
  2915  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0BAF  0828               	movf	?___ftmul,w
  2918  0BB0  00B8               	movwf	?_scale
  2919  0BB1  0829               	movf	?___ftmul+1,w
  2920  0BB2  00B9               	movwf	?_scale+1
  2921  0BB3  082A               	movf	?___ftmul+2,w
  2922  0BB4  00BA               	movwf	?_scale+2
  2923  0BB5  2D27               	goto	l324
  2924  0BB6                     l2474:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2927  0BB6  3003               	movlw	3
  2928  0BB7  00BB               	movwf	??_scale
  2929  0BB8  083B               	movf	??_scale,w
  2930  0BB9  00A4               	movwf	___bmul@multiplicand
  2931  0BBA  0840               	movf	scale@scl,w
  2932  0BBB  160A  158A  26E7  120A  158A  	fcall	___bmul
  2933  0BC0  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2934  0BC1  0084               	movwf	4
  2935  0BC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2936  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0BC9  00B8               	movwf	?_scale
  2939  0BCA  160A  118A  200A  120A  158A  	fcall	stringdir
  2940  0BCF  00B9               	movwf	?_scale+1
  2941  0BD0  160A  118A  200A  120A  158A  	fcall	stringdir
  2942  0BD5  00BA               	movwf	?_scale+2
  2943  0BD6  2D27               	goto	l324
  2944  0BD7                     l2478:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2947  0BD7  0840               	movf	scale@scl,w
  2948  0BD8  3A80               	xorlw	128
  2949  0BD9  3E12               	addlw	-238
  2950  0BDA  1C03               	skipc
  2951  0BDB  2BDD               	goto	u3251
  2952  0BDC  2BDE               	goto	u3250
  2953  0BDD                     u3251:
  2954  0BDD  2C96               	goto	l2486
  2955  0BDE                     u3250:
  2956  0BDE                     l2480:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2959  0BDE  3003               	movlw	3
  2960  0BDF  00BB               	movwf	??_scale
  2961  0BE0  083B               	movf	??_scale,w
  2962  0BE1  00A4               	movwf	___bmul@multiplicand
  2963  0BE2  0840               	movf	scale@scl,w
  2964  0BE3  00F2               	movwf	___awmod@dividend
  2965  0BE4  01F3               	clrf	___awmod@dividend+1
  2966  0BE5  1BF2               	btfsc	___awmod@dividend,7
  2967  0BE6  03F3               	decf	___awmod@dividend+1,f
  2968  0BE7  3064               	movlw	100
  2969  0BE8  00F0               	movwf	___awmod@divisor
  2970  0BE9  3000               	movlw	0
  2971  0BEA  00F1               	movwf	___awmod@divisor+1
  2972  0BEB  160A  118A  22B5  120A  158A  	fcall	___awmod
  2973  0BF0  0871               	movf	?___awmod+1,w
  2974  0BF1  00FA               	movwf	___awdiv@dividend+1
  2975  0BF2  0870               	movf	?___awmod,w
  2976  0BF3  00F9               	movwf	___awdiv@dividend
  2977  0BF4  300A               	movlw	10
  2978  0BF5  00F7               	movwf	___awdiv@divisor
  2979  0BF6  3000               	movlw	0
  2980  0BF7  00F8               	movwf	___awdiv@divisor+1
  2981  0BF8  160A  118A  23DA  120A  158A  	fcall	___awdiv
  2982  0BFD  0877               	movf	?___awdiv,w
  2983  0BFE  160A  158A  26E7  120A  158A  	fcall	___bmul
  2984  0C03  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2985  0C04  0084               	movwf	4
  2986  0C05  160A  118A  200A  120A  158A  	fcall	stringdir
  2987  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0C0C  00A8               	movwf	___ftmul@f1
  2990  0C0D  160A  118A  200A  120A  158A  	fcall	stringdir
  2991  0C12  00A9               	movwf	___ftmul@f1+1
  2992  0C13  160A  118A  200A  120A  158A  	fcall	stringdir
  2993  0C18  00AA               	movwf	___ftmul@f1+2
  2994  0C19  3003               	movlw	3
  2995  0C1A  00BC               	movwf	??_scale+1
  2996  0C1B  083C               	movf	??_scale+1,w
  2997  0C1C  00A4               	movwf	___bmul@multiplicand
  2998  0C1D  0840               	movf	scale@scl,w
  2999  0C1E  00F9               	movwf	___awdiv@dividend
  3000  0C1F  01FA               	clrf	___awdiv@dividend+1
  3001  0C20  1BF9               	btfsc	___awdiv@dividend,7
  3002  0C21  03FA               	decf	___awdiv@dividend+1,f
  3003  0C22  3064               	movlw	100
  3004  0C23  00F7               	movwf	___awdiv@divisor
  3005  0C24  3000               	movlw	0
  3006  0C25  00F8               	movwf	___awdiv@divisor+1
  3007  0C26  160A  118A  23DA  120A  158A  	fcall	___awdiv
  3008  0C2B  0877               	movf	?___awdiv,w
  3009  0C2C  160A  158A  26E7  120A  158A  	fcall	___bmul
  3010  0C31  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3011  0C32  0084               	movwf	4
  3012  0C33  160A  118A  200A  120A  158A  	fcall	stringdir
  3013  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0C3A  00AB               	movwf	___ftmul@f2
  3016  0C3B  160A  118A  200A  120A  158A  	fcall	stringdir
  3017  0C40  00AC               	movwf	___ftmul@f2+1
  3018  0C41  160A  118A  200A  120A  158A  	fcall	stringdir
  3019  0C46  00AD               	movwf	___ftmul@f2+2
  3020  0C47  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3021  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0C4E  0828               	movf	?___ftmul,w
  3024  0C4F  00BD               	movwf	_scale$1077
  3025  0C50  0829               	movf	?___ftmul+1,w
  3026  0C51  00BE               	movwf	_scale$1077+1
  3027  0C52  082A               	movf	?___ftmul+2,w
  3028  0C53  00BF               	movwf	_scale$1077+2
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3031  0C54  3003               	movlw	3
  3032  0C55  00BB               	movwf	??_scale
  3033  0C56  083B               	movf	??_scale,w
  3034  0C57  00A4               	movwf	___bmul@multiplicand
  3035  0C58  0840               	movf	scale@scl,w
  3036  0C59  00F2               	movwf	___awmod@dividend
  3037  0C5A  01F3               	clrf	___awmod@dividend+1
  3038  0C5B  1BF2               	btfsc	___awmod@dividend,7
  3039  0C5C  03F3               	decf	___awmod@dividend+1,f
  3040  0C5D  300A               	movlw	10
  3041  0C5E  00F0               	movwf	___awmod@divisor
  3042  0C5F  3000               	movlw	0
  3043  0C60  00F1               	movwf	___awmod@divisor+1
  3044  0C61  160A  118A  22B5  120A  158A  	fcall	___awmod
  3045  0C66  0870               	movf	?___awmod,w
  3046  0C67  160A  158A  26E7  120A  158A  	fcall	___bmul
  3047  0C6C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3048  0C6D  0084               	movwf	4
  3049  0C6E  160A  118A  200A  120A  158A  	fcall	stringdir
  3050  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0C75  00A8               	movwf	___ftmul@f1
  3053  0C76  160A  118A  200A  120A  158A  	fcall	stringdir
  3054  0C7B  00A9               	movwf	___ftmul@f1+1
  3055  0C7C  160A  118A  200A  120A  158A  	fcall	stringdir
  3056  0C81  00AA               	movwf	___ftmul@f1+2
  3057  0C82  083D               	movf	_scale$1077,w
  3058  0C83  00AB               	movwf	___ftmul@f2
  3059  0C84  083E               	movf	_scale$1077+1,w
  3060  0C85  00AC               	movwf	___ftmul@f2+1
  3061  0C86  083F               	movf	_scale$1077+2,w
  3062  0C87  00AD               	movwf	___ftmul@f2+2
  3063  0C88  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3064  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0C8F  0828               	movf	?___ftmul,w
  3067  0C90  00B8               	movwf	?_scale
  3068  0C91  0829               	movf	?___ftmul+1,w
  3069  0C92  00B9               	movwf	?_scale+1
  3070  0C93  082A               	movf	?___ftmul+2,w
  3071  0C94  00BA               	movwf	?_scale+2
  3072  0C95  2D27               	goto	l324
  3073  0C96                     l2486:
  3074  0C96  0840               	movf	scale@scl,w
  3075  0C97  3A80               	xorlw	128
  3076  0C98  3E75               	addlw	-139
  3077  0C99  1C03               	skipc
  3078  0C9A  2C9C               	goto	u3261
  3079  0C9B  2C9D               	goto	u3260
  3080  0C9C                     u3261:
  3081  0C9C  2D07               	goto	l2492
  3082  0C9D                     u3260:
  3083  0C9D                     l2488:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3086  0C9D  3003               	movlw	3
  3087  0C9E  00BB               	movwf	??_scale
  3088  0C9F  083B               	movf	??_scale,w
  3089  0CA0  00A4               	movwf	___bmul@multiplicand
  3090  0CA1  0840               	movf	scale@scl,w
  3091  0CA2  00F2               	movwf	___awmod@dividend
  3092  0CA3  01F3               	clrf	___awmod@dividend+1
  3093  0CA4  1BF2               	btfsc	___awmod@dividend,7
  3094  0CA5  03F3               	decf	___awmod@dividend+1,f
  3095  0CA6  300A               	movlw	10
  3096  0CA7  00F0               	movwf	___awmod@divisor
  3097  0CA8  3000               	movlw	0
  3098  0CA9  00F1               	movwf	___awmod@divisor+1
  3099  0CAA  160A  118A  22B5  120A  158A  	fcall	___awmod
  3100  0CAF  0870               	movf	?___awmod,w
  3101  0CB0  160A  158A  26E7  120A  158A  	fcall	___bmul
  3102  0CB5  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3103  0CB6  0084               	movwf	4
  3104  0CB7  160A  118A  200A  120A  158A  	fcall	stringdir
  3105  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0CBE  00A8               	movwf	___ftmul@f1
  3108  0CBF  160A  118A  200A  120A  158A  	fcall	stringdir
  3109  0CC4  00A9               	movwf	___ftmul@f1+1
  3110  0CC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3111  0CCA  00AA               	movwf	___ftmul@f1+2
  3112  0CCB  3003               	movlw	3
  3113  0CCC  00BC               	movwf	??_scale+1
  3114  0CCD  083C               	movf	??_scale+1,w
  3115  0CCE  00A4               	movwf	___bmul@multiplicand
  3116  0CCF  0840               	movf	scale@scl,w
  3117  0CD0  00F9               	movwf	___awdiv@dividend
  3118  0CD1  01FA               	clrf	___awdiv@dividend+1
  3119  0CD2  1BF9               	btfsc	___awdiv@dividend,7
  3120  0CD3  03FA               	decf	___awdiv@dividend+1,f
  3121  0CD4  300A               	movlw	10
  3122  0CD5  00F7               	movwf	___awdiv@divisor
  3123  0CD6  3000               	movlw	0
  3124  0CD7  00F8               	movwf	___awdiv@divisor+1
  3125  0CD8  160A  118A  23DA  120A  158A  	fcall	___awdiv
  3126  0CDD  0877               	movf	?___awdiv,w
  3127  0CDE  160A  158A  26E7  120A  158A  	fcall	___bmul
  3128  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3129  0CE4  0084               	movwf	4
  3130  0CE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3131  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0CEC  00AB               	movwf	___ftmul@f2
  3134  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  3135  0CF2  00AC               	movwf	___ftmul@f2+1
  3136  0CF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3137  0CF8  00AD               	movwf	___ftmul@f2+2
  3138  0CF9  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3139  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0D00  0828               	movf	?___ftmul,w
  3142  0D01  00B8               	movwf	?_scale
  3143  0D02  0829               	movf	?___ftmul+1,w
  3144  0D03  00B9               	movwf	?_scale+1
  3145  0D04  082A               	movf	?___ftmul+2,w
  3146  0D05  00BA               	movwf	?_scale+2
  3147  0D06  2D27               	goto	l324
  3148  0D07                     l2492:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3151  0D07  3003               	movlw	3
  3152  0D08  00BB               	movwf	??_scale
  3153  0D09  083B               	movf	??_scale,w
  3154  0D0A  00A4               	movwf	___bmul@multiplicand
  3155  0D0B  0840               	movf	scale@scl,w
  3156  0D0C  160A  158A  26E7  120A  158A  	fcall	___bmul
  3157  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3158  0D12  0084               	movwf	4
  3159  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  3160  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0D1A  00B8               	movwf	?_scale
  3163  0D1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3164  0D20  00B9               	movwf	?_scale+1
  3165  0D21  160A  118A  200A  120A  158A  	fcall	stringdir
  3166  0D26  00BA               	movwf	?_scale+2
  3167  0D27                     l324:
  3168  0D27  0008               	return
  3169  0D28                     __end_of_scale:
  3170                           
  3171                           	psect	text5
  3172  12B5                     __ptext5:	
  3173 ;; *************** function ___awmod *****************
  3174 ;; Defined at:
  3175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  divisor         2    0[COMMON] int 
  3178 ;;  dividend        2    2[COMMON] int 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  sign            1    6[COMMON] unsigned char 
  3181 ;;  counter         1    5[COMMON] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2    0[COMMON] int 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         4       0       0       0       0
  3192 ;;      Locals:         2       0       0       0       0
  3193 ;;      Temps:          1       0       0       0       0
  3194 ;;      Totals:         7       0       0       0       0
  3195 ;;Total ram usage:        7 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_scale
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function ___awmod
  3206  12B5                     ___awmod:
  3207  12B5                     l2178:	
  3208                           ;incstack = 0
  3209                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3210                           
  3211  12B5  01F6               	clrf	___awmod@sign
  3212  12B6                     l2180:
  3213  12B6  1FF3               	btfss	___awmod@dividend+1,7
  3214  12B7  2AB9               	goto	u2581
  3215  12B8  2ABA               	goto	u2580
  3216  12B9                     u2581:
  3217  12B9  2AC1               	goto	l2186
  3218  12BA                     u2580:
  3219  12BA                     l2182:
  3220  12BA  09F2               	comf	___awmod@dividend,f
  3221  12BB  09F3               	comf	___awmod@dividend+1,f
  3222  12BC  0AF2               	incf	___awmod@dividend,f
  3223  12BD  1903               	skipnz
  3224  12BE  0AF3               	incf	___awmod@dividend+1,f
  3225  12BF                     l2184:
  3226  12BF  01F6               	clrf	___awmod@sign
  3227  12C0  0AF6               	incf	___awmod@sign,f
  3228  12C1                     l2186:
  3229  12C1  1FF1               	btfss	___awmod@divisor+1,7
  3230  12C2  2AC4               	goto	u2591
  3231  12C3  2AC5               	goto	u2590
  3232  12C4                     u2591:
  3233  12C4  2ACA               	goto	l2190
  3234  12C5                     u2590:
  3235  12C5                     l2188:
  3236  12C5  09F0               	comf	___awmod@divisor,f
  3237  12C6  09F1               	comf	___awmod@divisor+1,f
  3238  12C7  0AF0               	incf	___awmod@divisor,f
  3239  12C8  1903               	skipnz
  3240  12C9  0AF1               	incf	___awmod@divisor+1,f
  3241  12CA                     l2190:
  3242  12CA  0870               	movf	___awmod@divisor,w
  3243  12CB  0471               	iorwf	___awmod@divisor+1,w
  3244  12CC  1903               	btfsc	3,2
  3245  12CD  2ACF               	goto	u2601
  3246  12CE  2AD0               	goto	u2600
  3247  12CF                     u2601:
  3248  12CF  2AFF               	goto	l2208
  3249  12D0                     u2600:
  3250  12D0                     l2192:
  3251  12D0  01F5               	clrf	___awmod@counter
  3252  12D1  0AF5               	incf	___awmod@counter,f
  3253  12D2  2ADE               	goto	l2198
  3254  12D3                     l2194:
  3255  12D3  3001               	movlw	1
  3256  12D4                     u2615:
  3257  12D4  1003               	clrc
  3258  12D5  0DF0               	rlf	___awmod@divisor,f
  3259  12D6  0DF1               	rlf	___awmod@divisor+1,f
  3260  12D7  3EFF               	addlw	-1
  3261  12D8  1D03               	skipz
  3262  12D9  2AD4               	goto	u2615
  3263  12DA                     l2196:
  3264  12DA  3001               	movlw	1
  3265  12DB  00F4               	movwf	??___awmod
  3266  12DC  0874               	movf	??___awmod,w
  3267  12DD  07F5               	addwf	___awmod@counter,f
  3268  12DE                     l2198:
  3269  12DE  1FF1               	btfss	___awmod@divisor+1,7
  3270  12DF  2AE1               	goto	u2621
  3271  12E0  2AE2               	goto	u2620
  3272  12E1                     u2621:
  3273  12E1  2AD3               	goto	l2194
  3274  12E2                     u2620:
  3275  12E2                     l2200:
  3276  12E2  0871               	movf	___awmod@divisor+1,w
  3277  12E3  0273               	subwf	___awmod@dividend+1,w
  3278  12E4  1D03               	skipz
  3279  12E5  2AE8               	goto	u2635
  3280  12E6  0870               	movf	___awmod@divisor,w
  3281  12E7  0272               	subwf	___awmod@dividend,w
  3282  12E8                     u2635:
  3283  12E8  1C03               	skipc
  3284  12E9  2AEB               	goto	u2631
  3285  12EA  2AEC               	goto	u2630
  3286  12EB                     u2631:
  3287  12EB  2AF2               	goto	l2204
  3288  12EC                     u2630:
  3289  12EC                     l2202:
  3290  12EC  0870               	movf	___awmod@divisor,w
  3291  12ED  02F2               	subwf	___awmod@dividend,f
  3292  12EE  0871               	movf	___awmod@divisor+1,w
  3293  12EF  1C03               	skipc
  3294  12F0  03F3               	decf	___awmod@dividend+1,f
  3295  12F1  02F3               	subwf	___awmod@dividend+1,f
  3296  12F2                     l2204:
  3297  12F2  3001               	movlw	1
  3298  12F3                     u2645:
  3299  12F3  1003               	clrc
  3300  12F4  0CF1               	rrf	___awmod@divisor+1,f
  3301  12F5  0CF0               	rrf	___awmod@divisor,f
  3302  12F6  3EFF               	addlw	-1
  3303  12F7  1D03               	skipz
  3304  12F8  2AF3               	goto	u2645
  3305  12F9                     l2206:
  3306  12F9  3001               	movlw	1
  3307  12FA  02F5               	subwf	___awmod@counter,f
  3308  12FB  1D03               	btfss	3,2
  3309  12FC  2AFE               	goto	u2651
  3310  12FD  2AFF               	goto	u2650
  3311  12FE                     u2651:
  3312  12FE  2AE2               	goto	l2200
  3313  12FF                     u2650:
  3314  12FF                     l2208:
  3315  12FF  0876               	movf	___awmod@sign,w
  3316  1300  1903               	btfsc	3,2
  3317  1301  2B03               	goto	u2661
  3318  1302  2B04               	goto	u2660
  3319  1303                     u2661:
  3320  1303  2B09               	goto	l2212
  3321  1304                     u2660:
  3322  1304                     l2210:
  3323  1304  09F2               	comf	___awmod@dividend,f
  3324  1305  09F3               	comf	___awmod@dividend+1,f
  3325  1306  0AF2               	incf	___awmod@dividend,f
  3326  1307  1903               	skipnz
  3327  1308  0AF3               	incf	___awmod@dividend+1,f
  3328  1309                     l2212:
  3329  1309  0873               	movf	___awmod@dividend+1,w
  3330  130A  00F1               	movwf	?___awmod+1
  3331  130B  0872               	movf	___awmod@dividend,w
  3332  130C  00F0               	movwf	?___awmod
  3333  130D                     l616:
  3334  130D  0008               	return
  3335  130E                     __end_of___awmod:
  3336                           
  3337                           	psect	text6
  3338  13DA                     __ptext6:	
  3339 ;; *************** function ___awdiv *****************
  3340 ;; Defined at:
  3341 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  divisor         2    7[COMMON] int 
  3344 ;;  dividend        2    9[COMMON] int 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  quotient        2    2[BANK0 ] int 
  3347 ;;  sign            1    1[BANK0 ] unsigned char 
  3348 ;;  counter         1    0[BANK0 ] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    7[COMMON] int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         4       0       0       0       0
  3359 ;;      Locals:         0       4       0       0       0
  3360 ;;      Temps:          1       0       0       0       0
  3361 ;;      Totals:         5       4       0       0       0
  3362 ;;Total ram usage:        9 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_scale
  3368 ;;		_sprintf
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function ___awdiv
  3374  13DA                     ___awdiv:
  3375  13DA                     l2134:	
  3376                           ;incstack = 0
  3377                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3378                           
  3379  13DA  1283               	bcf	3,5	;RP0=0, select bank0
  3380  13DB  1303               	bcf	3,6	;RP1=0, select bank0
  3381  13DC  01A1               	clrf	___awdiv@sign
  3382  13DD                     l2136:
  3383  13DD  1FF8               	btfss	___awdiv@divisor+1,7
  3384  13DE  2BE0               	goto	u2481
  3385  13DF  2BE1               	goto	u2480
  3386  13E0                     u2481:
  3387  13E0  2BE8               	goto	l2142
  3388  13E1                     u2480:
  3389  13E1                     l2138:
  3390  13E1  09F7               	comf	___awdiv@divisor,f
  3391  13E2  09F8               	comf	___awdiv@divisor+1,f
  3392  13E3  0AF7               	incf	___awdiv@divisor,f
  3393  13E4  1903               	skipnz
  3394  13E5  0AF8               	incf	___awdiv@divisor+1,f
  3395  13E6                     l2140:
  3396  13E6  01A1               	clrf	___awdiv@sign
  3397  13E7  0AA1               	incf	___awdiv@sign,f
  3398  13E8                     l2142:
  3399  13E8  1FFA               	btfss	___awdiv@dividend+1,7
  3400  13E9  2BEB               	goto	u2491
  3401  13EA  2BEC               	goto	u2490
  3402  13EB                     u2491:
  3403  13EB  2BF5               	goto	l2148
  3404  13EC                     u2490:
  3405  13EC                     l2144:
  3406  13EC  09F9               	comf	___awdiv@dividend,f
  3407  13ED  09FA               	comf	___awdiv@dividend+1,f
  3408  13EE  0AF9               	incf	___awdiv@dividend,f
  3409  13EF  1903               	skipnz
  3410  13F0  0AFA               	incf	___awdiv@dividend+1,f
  3411  13F1                     l2146:
  3412  13F1  3001               	movlw	1
  3413  13F2  00FB               	movwf	??___awdiv
  3414  13F3  087B               	movf	??___awdiv,w
  3415  13F4  06A1               	xorwf	___awdiv@sign,f
  3416  13F5                     l2148:
  3417  13F5  01A2               	clrf	___awdiv@quotient
  3418  13F6  01A3               	clrf	___awdiv@quotient+1
  3419  13F7                     l2150:
  3420  13F7  0877               	movf	___awdiv@divisor,w
  3421  13F8  0478               	iorwf	___awdiv@divisor+1,w
  3422  13F9  1903               	btfsc	3,2
  3423  13FA  2BFC               	goto	u2501
  3424  13FB  2BFD               	goto	u2500
  3425  13FC                     u2501:
  3426  13FC  2C34               	goto	l2170
  3427  13FD                     u2500:
  3428  13FD                     l2152:
  3429  13FD  01A0               	clrf	___awdiv@counter
  3430  13FE  0AA0               	incf	___awdiv@counter,f
  3431  13FF  2C0B               	goto	l2158
  3432  1400                     l2154:
  3433  1400  3001               	movlw	1
  3434  1401                     u2515:
  3435  1401  1003               	clrc
  3436  1402  0DF7               	rlf	___awdiv@divisor,f
  3437  1403  0DF8               	rlf	___awdiv@divisor+1,f
  3438  1404  3EFF               	addlw	-1
  3439  1405  1D03               	skipz
  3440  1406  2C01               	goto	u2515
  3441  1407                     l2156:
  3442  1407  3001               	movlw	1
  3443  1408  00FB               	movwf	??___awdiv
  3444  1409  087B               	movf	??___awdiv,w
  3445  140A  07A0               	addwf	___awdiv@counter,f
  3446  140B                     l2158:
  3447  140B  1FF8               	btfss	___awdiv@divisor+1,7
  3448  140C  2C0E               	goto	u2521
  3449  140D  2C0F               	goto	u2520
  3450  140E                     u2521:
  3451  140E  2C00               	goto	l2154
  3452  140F                     u2520:
  3453  140F                     l2160:
  3454  140F  3001               	movlw	1
  3455  1410                     u2535:
  3456  1410  1003               	clrc
  3457  1411  0DA2               	rlf	___awdiv@quotient,f
  3458  1412  0DA3               	rlf	___awdiv@quotient+1,f
  3459  1413  3EFF               	addlw	-1
  3460  1414  1D03               	skipz
  3461  1415  2C10               	goto	u2535
  3462  1416  0878               	movf	___awdiv@divisor+1,w
  3463  1417  027A               	subwf	___awdiv@dividend+1,w
  3464  1418  1D03               	skipz
  3465  1419  2C1C               	goto	u2545
  3466  141A  0877               	movf	___awdiv@divisor,w
  3467  141B  0279               	subwf	___awdiv@dividend,w
  3468  141C                     u2545:
  3469  141C  1C03               	skipc
  3470  141D  2C1F               	goto	u2541
  3471  141E  2C20               	goto	u2540
  3472  141F                     u2541:
  3473  141F  2C27               	goto	l2166
  3474  1420                     u2540:
  3475  1420                     l2162:
  3476  1420  0877               	movf	___awdiv@divisor,w
  3477  1421  02F9               	subwf	___awdiv@dividend,f
  3478  1422  0878               	movf	___awdiv@divisor+1,w
  3479  1423  1C03               	skipc
  3480  1424  03FA               	decf	___awdiv@dividend+1,f
  3481  1425  02FA               	subwf	___awdiv@dividend+1,f
  3482  1426                     l2164:
  3483  1426  1422               	bsf	___awdiv@quotient,0
  3484  1427                     l2166:
  3485  1427  3001               	movlw	1
  3486  1428                     u2555:
  3487  1428  1003               	clrc
  3488  1429  0CF8               	rrf	___awdiv@divisor+1,f
  3489  142A  0CF7               	rrf	___awdiv@divisor,f
  3490  142B  3EFF               	addlw	-1
  3491  142C  1D03               	skipz
  3492  142D  2C28               	goto	u2555
  3493  142E                     l2168:
  3494  142E  3001               	movlw	1
  3495  142F  02A0               	subwf	___awdiv@counter,f
  3496  1430  1D03               	btfss	3,2
  3497  1431  2C33               	goto	u2561
  3498  1432  2C34               	goto	u2560
  3499  1433                     u2561:
  3500  1433  2C0F               	goto	l2160
  3501  1434                     u2560:
  3502  1434                     l2170:
  3503  1434  0821               	movf	___awdiv@sign,w
  3504  1435  1903               	btfsc	3,2
  3505  1436  2C38               	goto	u2571
  3506  1437  2C39               	goto	u2570
  3507  1438                     u2571:
  3508  1438  2C3E               	goto	l2174
  3509  1439                     u2570:
  3510  1439                     l2172:
  3511  1439  09A2               	comf	___awdiv@quotient,f
  3512  143A  09A3               	comf	___awdiv@quotient+1,f
  3513  143B  0AA2               	incf	___awdiv@quotient,f
  3514  143C  1903               	skipnz
  3515  143D  0AA3               	incf	___awdiv@quotient+1,f
  3516  143E                     l2174:
  3517  143E  0823               	movf	___awdiv@quotient+1,w
  3518  143F  00F8               	movwf	?___awdiv+1
  3519  1440  0822               	movf	___awdiv@quotient,w
  3520  1441  00F7               	movwf	?___awdiv
  3521  1442                     l603:
  3522  1442  0008               	return
  3523  1443                     __end_of___awdiv:
  3524                           
  3525                           	psect	text7
  3526  1EBF                     __ptext7:	
  3527 ;; *************** function _isdigit *****************
  3528 ;; Defined at:
  3529 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  c               1    wreg     unsigned char 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  c               1    1[COMMON] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         2       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0
  3546 ;;      Totals:         2       0       0       0       0
  3547 ;;Total ram usage:        2 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_sprintf
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _isdigit
  3558  1EBF                     _isdigit:
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3562                           ;isdigit@c stored from wreg
  3563  1EBF  00F1               	movwf	isdigit@c
  3564  1EC0                     l2496:
  3565  1EC0  01F0               	clrf	_isdigit$880
  3566  1EC1                     l2498:
  3567  1EC1  303A               	movlw	58
  3568  1EC2  0271               	subwf	isdigit@c,w
  3569  1EC3  1803               	skipnc
  3570  1EC4  2EC6               	goto	u3271
  3571  1EC5  2EC7               	goto	u3270
  3572  1EC6                     u3271:
  3573  1EC6  2ECF               	goto	l2504
  3574  1EC7                     u3270:
  3575  1EC7                     l2500:
  3576  1EC7  3030               	movlw	48
  3577  1EC8  0271               	subwf	isdigit@c,w
  3578  1EC9  1C03               	skipc
  3579  1ECA  2ECC               	goto	u3281
  3580  1ECB  2ECD               	goto	u3280
  3581  1ECC                     u3281:
  3582  1ECC  2ECF               	goto	l2504
  3583  1ECD                     u3280:
  3584  1ECD                     l2502:
  3585  1ECD  01F0               	clrf	_isdigit$880
  3586  1ECE  0AF0               	incf	_isdigit$880,f
  3587  1ECF                     l2504:
  3588  1ECF  0C70               	rrf	_isdigit$880,w
  3589  1ED0                     l882:
  3590  1ED0  0008               	return
  3591  1ED1                     __end_of_isdigit:
  3592                           
  3593                           	psect	text8
  3594  08DC                     __ptext8:	
  3595 ;; *************** function _fround *****************
  3596 ;; Defined at:
  3597 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  prec            1    wreg     unsigned char 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  prec            1   39[BANK0 ] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  3   24[BANK0 ] unsigned char 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3611 ;;      Params:         0       3       0       0       0
  3612 ;;      Locals:         0       7       0       0       0
  3613 ;;      Temps:          0       6       0       0       0
  3614 ;;      Totals:         0      16       0       0       0
  3615 ;;Total ram usage:       16 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    2
  3618 ;; This function calls:
  3619 ;;		___bmul
  3620 ;;		___ftmul
  3621 ;;		___lwdiv
  3622 ;;		___lwmod
  3623 ;; This function is called by:
  3624 ;;		_sprintf
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           
  3629                           ;psect for function _fround
  3630  08DC                     _fround:
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3634                           ;fround@prec stored from wreg
  3635  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  3636  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  3637  08DE  00C7               	movwf	fround@prec
  3638  08DF                     l2434:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3641  08DF  306E               	movlw	110
  3642  08E0  0247               	subwf	fround@prec,w
  3643  08E1  1C03               	skipc
  3644  08E2  28E4               	goto	u3201
  3645  08E3  28E5               	goto	u3200
  3646  08E4                     u3201:
  3647  08E4  29BC               	goto	l2444
  3648  08E5                     u3200:
  3649  08E5                     l2436:
  3650                           
  3651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3652  08E5  3003               	movlw	3
  3653  08E6  00BB               	movwf	??_fround
  3654  08E7  083B               	movf	??_fround,w
  3655  08E8  00A4               	movwf	___bmul@multiplicand
  3656  08E9  0847               	movf	fround@prec,w
  3657  08EA  00BC               	movwf	??_fround+1
  3658  08EB  01BD               	clrf	??_fround+2
  3659  08EC  083C               	movf	??_fround+1,w
  3660  08ED  00F2               	movwf	___lwmod@dividend
  3661  08EE  083D               	movf	??_fround+2,w
  3662  08EF  00F3               	movwf	___lwmod@dividend+1
  3663  08F0  3064               	movlw	100
  3664  08F1  00F0               	movwf	___lwmod@divisor
  3665  08F2  3000               	movlw	0
  3666  08F3  00F1               	movwf	___lwmod@divisor+1
  3667  08F4  160A  118A  2161  120A  158A  	fcall	___lwmod
  3668  08F9  0871               	movf	?___lwmod+1,w
  3669  08FA  00F9               	movwf	___lwdiv@dividend+1
  3670  08FB  0870               	movf	?___lwmod,w
  3671  08FC  00F8               	movwf	___lwdiv@dividend
  3672  08FD  300A               	movlw	10
  3673  08FE  00F6               	movwf	___lwdiv@divisor
  3674  08FF  3000               	movlw	0
  3675  0900  00F7               	movwf	___lwdiv@divisor+1
  3676  0901  160A  118A  221B  120A  158A  	fcall	___lwdiv
  3677  0906  0876               	movf	?___lwdiv,w
  3678  0907  160A  158A  26E7  120A  158A  	fcall	___bmul
  3679  090C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3680  090D  0084               	movwf	4
  3681  090E  160A  118A  200A  120A  158A  	fcall	stringdir
  3682  0913  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0914  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0915  00A8               	movwf	___ftmul@f1
  3685  0916  160A  118A  200A  120A  158A  	fcall	stringdir
  3686  091B  00A9               	movwf	___ftmul@f1+1
  3687  091C  160A  118A  200A  120A  158A  	fcall	stringdir
  3688  0921  00AA               	movwf	___ftmul@f1+2
  3689  0922  3003               	movlw	3
  3690  0923  00BE               	movwf	??_fround+3
  3691  0924  083E               	movf	??_fround+3,w
  3692  0925  00A4               	movwf	___bmul@multiplicand
  3693  0926  0847               	movf	fround@prec,w
  3694  0927  00BF               	movwf	??_fround+4
  3695  0928  01C0               	clrf	??_fround+5
  3696  0929  083F               	movf	??_fround+4,w
  3697  092A  00F8               	movwf	___lwdiv@dividend
  3698  092B  0840               	movf	??_fround+5,w
  3699  092C  00F9               	movwf	___lwdiv@dividend+1
  3700  092D  3064               	movlw	100
  3701  092E  00F6               	movwf	___lwdiv@divisor
  3702  092F  3000               	movlw	0
  3703  0930  00F7               	movwf	___lwdiv@divisor+1
  3704  0931  160A  118A  221B  120A  158A  	fcall	___lwdiv
  3705  0936  0876               	movf	?___lwdiv,w
  3706  0937  160A  158A  26E7  120A  158A  	fcall	___bmul
  3707  093C  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3708  093D  0084               	movwf	4
  3709  093E  160A  118A  200A  120A  158A  	fcall	stringdir
  3710  0943  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0944  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0945  00AB               	movwf	___ftmul@f2
  3713  0946  160A  118A  200A  120A  158A  	fcall	stringdir
  3714  094B  00AC               	movwf	___ftmul@f2+1
  3715  094C  160A  118A  200A  120A  158A  	fcall	stringdir
  3716  0951  00AD               	movwf	___ftmul@f2+2
  3717  0952  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3718  0957  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0958  1303               	bcf	3,6	;RP1=0, select bank0
  3720  0959  0828               	movf	?___ftmul,w
  3721  095A  00C4               	movwf	_fround$1075
  3722  095B  0829               	movf	?___ftmul+1,w
  3723  095C  00C5               	movwf	_fround$1075+1
  3724  095D  082A               	movf	?___ftmul+2,w
  3725  095E  00C6               	movwf	_fround$1075+2
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3728  095F  3003               	movlw	3
  3729  0960  00BB               	movwf	??_fround
  3730  0961  083B               	movf	??_fround,w
  3731  0962  00A4               	movwf	___bmul@multiplicand
  3732  0963  0847               	movf	fround@prec,w
  3733  0964  00BC               	movwf	??_fround+1
  3734  0965  01BD               	clrf	??_fround+2
  3735  0966  083C               	movf	??_fround+1,w
  3736  0967  00F2               	movwf	___lwmod@dividend
  3737  0968  083D               	movf	??_fround+2,w
  3738  0969  00F3               	movwf	___lwmod@dividend+1
  3739  096A  300A               	movlw	10
  3740  096B  00F0               	movwf	___lwmod@divisor
  3741  096C  3000               	movlw	0
  3742  096D  00F1               	movwf	___lwmod@divisor+1
  3743  096E  160A  118A  2161  120A  158A  	fcall	___lwmod
  3744  0973  0870               	movf	?___lwmod,w
  3745  0974  160A  158A  26E7  120A  158A  	fcall	___bmul
  3746  0979  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3747  097A  0084               	movwf	4
  3748  097B  160A  118A  200A  120A  158A  	fcall	stringdir
  3749  0980  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0981  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0982  00A8               	movwf	___ftmul@f1
  3752  0983  160A  118A  200A  120A  158A  	fcall	stringdir
  3753  0988  00A9               	movwf	___ftmul@f1+1
  3754  0989  160A  118A  200A  120A  158A  	fcall	stringdir
  3755  098E  00AA               	movwf	___ftmul@f1+2
  3756  098F  0844               	movf	_fround$1075,w
  3757  0990  00AB               	movwf	___ftmul@f2
  3758  0991  0845               	movf	_fround$1075+1,w
  3759  0992  00AC               	movwf	___ftmul@f2+1
  3760  0993  0846               	movf	_fround$1075+2,w
  3761  0994  00AD               	movwf	___ftmul@f2+2
  3762  0995  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3763  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3764  099B  1303               	bcf	3,6	;RP1=0, select bank0
  3765  099C  0828               	movf	?___ftmul,w
  3766  099D  00C1               	movwf	_fround$1076
  3767  099E  0829               	movf	?___ftmul+1,w
  3768  099F  00C2               	movwf	_fround$1076+1
  3769  09A0  082A               	movf	?___ftmul+2,w
  3770  09A1  00C3               	movwf	_fround$1076+2
  3771  09A2                     l2438:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3774  09A2  3000               	movlw	0
  3775  09A3  00A8               	movwf	___ftmul@f1
  3776  09A4  3000               	movlw	0
  3777  09A5  00A9               	movwf	___ftmul@f1+1
  3778  09A6  303F               	movlw	63
  3779  09A7  00AA               	movwf	___ftmul@f1+2
  3780  09A8  0841               	movf	_fround$1076,w
  3781  09A9  00AB               	movwf	___ftmul@f2
  3782  09AA  0842               	movf	_fround$1076+1,w
  3783  09AB  00AC               	movwf	___ftmul@f2+1
  3784  09AC  0843               	movf	_fround$1076+2,w
  3785  09AD  00AD               	movwf	___ftmul@f2+2
  3786  09AE  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3787  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  3788  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  3789  09B5  0828               	movf	?___ftmul,w
  3790  09B6  00B8               	movwf	?_fround
  3791  09B7  0829               	movf	?___ftmul+1,w
  3792  09B8  00B9               	movwf	?_fround+1
  3793  09B9  082A               	movf	?___ftmul+2,w
  3794  09BA  00BA               	movwf	?_fround+2
  3795  09BB  2A7C               	goto	l317
  3796  09BC                     l2444:
  3797  09BC  300B               	movlw	11
  3798  09BD  0247               	subwf	fround@prec,w
  3799  09BE  1C03               	skipc
  3800  09BF  29C1               	goto	u3211
  3801  09C0  29C2               	goto	u3210
  3802  09C1                     u3211:
  3803  09C1  2A49               	goto	l2452
  3804  09C2                     u3210:
  3805  09C2                     l2446:
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3808  09C2  3003               	movlw	3
  3809  09C3  00BB               	movwf	??_fround
  3810  09C4  083B               	movf	??_fround,w
  3811  09C5  00A4               	movwf	___bmul@multiplicand
  3812  09C6  0847               	movf	fround@prec,w
  3813  09C7  00BC               	movwf	??_fround+1
  3814  09C8  01BD               	clrf	??_fround+2
  3815  09C9  083C               	movf	??_fround+1,w
  3816  09CA  00F2               	movwf	___lwmod@dividend
  3817  09CB  083D               	movf	??_fround+2,w
  3818  09CC  00F3               	movwf	___lwmod@dividend+1
  3819  09CD  300A               	movlw	10
  3820  09CE  00F0               	movwf	___lwmod@divisor
  3821  09CF  3000               	movlw	0
  3822  09D0  00F1               	movwf	___lwmod@divisor+1
  3823  09D1  160A  118A  2161  120A  158A  	fcall	___lwmod
  3824  09D6  0870               	movf	?___lwmod,w
  3825  09D7  160A  158A  26E7  120A  158A  	fcall	___bmul
  3826  09DC  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3827  09DD  0084               	movwf	4
  3828  09DE  160A  118A  200A  120A  158A  	fcall	stringdir
  3829  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  3830  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  3831  09E5  00A8               	movwf	___ftmul@f1
  3832  09E6  160A  118A  200A  120A  158A  	fcall	stringdir
  3833  09EB  00A9               	movwf	___ftmul@f1+1
  3834  09EC  160A  118A  200A  120A  158A  	fcall	stringdir
  3835  09F1  00AA               	movwf	___ftmul@f1+2
  3836  09F2  3003               	movlw	3
  3837  09F3  00BE               	movwf	??_fround+3
  3838  09F4  083E               	movf	??_fround+3,w
  3839  09F5  00A4               	movwf	___bmul@multiplicand
  3840  09F6  0847               	movf	fround@prec,w
  3841  09F7  00BF               	movwf	??_fround+4
  3842  09F8  01C0               	clrf	??_fround+5
  3843  09F9  083F               	movf	??_fround+4,w
  3844  09FA  00F8               	movwf	___lwdiv@dividend
  3845  09FB  0840               	movf	??_fround+5,w
  3846  09FC  00F9               	movwf	___lwdiv@dividend+1
  3847  09FD  300A               	movlw	10
  3848  09FE  00F6               	movwf	___lwdiv@divisor
  3849  09FF  3000               	movlw	0
  3850  0A00  00F7               	movwf	___lwdiv@divisor+1
  3851  0A01  160A  118A  221B  120A  158A  	fcall	___lwdiv
  3852  0A06  0876               	movf	?___lwdiv,w
  3853  0A07  160A  158A  26E7  120A  158A  	fcall	___bmul
  3854  0A0C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3855  0A0D  0084               	movwf	4
  3856  0A0E  160A  118A  200A  120A  158A  	fcall	stringdir
  3857  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0A15  00AB               	movwf	___ftmul@f2
  3860  0A16  160A  118A  200A  120A  158A  	fcall	stringdir
  3861  0A1B  00AC               	movwf	___ftmul@f2+1
  3862  0A1C  160A  118A  200A  120A  158A  	fcall	stringdir
  3863  0A21  00AD               	movwf	___ftmul@f2+2
  3864  0A22  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3865  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  3867  0A29  0828               	movf	?___ftmul,w
  3868  0A2A  00C4               	movwf	_fround$1075
  3869  0A2B  0829               	movf	?___ftmul+1,w
  3870  0A2C  00C5               	movwf	_fround$1075+1
  3871  0A2D  082A               	movf	?___ftmul+2,w
  3872  0A2E  00C6               	movwf	_fround$1075+2
  3873  0A2F                     l2448:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3876  0A2F  3000               	movlw	0
  3877  0A30  00A8               	movwf	___ftmul@f1
  3878  0A31  3000               	movlw	0
  3879  0A32  00A9               	movwf	___ftmul@f1+1
  3880  0A33  303F               	movlw	63
  3881  0A34  00AA               	movwf	___ftmul@f1+2
  3882  0A35  0844               	movf	_fround$1075,w
  3883  0A36  00AB               	movwf	___ftmul@f2
  3884  0A37  0845               	movf	_fround$1075+1,w
  3885  0A38  00AC               	movwf	___ftmul@f2+1
  3886  0A39  0846               	movf	_fround$1075+2,w
  3887  0A3A  00AD               	movwf	___ftmul@f2+2
  3888  0A3B  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3889  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0A42  0828               	movf	?___ftmul,w
  3892  0A43  00B8               	movwf	?_fround
  3893  0A44  0829               	movf	?___ftmul+1,w
  3894  0A45  00B9               	movwf	?_fround+1
  3895  0A46  082A               	movf	?___ftmul+2,w
  3896  0A47  00BA               	movwf	?_fround+2
  3897  0A48  2A7C               	goto	l317
  3898  0A49                     l2452:
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3901  0A49  3000               	movlw	0
  3902  0A4A  00A8               	movwf	___ftmul@f1
  3903  0A4B  3000               	movlw	0
  3904  0A4C  00A9               	movwf	___ftmul@f1+1
  3905  0A4D  303F               	movlw	63
  3906  0A4E  00AA               	movwf	___ftmul@f1+2
  3907  0A4F  3003               	movlw	3
  3908  0A50  00BB               	movwf	??_fround
  3909  0A51  083B               	movf	??_fround,w
  3910  0A52  00A4               	movwf	___bmul@multiplicand
  3911  0A53  0847               	movf	fround@prec,w
  3912  0A54  160A  158A  26E7  120A  158A  	fcall	___bmul
  3913  0A59  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3914  0A5A  0084               	movwf	4
  3915  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  3916  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0A62  00AB               	movwf	___ftmul@f2
  3919  0A63  160A  118A  200A  120A  158A  	fcall	stringdir
  3920  0A68  00AC               	movwf	___ftmul@f2+1
  3921  0A69  160A  118A  200A  120A  158A  	fcall	stringdir
  3922  0A6E  00AD               	movwf	___ftmul@f2+2
  3923  0A6F  160A  118A  25EF  120A  158A  	fcall	___ftmul
  3924  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0A76  0828               	movf	?___ftmul,w
  3927  0A77  00B8               	movwf	?_fround
  3928  0A78  0829               	movf	?___ftmul+1,w
  3929  0A79  00B9               	movwf	?_fround+1
  3930  0A7A  082A               	movf	?___ftmul+2,w
  3931  0A7B  00BA               	movwf	?_fround+2
  3932  0A7C                     l317:
  3933  0A7C  0008               	return
  3934  0A7D                     __end_of_fround:
  3935                           
  3936                           	psect	text9
  3937  1161                     __ptext9:	
  3938 ;; *************** function ___lwmod *****************
  3939 ;; Defined at:
  3940 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  divisor         2    0[COMMON] unsigned int 
  3943 ;;  dividend        2    2[COMMON] unsigned int 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  counter         1    5[COMMON] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2    0[COMMON] unsigned int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         4       0       0       0       0
  3956 ;;      Locals:         1       0       0       0       0
  3957 ;;      Temps:          1       0       0       0       0
  3958 ;;      Totals:         6       0       0       0       0
  3959 ;;Total ram usage:        6 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_fround
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function ___lwmod
  3970  1161                     ___lwmod:
  3971  1161                     l2362:	
  3972                           ;incstack = 0
  3973                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3974                           
  3975  1161  0870               	movf	___lwmod@divisor,w
  3976  1162  0471               	iorwf	___lwmod@divisor+1,w
  3977  1163  1903               	btfsc	3,2
  3978  1164  2966               	goto	u3121
  3979  1165  2967               	goto	u3120
  3980  1166                     u3121:
  3981  1166  2996               	goto	l2380
  3982  1167                     u3120:
  3983  1167                     l2364:
  3984  1167  01F5               	clrf	___lwmod@counter
  3985  1168  0AF5               	incf	___lwmod@counter,f
  3986  1169  2975               	goto	l2370
  3987  116A                     l2366:
  3988  116A  3001               	movlw	1
  3989  116B                     u3135:
  3990  116B  1003               	clrc
  3991  116C  0DF0               	rlf	___lwmod@divisor,f
  3992  116D  0DF1               	rlf	___lwmod@divisor+1,f
  3993  116E  3EFF               	addlw	-1
  3994  116F  1D03               	skipz
  3995  1170  296B               	goto	u3135
  3996  1171                     l2368:
  3997  1171  3001               	movlw	1
  3998  1172  00F4               	movwf	??___lwmod
  3999  1173  0874               	movf	??___lwmod,w
  4000  1174  07F5               	addwf	___lwmod@counter,f
  4001  1175                     l2370:
  4002  1175  1FF1               	btfss	___lwmod@divisor+1,7
  4003  1176  2978               	goto	u3141
  4004  1177  2979               	goto	u3140
  4005  1178                     u3141:
  4006  1178  296A               	goto	l2366
  4007  1179                     u3140:
  4008  1179                     l2372:
  4009  1179  0871               	movf	___lwmod@divisor+1,w
  4010  117A  0273               	subwf	___lwmod@dividend+1,w
  4011  117B  1D03               	skipz
  4012  117C  297F               	goto	u3155
  4013  117D  0870               	movf	___lwmod@divisor,w
  4014  117E  0272               	subwf	___lwmod@dividend,w
  4015  117F                     u3155:
  4016  117F  1C03               	skipc
  4017  1180  2982               	goto	u3151
  4018  1181  2983               	goto	u3150
  4019  1182                     u3151:
  4020  1182  2989               	goto	l2376
  4021  1183                     u3150:
  4022  1183                     l2374:
  4023  1183  0870               	movf	___lwmod@divisor,w
  4024  1184  02F2               	subwf	___lwmod@dividend,f
  4025  1185  0871               	movf	___lwmod@divisor+1,w
  4026  1186  1C03               	skipc
  4027  1187  03F3               	decf	___lwmod@dividend+1,f
  4028  1188  02F3               	subwf	___lwmod@dividend+1,f
  4029  1189                     l2376:
  4030  1189  3001               	movlw	1
  4031  118A                     u3165:
  4032  118A  1003               	clrc
  4033  118B  0CF1               	rrf	___lwmod@divisor+1,f
  4034  118C  0CF0               	rrf	___lwmod@divisor,f
  4035  118D  3EFF               	addlw	-1
  4036  118E  1D03               	skipz
  4037  118F  298A               	goto	u3165
  4038  1190                     l2378:
  4039  1190  3001               	movlw	1
  4040  1191  02F5               	subwf	___lwmod@counter,f
  4041  1192  1D03               	btfss	3,2
  4042  1193  2995               	goto	u3171
  4043  1194  2996               	goto	u3170
  4044  1195                     u3171:
  4045  1195  2979               	goto	l2372
  4046  1196                     u3170:
  4047  1196                     l2380:
  4048  1196  0873               	movf	___lwmod@dividend+1,w
  4049  1197  00F1               	movwf	?___lwmod+1
  4050  1198  0872               	movf	___lwmod@dividend,w
  4051  1199  00F0               	movwf	?___lwmod
  4052  119A                     l872:
  4053  119A  0008               	return
  4054  119B                     __end_of___lwmod:
  4055                           
  4056                           	psect	text10
  4057  121B                     __ptext10:	
  4058 ;; *************** function ___lwdiv *****************
  4059 ;; Defined at:
  4060 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  divisor         2    6[COMMON] unsigned int 
  4063 ;;  dividend        2    8[COMMON] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  quotient        2   11[COMMON] unsigned int 
  4066 ;;  counter         1   13[COMMON] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    6[COMMON] unsigned int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4076 ;;      Params:         4       0       0       0       0
  4077 ;;      Locals:         3       0       0       0       0
  4078 ;;      Temps:          1       0       0       0       0
  4079 ;;      Totals:         8       0       0       0       0
  4080 ;;Total ram usage:        8 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_fround
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function ___lwdiv
  4091  121B                     ___lwdiv:
  4092  121B                     l2336:	
  4093                           ;incstack = 0
  4094                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4095                           
  4096  121B  01FB               	clrf	___lwdiv@quotient
  4097  121C  01FC               	clrf	___lwdiv@quotient+1
  4098  121D                     l2338:
  4099  121D  0876               	movf	___lwdiv@divisor,w
  4100  121E  0477               	iorwf	___lwdiv@divisor+1,w
  4101  121F  1903               	btfsc	3,2
  4102  1220  2A22               	goto	u3051
  4103  1221  2A23               	goto	u3050
  4104  1222                     u3051:
  4105  1222  2A5A               	goto	l2358
  4106  1223                     u3050:
  4107  1223                     l2340:
  4108  1223  01FD               	clrf	___lwdiv@counter
  4109  1224  0AFD               	incf	___lwdiv@counter,f
  4110  1225  2A31               	goto	l2346
  4111  1226                     l2342:
  4112  1226  3001               	movlw	1
  4113  1227                     u3065:
  4114  1227  1003               	clrc
  4115  1228  0DF6               	rlf	___lwdiv@divisor,f
  4116  1229  0DF7               	rlf	___lwdiv@divisor+1,f
  4117  122A  3EFF               	addlw	-1
  4118  122B  1D03               	skipz
  4119  122C  2A27               	goto	u3065
  4120  122D                     l2344:
  4121  122D  3001               	movlw	1
  4122  122E  00FA               	movwf	??___lwdiv
  4123  122F  087A               	movf	??___lwdiv,w
  4124  1230  07FD               	addwf	___lwdiv@counter,f
  4125  1231                     l2346:
  4126  1231  1FF7               	btfss	___lwdiv@divisor+1,7
  4127  1232  2A34               	goto	u3071
  4128  1233  2A35               	goto	u3070
  4129  1234                     u3071:
  4130  1234  2A26               	goto	l2342
  4131  1235                     u3070:
  4132  1235                     l2348:
  4133  1235  3001               	movlw	1
  4134  1236                     u3085:
  4135  1236  1003               	clrc
  4136  1237  0DFB               	rlf	___lwdiv@quotient,f
  4137  1238  0DFC               	rlf	___lwdiv@quotient+1,f
  4138  1239  3EFF               	addlw	-1
  4139  123A  1D03               	skipz
  4140  123B  2A36               	goto	u3085
  4141  123C  0877               	movf	___lwdiv@divisor+1,w
  4142  123D  0279               	subwf	___lwdiv@dividend+1,w
  4143  123E  1D03               	skipz
  4144  123F  2A42               	goto	u3095
  4145  1240  0876               	movf	___lwdiv@divisor,w
  4146  1241  0278               	subwf	___lwdiv@dividend,w
  4147  1242                     u3095:
  4148  1242  1C03               	skipc
  4149  1243  2A45               	goto	u3091
  4150  1244  2A46               	goto	u3090
  4151  1245                     u3091:
  4152  1245  2A4D               	goto	l2354
  4153  1246                     u3090:
  4154  1246                     l2350:
  4155  1246  0876               	movf	___lwdiv@divisor,w
  4156  1247  02F8               	subwf	___lwdiv@dividend,f
  4157  1248  0877               	movf	___lwdiv@divisor+1,w
  4158  1249  1C03               	skipc
  4159  124A  03F9               	decf	___lwdiv@dividend+1,f
  4160  124B  02F9               	subwf	___lwdiv@dividend+1,f
  4161  124C                     l2352:
  4162  124C  147B               	bsf	___lwdiv@quotient,0
  4163  124D                     l2354:
  4164  124D  3001               	movlw	1
  4165  124E                     u3105:
  4166  124E  1003               	clrc
  4167  124F  0CF7               	rrf	___lwdiv@divisor+1,f
  4168  1250  0CF6               	rrf	___lwdiv@divisor,f
  4169  1251  3EFF               	addlw	-1
  4170  1252  1D03               	skipz
  4171  1253  2A4E               	goto	u3105
  4172  1254                     l2356:
  4173  1254  3001               	movlw	1
  4174  1255  02FD               	subwf	___lwdiv@counter,f
  4175  1256  1D03               	btfss	3,2
  4176  1257  2A59               	goto	u3111
  4177  1258  2A5A               	goto	u3110
  4178  1259                     u3111:
  4179  1259  2A35               	goto	l2348
  4180  125A                     u3110:
  4181  125A                     l2358:
  4182  125A  087C               	movf	___lwdiv@quotient+1,w
  4183  125B  00F7               	movwf	?___lwdiv+1
  4184  125C  087B               	movf	___lwdiv@quotient,w
  4185  125D  00F6               	movwf	?___lwdiv
  4186  125E                     l862:
  4187  125E  0008               	return
  4188  125F                     __end_of___lwdiv:
  4189                           
  4190                           	psect	text11
  4191  15EF                     __ptext11:	
  4192 ;; *************** function ___ftmul *****************
  4193 ;; Defined at:
  4194 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  f1              3    8[BANK0 ] float 
  4197 ;;  f2              3   11[BANK0 ] float 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  4200 ;;  sign            1   23[BANK0 ] unsigned char 
  4201 ;;  cntr            1   22[BANK0 ] unsigned char 
  4202 ;;  exp             1   18[BANK0 ] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  3    8[BANK0 ] float 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0, pclath, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4212 ;;      Params:         0       6       0       0       0
  4213 ;;      Locals:         0       6       0       0       0
  4214 ;;      Temps:          0       4       0       0       0
  4215 ;;      Totals:         0      16       0       0       0
  4216 ;;Total ram usage:       16 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    1
  4219 ;; This function calls:
  4220 ;;		___ftpack
  4221 ;; This function is called by:
  4222 ;;		_fround
  4223 ;;		_scale
  4224 ;;		_sprintf
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           
  4229                           ;psect for function ___ftmul
  4230  15EF                     ___ftmul:
  4231  15EF                     l2286:	
  4232                           ;incstack = 0
  4233                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4234                           
  4235  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  4236  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  4237  15F1  0828               	movf	___ftmul@f1,w
  4238  15F2  00AE               	movwf	??___ftmul
  4239  15F3  0829               	movf	___ftmul@f1+1,w
  4240  15F4  00AF               	movwf	??___ftmul+1
  4241  15F5  082A               	movf	___ftmul@f1+2,w
  4242  15F6  00B0               	movwf	??___ftmul+2
  4243  15F7  1003               	clrc
  4244  15F8  0D2F               	rlf	??___ftmul+1,w
  4245  15F9  0D30               	rlf	??___ftmul+2,w
  4246  15FA  00B1               	movwf	??___ftmul+3
  4247  15FB  0831               	movf	??___ftmul+3,w
  4248  15FC  00B2               	movwf	___ftmul@exp
  4249  15FD  0832               	movf	___ftmul@exp,w
  4250  15FE  1D03               	btfss	3,2
  4251  15FF  2E01               	goto	u2911
  4252  1600  2E02               	goto	u2910
  4253  1601                     u2911:
  4254  1601  2E09               	goto	l2292
  4255  1602                     u2910:
  4256  1602                     l2288:
  4257  1602  3000               	movlw	0
  4258  1603  00A8               	movwf	?___ftmul
  4259  1604  3000               	movlw	0
  4260  1605  00A9               	movwf	?___ftmul+1
  4261  1606  3000               	movlw	0
  4262  1607  00AA               	movwf	?___ftmul+2
  4263  1608  2ED3               	goto	l729
  4264  1609                     l2292:
  4265  1609  082B               	movf	___ftmul@f2,w
  4266  160A  00AE               	movwf	??___ftmul
  4267  160B  082C               	movf	___ftmul@f2+1,w
  4268  160C  00AF               	movwf	??___ftmul+1
  4269  160D  082D               	movf	___ftmul@f2+2,w
  4270  160E  00B0               	movwf	??___ftmul+2
  4271  160F  1003               	clrc
  4272  1610  0D2F               	rlf	??___ftmul+1,w
  4273  1611  0D30               	rlf	??___ftmul+2,w
  4274  1612  00B1               	movwf	??___ftmul+3
  4275  1613  0831               	movf	??___ftmul+3,w
  4276  1614  00B7               	movwf	___ftmul@sign
  4277  1615  0837               	movf	___ftmul@sign,w
  4278  1616  1D03               	btfss	3,2
  4279  1617  2E19               	goto	u2921
  4280  1618  2E1A               	goto	u2920
  4281  1619                     u2921:
  4282  1619  2E21               	goto	l2298
  4283  161A                     u2920:
  4284  161A                     l2294:
  4285  161A  3000               	movlw	0
  4286  161B  00A8               	movwf	?___ftmul
  4287  161C  3000               	movlw	0
  4288  161D  00A9               	movwf	?___ftmul+1
  4289  161E  3000               	movlw	0
  4290  161F  00AA               	movwf	?___ftmul+2
  4291  1620  2ED3               	goto	l729
  4292  1621                     l2298:
  4293  1621  0837               	movf	___ftmul@sign,w
  4294  1622  3E7B               	addlw	123
  4295  1623  00AE               	movwf	??___ftmul
  4296  1624  082E               	movf	??___ftmul,w
  4297  1625  07B2               	addwf	___ftmul@exp,f
  4298  1626  0828               	movf	___ftmul@f1,w
  4299  1627  00AE               	movwf	??___ftmul
  4300  1628  0829               	movf	___ftmul@f1+1,w
  4301  1629  00AF               	movwf	??___ftmul+1
  4302  162A  082A               	movf	___ftmul@f1+2,w
  4303  162B  00B0               	movwf	??___ftmul+2
  4304  162C  3010               	movlw	16
  4305  162D                     u2935:
  4306  162D  1003               	clrc
  4307  162E  0CB0               	rrf	??___ftmul+2,f
  4308  162F  0CAF               	rrf	??___ftmul+1,f
  4309  1630  0CAE               	rrf	??___ftmul,f
  4310  1631                     u2930:
  4311  1631  3EFF               	addlw	-1
  4312  1632  1D03               	skipz
  4313  1633  2E2D               	goto	u2935
  4314  1634  082E               	movf	??___ftmul,w
  4315  1635  00B1               	movwf	??___ftmul+3
  4316  1636  0831               	movf	??___ftmul+3,w
  4317  1637  00B7               	movwf	___ftmul@sign
  4318  1638  082B               	movf	___ftmul@f2,w
  4319  1639  00AE               	movwf	??___ftmul
  4320  163A  082C               	movf	___ftmul@f2+1,w
  4321  163B  00AF               	movwf	??___ftmul+1
  4322  163C  082D               	movf	___ftmul@f2+2,w
  4323  163D  00B0               	movwf	??___ftmul+2
  4324  163E  3010               	movlw	16
  4325  163F                     u2945:
  4326  163F  1003               	clrc
  4327  1640  0CB0               	rrf	??___ftmul+2,f
  4328  1641  0CAF               	rrf	??___ftmul+1,f
  4329  1642  0CAE               	rrf	??___ftmul,f
  4330  1643                     u2940:
  4331  1643  3EFF               	addlw	-1
  4332  1644  1D03               	skipz
  4333  1645  2E3F               	goto	u2945
  4334  1646  082E               	movf	??___ftmul,w
  4335  1647  00B1               	movwf	??___ftmul+3
  4336  1648  0831               	movf	??___ftmul+3,w
  4337  1649  06B7               	xorwf	___ftmul@sign,f
  4338  164A  3080               	movlw	128
  4339  164B  00AE               	movwf	??___ftmul
  4340  164C  082E               	movf	??___ftmul,w
  4341  164D  05B7               	andwf	___ftmul@sign,f
  4342  164E                     l2300:
  4343  164E  17A9               	bsf	___ftmul@f1+1,7
  4344  164F                     l2302:
  4345  164F  17AC               	bsf	___ftmul@f2+1,7
  4346  1650                     l2304:
  4347  1650  30FF               	movlw	255
  4348  1651  05AB               	andwf	___ftmul@f2,f
  4349  1652  30FF               	movlw	255
  4350  1653  05AC               	andwf	___ftmul@f2+1,f
  4351  1654  3000               	movlw	0
  4352  1655  05AD               	andwf	___ftmul@f2+2,f
  4353  1656                     l2306:
  4354  1656  3000               	movlw	0
  4355  1657  00B3               	movwf	___ftmul@f3_as_product
  4356  1658  3000               	movlw	0
  4357  1659  00B4               	movwf	___ftmul@f3_as_product+1
  4358  165A  3000               	movlw	0
  4359  165B  00B5               	movwf	___ftmul@f3_as_product+2
  4360  165C                     l2308:
  4361  165C  3007               	movlw	7
  4362  165D  00AE               	movwf	??___ftmul
  4363  165E  082E               	movf	??___ftmul,w
  4364  165F  00B6               	movwf	___ftmul@cntr
  4365  1660                     l2310:
  4366  1660  1C28               	btfss	___ftmul@f1,0
  4367  1661  2E63               	goto	u2951
  4368  1662  2E64               	goto	u2950
  4369  1663                     u2951:
  4370  1663  2E74               	goto	l2314
  4371  1664                     u2950:
  4372  1664                     l2312:
  4373  1664  082B               	movf	___ftmul@f2,w
  4374  1665  07B3               	addwf	___ftmul@f3_as_product,f
  4375  1666  082C               	movf	___ftmul@f2+1,w
  4376  1667  1103               	clrz
  4377  1668  1803               	skipnc
  4378  1669  0A2C               	incf	___ftmul@f2+1,w
  4379  166A  1903               	skipnz
  4380  166B  2E6D               	goto	u2961
  4381  166C  07B4               	addwf	___ftmul@f3_as_product+1,f
  4382  166D                     u2961:
  4383  166D  082D               	movf	___ftmul@f2+2,w
  4384  166E  1103               	clrz
  4385  166F  1803               	skipnc
  4386  1670  0A2D               	incf	___ftmul@f2+2,w
  4387  1671  1903               	skipnz
  4388  1672  2E74               	goto	u2962
  4389  1673  07B5               	addwf	___ftmul@f3_as_product+2,f
  4390  1674                     u2962:
  4391  1674                     l2314:
  4392  1674  3001               	movlw	1
  4393  1675                     u2975:
  4394  1675  1003               	clrc
  4395  1676  0CAA               	rrf	___ftmul@f1+2,f
  4396  1677  0CA9               	rrf	___ftmul@f1+1,f
  4397  1678  0CA8               	rrf	___ftmul@f1,f
  4398  1679  3EFF               	addlw	-1
  4399  167A  1D03               	skipz
  4400  167B  2E75               	goto	u2975
  4401  167C                     l2316:
  4402  167C  3001               	movlw	1
  4403  167D                     u2985:
  4404  167D  1003               	clrc
  4405  167E  0DAB               	rlf	___ftmul@f2,f
  4406  167F  0DAC               	rlf	___ftmul@f2+1,f
  4407  1680  0DAD               	rlf	___ftmul@f2+2,f
  4408  1681  3EFF               	addlw	-1
  4409  1682  1D03               	skipz
  4410  1683  2E7D               	goto	u2985
  4411  1684                     l2318:
  4412  1684  3001               	movlw	1
  4413  1685  02B6               	subwf	___ftmul@cntr,f
  4414  1686  1D03               	btfss	3,2
  4415  1687  2E89               	goto	u2991
  4416  1688  2E8A               	goto	u2990
  4417  1689                     u2991:
  4418  1689  2E60               	goto	l2310
  4419  168A                     u2990:
  4420  168A                     l2320:
  4421  168A  3009               	movlw	9
  4422  168B  00AE               	movwf	??___ftmul
  4423  168C  082E               	movf	??___ftmul,w
  4424  168D  00B6               	movwf	___ftmul@cntr
  4425  168E                     l2322:
  4426  168E  1C28               	btfss	___ftmul@f1,0
  4427  168F  2E91               	goto	u3001
  4428  1690  2E92               	goto	u3000
  4429  1691                     u3001:
  4430  1691  2EA2               	goto	l2326
  4431  1692                     u3000:
  4432  1692                     l2324:
  4433  1692  082B               	movf	___ftmul@f2,w
  4434  1693  07B3               	addwf	___ftmul@f3_as_product,f
  4435  1694  082C               	movf	___ftmul@f2+1,w
  4436  1695  1103               	clrz
  4437  1696  1803               	skipnc
  4438  1697  0A2C               	incf	___ftmul@f2+1,w
  4439  1698  1903               	skipnz
  4440  1699  2E9B               	goto	u3011
  4441  169A  07B4               	addwf	___ftmul@f3_as_product+1,f
  4442  169B                     u3011:
  4443  169B  082D               	movf	___ftmul@f2+2,w
  4444  169C  1103               	clrz
  4445  169D  1803               	skipnc
  4446  169E  0A2D               	incf	___ftmul@f2+2,w
  4447  169F  1903               	skipnz
  4448  16A0  2EA2               	goto	u3012
  4449  16A1  07B5               	addwf	___ftmul@f3_as_product+2,f
  4450  16A2                     u3012:
  4451  16A2                     l2326:
  4452  16A2  3001               	movlw	1
  4453  16A3                     u3025:
  4454  16A3  1003               	clrc
  4455  16A4  0CAA               	rrf	___ftmul@f1+2,f
  4456  16A5  0CA9               	rrf	___ftmul@f1+1,f
  4457  16A6  0CA8               	rrf	___ftmul@f1,f
  4458  16A7  3EFF               	addlw	-1
  4459  16A8  1D03               	skipz
  4460  16A9  2EA3               	goto	u3025
  4461  16AA                     l2328:
  4462  16AA  3001               	movlw	1
  4463  16AB                     u3035:
  4464  16AB  1003               	clrc
  4465  16AC  0CB5               	rrf	___ftmul@f3_as_product+2,f
  4466  16AD  0CB4               	rrf	___ftmul@f3_as_product+1,f
  4467  16AE  0CB3               	rrf	___ftmul@f3_as_product,f
  4468  16AF  3EFF               	addlw	-1
  4469  16B0  1D03               	skipz
  4470  16B1  2EAB               	goto	u3035
  4471  16B2                     l2330:
  4472  16B2  3001               	movlw	1
  4473  16B3  02B6               	subwf	___ftmul@cntr,f
  4474  16B4  1D03               	btfss	3,2
  4475  16B5  2EB7               	goto	u3041
  4476  16B6  2EB8               	goto	u3040
  4477  16B7                     u3041:
  4478  16B7  2E8E               	goto	l2322
  4479  16B8                     u3040:
  4480  16B8                     l2332:
  4481  16B8  0833               	movf	___ftmul@f3_as_product,w
  4482  16B9  00F0               	movwf	___ftpack@arg
  4483  16BA  0834               	movf	___ftmul@f3_as_product+1,w
  4484  16BB  00F1               	movwf	___ftpack@arg+1
  4485  16BC  0835               	movf	___ftmul@f3_as_product+2,w
  4486  16BD  00F2               	movwf	___ftpack@arg+2
  4487  16BE  0832               	movf	___ftmul@exp,w
  4488  16BF  00AE               	movwf	??___ftmul
  4489  16C0  082E               	movf	??___ftmul,w
  4490  16C1  00F3               	movwf	___ftpack@exp
  4491  16C2  0837               	movf	___ftmul@sign,w
  4492  16C3  00AF               	movwf	??___ftmul+1
  4493  16C4  082F               	movf	??___ftmul+1,w
  4494  16C5  00F4               	movwf	___ftpack@sign
  4495  16C6  160A  118A  2443  160A  118A  	fcall	___ftpack
  4496  16CB  0870               	movf	?___ftpack,w
  4497  16CC  1283               	bcf	3,5	;RP0=0, select bank0
  4498  16CD  1303               	bcf	3,6	;RP1=0, select bank0
  4499  16CE  00A8               	movwf	?___ftmul
  4500  16CF  0871               	movf	?___ftpack+1,w
  4501  16D0  00A9               	movwf	?___ftmul+1
  4502  16D1  0872               	movf	?___ftpack+2,w
  4503  16D2  00AA               	movwf	?___ftmul+2
  4504  16D3                     l729:
  4505  16D3  0008               	return
  4506  16D4                     __end_of___ftmul:
  4507                           
  4508                           	psect	text12
  4509  1EE7                     __ptext12:	
  4510 ;; *************** function ___bmul *****************
  4511 ;; Defined at:
  4512 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  multiplier      1    wreg     unsigned char 
  4515 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4518 ;;  product         1    6[BANK0 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      unsigned char 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4528 ;;      Params:         0       1       0       0       0
  4529 ;;      Locals:         0       2       0       0       0
  4530 ;;      Temps:          0       1       0       0       0
  4531 ;;      Totals:         0       4       0       0       0
  4532 ;;Total ram usage:        4 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_fround
  4538 ;;		_scale
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function ___bmul
  4544  1EE7                     ___bmul:
  4545                           
  4546                           ;incstack = 0
  4547                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4548                           ;___bmul@multiplier stored from wreg
  4549  1EE7  1283               	bcf	3,5	;RP0=0, select bank0
  4550  1EE8  1303               	bcf	3,6	;RP1=0, select bank0
  4551  1EE9  00A7               	movwf	___bmul@multiplier
  4552  1EEA                     l2120:
  4553  1EEA  01A6               	clrf	___bmul@product
  4554  1EEB                     l2122:
  4555  1EEB  1C27               	btfss	___bmul@multiplier,0
  4556  1EEC  2EEE               	goto	u2461
  4557  1EED  2EEF               	goto	u2460
  4558  1EEE                     u2461:
  4559  1EEE  2EF3               	goto	l2126
  4560  1EEF                     u2460:
  4561  1EEF                     l2124:
  4562  1EEF  0824               	movf	___bmul@multiplicand,w
  4563  1EF0  00A5               	movwf	??___bmul
  4564  1EF1  0825               	movf	??___bmul,w
  4565  1EF2  07A6               	addwf	___bmul@product,f
  4566  1EF3                     l2126:
  4567  1EF3  1003               	clrc
  4568  1EF4  0DA4               	rlf	___bmul@multiplicand,f
  4569  1EF5                     l2128:
  4570  1EF5  1003               	clrc
  4571  1EF6  0CA7               	rrf	___bmul@multiplier,f
  4572  1EF7  0827               	movf	___bmul@multiplier,w
  4573  1EF8  1D03               	btfss	3,2
  4574  1EF9  2EFB               	goto	u2471
  4575  1EFA  2EFC               	goto	u2470
  4576  1EFB                     u2471:
  4577  1EFB  2EEB               	goto	l2122
  4578  1EFC                     u2470:
  4579  1EFC                     l2130:
  4580  1EFC  0826               	movf	___bmul@product,w
  4581  1EFD                     l446:
  4582  1EFD  0008               	return
  4583  1EFE                     __end_of___bmul:
  4584                           
  4585                           	psect	text13
  4586  081F                     __ptext13:	
  4587 ;; *************** function __tdiv_to_l_ *****************
  4588 ;; Defined at:
  4589 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  f1              3    0[COMMON] float 
  4592 ;;  f2              3    3[COMMON] float 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  quot            4    0[BANK0 ] unsigned long 
  4595 ;;  exp1            1    5[BANK0 ] unsigned char 
  4596 ;;  cntr            1    4[BANK0 ] unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  4    0[COMMON] unsigned long 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4606 ;;      Params:         6       0       0       0       0
  4607 ;;      Locals:         0       6       0       0       0
  4608 ;;      Temps:          4       0       0       0       0
  4609 ;;      Totals:        10       6       0       0       0
  4610 ;;Total ram usage:       16 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_sprintf
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function __tdiv_to_l_
  4621  081F                     __tdiv_to_l_:
  4622  081F                     l2508:	
  4623                           ;incstack = 0
  4624                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4625                           
  4626  081F  0870               	movf	__tdiv_to_l_@f1,w
  4627  0820  00F6               	movwf	??__tdiv_to_l_
  4628  0821  0871               	movf	__tdiv_to_l_@f1+1,w
  4629  0822  00F7               	movwf	??__tdiv_to_l_+1
  4630  0823  0872               	movf	__tdiv_to_l_@f1+2,w
  4631  0824  00F8               	movwf	??__tdiv_to_l_+2
  4632  0825  1003               	clrc
  4633  0826  0D77               	rlf	??__tdiv_to_l_+1,w
  4634  0827  0D78               	rlf	??__tdiv_to_l_+2,w
  4635  0828  00F9               	movwf	??__tdiv_to_l_+3
  4636  0829  0879               	movf	??__tdiv_to_l_+3,w
  4637  082A  1283               	bcf	3,5	;RP0=0, select bank0
  4638  082B  1303               	bcf	3,6	;RP1=0, select bank0
  4639  082C  00A5               	movwf	__tdiv_to_l_@exp1
  4640  082D  0825               	movf	__tdiv_to_l_@exp1,w
  4641  082E  1D03               	btfss	3,2
  4642  082F  2831               	goto	u3291
  4643  0830  2832               	goto	u3290
  4644  0831                     u3291:
  4645  0831  283B               	goto	l2514
  4646  0832                     u3290:
  4647  0832                     l2510:
  4648  0832  3000               	movlw	0
  4649  0833  00F3               	movwf	?__tdiv_to_l_+3
  4650  0834  3000               	movlw	0
  4651  0835  00F2               	movwf	?__tdiv_to_l_+2
  4652  0836  3000               	movlw	0
  4653  0837  00F1               	movwf	?__tdiv_to_l_+1
  4654  0838  3000               	movlw	0
  4655  0839  00F0               	movwf	?__tdiv_to_l_
  4656  083A  28DB               	goto	l705
  4657  083B                     l2514:
  4658  083B  0873               	movf	__tdiv_to_l_@f2,w
  4659  083C  00F6               	movwf	??__tdiv_to_l_
  4660  083D  0874               	movf	__tdiv_to_l_@f2+1,w
  4661  083E  00F7               	movwf	??__tdiv_to_l_+1
  4662  083F  0875               	movf	__tdiv_to_l_@f2+2,w
  4663  0840  00F8               	movwf	??__tdiv_to_l_+2
  4664  0841  1003               	clrc
  4665  0842  0D77               	rlf	??__tdiv_to_l_+1,w
  4666  0843  0D78               	rlf	??__tdiv_to_l_+2,w
  4667  0844  00F9               	movwf	??__tdiv_to_l_+3
  4668  0845  0879               	movf	??__tdiv_to_l_+3,w
  4669  0846  00A4               	movwf	__tdiv_to_l_@cntr
  4670  0847  0824               	movf	__tdiv_to_l_@cntr,w
  4671  0848  1D03               	btfss	3,2
  4672  0849  284B               	goto	u3301
  4673  084A  284C               	goto	u3300
  4674  084B                     u3301:
  4675  084B  284D               	goto	l706
  4676  084C                     u3300:
  4677  084C  2832               	goto	l2510
  4678  084D                     l706:
  4679  084D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4680  084E                     l2520:
  4681  084E  30FF               	movlw	255
  4682  084F  05F0               	andwf	__tdiv_to_l_@f1,f
  4683  0850  30FF               	movlw	255
  4684  0851  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4685  0852  3000               	movlw	0
  4686  0853  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4687  0854                     l2522:
  4688  0854  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4689  0855  30FF               	movlw	255
  4690  0856  05F3               	andwf	__tdiv_to_l_@f2,f
  4691  0857  30FF               	movlw	255
  4692  0858  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4693  0859  3000               	movlw	0
  4694  085A  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4695  085B  3000               	movlw	0
  4696  085C  00A3               	movwf	__tdiv_to_l_@quot+3
  4697  085D  3000               	movlw	0
  4698  085E  00A2               	movwf	__tdiv_to_l_@quot+2
  4699  085F  3000               	movlw	0
  4700  0860  00A1               	movwf	__tdiv_to_l_@quot+1
  4701  0861  3000               	movlw	0
  4702  0862  00A0               	movwf	__tdiv_to_l_@quot
  4703  0863                     l2524:
  4704  0863  307F               	movlw	127
  4705  0864  02A5               	subwf	__tdiv_to_l_@exp1,f
  4706  0865                     l2526:
  4707  0865  3098               	movlw	152
  4708  0866  0724               	addwf	__tdiv_to_l_@cntr,w
  4709  0867  00F6               	movwf	??__tdiv_to_l_
  4710  0868  0876               	movf	??__tdiv_to_l_,w
  4711  0869  02A5               	subwf	__tdiv_to_l_@exp1,f
  4712  086A  3018               	movlw	24
  4713  086B  00F6               	movwf	??__tdiv_to_l_
  4714  086C  0876               	movf	??__tdiv_to_l_,w
  4715  086D  00A4               	movwf	__tdiv_to_l_@cntr
  4716  086E                     l2528:
  4717  086E  3001               	movlw	1
  4718  086F  00F6               	movwf	??__tdiv_to_l_
  4719  0870                     u3315:
  4720  0870  1003               	clrc
  4721  0871  0DA0               	rlf	__tdiv_to_l_@quot,f
  4722  0872  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4723  0873  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4724  0874  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4725  0875  0BF6               	decfsz	??__tdiv_to_l_,f
  4726  0876  2870               	goto	u3315
  4727  0877                     l2530:
  4728  0877  0875               	movf	__tdiv_to_l_@f2+2,w
  4729  0878  0272               	subwf	__tdiv_to_l_@f1+2,w
  4730  0879  1D03               	skipz
  4731  087A  2881               	goto	u3325
  4732  087B  0874               	movf	__tdiv_to_l_@f2+1,w
  4733  087C  0271               	subwf	__tdiv_to_l_@f1+1,w
  4734  087D  1D03               	skipz
  4735  087E  2881               	goto	u3325
  4736  087F  0873               	movf	__tdiv_to_l_@f2,w
  4737  0880  0270               	subwf	__tdiv_to_l_@f1,w
  4738  0881                     u3325:
  4739  0881  1C03               	skipc
  4740  0882  2884               	goto	u3321
  4741  0883  2885               	goto	u3320
  4742  0884                     u3321:
  4743  0884  2890               	goto	l2536
  4744  0885                     u3320:
  4745  0885                     l2532:
  4746  0885  0873               	movf	__tdiv_to_l_@f2,w
  4747  0886  02F0               	subwf	__tdiv_to_l_@f1,f
  4748  0887  0874               	movf	__tdiv_to_l_@f2+1,w
  4749  0888  1C03               	skipc
  4750  0889  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4751  088A  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4752  088B  0875               	movf	__tdiv_to_l_@f2+2,w
  4753  088C  1C03               	skipc
  4754  088D  0A75               	incf	__tdiv_to_l_@f2+2,w
  4755  088E  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4756  088F                     l2534:
  4757  088F  1420               	bsf	__tdiv_to_l_@quot,0
  4758  0890                     l2536:
  4759  0890  3001               	movlw	1
  4760  0891                     u3335:
  4761  0891  1003               	clrc
  4762  0892  0DF0               	rlf	__tdiv_to_l_@f1,f
  4763  0893  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4764  0894  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4765  0895  3EFF               	addlw	-1
  4766  0896  1D03               	skipz
  4767  0897  2891               	goto	u3335
  4768  0898                     l2538:
  4769  0898  3001               	movlw	1
  4770  0899  02A4               	subwf	__tdiv_to_l_@cntr,f
  4771  089A  1D03               	btfss	3,2
  4772  089B  289D               	goto	u3341
  4773  089C  289E               	goto	u3340
  4774  089D                     u3341:
  4775  089D  286E               	goto	l2528
  4776  089E                     u3340:
  4777  089E                     l709:
  4778  089E  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4779  089F  28A1               	goto	u3351
  4780  08A0  28A2               	goto	u3350
  4781  08A1                     u3351:
  4782  08A1  28BC               	goto	l2548
  4783  08A2                     u3350:
  4784  08A2                     l2540:
  4785  08A2  0825               	movf	__tdiv_to_l_@exp1,w
  4786  08A3  3A80               	xorlw	128
  4787  08A4  3E97               	addlw	151
  4788  08A5  1803               	skipnc
  4789  08A6  28A8               	goto	u3361
  4790  08A7  28A9               	goto	u3360
  4791  08A8                     u3361:
  4792  08A8  28AA               	goto	l2546
  4793  08A9                     u3360:
  4794  08A9  2832               	goto	l2510
  4795  08AA                     l2546:
  4796  08AA  3001               	movlw	1
  4797  08AB                     u3375:
  4798  08AB  1003               	clrc
  4799  08AC  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4800  08AD  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4801  08AE  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4802  08AF  0CA0               	rrf	__tdiv_to_l_@quot,f
  4803  08B0  3EFF               	addlw	-1
  4804  08B1  1D03               	skipz
  4805  08B2  28AB               	goto	u3375
  4806  08B3  3001               	movlw	1
  4807  08B4  00F6               	movwf	??__tdiv_to_l_
  4808  08B5  0876               	movf	??__tdiv_to_l_,w
  4809  08B6  07A5               	addwf	__tdiv_to_l_@exp1,f
  4810  08B7  1D03               	btfss	3,2
  4811  08B8  28BA               	goto	u3381
  4812  08B9  28BB               	goto	u3380
  4813  08BA                     u3381:
  4814  08BA  28AA               	goto	l2546
  4815  08BB                     u3380:
  4816  08BB  28D3               	goto	l2556
  4817  08BC                     l2548:
  4818  08BC  3018               	movlw	24
  4819  08BD  0225               	subwf	__tdiv_to_l_@exp1,w
  4820  08BE  1C03               	skipc
  4821  08BF  28C1               	goto	u3391
  4822  08C0  28C2               	goto	u3390
  4823  08C1                     u3391:
  4824  08C1  28CE               	goto	l716
  4825  08C2                     u3390:
  4826  08C2  2832               	goto	l2510
  4827  08C3                     l2554:
  4828  08C3  3001               	movlw	1
  4829  08C4  00F6               	movwf	??__tdiv_to_l_
  4830  08C5                     u3405:
  4831  08C5  1003               	clrc
  4832  08C6  0DA0               	rlf	__tdiv_to_l_@quot,f
  4833  08C7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4834  08C8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4835  08C9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4836  08CA  0BF6               	decfsz	??__tdiv_to_l_,f
  4837  08CB  28C5               	goto	u3405
  4838  08CC  3001               	movlw	1
  4839  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  4840  08CE                     l716:
  4841  08CE  0825               	movf	__tdiv_to_l_@exp1,w
  4842  08CF  1D03               	btfss	3,2
  4843  08D0  28D2               	goto	u3411
  4844  08D1  28D3               	goto	u3410
  4845  08D2                     u3411:
  4846  08D2  28C3               	goto	l2554
  4847  08D3                     u3410:
  4848  08D3                     l2556:
  4849  08D3  0823               	movf	__tdiv_to_l_@quot+3,w
  4850  08D4  00F3               	movwf	?__tdiv_to_l_+3
  4851  08D5  0822               	movf	__tdiv_to_l_@quot+2,w
  4852  08D6  00F2               	movwf	?__tdiv_to_l_+2
  4853  08D7  0821               	movf	__tdiv_to_l_@quot+1,w
  4854  08D8  00F1               	movwf	?__tdiv_to_l_+1
  4855  08D9  0820               	movf	__tdiv_to_l_@quot,w
  4856  08DA  00F0               	movwf	?__tdiv_to_l_
  4857  08DB                     l705:
  4858  08DB  0008               	return
  4859  08DC                     __end_of__tdiv_to_l_:
  4860                           
  4861                           	psect	text14
  4862  16D4                     __ptext14:	
  4863 ;; *************** function __div_to_l_ *****************
  4864 ;; Defined at:
  4865 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  f1              3    0[COMMON] unsigned long 
  4868 ;;  f2              3    3[COMMON] unsigned long 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  quot            4    0[BANK0 ] unsigned long 
  4871 ;;  exp1            1    5[BANK0 ] unsigned char 
  4872 ;;  cntr            1    4[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  4    0[COMMON] unsigned long 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4882 ;;      Params:         6       0       0       0       0
  4883 ;;      Locals:         0       6       0       0       0
  4884 ;;      Temps:          8       0       0       0       0
  4885 ;;      Totals:        14       6       0       0       0
  4886 ;;Total ram usage:       20 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_sprintf
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           
  4896                           ;psect for function __div_to_l_
  4897  16D4                     __div_to_l_:
  4898  16D4                     l2560:	
  4899                           ;incstack = 0
  4900                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4901                           
  4902  16D4  3070               	movlw	low (__div_to_l_@f1| 0)
  4903  16D5  0084               	movwf	4
  4904  16D6  0800               	movf	0,w
  4905  16D7  00F6               	movwf	??__div_to_l_
  4906  16D8  0A84               	incf	4,f
  4907  16D9  0800               	movf	0,w
  4908  16DA  00F7               	movwf	??__div_to_l_+1
  4909  16DB  0A84               	incf	4,f
  4910  16DC  0800               	movf	0,w
  4911  16DD  00F8               	movwf	??__div_to_l_+2
  4912  16DE  0A84               	incf	4,f
  4913  16DF  0800               	movf	0,w
  4914  16E0  00F9               	movwf	??__div_to_l_+3
  4915  16E1  1003               	clrc
  4916  16E2  0D78               	rlf	??__div_to_l_+2,w
  4917  16E3  0D79               	rlf	??__div_to_l_+3,w
  4918  16E4  00FA               	movwf	??__div_to_l_+4
  4919  16E5  087A               	movf	??__div_to_l_+4,w
  4920  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  4921  16E7  1303               	bcf	3,6	;RP1=0, select bank0
  4922  16E8  00A5               	movwf	__div_to_l_@exp1
  4923  16E9  0825               	movf	__div_to_l_@exp1,w
  4924  16EA  1D03               	btfss	3,2
  4925  16EB  2EED               	goto	u3421
  4926  16EC  2EEE               	goto	u3420
  4927  16ED                     u3421:
  4928  16ED  2EF7               	goto	l2566
  4929  16EE                     u3420:
  4930  16EE                     l2562:
  4931  16EE  3000               	movlw	0
  4932  16EF  00F3               	movwf	?__div_to_l_+3
  4933  16F0  3000               	movlw	0
  4934  16F1  00F2               	movwf	?__div_to_l_+2
  4935  16F2  3000               	movlw	0
  4936  16F3  00F1               	movwf	?__div_to_l_+1
  4937  16F4  3000               	movlw	0
  4938  16F5  00F0               	movwf	?__div_to_l_
  4939  16F6  2FFF               	goto	l626
  4940  16F7                     l2566:
  4941  16F7  3073               	movlw	low (__div_to_l_@f2| 0)
  4942  16F8  0084               	movwf	4
  4943  16F9  0800               	movf	0,w
  4944  16FA  00F6               	movwf	??__div_to_l_
  4945  16FB  0A84               	incf	4,f
  4946  16FC  0800               	movf	0,w
  4947  16FD  00F7               	movwf	??__div_to_l_+1
  4948  16FE  0A84               	incf	4,f
  4949  16FF  0800               	movf	0,w
  4950  1700  00F8               	movwf	??__div_to_l_+2
  4951  1701  0A84               	incf	4,f
  4952  1702  0800               	movf	0,w
  4953  1703  00F9               	movwf	??__div_to_l_+3
  4954  1704  1003               	clrc
  4955  1705  0D78               	rlf	??__div_to_l_+2,w
  4956  1706  0D79               	rlf	??__div_to_l_+3,w
  4957  1707  00FA               	movwf	??__div_to_l_+4
  4958  1708  087A               	movf	??__div_to_l_+4,w
  4959  1709  00A4               	movwf	__div_to_l_@cntr
  4960  170A  0824               	movf	__div_to_l_@cntr,w
  4961  170B  1D03               	btfss	3,2
  4962  170C  2F0E               	goto	u3431
  4963  170D  2F0F               	goto	u3430
  4964  170E                     u3431:
  4965  170E  2F10               	goto	l2572
  4966  170F                     u3430:
  4967  170F  2EEE               	goto	l2562
  4968  1710                     l2572:
  4969  1710  3070               	movlw	low (__div_to_l_@f1| 0)
  4970  1711  0084               	movwf	4
  4971  1712  3000               	movlw	0
  4972  1713  0480               	iorwf	0,f
  4973  1714  0A84               	incf	4,f
  4974  1715  3000               	movlw	0
  4975  1716  0480               	iorwf	0,f
  4976  1717  0A84               	incf	4,f
  4977  1718  3080               	movlw	128
  4978  1719  0480               	iorwf	0,f
  4979  171A  0A84               	incf	4,f
  4980  171B  3000               	movlw	0
  4981  171C  0480               	iorwf	0,f
  4982  171D  3070               	movlw	low (__div_to_l_@f1| 0)
  4983  171E  0084               	movwf	4
  4984  171F  30FF               	movlw	255
  4985  1720  0580               	andwf	0,f
  4986  1721  0A84               	incf	4,f
  4987  1722  30FF               	movlw	255
  4988  1723  0580               	andwf	0,f
  4989  1724  0A84               	incf	4,f
  4990  1725  30FF               	movlw	255
  4991  1726  0580               	andwf	0,f
  4992  1727  0A84               	incf	4,f
  4993  1728  3000               	movlw	0
  4994  1729  0580               	andwf	0,f
  4995  172A  3073               	movlw	low (__div_to_l_@f2| 0)
  4996  172B  0084               	movwf	4
  4997  172C  3000               	movlw	0
  4998  172D  0480               	iorwf	0,f
  4999  172E  0A84               	incf	4,f
  5000  172F  3000               	movlw	0
  5001  1730  0480               	iorwf	0,f
  5002  1731  0A84               	incf	4,f
  5003  1732  3080               	movlw	128
  5004  1733  0480               	iorwf	0,f
  5005  1734  0A84               	incf	4,f
  5006  1735  3000               	movlw	0
  5007  1736  0480               	iorwf	0,f
  5008  1737  3073               	movlw	low (__div_to_l_@f2| 0)
  5009  1738  0084               	movwf	4
  5010  1739  30FF               	movlw	255
  5011  173A  0580               	andwf	0,f
  5012  173B  0A84               	incf	4,f
  5013  173C  30FF               	movlw	255
  5014  173D  0580               	andwf	0,f
  5015  173E  0A84               	incf	4,f
  5016  173F  30FF               	movlw	255
  5017  1740  0580               	andwf	0,f
  5018  1741  0A84               	incf	4,f
  5019  1742  3000               	movlw	0
  5020  1743  0580               	andwf	0,f
  5021  1744                     l2574:
  5022  1744  3000               	movlw	0
  5023  1745  00A3               	movwf	__div_to_l_@quot+3
  5024  1746  3000               	movlw	0
  5025  1747  00A2               	movwf	__div_to_l_@quot+2
  5026  1748  3000               	movlw	0
  5027  1749  00A1               	movwf	__div_to_l_@quot+1
  5028  174A  3000               	movlw	0
  5029  174B  00A0               	movwf	__div_to_l_@quot
  5030  174C                     l2576:
  5031  174C  307F               	movlw	127
  5032  174D  02A5               	subwf	__div_to_l_@exp1,f
  5033  174E                     l2578:
  5034  174E  30A0               	movlw	160
  5035  174F  0724               	addwf	__div_to_l_@cntr,w
  5036  1750  00F6               	movwf	??__div_to_l_
  5037  1751  0876               	movf	??__div_to_l_,w
  5038  1752  02A5               	subwf	__div_to_l_@exp1,f
  5039  1753                     l2580:
  5040  1753  3020               	movlw	32
  5041  1754  00F6               	movwf	??__div_to_l_
  5042  1755  0876               	movf	??__div_to_l_,w
  5043  1756  00A4               	movwf	__div_to_l_@cntr
  5044  1757                     l2582:
  5045  1757  3001               	movlw	1
  5046  1758  00F6               	movwf	??__div_to_l_
  5047  1759                     u3445:
  5048  1759  1003               	clrc
  5049  175A  0DA0               	rlf	__div_to_l_@quot,f
  5050  175B  0DA1               	rlf	__div_to_l_@quot+1,f
  5051  175C  0DA2               	rlf	__div_to_l_@quot+2,f
  5052  175D  0DA3               	rlf	__div_to_l_@quot+3,f
  5053  175E  0BF6               	decfsz	??__div_to_l_,f
  5054  175F  2F59               	goto	u3445
  5055  1760                     l2584:
  5056  1760  3073               	movlw	low (__div_to_l_@f2| 0)
  5057  1761  0084               	movwf	4
  5058  1762  0800               	movf	0,w
  5059  1763  00F6               	movwf	??__div_to_l_
  5060  1764  0A84               	incf	4,f
  5061  1765  0800               	movf	0,w
  5062  1766  00F7               	movwf	??__div_to_l_+1
  5063  1767  0A84               	incf	4,f
  5064  1768  0800               	movf	0,w
  5065  1769  00F8               	movwf	??__div_to_l_+2
  5066  176A  0A84               	incf	4,f
  5067  176B  0800               	movf	0,w
  5068  176C  00F9               	movwf	??__div_to_l_+3
  5069  176D  3070               	movlw	low (__div_to_l_@f1| 0)
  5070  176E  0084               	movwf	4
  5071  176F  0800               	movf	0,w
  5072  1770  00FA               	movwf	??__div_to_l_+4
  5073  1771  0A84               	incf	4,f
  5074  1772  0800               	movf	0,w
  5075  1773  00FB               	movwf	??__div_to_l_+5
  5076  1774  0A84               	incf	4,f
  5077  1775  0800               	movf	0,w
  5078  1776  00FC               	movwf	??__div_to_l_+6
  5079  1777  0A84               	incf	4,f
  5080  1778  0800               	movf	0,w
  5081  1779  00FD               	movwf	??__div_to_l_+7
  5082  177A  0879               	movf	??__div_to_l_+3,w
  5083  177B  027D               	subwf	??__div_to_l_+7,w
  5084  177C  1D03               	skipz
  5085  177D  2F88               	goto	u3455
  5086  177E  0878               	movf	??__div_to_l_+2,w
  5087  177F  027C               	subwf	??__div_to_l_+6,w
  5088  1780  1D03               	skipz
  5089  1781  2F88               	goto	u3455
  5090  1782  0877               	movf	??__div_to_l_+1,w
  5091  1783  027B               	subwf	??__div_to_l_+5,w
  5092  1784  1D03               	skipz
  5093  1785  2F88               	goto	u3455
  5094  1786  0876               	movf	??__div_to_l_,w
  5095  1787  027A               	subwf	??__div_to_l_+4,w
  5096  1788                     u3455:
  5097  1788  1C03               	skipc
  5098  1789  2F8B               	goto	u3451
  5099  178A  2F8C               	goto	u3450
  5100  178B                     u3451:
  5101  178B  2FAF               	goto	l629
  5102  178C                     u3450:
  5103  178C                     l2586:
  5104  178C  3073               	movlw	low (__div_to_l_@f2| 0)
  5105  178D  0084               	movwf	4
  5106  178E  0800               	movf	0,w
  5107  178F  00F6               	movwf	??__div_to_l_
  5108  1790  0A84               	incf	4,f
  5109  1791  0800               	movf	0,w
  5110  1792  00F7               	movwf	??__div_to_l_+1
  5111  1793  0A84               	incf	4,f
  5112  1794  0800               	movf	0,w
  5113  1795  00F8               	movwf	??__div_to_l_+2
  5114  1796  0A84               	incf	4,f
  5115  1797  0800               	movf	0,w
  5116  1798  00F9               	movwf	??__div_to_l_+3
  5117  1799  3070               	movlw	low (__div_to_l_@f1| 0)
  5118  179A  0084               	movwf	4
  5119  179B  0876               	movf	??__div_to_l_,w
  5120  179C  0280               	subwf	0,f
  5121  179D  0A84               	incf	4,f
  5122  179E  0877               	movf	??__div_to_l_+1,w
  5123  179F  1C03               	skipc
  5124  17A0  0F77               	incfsz	??__div_to_l_+1,w
  5125  17A1  0280               	subwf	0,f
  5126  17A2  0A84               	incf	4,f
  5127  17A3  0878               	movf	??__div_to_l_+2,w
  5128  17A4  1C03               	skipc
  5129  17A5  0F78               	incfsz	??__div_to_l_+2,w
  5130  17A6  0280               	subwf	0,f
  5131  17A7  0A84               	incf	4,f
  5132  17A8  0879               	movf	??__div_to_l_+3,w
  5133  17A9  1C03               	skipc
  5134  17AA  0A79               	incf	??__div_to_l_+3,w
  5135  17AB  0280               	subwf	0,f
  5136  17AC  3003               	movlw	3
  5137  17AD  0284               	subwf	4,f
  5138  17AE                     l2588:
  5139  17AE  1420               	bsf	__div_to_l_@quot,0
  5140  17AF                     l629:
  5141  17AF  3070               	movlw	low (__div_to_l_@f1| 0)
  5142  17B0  0084               	movwf	4
  5143  17B1  1003               	clrc
  5144  17B2  0D80               	rlf	0,f
  5145  17B3  0A84               	incf	4,f
  5146  17B4  0D80               	rlf	0,f
  5147  17B5  0A84               	incf	4,f
  5148  17B6  0D80               	rlf	0,f
  5149  17B7  0A84               	incf	4,f
  5150  17B8  0D80               	rlf	0,f
  5151  17B9  0384               	decf	4,f
  5152  17BA  0384               	decf	4,f
  5153  17BB  0384               	decf	4,f
  5154  17BC                     l2590:
  5155  17BC  3001               	movlw	1
  5156  17BD  02A4               	subwf	__div_to_l_@cntr,f
  5157  17BE  1D03               	btfss	3,2
  5158  17BF  2FC1               	goto	u3461
  5159  17C0  2FC2               	goto	u3460
  5160  17C1                     u3461:
  5161  17C1  2F57               	goto	l2582
  5162  17C2                     u3460:
  5163  17C2                     l630:
  5164  17C2  1FA5               	btfss	__div_to_l_@exp1,7
  5165  17C3  2FC5               	goto	u3471
  5166  17C4  2FC6               	goto	u3470
  5167  17C5                     u3471:
  5168  17C5  2FE0               	goto	l2600
  5169  17C6                     u3470:
  5170  17C6                     l2592:
  5171  17C6  0825               	movf	__div_to_l_@exp1,w
  5172  17C7  3A80               	xorlw	128
  5173  17C8  3E9F               	addlw	159
  5174  17C9  1803               	skipnc
  5175  17CA  2FCC               	goto	u3481
  5176  17CB  2FCD               	goto	u3480
  5177  17CC                     u3481:
  5178  17CC  2FCE               	goto	l2598
  5179  17CD                     u3480:
  5180  17CD  2EEE               	goto	l2562
  5181  17CE                     l2598:
  5182  17CE  3001               	movlw	1
  5183  17CF                     u3495:
  5184  17CF  1003               	clrc
  5185  17D0  0CA3               	rrf	__div_to_l_@quot+3,f
  5186  17D1  0CA2               	rrf	__div_to_l_@quot+2,f
  5187  17D2  0CA1               	rrf	__div_to_l_@quot+1,f
  5188  17D3  0CA0               	rrf	__div_to_l_@quot,f
  5189  17D4  3EFF               	addlw	-1
  5190  17D5  1D03               	skipz
  5191  17D6  2FCF               	goto	u3495
  5192  17D7  3001               	movlw	1
  5193  17D8  00F6               	movwf	??__div_to_l_
  5194  17D9  0876               	movf	??__div_to_l_,w
  5195  17DA  07A5               	addwf	__div_to_l_@exp1,f
  5196  17DB  1D03               	btfss	3,2
  5197  17DC  2FDE               	goto	u3501
  5198  17DD  2FDF               	goto	u3500
  5199  17DE                     u3501:
  5200  17DE  2FCE               	goto	l2598
  5201  17DF                     u3500:
  5202  17DF  2FF7               	goto	l2608
  5203  17E0                     l2600:
  5204  17E0  3020               	movlw	32
  5205  17E1  0225               	subwf	__div_to_l_@exp1,w
  5206  17E2  1C03               	skipc
  5207  17E3  2FE5               	goto	u3511
  5208  17E4  2FE6               	goto	u3510
  5209  17E5                     u3511:
  5210  17E5  2FF2               	goto	l637
  5211  17E6                     u3510:
  5212  17E6  2EEE               	goto	l2562
  5213  17E7                     l2606:
  5214  17E7  3001               	movlw	1
  5215  17E8  00F6               	movwf	??__div_to_l_
  5216  17E9                     u3525:
  5217  17E9  1003               	clrc
  5218  17EA  0DA0               	rlf	__div_to_l_@quot,f
  5219  17EB  0DA1               	rlf	__div_to_l_@quot+1,f
  5220  17EC  0DA2               	rlf	__div_to_l_@quot+2,f
  5221  17ED  0DA3               	rlf	__div_to_l_@quot+3,f
  5222  17EE  0BF6               	decfsz	??__div_to_l_,f
  5223  17EF  2FE9               	goto	u3525
  5224  17F0  3001               	movlw	1
  5225  17F1  02A5               	subwf	__div_to_l_@exp1,f
  5226  17F2                     l637:
  5227  17F2  0825               	movf	__div_to_l_@exp1,w
  5228  17F3  1D03               	btfss	3,2
  5229  17F4  2FF6               	goto	u3531
  5230  17F5  2FF7               	goto	u3530
  5231  17F6                     u3531:
  5232  17F6  2FE7               	goto	l2606
  5233  17F7                     u3530:
  5234  17F7                     l2608:
  5235  17F7  0823               	movf	__div_to_l_@quot+3,w
  5236  17F8  00F3               	movwf	?__div_to_l_+3
  5237  17F9  0822               	movf	__div_to_l_@quot+2,w
  5238  17FA  00F2               	movwf	?__div_to_l_+2
  5239  17FB  0821               	movf	__div_to_l_@quot+1,w
  5240  17FC  00F1               	movwf	?__div_to_l_+1
  5241  17FD  0820               	movf	__div_to_l_@quot,w
  5242  17FE  00F0               	movwf	?__div_to_l_
  5243  17FF                     l626:
  5244  17FF  0008               	return
  5245  1800                     __end_of__div_to_l_:
  5246                           
  5247                           	psect	text15
  5248  1F81                     __ptext15:	
  5249 ;; *************** function ___wmul *****************
  5250 ;; Defined at:
  5251 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  multiplier      2    0[COMMON] unsigned int 
  5254 ;;  multiplicand    2    2[COMMON] unsigned int 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  product         2    4[COMMON] unsigned int 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  2    0[COMMON] unsigned int 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5266 ;;      Params:         4       0       0       0       0
  5267 ;;      Locals:         2       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0
  5269 ;;      Totals:         6       0       0       0       0
  5270 ;;Total ram usage:        6 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_sprintf
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function ___wmul
  5281  1F81                     ___wmul:
  5282  1F81                     l2612:	
  5283                           ;incstack = 0
  5284                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5285                           
  5286  1F81  01F4               	clrf	___wmul@product
  5287  1F82  01F5               	clrf	___wmul@product+1
  5288  1F83                     l2614:
  5289  1F83  1C70               	btfss	___wmul@multiplier,0
  5290  1F84  2F86               	goto	u3541
  5291  1F85  2F87               	goto	u3540
  5292  1F86                     u3541:
  5293  1F86  2F8D               	goto	l420
  5294  1F87                     u3540:
  5295  1F87                     l2616:
  5296  1F87  0872               	movf	___wmul@multiplicand,w
  5297  1F88  07F4               	addwf	___wmul@product,f
  5298  1F89  1803               	skipnc
  5299  1F8A  0AF5               	incf	___wmul@product+1,f
  5300  1F8B  0873               	movf	___wmul@multiplicand+1,w
  5301  1F8C  07F5               	addwf	___wmul@product+1,f
  5302  1F8D                     l420:
  5303  1F8D  3001               	movlw	1
  5304  1F8E                     u3555:
  5305  1F8E  1003               	clrc
  5306  1F8F  0DF2               	rlf	___wmul@multiplicand,f
  5307  1F90  0DF3               	rlf	___wmul@multiplicand+1,f
  5308  1F91  3EFF               	addlw	-1
  5309  1F92  1D03               	skipz
  5310  1F93  2F8E               	goto	u3555
  5311  1F94                     l2618:
  5312  1F94  3001               	movlw	1
  5313  1F95                     u3565:
  5314  1F95  1003               	clrc
  5315  1F96  0CF1               	rrf	___wmul@multiplier+1,f
  5316  1F97  0CF0               	rrf	___wmul@multiplier,f
  5317  1F98  3EFF               	addlw	-1
  5318  1F99  1D03               	skipz
  5319  1F9A  2F95               	goto	u3565
  5320  1F9B                     l2620:
  5321  1F9B  0870               	movf	___wmul@multiplier,w
  5322  1F9C  0471               	iorwf	___wmul@multiplier+1,w
  5323  1F9D  1D03               	btfss	3,2
  5324  1F9E  2FA0               	goto	u3571
  5325  1F9F  2FA1               	goto	u3570
  5326  1FA0                     u3571:
  5327  1FA0  2F83               	goto	l2614
  5328  1FA1                     u3570:
  5329  1FA1                     l2622:
  5330  1FA1  0875               	movf	___wmul@product+1,w
  5331  1FA2  00F1               	movwf	?___wmul+1
  5332  1FA3  0874               	movf	___wmul@product,w
  5333  1FA4  00F0               	movwf	?___wmul
  5334  1FA5                     l422:
  5335  1FA5  0008               	return
  5336  1FA6                     __end_of___wmul:
  5337                           
  5338                           	psect	text16
  5339  1FD1                     __ptext16:	
  5340 ;; *************** function ___lltoft *****************
  5341 ;; Defined at:
  5342 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  c               4    8[COMMON] unsigned long 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  exp             1   13[COMMON] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  3    8[COMMON] float 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0, pclath, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5356 ;;      Params:         4       0       0       0       0
  5357 ;;      Locals:         1       0       0       0       0
  5358 ;;      Temps:          1       0       0       0       0
  5359 ;;      Totals:         6       0       0       0       0
  5360 ;;Total ram usage:        6 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    1
  5363 ;; This function calls:
  5364 ;;		___ftpack
  5365 ;; This function is called by:
  5366 ;;		_sprintf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function ___lltoft
  5372  1FD1                     ___lltoft:
  5373  1FD1                     l2752:	
  5374                           ;incstack = 0
  5375                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5376                           
  5377  1FD1  308E               	movlw	142
  5378  1FD2  00FC               	movwf	??___lltoft
  5379  1FD3  087C               	movf	??___lltoft,w
  5380  1FD4  00FD               	movwf	___lltoft@exp
  5381  1FD5  2FE3               	goto	l2756
  5382  1FD6                     l2754:
  5383  1FD6  3001               	movlw	1
  5384  1FD7                     u3865:
  5385  1FD7  1003               	clrc
  5386  1FD8  0CFB               	rrf	___lltoft@c+3,f
  5387  1FD9  0CFA               	rrf	___lltoft@c+2,f
  5388  1FDA  0CF9               	rrf	___lltoft@c+1,f
  5389  1FDB  0CF8               	rrf	___lltoft@c,f
  5390  1FDC  3EFF               	addlw	-1
  5391  1FDD  1D03               	skipz
  5392  1FDE  2FD7               	goto	u3865
  5393  1FDF  3001               	movlw	1
  5394  1FE0  00FC               	movwf	??___lltoft
  5395  1FE1  087C               	movf	??___lltoft,w
  5396  1FE2  07FD               	addwf	___lltoft@exp,f
  5397  1FE3                     l2756:
  5398  1FE3  30FF               	movlw	255
  5399  1FE4  057B               	andwf	___lltoft@c+3,w
  5400  1FE5  1D03               	btfss	3,2
  5401  1FE6  2FE8               	goto	u3871
  5402  1FE7  2FE9               	goto	u3870
  5403  1FE8                     u3871:
  5404  1FE8  2FD6               	goto	l2754
  5405  1FE9                     u3870:
  5406  1FE9                     l2758:
  5407  1FE9  0878               	movf	___lltoft@c,w
  5408  1FEA  00F0               	movwf	___ftpack@arg
  5409  1FEB  0879               	movf	___lltoft@c+1,w
  5410  1FEC  00F1               	movwf	___ftpack@arg+1
  5411  1FED  087A               	movf	___lltoft@c+2,w
  5412  1FEE  00F2               	movwf	___ftpack@arg+2
  5413  1FEF  087D               	movf	___lltoft@exp,w
  5414  1FF0  00FC               	movwf	??___lltoft
  5415  1FF1  087C               	movf	??___lltoft,w
  5416  1FF2  00F3               	movwf	___ftpack@exp
  5417  1FF3  01F4               	clrf	___ftpack@sign
  5418  1FF4  160A  118A  2443  160A  158A  	fcall	___ftpack
  5419  1FF9  0870               	movf	?___ftpack,w
  5420  1FFA  00F8               	movwf	?___lltoft
  5421  1FFB  0871               	movf	?___ftpack+1,w
  5422  1FFC  00F9               	movwf	?___lltoft+1
  5423  1FFD  0872               	movf	?___ftpack+2,w
  5424  1FFE  00FA               	movwf	?___lltoft+2
  5425  1FFF                     l799:
  5426  1FFF  0008               	return
  5427  2000                     __end_of___lltoft:
  5428                           
  5429                           	psect	text17
  5430  125F                     __ptext17:	
  5431 ;; *************** function ___llmod *****************
  5432 ;; Defined at:
  5433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  divisor         4    0[BANK0 ] unsigned long 
  5436 ;;  dividend        4    4[BANK0 ] unsigned long 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  counter         1    9[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  4    0[BANK0 ] unsigned long 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       8       0       0       0
  5449 ;;      Locals:         0       1       0       0       0
  5450 ;;      Temps:          0       1       0       0       0
  5451 ;;      Totals:         0      10       0       0       0
  5452 ;;Total ram usage:       10 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_sprintf
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function ___llmod
  5463  125F                     ___llmod:
  5464  125F                     l2732:	
  5465                           ;incstack = 0
  5466                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5467                           
  5468  125F  1283               	bcf	3,5	;RP0=0, select bank0
  5469  1260  1303               	bcf	3,6	;RP1=0, select bank0
  5470  1261  0823               	movf	___llmod@divisor+3,w
  5471  1262  0422               	iorwf	___llmod@divisor+2,w
  5472  1263  0421               	iorwf	___llmod@divisor+1,w
  5473  1264  0420               	iorwf	___llmod@divisor,w
  5474  1265  1903               	skipnz
  5475  1266  2A68               	goto	u3801
  5476  1267  2A69               	goto	u3800
  5477  1268                     u3801:
  5478  1268  2AAC               	goto	l2748
  5479  1269                     u3800:
  5480  1269                     l2734:
  5481  1269  01A9               	clrf	___llmod@counter
  5482  126A  0AA9               	incf	___llmod@counter,f
  5483  126B  2A79               	goto	l2738
  5484  126C                     l2736:
  5485  126C  3001               	movlw	1
  5486  126D  00A8               	movwf	??___llmod
  5487  126E                     u3815:
  5488  126E  1003               	clrc
  5489  126F  0DA0               	rlf	___llmod@divisor,f
  5490  1270  0DA1               	rlf	___llmod@divisor+1,f
  5491  1271  0DA2               	rlf	___llmod@divisor+2,f
  5492  1272  0DA3               	rlf	___llmod@divisor+3,f
  5493  1273  0BA8               	decfsz	??___llmod,f
  5494  1274  2A6E               	goto	u3815
  5495  1275  3001               	movlw	1
  5496  1276  00A8               	movwf	??___llmod
  5497  1277  0828               	movf	??___llmod,w
  5498  1278  07A9               	addwf	___llmod@counter,f
  5499  1279                     l2738:
  5500  1279  1FA3               	btfss	___llmod@divisor+3,7
  5501  127A  2A7C               	goto	u3821
  5502  127B  2A7D               	goto	u3820
  5503  127C                     u3821:
  5504  127C  2A6C               	goto	l2736
  5505  127D                     u3820:
  5506  127D                     l2740:
  5507  127D  0823               	movf	___llmod@divisor+3,w
  5508  127E  0227               	subwf	___llmod@dividend+3,w
  5509  127F  1D03               	skipz
  5510  1280  2A8B               	goto	u3835
  5511  1281  0822               	movf	___llmod@divisor+2,w
  5512  1282  0226               	subwf	___llmod@dividend+2,w
  5513  1283  1D03               	skipz
  5514  1284  2A8B               	goto	u3835
  5515  1285  0821               	movf	___llmod@divisor+1,w
  5516  1286  0225               	subwf	___llmod@dividend+1,w
  5517  1287  1D03               	skipz
  5518  1288  2A8B               	goto	u3835
  5519  1289  0820               	movf	___llmod@divisor,w
  5520  128A  0224               	subwf	___llmod@dividend,w
  5521  128B                     u3835:
  5522  128B  1C03               	skipc
  5523  128C  2A8E               	goto	u3831
  5524  128D  2A8F               	goto	u3830
  5525  128E                     u3831:
  5526  128E  2A9D               	goto	l2744
  5527  128F                     u3830:
  5528  128F                     l2742:
  5529  128F  0820               	movf	___llmod@divisor,w
  5530  1290  02A4               	subwf	___llmod@dividend,f
  5531  1291  0821               	movf	___llmod@divisor+1,w
  5532  1292  1C03               	skipc
  5533  1293  0F21               	incfsz	___llmod@divisor+1,w
  5534  1294  02A5               	subwf	___llmod@dividend+1,f
  5535  1295  0822               	movf	___llmod@divisor+2,w
  5536  1296  1C03               	skipc
  5537  1297  0F22               	incfsz	___llmod@divisor+2,w
  5538  1298  02A6               	subwf	___llmod@dividend+2,f
  5539  1299  0823               	movf	___llmod@divisor+3,w
  5540  129A  1C03               	skipc
  5541  129B  0F23               	incfsz	___llmod@divisor+3,w
  5542  129C  02A7               	subwf	___llmod@dividend+3,f
  5543  129D                     l2744:
  5544  129D  3001               	movlw	1
  5545  129E                     u3845:
  5546  129E  1003               	clrc
  5547  129F  0CA3               	rrf	___llmod@divisor+3,f
  5548  12A0  0CA2               	rrf	___llmod@divisor+2,f
  5549  12A1  0CA1               	rrf	___llmod@divisor+1,f
  5550  12A2  0CA0               	rrf	___llmod@divisor,f
  5551  12A3  3EFF               	addlw	-1
  5552  12A4  1D03               	skipz
  5553  12A5  2A9E               	goto	u3845
  5554  12A6                     l2746:
  5555  12A6  3001               	movlw	1
  5556  12A7  02A9               	subwf	___llmod@counter,f
  5557  12A8  1D03               	btfss	3,2
  5558  12A9  2AAB               	goto	u3851
  5559  12AA  2AAC               	goto	u3850
  5560  12AB                     u3851:
  5561  12AB  2A7D               	goto	l2740
  5562  12AC                     u3850:
  5563  12AC                     l2748:
  5564  12AC  0827               	movf	___llmod@dividend+3,w
  5565  12AD  00A3               	movwf	?___llmod+3
  5566  12AE  0826               	movf	___llmod@dividend+2,w
  5567  12AF  00A2               	movwf	?___llmod+2
  5568  12B0  0825               	movf	___llmod@dividend+1,w
  5569  12B1  00A1               	movwf	?___llmod+1
  5570  12B2  0824               	movf	___llmod@dividend,w
  5571  12B3  00A0               	movwf	?___llmod
  5572  12B4                     l791:
  5573  12B4  0008               	return
  5574  12B5                     __end_of___llmod:
  5575                           
  5576                           	psect	text18
  5577  1374                     __ptext18:	
  5578 ;; *************** function ___lldiv *****************
  5579 ;; Defined at:
  5580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  divisor         4    0[COMMON] unsigned long 
  5583 ;;  dividend        4    4[COMMON] unsigned long 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  quotient        4    9[COMMON] unsigned long 
  5586 ;;  counter         1   13[COMMON] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  4    0[COMMON] unsigned long 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5596 ;;      Params:         8       0       0       0       0
  5597 ;;      Locals:         5       0       0       0       0
  5598 ;;      Temps:          1       0       0       0       0
  5599 ;;      Totals:        14       0       0       0       0
  5600 ;;Total ram usage:       14 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_sprintf
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           
  5610                           ;psect for function ___lldiv
  5611  1374                     ___lldiv:
  5612  1374                     l2626:	
  5613                           ;incstack = 0
  5614                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5615                           
  5616  1374  3000               	movlw	0
  5617  1375  00FC               	movwf	___lldiv@quotient+3
  5618  1376  3000               	movlw	0
  5619  1377  00FB               	movwf	___lldiv@quotient+2
  5620  1378  3000               	movlw	0
  5621  1379  00FA               	movwf	___lldiv@quotient+1
  5622  137A  3000               	movlw	0
  5623  137B  00F9               	movwf	___lldiv@quotient
  5624  137C  0873               	movf	___lldiv@divisor+3,w
  5625  137D  0472               	iorwf	___lldiv@divisor+2,w
  5626  137E  0471               	iorwf	___lldiv@divisor+1,w
  5627  137F  0470               	iorwf	___lldiv@divisor,w
  5628  1380  1903               	skipnz
  5629  1381  2B83               	goto	u3581
  5630  1382  2B84               	goto	u3580
  5631  1383                     u3581:
  5632  1383  2BD1               	goto	l2646
  5633  1384                     u3580:
  5634  1384                     l2628:
  5635  1384  01FD               	clrf	___lldiv@counter
  5636  1385  0AFD               	incf	___lldiv@counter,f
  5637  1386  2B94               	goto	l2632
  5638  1387                     l2630:
  5639  1387  3001               	movlw	1
  5640  1388  00F8               	movwf	??___lldiv
  5641  1389                     u3595:
  5642  1389  1003               	clrc
  5643  138A  0DF0               	rlf	___lldiv@divisor,f
  5644  138B  0DF1               	rlf	___lldiv@divisor+1,f
  5645  138C  0DF2               	rlf	___lldiv@divisor+2,f
  5646  138D  0DF3               	rlf	___lldiv@divisor+3,f
  5647  138E  0BF8               	decfsz	??___lldiv,f
  5648  138F  2B89               	goto	u3595
  5649  1390  3001               	movlw	1
  5650  1391  00F8               	movwf	??___lldiv
  5651  1392  0878               	movf	??___lldiv,w
  5652  1393  07FD               	addwf	___lldiv@counter,f
  5653  1394                     l2632:
  5654  1394  1FF3               	btfss	___lldiv@divisor+3,7
  5655  1395  2B97               	goto	u3601
  5656  1396  2B98               	goto	u3600
  5657  1397                     u3601:
  5658  1397  2B87               	goto	l2630
  5659  1398                     u3600:
  5660  1398                     l2634:
  5661  1398  3001               	movlw	1
  5662  1399  00F8               	movwf	??___lldiv
  5663  139A                     u3615:
  5664  139A  1003               	clrc
  5665  139B  0DF9               	rlf	___lldiv@quotient,f
  5666  139C  0DFA               	rlf	___lldiv@quotient+1,f
  5667  139D  0DFB               	rlf	___lldiv@quotient+2,f
  5668  139E  0DFC               	rlf	___lldiv@quotient+3,f
  5669  139F  0BF8               	decfsz	??___lldiv,f
  5670  13A0  2B9A               	goto	u3615
  5671  13A1                     l2636:
  5672  13A1  0873               	movf	___lldiv@divisor+3,w
  5673  13A2  0277               	subwf	___lldiv@dividend+3,w
  5674  13A3  1D03               	skipz
  5675  13A4  2BAF               	goto	u3625
  5676  13A5  0872               	movf	___lldiv@divisor+2,w
  5677  13A6  0276               	subwf	___lldiv@dividend+2,w
  5678  13A7  1D03               	skipz
  5679  13A8  2BAF               	goto	u3625
  5680  13A9  0871               	movf	___lldiv@divisor+1,w
  5681  13AA  0275               	subwf	___lldiv@dividend+1,w
  5682  13AB  1D03               	skipz
  5683  13AC  2BAF               	goto	u3625
  5684  13AD  0870               	movf	___lldiv@divisor,w
  5685  13AE  0274               	subwf	___lldiv@dividend,w
  5686  13AF                     u3625:
  5687  13AF  1C03               	skipc
  5688  13B0  2BB2               	goto	u3621
  5689  13B1  2BB3               	goto	u3620
  5690  13B2                     u3621:
  5691  13B2  2BC2               	goto	l2642
  5692  13B3                     u3620:
  5693  13B3                     l2638:
  5694  13B3  0870               	movf	___lldiv@divisor,w
  5695  13B4  02F4               	subwf	___lldiv@dividend,f
  5696  13B5  0871               	movf	___lldiv@divisor+1,w
  5697  13B6  1C03               	skipc
  5698  13B7  0F71               	incfsz	___lldiv@divisor+1,w
  5699  13B8  02F5               	subwf	___lldiv@dividend+1,f
  5700  13B9  0872               	movf	___lldiv@divisor+2,w
  5701  13BA  1C03               	skipc
  5702  13BB  0F72               	incfsz	___lldiv@divisor+2,w
  5703  13BC  02F6               	subwf	___lldiv@dividend+2,f
  5704  13BD  0873               	movf	___lldiv@divisor+3,w
  5705  13BE  1C03               	skipc
  5706  13BF  0F73               	incfsz	___lldiv@divisor+3,w
  5707  13C0  02F7               	subwf	___lldiv@dividend+3,f
  5708  13C1                     l2640:
  5709  13C1  1479               	bsf	___lldiv@quotient,0
  5710  13C2                     l2642:
  5711  13C2  3001               	movlw	1
  5712  13C3                     u3635:
  5713  13C3  1003               	clrc
  5714  13C4  0CF3               	rrf	___lldiv@divisor+3,f
  5715  13C5  0CF2               	rrf	___lldiv@divisor+2,f
  5716  13C6  0CF1               	rrf	___lldiv@divisor+1,f
  5717  13C7  0CF0               	rrf	___lldiv@divisor,f
  5718  13C8  3EFF               	addlw	-1
  5719  13C9  1D03               	skipz
  5720  13CA  2BC3               	goto	u3635
  5721  13CB                     l2644:
  5722  13CB  3001               	movlw	1
  5723  13CC  02FD               	subwf	___lldiv@counter,f
  5724  13CD  1D03               	btfss	3,2
  5725  13CE  2BD0               	goto	u3641
  5726  13CF  2BD1               	goto	u3640
  5727  13D0                     u3641:
  5728  13D0  2B98               	goto	l2634
  5729  13D1                     u3640:
  5730  13D1                     l2646:
  5731  13D1  087C               	movf	___lldiv@quotient+3,w
  5732  13D2  00F3               	movwf	?___lldiv+3
  5733  13D3  087B               	movf	___lldiv@quotient+2,w
  5734  13D4  00F2               	movwf	?___lldiv+2
  5735  13D5  087A               	movf	___lldiv@quotient+1,w
  5736  13D6  00F1               	movwf	?___lldiv+1
  5737  13D7  0879               	movf	___lldiv@quotient,w
  5738  13D8  00F0               	movwf	?___lldiv
  5739  13D9                     l456:
  5740  13D9  0008               	return
  5741  13DA                     __end_of___lldiv:
  5742                           
  5743                           	psect	text19
  5744  14BF                     __ptext19:	
  5745 ;; *************** function ___fttol *****************
  5746 ;; Defined at:
  5747 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  f1              3   33[BANK0 ] float 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  lval            4   42[BANK0 ] unsigned long 
  5752 ;;  exp1            1   46[BANK0 ] unsigned char 
  5753 ;;  sign1           1   41[BANK0 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  4   33[BANK0 ] long 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5763 ;;      Params:         0       4       0       0       0
  5764 ;;      Locals:         0       6       0       0       0
  5765 ;;      Temps:          0       4       0       0       0
  5766 ;;      Totals:         0      14       0       0       0
  5767 ;;Total ram usage:       14 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_sprintf
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function ___fttol
  5778  14BF                     ___fttol:
  5779  14BF                     l2686:	
  5780                           ;incstack = 0
  5781                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5782                           
  5783  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  5784  14C0  1303               	bcf	3,6	;RP1=0, select bank0
  5785  14C1  0841               	movf	___fttol@f1,w
  5786  14C2  00C5               	movwf	??___fttol
  5787  14C3  0842               	movf	___fttol@f1+1,w
  5788  14C4  00C6               	movwf	??___fttol+1
  5789  14C5  0843               	movf	___fttol@f1+2,w
  5790  14C6  00C7               	movwf	??___fttol+2
  5791  14C7  1003               	clrc
  5792  14C8  0D46               	rlf	??___fttol+1,w
  5793  14C9  0D47               	rlf	??___fttol+2,w
  5794  14CA  00C8               	movwf	??___fttol+3
  5795  14CB  0848               	movf	??___fttol+3,w
  5796  14CC  00CE               	movwf	___fttol@exp1
  5797  14CD  084E               	movf	___fttol@exp1,w
  5798  14CE  1D03               	btfss	3,2
  5799  14CF  2CD1               	goto	u3701
  5800  14D0  2CD2               	goto	u3700
  5801  14D1                     u3701:
  5802  14D1  2CDB               	goto	l2692
  5803  14D2                     u3700:
  5804  14D2                     l2688:
  5805  14D2  3000               	movlw	0
  5806  14D3  00C4               	movwf	?___fttol+3
  5807  14D4  3000               	movlw	0
  5808  14D5  00C3               	movwf	?___fttol+2
  5809  14D6  3000               	movlw	0
  5810  14D7  00C2               	movwf	?___fttol+1
  5811  14D8  3000               	movlw	0
  5812  14D9  00C1               	movwf	?___fttol
  5813  14DA  2D4A               	goto	l750
  5814  14DB                     l2692:
  5815  14DB  0841               	movf	___fttol@f1,w
  5816  14DC  00C5               	movwf	??___fttol
  5817  14DD  0842               	movf	___fttol@f1+1,w
  5818  14DE  00C6               	movwf	??___fttol+1
  5819  14DF  0843               	movf	___fttol@f1+2,w
  5820  14E0  00C7               	movwf	??___fttol+2
  5821  14E1  3017               	movlw	23
  5822  14E2                     u3715:
  5823  14E2  1003               	clrc
  5824  14E3  0CC7               	rrf	??___fttol+2,f
  5825  14E4  0CC6               	rrf	??___fttol+1,f
  5826  14E5  0CC5               	rrf	??___fttol,f
  5827  14E6                     u3710:
  5828  14E6  3EFF               	addlw	-1
  5829  14E7  1D03               	skipz
  5830  14E8  2CE2               	goto	u3715
  5831  14E9  0845               	movf	??___fttol,w
  5832  14EA  00C8               	movwf	??___fttol+3
  5833  14EB  0848               	movf	??___fttol+3,w
  5834  14EC  00C9               	movwf	___fttol@sign1
  5835  14ED                     l2694:
  5836  14ED  17C2               	bsf	___fttol@f1+1,7
  5837  14EE                     l2696:
  5838  14EE  30FF               	movlw	255
  5839  14EF  05C1               	andwf	___fttol@f1,f
  5840  14F0  30FF               	movlw	255
  5841  14F1  05C2               	andwf	___fttol@f1+1,f
  5842  14F2  3000               	movlw	0
  5843  14F3  05C3               	andwf	___fttol@f1+2,f
  5844  14F4                     l2698:
  5845  14F4  0841               	movf	___fttol@f1,w
  5846  14F5  00CA               	movwf	___fttol@lval
  5847  14F6  0842               	movf	___fttol@f1+1,w
  5848  14F7  00CB               	movwf	___fttol@lval+1
  5849  14F8  0843               	movf	___fttol@f1+2,w
  5850  14F9  00CC               	movwf	___fttol@lval+2
  5851  14FA  01CD               	clrf	___fttol@lval+3
  5852  14FB                     l2700:
  5853  14FB  308E               	movlw	142
  5854  14FC  02CE               	subwf	___fttol@exp1,f
  5855  14FD                     l2702:
  5856  14FD  1FCE               	btfss	___fttol@exp1,7
  5857  14FE  2D00               	goto	u3721
  5858  14FF  2D01               	goto	u3720
  5859  1500                     u3721:
  5860  1500  2D1B               	goto	l2712
  5861  1501                     u3720:
  5862  1501                     l2704:
  5863  1501  084E               	movf	___fttol@exp1,w
  5864  1502  3A80               	xorlw	128
  5865  1503  3E8F               	addlw	143
  5866  1504  1803               	skipnc
  5867  1505  2D07               	goto	u3731
  5868  1506  2D08               	goto	u3730
  5869  1507                     u3731:
  5870  1507  2D09               	goto	l2710
  5871  1508                     u3730:
  5872  1508  2CD2               	goto	l2688
  5873  1509                     l2710:
  5874  1509  3001               	movlw	1
  5875  150A                     u3745:
  5876  150A  1003               	clrc
  5877  150B  0CCD               	rrf	___fttol@lval+3,f
  5878  150C  0CCC               	rrf	___fttol@lval+2,f
  5879  150D  0CCB               	rrf	___fttol@lval+1,f
  5880  150E  0CCA               	rrf	___fttol@lval,f
  5881  150F  3EFF               	addlw	-1
  5882  1510  1D03               	skipz
  5883  1511  2D0A               	goto	u3745
  5884  1512  3001               	movlw	1
  5885  1513  00C5               	movwf	??___fttol
  5886  1514  0845               	movf	??___fttol,w
  5887  1515  07CE               	addwf	___fttol@exp1,f
  5888  1516  1D03               	btfss	3,2
  5889  1517  2D19               	goto	u3751
  5890  1518  2D1A               	goto	u3750
  5891  1519                     u3751:
  5892  1519  2D09               	goto	l2710
  5893  151A                     u3750:
  5894  151A  2D32               	goto	l2720
  5895  151B                     l2712:
  5896  151B  3018               	movlw	24
  5897  151C  024E               	subwf	___fttol@exp1,w
  5898  151D  1C03               	skipc
  5899  151E  2D20               	goto	u3761
  5900  151F  2D21               	goto	u3760
  5901  1520                     u3761:
  5902  1520  2D2D               	goto	l757
  5903  1521                     u3760:
  5904  1521  2CD2               	goto	l2688
  5905  1522                     l2718:
  5906  1522  3001               	movlw	1
  5907  1523  00C5               	movwf	??___fttol
  5908  1524                     u3775:
  5909  1524  1003               	clrc
  5910  1525  0DCA               	rlf	___fttol@lval,f
  5911  1526  0DCB               	rlf	___fttol@lval+1,f
  5912  1527  0DCC               	rlf	___fttol@lval+2,f
  5913  1528  0DCD               	rlf	___fttol@lval+3,f
  5914  1529  0BC5               	decfsz	??___fttol,f
  5915  152A  2D24               	goto	u3775
  5916  152B  3001               	movlw	1
  5917  152C  02CE               	subwf	___fttol@exp1,f
  5918  152D                     l757:
  5919  152D  084E               	movf	___fttol@exp1,w
  5920  152E  1D03               	btfss	3,2
  5921  152F  2D31               	goto	u3781
  5922  1530  2D32               	goto	u3780
  5923  1531                     u3781:
  5924  1531  2D22               	goto	l2718
  5925  1532                     u3780:
  5926  1532                     l2720:
  5927  1532  0849               	movf	___fttol@sign1,w
  5928  1533  1903               	btfsc	3,2
  5929  1534  2D36               	goto	u3791
  5930  1535  2D37               	goto	u3790
  5931  1536                     u3791:
  5932  1536  2D42               	goto	l2724
  5933  1537                     u3790:
  5934  1537                     l2722:
  5935  1537  09CA               	comf	___fttol@lval,f
  5936  1538  09CB               	comf	___fttol@lval+1,f
  5937  1539  09CC               	comf	___fttol@lval+2,f
  5938  153A  09CD               	comf	___fttol@lval+3,f
  5939  153B  0ACA               	incf	___fttol@lval,f
  5940  153C  1903               	skipnz
  5941  153D  0ACB               	incf	___fttol@lval+1,f
  5942  153E  1903               	skipnz
  5943  153F  0ACC               	incf	___fttol@lval+2,f
  5944  1540  1903               	skipnz
  5945  1541  0ACD               	incf	___fttol@lval+3,f
  5946  1542                     l2724:
  5947  1542  084D               	movf	___fttol@lval+3,w
  5948  1543  00C4               	movwf	?___fttol+3
  5949  1544  084C               	movf	___fttol@lval+2,w
  5950  1545  00C3               	movwf	?___fttol+2
  5951  1546  084B               	movf	___fttol@lval+1,w
  5952  1547  00C2               	movwf	?___fttol+1
  5953  1548  084A               	movf	___fttol@lval,w
  5954  1549  00C1               	movwf	?___fttol
  5955  154A                     l750:
  5956  154A  0008               	return
  5957  154B                     __end_of___fttol:
  5958                           
  5959                           	psect	text20
  5960  1F5C                     __ptext20:	
  5961 ;; *************** function ___ftsub *****************
  5962 ;; Defined at:
  5963 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  f2              3   53[BANK0 ] float 
  5966 ;;  f1              3   56[BANK0 ] float 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  3   53[BANK0 ] float 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, pclath, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5978 ;;      Params:         0       6       0       0       0
  5979 ;;      Locals:         0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0
  5981 ;;      Totals:         0       6       0       0       0
  5982 ;;Total ram usage:        6 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    2
  5985 ;; This function calls:
  5986 ;;		___ftadd
  5987 ;; This function is called by:
  5988 ;;		_sprintf
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function ___ftsub
  5994  1F5C                     ___ftsub:
  5995  1F5C                     l2678:	
  5996                           ;incstack = 0
  5997                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5998                           
  5999  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
  6000  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
  6001  1F5E  0857               	movf	___ftsub@f2+2,w
  6002  1F5F  0456               	iorwf	___ftsub@f2+1,w
  6003  1F60  0455               	iorwf	___ftsub@f2,w
  6004  1F61  1903               	skipnz
  6005  1F62  2F64               	goto	u3691
  6006  1F63  2F65               	goto	u3690
  6007  1F64                     u3691:
  6008  1F64  2F67               	goto	l2682
  6009  1F65                     u3690:
  6010  1F65                     l2680:
  6011  1F65  3080               	movlw	128
  6012  1F66  06D7               	xorwf	___ftsub@f2+2,f
  6013  1F67                     l2682:
  6014  1F67  0858               	movf	___ftsub@f1,w
  6015  1F68  00C8               	movwf	___ftadd@f1
  6016  1F69  0859               	movf	___ftsub@f1+1,w
  6017  1F6A  00C9               	movwf	___ftadd@f1+1
  6018  1F6B  085A               	movf	___ftsub@f1+2,w
  6019  1F6C  00CA               	movwf	___ftadd@f1+2
  6020  1F6D  0855               	movf	___ftsub@f2,w
  6021  1F6E  00CB               	movwf	___ftadd@f2
  6022  1F6F  0856               	movf	___ftsub@f2+1,w
  6023  1F70  00CC               	movwf	___ftadd@f2+1
  6024  1F71  0857               	movf	___ftsub@f2+2,w
  6025  1F72  00CD               	movwf	___ftadd@f2+2
  6026  1F73  120A  118A  2011  160A  158A  	fcall	___ftadd
  6027  1F78  1283               	bcf	3,5	;RP0=0, select bank0
  6028  1F79  1303               	bcf	3,6	;RP1=0, select bank0
  6029  1F7A  0848               	movf	?___ftadd,w
  6030  1F7B  00D5               	movwf	?___ftsub
  6031  1F7C  0849               	movf	?___ftadd+1,w
  6032  1F7D  00D6               	movwf	?___ftsub+1
  6033  1F7E  084A               	movf	?___ftadd+2,w
  6034  1F7F  00D7               	movwf	?___ftsub+2
  6035  1F80                     l746:
  6036  1F80  0008               	return
  6037  1F81                     __end_of___ftsub:
  6038                           
  6039                           	psect	text21
  6040  0011                     __ptext21:	
  6041 ;; *************** function ___ftadd *****************
  6042 ;; Defined at:
  6043 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  f1              3   40[BANK0 ] float 
  6046 ;;  f2              3   43[BANK0 ] float 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  exp1            1   52[BANK0 ] unsigned char 
  6049 ;;  exp2            1   51[BANK0 ] unsigned char 
  6050 ;;  sign            1   50[BANK0 ] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  3   40[BANK0 ] float 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6060 ;;      Params:         0       6       0       0       0
  6061 ;;      Locals:         0       3       0       0       0
  6062 ;;      Temps:          0       4       0       0       0
  6063 ;;      Totals:         0      13       0       0       0
  6064 ;;Total ram usage:       13 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    1
  6067 ;; This function calls:
  6068 ;;		___ftpack
  6069 ;; This function is called by:
  6070 ;;		_sprintf
  6071 ;;		___ftsub
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function ___ftadd
  6077  0011                     ___ftadd:
  6078  0011                     l2216:	
  6079                           ;incstack = 0
  6080                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6081                           
  6082  0011  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0012  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0013  0848               	movf	___ftadd@f1,w
  6085  0014  00CE               	movwf	??___ftadd
  6086  0015  0849               	movf	___ftadd@f1+1,w
  6087  0016  00CF               	movwf	??___ftadd+1
  6088  0017  084A               	movf	___ftadd@f1+2,w
  6089  0018  00D0               	movwf	??___ftadd+2
  6090  0019  1003               	clrc
  6091  001A  0D4F               	rlf	??___ftadd+1,w
  6092  001B  0D50               	rlf	??___ftadd+2,w
  6093  001C  00D1               	movwf	??___ftadd+3
  6094  001D  0851               	movf	??___ftadd+3,w
  6095  001E  00D4               	movwf	___ftadd@exp1
  6096  001F  084B               	movf	___ftadd@f2,w
  6097  0020  00CE               	movwf	??___ftadd
  6098  0021  084C               	movf	___ftadd@f2+1,w
  6099  0022  00CF               	movwf	??___ftadd+1
  6100  0023  084D               	movf	___ftadd@f2+2,w
  6101  0024  00D0               	movwf	??___ftadd+2
  6102  0025  1003               	clrc
  6103  0026  0D4F               	rlf	??___ftadd+1,w
  6104  0027  0D50               	rlf	??___ftadd+2,w
  6105  0028  00D1               	movwf	??___ftadd+3
  6106  0029  0851               	movf	??___ftadd+3,w
  6107  002A  00D3               	movwf	___ftadd@exp2
  6108  002B  0854               	movf	___ftadd@exp1,w
  6109  002C  1903               	btfsc	3,2
  6110  002D  282F               	goto	u2671
  6111  002E  2830               	goto	u2670
  6112  002F                     u2671:
  6113  002F  2840               	goto	l2222
  6114  0030                     u2670:
  6115  0030                     l2218:
  6116  0030  0853               	movf	___ftadd@exp2,w
  6117  0031  0254               	subwf	___ftadd@exp1,w
  6118  0032  1803               	skipnc
  6119  0033  2835               	goto	u2681
  6120  0034  2836               	goto	u2680
  6121  0035                     u2681:
  6122  0035  2847               	goto	l2226
  6123  0036                     u2680:
  6124  0036                     l2220:
  6125  0036  0853               	movf	___ftadd@exp2,w
  6126  0037  00CE               	movwf	??___ftadd
  6127  0038  0854               	movf	___ftadd@exp1,w
  6128  0039  02CE               	subwf	??___ftadd,f
  6129  003A  3019               	movlw	25
  6130  003B  024E               	subwf	??___ftadd,w
  6131  003C  1C03               	skipc
  6132  003D  283F               	goto	u2691
  6133  003E  2840               	goto	u2690
  6134  003F                     u2691:
  6135  003F  2847               	goto	l2226
  6136  0040                     u2690:
  6137  0040                     l2222:
  6138  0040  084B               	movf	___ftadd@f2,w
  6139  0041  00C8               	movwf	?___ftadd
  6140  0042  084C               	movf	___ftadd@f2+1,w
  6141  0043  00C9               	movwf	?___ftadd+1
  6142  0044  084D               	movf	___ftadd@f2+2,w
  6143  0045  00CA               	movwf	?___ftadd+2
  6144  0046  2946               	goto	l666
  6145  0047                     l2226:
  6146  0047  0853               	movf	___ftadd@exp2,w
  6147  0048  1903               	btfsc	3,2
  6148  0049  284B               	goto	u2701
  6149  004A  284C               	goto	u2700
  6150  004B                     u2701:
  6151  004B  285C               	goto	l669
  6152  004C                     u2700:
  6153  004C                     l2228:
  6154  004C  0854               	movf	___ftadd@exp1,w
  6155  004D  0253               	subwf	___ftadd@exp2,w
  6156  004E  1803               	skipnc
  6157  004F  2851               	goto	u2711
  6158  0050  2852               	goto	u2710
  6159  0051                     u2711:
  6160  0051  285D               	goto	l2232
  6161  0052                     u2710:
  6162  0052                     l2230:
  6163  0052  0854               	movf	___ftadd@exp1,w
  6164  0053  00CE               	movwf	??___ftadd
  6165  0054  0853               	movf	___ftadd@exp2,w
  6166  0055  02CE               	subwf	??___ftadd,f
  6167  0056  3019               	movlw	25
  6168  0057  024E               	subwf	??___ftadd,w
  6169  0058  1C03               	skipc
  6170  0059  285B               	goto	u2721
  6171  005A  285C               	goto	u2720
  6172  005B                     u2721:
  6173  005B  285D               	goto	l2232
  6174  005C                     u2720:
  6175  005C                     l669:
  6176  005C  2946               	goto	l666
  6177  005D                     l2232:
  6178  005D  3006               	movlw	6
  6179  005E  00CE               	movwf	??___ftadd
  6180  005F  084E               	movf	??___ftadd,w
  6181  0060  00D2               	movwf	___ftadd@sign
  6182  0061                     l2234:
  6183  0061  1FCA               	btfss	___ftadd@f1+2,7
  6184  0062  2864               	goto	u2731
  6185  0063  2865               	goto	u2730
  6186  0064                     u2731:
  6187  0064  2866               	goto	l670
  6188  0065                     u2730:
  6189  0065                     l2236:
  6190  0065  17D2               	bsf	___ftadd@sign,7
  6191  0066                     l670:
  6192  0066  1FCD               	btfss	___ftadd@f2+2,7
  6193  0067  2869               	goto	u2741
  6194  0068  286A               	goto	u2740
  6195  0069                     u2741:
  6196  0069  286B               	goto	l671
  6197  006A                     u2740:
  6198  006A                     l2238:
  6199  006A  1752               	bsf	___ftadd@sign,6
  6200  006B                     l671:
  6201  006B  17C9               	bsf	___ftadd@f1+1,7
  6202  006C                     l2240:
  6203  006C  30FF               	movlw	255
  6204  006D  05C8               	andwf	___ftadd@f1,f
  6205  006E  30FF               	movlw	255
  6206  006F  05C9               	andwf	___ftadd@f1+1,f
  6207  0070  3000               	movlw	0
  6208  0071  05CA               	andwf	___ftadd@f1+2,f
  6209  0072                     l2242:
  6210  0072  17CC               	bsf	___ftadd@f2+1,7
  6211  0073  30FF               	movlw	255
  6212  0074  05CB               	andwf	___ftadd@f2,f
  6213  0075  30FF               	movlw	255
  6214  0076  05CC               	andwf	___ftadd@f2+1,f
  6215  0077  3000               	movlw	0
  6216  0078  05CD               	andwf	___ftadd@f2+2,f
  6217  0079  0853               	movf	___ftadd@exp2,w
  6218  007A  0254               	subwf	___ftadd@exp1,w
  6219  007B  1803               	skipnc
  6220  007C  287E               	goto	u2751
  6221  007D  287F               	goto	u2750
  6222  007E                     u2751:
  6223  007E  28AB               	goto	l2254
  6224  007F                     u2750:
  6225  007F                     l2244:
  6226  007F  3001               	movlw	1
  6227  0080                     u2765:
  6228  0080  1003               	clrc
  6229  0081  0DCB               	rlf	___ftadd@f2,f
  6230  0082  0DCC               	rlf	___ftadd@f2+1,f
  6231  0083  0DCD               	rlf	___ftadd@f2+2,f
  6232  0084  3EFF               	addlw	-1
  6233  0085  1D03               	skipz
  6234  0086  2880               	goto	u2765
  6235  0087  3001               	movlw	1
  6236  0088  02D3               	subwf	___ftadd@exp2,f
  6237  0089                     l2246:
  6238  0089  0853               	movf	___ftadd@exp2,w
  6239  008A  0654               	xorwf	___ftadd@exp1,w
  6240  008B  1903               	skipnz
  6241  008C  288E               	goto	u2771
  6242  008D  288F               	goto	u2770
  6243  008E                     u2771:
  6244  008E  28A4               	goto	l2252
  6245  008F                     u2770:
  6246  008F                     l2248:
  6247  008F  3001               	movlw	1
  6248  0090  02D2               	subwf	___ftadd@sign,f
  6249  0091  0852               	movf	___ftadd@sign,w
  6250  0092  3907               	andlw	7
  6251  0093  1D03               	btfss	3,2
  6252  0094  2896               	goto	u2781
  6253  0095  2897               	goto	u2780
  6254  0096                     u2781:
  6255  0096  287F               	goto	l2244
  6256  0097                     u2780:
  6257  0097  28A4               	goto	l2252
  6258  0098                     l2250:
  6259  0098  3001               	movlw	1
  6260  0099                     u2795:
  6261  0099  1003               	clrc
  6262  009A  0CCA               	rrf	___ftadd@f1+2,f
  6263  009B  0CC9               	rrf	___ftadd@f1+1,f
  6264  009C  0CC8               	rrf	___ftadd@f1,f
  6265  009D  3EFF               	addlw	-1
  6266  009E  1D03               	skipz
  6267  009F  2899               	goto	u2795
  6268  00A0  3001               	movlw	1
  6269  00A1  00CE               	movwf	??___ftadd
  6270  00A2  084E               	movf	??___ftadd,w
  6271  00A3  07D4               	addwf	___ftadd@exp1,f
  6272  00A4                     l2252:
  6273  00A4  0854               	movf	___ftadd@exp1,w
  6274  00A5  0653               	xorwf	___ftadd@exp2,w
  6275  00A6  1D03               	skipz
  6276  00A7  28A9               	goto	u2801
  6277  00A8  28AA               	goto	u2800
  6278  00A9                     u2801:
  6279  00A9  2898               	goto	l2250
  6280  00AA                     u2800:
  6281  00AA  28DC               	goto	l680
  6282  00AB                     l2254:
  6283  00AB  0854               	movf	___ftadd@exp1,w
  6284  00AC  0253               	subwf	___ftadd@exp2,w
  6285  00AD  1803               	skipnc
  6286  00AE  28B0               	goto	u2811
  6287  00AF  28B1               	goto	u2810
  6288  00B0                     u2811:
  6289  00B0  28DC               	goto	l680
  6290  00B1                     u2810:
  6291  00B1                     l2256:
  6292  00B1  3001               	movlw	1
  6293  00B2                     u2825:
  6294  00B2  1003               	clrc
  6295  00B3  0DC8               	rlf	___ftadd@f1,f
  6296  00B4  0DC9               	rlf	___ftadd@f1+1,f
  6297  00B5  0DCA               	rlf	___ftadd@f1+2,f
  6298  00B6  3EFF               	addlw	-1
  6299  00B7  1D03               	skipz
  6300  00B8  28B2               	goto	u2825
  6301  00B9  3001               	movlw	1
  6302  00BA  02D4               	subwf	___ftadd@exp1,f
  6303  00BB                     l2258:
  6304  00BB  0853               	movf	___ftadd@exp2,w
  6305  00BC  0654               	xorwf	___ftadd@exp1,w
  6306  00BD  1903               	skipnz
  6307  00BE  28C0               	goto	u2831
  6308  00BF  28C1               	goto	u2830
  6309  00C0                     u2831:
  6310  00C0  28D6               	goto	l2264
  6311  00C1                     u2830:
  6312  00C1                     l2260:
  6313  00C1  3001               	movlw	1
  6314  00C2  02D2               	subwf	___ftadd@sign,f
  6315  00C3  0852               	movf	___ftadd@sign,w
  6316  00C4  3907               	andlw	7
  6317  00C5  1D03               	btfss	3,2
  6318  00C6  28C8               	goto	u2841
  6319  00C7  28C9               	goto	u2840
  6320  00C8                     u2841:
  6321  00C8  28B1               	goto	l2256
  6322  00C9                     u2840:
  6323  00C9  28D6               	goto	l2264
  6324  00CA                     l2262:
  6325  00CA  3001               	movlw	1
  6326  00CB                     u2855:
  6327  00CB  1003               	clrc
  6328  00CC  0CCD               	rrf	___ftadd@f2+2,f
  6329  00CD  0CCC               	rrf	___ftadd@f2+1,f
  6330  00CE  0CCB               	rrf	___ftadd@f2,f
  6331  00CF  3EFF               	addlw	-1
  6332  00D0  1D03               	skipz
  6333  00D1  28CB               	goto	u2855
  6334  00D2  3001               	movlw	1
  6335  00D3  00CE               	movwf	??___ftadd
  6336  00D4  084E               	movf	??___ftadd,w
  6337  00D5  07D3               	addwf	___ftadd@exp2,f
  6338  00D6                     l2264:
  6339  00D6  0854               	movf	___ftadd@exp1,w
  6340  00D7  0653               	xorwf	___ftadd@exp2,w
  6341  00D8  1D03               	skipz
  6342  00D9  28DB               	goto	u2861
  6343  00DA  28DC               	goto	u2860
  6344  00DB                     u2861:
  6345  00DB  28CA               	goto	l2262
  6346  00DC                     u2860:
  6347  00DC                     l680:
  6348  00DC  1FD2               	btfss	___ftadd@sign,7
  6349  00DD  28DF               	goto	u2871
  6350  00DE  28E0               	goto	u2870
  6351  00DF                     u2871:
  6352  00DF  28F0               	goto	l2268
  6353  00E0                     u2870:
  6354  00E0                     l2266:
  6355  00E0  30FF               	movlw	255
  6356  00E1  06C8               	xorwf	___ftadd@f1,f
  6357  00E2  30FF               	movlw	255
  6358  00E3  06C9               	xorwf	___ftadd@f1+1,f
  6359  00E4  30FF               	movlw	255
  6360  00E5  06CA               	xorwf	___ftadd@f1+2,f
  6361  00E6  3001               	movlw	1
  6362  00E7  07C8               	addwf	___ftadd@f1,f
  6363  00E8  3000               	movlw	0
  6364  00E9  1803               	skipnc
  6365  00EA  3001               	movlw	1
  6366  00EB  07C9               	addwf	___ftadd@f1+1,f
  6367  00EC  3000               	movlw	0
  6368  00ED  1803               	skipnc
  6369  00EE  3001               	movlw	1
  6370  00EF  07CA               	addwf	___ftadd@f1+2,f
  6371  00F0                     l2268:
  6372  00F0  1F52               	btfss	___ftadd@sign,6
  6373  00F1  28F3               	goto	u2881
  6374  00F2  28F4               	goto	u2880
  6375  00F3                     u2881:
  6376  00F3  2904               	goto	l2272
  6377  00F4                     u2880:
  6378  00F4                     l2270:
  6379  00F4  30FF               	movlw	255
  6380  00F5  06CB               	xorwf	___ftadd@f2,f
  6381  00F6  30FF               	movlw	255
  6382  00F7  06CC               	xorwf	___ftadd@f2+1,f
  6383  00F8  30FF               	movlw	255
  6384  00F9  06CD               	xorwf	___ftadd@f2+2,f
  6385  00FA  3001               	movlw	1
  6386  00FB  07CB               	addwf	___ftadd@f2,f
  6387  00FC  3000               	movlw	0
  6388  00FD  1803               	skipnc
  6389  00FE  3001               	movlw	1
  6390  00FF  07CC               	addwf	___ftadd@f2+1,f
  6391  0100  3000               	movlw	0
  6392  0101  1803               	skipnc
  6393  0102  3001               	movlw	1
  6394  0103  07CD               	addwf	___ftadd@f2+2,f
  6395  0104                     l2272:
  6396  0104  01D2               	clrf	___ftadd@sign
  6397  0105                     l2274:
  6398  0105  0848               	movf	___ftadd@f1,w
  6399  0106  07CB               	addwf	___ftadd@f2,f
  6400  0107  0849               	movf	___ftadd@f1+1,w
  6401  0108  1103               	clrz
  6402  0109  1803               	skipnc
  6403  010A  0A49               	incf	___ftadd@f1+1,w
  6404  010B  1903               	skipnz
  6405  010C  290E               	goto	u2891
  6406  010D  07CC               	addwf	___ftadd@f2+1,f
  6407  010E                     u2891:
  6408  010E  084A               	movf	___ftadd@f1+2,w
  6409  010F  1103               	clrz
  6410  0110  1803               	skipnc
  6411  0111  0A4A               	incf	___ftadd@f1+2,w
  6412  0112  1903               	skipnz
  6413  0113  2915               	goto	u2892
  6414  0114  07CD               	addwf	___ftadd@f2+2,f
  6415  0115                     u2892:
  6416  0115                     l2276:
  6417  0115  1FCD               	btfss	___ftadd@f2+2,7
  6418  0116  2918               	goto	u2901
  6419  0117  2919               	goto	u2900
  6420  0118                     u2901:
  6421  0118  292B               	goto	l2282
  6422  0119                     u2900:
  6423  0119                     l2278:
  6424  0119  30FF               	movlw	255
  6425  011A  06CB               	xorwf	___ftadd@f2,f
  6426  011B  30FF               	movlw	255
  6427  011C  06CC               	xorwf	___ftadd@f2+1,f
  6428  011D  30FF               	movlw	255
  6429  011E  06CD               	xorwf	___ftadd@f2+2,f
  6430  011F  3001               	movlw	1
  6431  0120  07CB               	addwf	___ftadd@f2,f
  6432  0121  3000               	movlw	0
  6433  0122  1803               	skipnc
  6434  0123  3001               	movlw	1
  6435  0124  07CC               	addwf	___ftadd@f2+1,f
  6436  0125  3000               	movlw	0
  6437  0126  1803               	skipnc
  6438  0127  3001               	movlw	1
  6439  0128  07CD               	addwf	___ftadd@f2+2,f
  6440  0129                     l2280:
  6441  0129  01D2               	clrf	___ftadd@sign
  6442  012A  0AD2               	incf	___ftadd@sign,f
  6443  012B                     l2282:
  6444  012B  084B               	movf	___ftadd@f2,w
  6445  012C  00F0               	movwf	___ftpack@arg
  6446  012D  084C               	movf	___ftadd@f2+1,w
  6447  012E  00F1               	movwf	___ftpack@arg+1
  6448  012F  084D               	movf	___ftadd@f2+2,w
  6449  0130  00F2               	movwf	___ftpack@arg+2
  6450  0131  0854               	movf	___ftadd@exp1,w
  6451  0132  00CE               	movwf	??___ftadd
  6452  0133  084E               	movf	??___ftadd,w
  6453  0134  00F3               	movwf	___ftpack@exp
  6454  0135  0852               	movf	___ftadd@sign,w
  6455  0136  00CF               	movwf	??___ftadd+1
  6456  0137  084F               	movf	??___ftadd+1,w
  6457  0138  00F4               	movwf	___ftpack@sign
  6458  0139  160A  118A  2443  120A  118A  	fcall	___ftpack
  6459  013E  0870               	movf	?___ftpack,w
  6460  013F  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6462  0141  00C8               	movwf	?___ftadd
  6463  0142  0871               	movf	?___ftpack+1,w
  6464  0143  00C9               	movwf	?___ftadd+1
  6465  0144  0872               	movf	?___ftpack+2,w
  6466  0145  00CA               	movwf	?___ftadd+2
  6467  0146                     l666:
  6468  0146  0008               	return
  6469  0147                     __end_of___ftadd:
  6470                           
  6471                           	psect	text22
  6472  1EA9                     __ptext22:	
  6473 ;; *************** function ___ftneg *****************
  6474 ;; Defined at:
  6475 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  f1              3    0[COMMON] float 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  3    0[COMMON] float 
  6482 ;; Registers used:
  6483 ;;		wreg
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6489 ;;      Params:         3       0       0       0       0
  6490 ;;      Locals:         0       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0
  6492 ;;      Totals:         3       0       0       0       0
  6493 ;;Total ram usage:        3 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_sprintf
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function ___ftneg
  6504  1EA9                     ___ftneg:
  6505  1EA9                     l2670:	
  6506                           ;incstack = 0
  6507                           ; Regs used in ___ftneg: [wreg]
  6508                           
  6509  1EA9  0872               	movf	___ftneg@f1+2,w
  6510  1EAA  0471               	iorwf	___ftneg@f1+1,w
  6511  1EAB  0470               	iorwf	___ftneg@f1,w
  6512  1EAC  1903               	skipnz
  6513  1EAD  2EAF               	goto	u3681
  6514  1EAE  2EB0               	goto	u3680
  6515  1EAF                     u3681:
  6516  1EAF  2EB2               	goto	l2674
  6517  1EB0                     u3680:
  6518  1EB0                     l2672:
  6519  1EB0  3080               	movlw	128
  6520  1EB1  06F2               	xorwf	___ftneg@f1+2,f
  6521  1EB2                     l2674:
  6522  1EB2                     l740:
  6523  1EB2  0008               	return
  6524  1EB3                     __end_of___ftneg:
  6525                           
  6526                           	psect	text23
  6527  10EF                     __ptext23:	
  6528 ;; *************** function ___ftge *****************
  6529 ;; Defined at:
  6530 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  ff1             3    0[COMMON] float 
  6533 ;;  ff2             3    3[COMMON] float 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;		None               void
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         6       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0
  6548 ;;      Totals:         6       0       0       0       0
  6549 ;;Total ram usage:        6 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_sprintf
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           
  6559                           ;psect for function ___ftge
  6560  10EF                     ___ftge:
  6561  10EF                     l2650:	
  6562                           ;incstack = 0
  6563                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6564                           
  6565  10EF  1FF2               	btfss	___ftge@ff1+2,7
  6566  10F0  28F2               	goto	u3651
  6567  10F1  28F3               	goto	u3650
  6568  10F2                     u3651:
  6569  10F2  2900               	goto	l2654
  6570  10F3                     u3650:
  6571  10F3                     l2652:
  6572  10F3  0870               	movf	___ftge@ff1,w
  6573  10F4  3C00               	sublw	0
  6574  10F5  00F0               	movwf	___ftge@ff1
  6575  10F6  0871               	movf	___ftge@ff1+1,w
  6576  10F7  1C03               	skipc
  6577  10F8  0F71               	incfsz	___ftge@ff1+1,w
  6578  10F9  3C00               	sublw	0
  6579  10FA  00F1               	movwf	___ftge@ff1+1
  6580  10FB  0872               	movf	___ftge@ff1+2,w
  6581  10FC  1C03               	skipc
  6582  10FD  0F72               	incfsz	___ftge@ff1+2,w
  6583  10FE  3C80               	sublw	128
  6584  10FF  00F2               	movwf	___ftge@ff1+2
  6585  1100                     l2654:
  6586  1100  1FF5               	btfss	___ftge@ff2+2,7
  6587  1101  2903               	goto	u3661
  6588  1102  2904               	goto	u3660
  6589  1103                     u3661:
  6590  1103  2911               	goto	l2658
  6591  1104                     u3660:
  6592  1104                     l2656:
  6593  1104  0873               	movf	___ftge@ff2,w
  6594  1105  3C00               	sublw	0
  6595  1106  00F3               	movwf	___ftge@ff2
  6596  1107  0874               	movf	___ftge@ff2+1,w
  6597  1108  1C03               	skipc
  6598  1109  0F74               	incfsz	___ftge@ff2+1,w
  6599  110A  3C00               	sublw	0
  6600  110B  00F4               	movwf	___ftge@ff2+1
  6601  110C  0875               	movf	___ftge@ff2+2,w
  6602  110D  1C03               	skipc
  6603  110E  0F75               	incfsz	___ftge@ff2+2,w
  6604  110F  3C80               	sublw	128
  6605  1110  00F5               	movwf	___ftge@ff2+2
  6606  1111                     l2658:
  6607  1111  3080               	movlw	128
  6608  1112  06F2               	xorwf	___ftge@ff1+2,f
  6609  1113                     l2660:
  6610  1113  3080               	movlw	128
  6611  1114  06F5               	xorwf	___ftge@ff2+2,f
  6612  1115                     l2662:
  6613  1115  0875               	movf	___ftge@ff2+2,w
  6614  1116  0272               	subwf	___ftge@ff1+2,w
  6615  1117  1D03               	skipz
  6616  1118  291F               	goto	u3675
  6617  1119  0874               	movf	___ftge@ff2+1,w
  6618  111A  0271               	subwf	___ftge@ff1+1,w
  6619  111B  1D03               	skipz
  6620  111C  291F               	goto	u3675
  6621  111D  0873               	movf	___ftge@ff2,w
  6622  111E  0270               	subwf	___ftge@ff1,w
  6623  111F                     u3675:
  6624  111F  1803               	skipnc
  6625  1120  2922               	goto	u3671
  6626  1121  2923               	goto	u3670
  6627  1122                     u3671:
  6628  1122  2925               	goto	l2666
  6629  1123                     u3670:
  6630  1123                     l2664:
  6631  1123  1003               	clrc
  6632  1124  2926               	goto	l723
  6633  1125                     l2666:
  6634  1125  1403               	setc
  6635  1126                     l723:
  6636  1126  0008               	return
  6637  1127                     __end_of___ftge:
  6638                           
  6639                           	psect	text24
  6640  0801                     __ptext24:	
  6641 ;; *************** function _setup *****************
  6642 ;; Defined at:
  6643 ;;		line 111 in file "master.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6657 ;;      Params:         0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0
  6660 ;;      Totals:         0       0       0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:    1
  6664 ;; This function calls:
  6665 ;;		_spiInit
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function _setup
  6673  0801                     _setup:
  6674  0801                     l2762:	
  6675                           ;incstack = 0
  6676                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  6677                           
  6678  0801  1683               	bsf	3,5	;RP0=1, select bank3
  6679  0802  1703               	bsf	3,6	;RP1=1, select bank3
  6680  0803  0188               	clrf	8	;volatile
  6681  0804  0189               	clrf	9	;volatile
  6682  0805  1683               	bsf	3,5	;RP0=1, select bank1
  6683  0806  1303               	bcf	3,6	;RP1=0, select bank1
  6684  0807  0188               	clrf	8	;volatile
  6685  0808  0189               	clrf	9	;volatile
  6686  0809  1283               	bcf	3,5	;RP0=0, select bank0
  6687  080A  1303               	bcf	3,6	;RP1=0, select bank0
  6688  080B  0188               	clrf	8	;volatile
  6689  080C  0189               	clrf	9	;volatile
  6690  080D                     l2764:
  6691  080D  1683               	bsf	3,5	;RP0=1, select bank1
  6692  080E  1303               	bcf	3,6	;RP1=0, select bank1
  6693  080F  1087               	bcf	7,1	;volatile
  6694  0810                     l2766:
  6695  0810  1107               	bcf	7,2	;volatile
  6696  0811                     l2768:
  6697  0811  1283               	bcf	3,5	;RP0=0, select bank0
  6698  0812  1303               	bcf	3,6	;RP1=0, select bank0
  6699  0813  1507               	bsf	7,2	;volatile
  6700  0814                     l2770:
  6701  0814  1487               	bsf	7,1	;volatile
  6702  0815                     l2772:
  6703  0815  01F0               	clrf	spiInit@sDataSample
  6704  0816  01F1               	clrf	spiInit@sClockIdle
  6705  0817  01F2               	clrf	spiInit@sTransmitEdge
  6706  0818  3020               	movlw	32
  6707  0819  160A  158A  26D1  120A  158A  	fcall	_spiInit
  6708  081E                     l75:
  6709  081E  0008               	return
  6710  081F                     __end_of_setup:
  6711                           
  6712                           	psect	text25
  6713  1ED1                     __ptext25:	
  6714 ;; *************** function _spiInit *****************
  6715 ;; Defined at:
  6716 ;;		line 12 in file "SPI.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  sType           1    wreg     enum E1264
  6719 ;;  sDataSample     1    0[COMMON] enum E1272
  6720 ;;  sClockIdle      1    1[COMMON] enum E1276
  6721 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  sType           1    3[COMMON] enum E1264
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6733 ;;      Params:         3       0       0       0       0
  6734 ;;      Locals:         1       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0
  6736 ;;      Totals:         4       0       0       0       0
  6737 ;;Total ram usage:        4 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_setup
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _spiInit
  6748  1ED1                     _spiInit:
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  6752                           ;spiInit@sType stored from wreg
  6753  1ED1  00F3               	movwf	spiInit@sType
  6754  1ED2                     l2396:
  6755                           
  6756                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  6757  1ED2  1683               	bsf	3,5	;RP0=1, select bank1
  6758  1ED3  1303               	bcf	3,6	;RP1=0, select bank1
  6759  1ED4  1287               	bcf	7,5	;volatile
  6760                           
  6761                           ;SPI.c: 15:     if(sType & 0b00000100)
  6762  1ED5  1D73               	btfss	spiInit@sType,2
  6763  1ED6  2ED8               	goto	u3191
  6764  1ED7  2ED9               	goto	u3190
  6765  1ED8                     u3191:
  6766  1ED8  2EDD               	goto	l2402
  6767  1ED9                     u3190:
  6768  1ED9                     l2398:
  6769                           
  6770                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  6771  1ED9  0872               	movf	spiInit@sTransmitEdge,w
  6772  1EDA  0094               	movwf	20	;volatile
  6773  1EDB                     l2400:
  6774                           
  6775                           ;SPI.c: 18:         TRISC3 = 1;
  6776  1EDB  1587               	bsf	7,3	;volatile
  6777                           
  6778                           ;SPI.c: 19:     }
  6779  1EDC  2EE1               	goto	l91
  6780  1EDD                     l2402:
  6781                           
  6782                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  6783  1EDD  0870               	movf	spiInit@sDataSample,w
  6784  1EDE  0472               	iorwf	spiInit@sTransmitEdge,w
  6785  1EDF  0094               	movwf	20	;volatile
  6786  1EE0                     l2404:
  6787                           
  6788                           ;SPI.c: 23:         TRISC3 = 0;
  6789  1EE0  1187               	bcf	7,3	;volatile
  6790  1EE1                     l91:	
  6791                           ;SPI.c: 24:     }
  6792                           
  6793                           
  6794                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  6795  1EE1  0873               	movf	spiInit@sType,w
  6796  1EE2  0471               	iorwf	spiInit@sClockIdle,w
  6797  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
  6798  1EE4  1303               	bcf	3,6	;RP1=0, select bank0
  6799  1EE5  0094               	movwf	20	;volatile
  6800  1EE6                     l92:
  6801  1EE6  0008               	return
  6802  1EE7                     __end_of_spiInit:
  6803                           
  6804                           	psect	text26
  6805  1F38                     __ptext26:	
  6806 ;; *************** function _set_cursor *****************
  6807 ;; Defined at:
  6808 ;;		line 57 in file "LCD.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  a               1    wreg     unsigned char 
  6811 ;;  b               1    4[COMMON] unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  a               1    6[COMMON] unsigned char 
  6814 ;;  x               1    7[COMMON] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, pclath, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6824 ;;      Params:         1       0       0       0       0
  6825 ;;      Locals:         2       0       0       0       0
  6826 ;;      Temps:          1       0       0       0       0
  6827 ;;      Totals:         4       0       0       0       0
  6828 ;;Total ram usage:        4 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    2
  6831 ;; This function calls:
  6832 ;;		_CMDs
  6833 ;; This function is called by:
  6834 ;;		_main
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           
  6839                           ;psect for function _set_cursor
  6840  1F38                     _set_cursor:
  6841                           
  6842                           ;incstack = 0
  6843                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6844                           ;set_cursor@a stored from wreg
  6845  1F38  00F6               	movwf	set_cursor@a
  6846  1F39                     l2828:
  6847                           
  6848                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  6849  1F39  0376               	decf	set_cursor@a,w
  6850  1F3A  1D03               	btfss	3,2
  6851  1F3B  2F3D               	goto	u3881
  6852  1F3C  2F3E               	goto	u3880
  6853  1F3D                     u3881:
  6854  1F3D  2F4A               	goto	l2834
  6855  1F3E                     u3880:
  6856  1F3E                     l2830:
  6857                           
  6858                           ;LCD.c: 60:        x = 0x80 + b;
  6859  1F3E  0874               	movf	set_cursor@b,w
  6860  1F3F  3E80               	addlw	128
  6861  1F40  00F5               	movwf	??_set_cursor
  6862  1F41  0875               	movf	??_set_cursor,w
  6863  1F42  00F7               	movwf	set_cursor@x
  6864  1F43                     l2832:
  6865                           
  6866                           ;LCD.c: 61:        CMDs(x);
  6867  1F43  0877               	movf	set_cursor@x,w
  6868  1F44  160A  118A  209D  160A  158A  	fcall	_CMDs
  6869                           
  6870                           ;LCD.c: 62:     }
  6871  1F49  2F5B               	goto	l203
  6872  1F4A                     l2834:
  6873  1F4A  3002               	movlw	2
  6874  1F4B  0676               	xorwf	set_cursor@a,w
  6875  1F4C  1D03               	btfss	3,2
  6876  1F4D  2F4F               	goto	u3891
  6877  1F4E  2F50               	goto	u3890
  6878  1F4F                     u3891:
  6879  1F4F  2F5B               	goto	l203
  6880  1F50                     u3890:
  6881  1F50                     l2836:
  6882                           
  6883                           ;LCD.c: 64:         x = 0xC0 + b;
  6884  1F50  0874               	movf	set_cursor@b,w
  6885  1F51  3EC0               	addlw	192
  6886  1F52  00F5               	movwf	??_set_cursor
  6887  1F53  0875               	movf	??_set_cursor,w
  6888  1F54  00F7               	movwf	set_cursor@x
  6889  1F55                     l2838:
  6890                           
  6891                           ;LCD.c: 65:         CMDs(x);
  6892  1F55  0877               	movf	set_cursor@x,w
  6893  1F56  160A  118A  209D  160A  158A  	fcall	_CMDs
  6894  1F5B                     l203:
  6895  1F5B  0008               	return
  6896  1F5C                     __end_of_set_cursor:
  6897                           
  6898                           	psect	text27
  6899  10BD                     __ptext27:	
  6900 ;; *************** function _contador *****************
  6901 ;; Defined at:
  6902 ;;		line 84 in file "master.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;		None
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, pclath, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6916 ;;      Params:         0       0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0
  6918 ;;      Temps:          2       0       0       0       0
  6919 ;;      Totals:         2       0       0       0       0
  6920 ;;Total ram usage:        2 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    2
  6923 ;; This function calls:
  6924 ;;		_spiRead
  6925 ;;		_spiWrite
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _contador
  6933  10BD                     _contador:
  6934  10BD                     l2808:	
  6935                           ;incstack = 0
  6936                           ; Regs used in _contador: [wreg+status,2+status,0+pclath+cstack]
  6937                           
  6938                           
  6939                           ;master.c: 85:     TRISC1 = 0;
  6940  10BD  1283               	bcf	3,5	;RP0=0, select bank0
  6941  10BE  1303               	bcf	3,6	;RP1=0, select bank0
  6942  10BF  1107               	bcf	7,2	;volatile
  6943  10C0                     l2810:
  6944                           
  6945                           ;master.c: 86:     TRISC2 = 0;
  6946  10C0  3003               	movlw	3
  6947  10C1  00F2               	movwf	??_contador+1
  6948  10C2  3097               	movlw	151
  6949  10C3  00F1               	movwf	??_contador
  6950  10C4                     u4507:
  6951  10C4  0BF1               	decfsz	??_contador,f
  6952  10C5  28C4               	goto	u4507
  6953  10C6  0BF2               	decfsz	??_contador+1,f
  6954  10C7  28C4               	goto	u4507
  6955  10C8  28C9               	nop2
  6956  10C9                     l2812:
  6957                           
  6958                           ;master.c: 88:     PORTCbits.RC1 = 1;
  6959  10C9  3001               	movlw	1
  6960  10CA  160A  158A  2679  160A  118A  	fcall	_spiWrite
  6961  10CF                     l2814:
  6962                           
  6963                           ;master.c: 89:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  6964  10CF  160A  158A  2696  160A  118A  	fcall	_spiRead
  6965  10D4  00F1               	movwf	??_contador
  6966  10D5  0871               	movf	??_contador,w
  6967  10D6  1283               	bcf	3,5	;RP0=0, select bank0
  6968  10D7  1303               	bcf	3,6	;RP1=0, select bank0
  6969  10D8  00ED               	movwf	_cont
  6970  10D9  3003               	movlw	3
  6971  10DA  00F2               	movwf	??_contador+1
  6972  10DB  3097               	movlw	151
  6973  10DC  00F1               	movwf	??_contador
  6974  10DD                     u4517:
  6975  10DD  0BF1               	decfsz	??_contador,f
  6976  10DE  28DD               	goto	u4517
  6977  10DF  0BF2               	decfsz	??_contador+1,f
  6978  10E0  28DD               	goto	u4517
  6979  10E1  28E2               	nop2
  6980  10E2                     l2816:
  6981  10E2  1283               	bcf	3,5	;RP0=0, select bank0
  6982  10E3  1303               	bcf	3,6	;RP1=0, select bank0
  6983  10E4  1507               	bsf	7,2	;volatile
  6984  10E5  3003               	movlw	3
  6985  10E6  00F2               	movwf	??_contador+1
  6986  10E7  3097               	movlw	151
  6987  10E8  00F1               	movwf	??_contador
  6988  10E9                     u4527:
  6989  10E9  0BF1               	decfsz	??_contador,f
  6990  10EA  28E9               	goto	u4527
  6991  10EB  0BF2               	decfsz	??_contador+1,f
  6992  10EC  28E9               	goto	u4527
  6993  10ED  28EE               	nop2
  6994  10EE                     l69:
  6995  10EE  0008               	return
  6996  10EF                     __end_of_contador:
  6997                           
  6998                           	psect	text28
  6999  1E9F                     __ptext28:	
  7000 ;; *************** function _config_txsta *****************
  7001 ;; Defined at:
  7002 ;;		line 9 in file "USART.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;		None
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		None
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7016 ;;      Params:         0       0       0       0       0
  7017 ;;      Locals:         0       0       0       0       0
  7018 ;;      Temps:          0       0       0       0       0
  7019 ;;      Totals:         0       0       0       0       0
  7020 ;;Total ram usage:        0 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_main
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _config_txsta
  7031  1E9F                     _config_txsta:
  7032  1E9F                     l2776:	
  7033                           ;incstack = 0
  7034                           ; Regs used in _config_txsta: []
  7035                           
  7036                           
  7037                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  7038  1E9F  1683               	bsf	3,5	;RP0=1, select bank1
  7039  1EA0  1303               	bcf	3,6	;RP1=0, select bank1
  7040  1EA1  1398               	bcf	24,7	;volatile
  7041                           
  7042                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  7043  1EA2  1318               	bcf	24,6	;volatile
  7044                           
  7045                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  7046  1EA3  1698               	bsf	24,5	;volatile
  7047                           
  7048                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  7049  1EA4  1218               	bcf	24,4	;volatile
  7050                           
  7051                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  7052  1EA5  1118               	bcf	24,2	;volatile
  7053                           
  7054                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  7055  1EA6  1098               	bcf	24,1	;volatile
  7056                           
  7057                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  7058  1EA7  1018               	bcf	24,0	;volatile
  7059  1EA8                     l129:
  7060  1EA8  0008               	return
  7061  1EA9                     __end_of_config_txsta:
  7062                           
  7063                           	psect	text29
  7064  1E86                     __ptext29:	
  7065 ;; *************** function _config_rcsta *****************
  7066 ;; Defined at:
  7067 ;;		line 19 in file "USART.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;		None
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		status,2
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7081 ;;      Params:         0       0       0       0       0
  7082 ;;      Locals:         0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0
  7084 ;;      Totals:         0       0       0       0       0
  7085 ;;Total ram usage:        0 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_main
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           
  7095                           ;psect for function _config_rcsta
  7096  1E86                     _config_rcsta:
  7097  1E86                     l2778:	
  7098                           ;incstack = 0
  7099                           ; Regs used in _config_rcsta: [status,2]
  7100                           
  7101                           
  7102                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  7103  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  7104  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  7105  1E88  1798               	bsf	24,7	;volatile
  7106                           
  7107                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  7108  1E89  1318               	bcf	24,6	;volatile
  7109                           
  7110                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  7111  1E8A  1298               	bcf	24,5	;volatile
  7112                           
  7113                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  7114  1E8B  1618               	bsf	24,4	;volatile
  7115  1E8C                     l2780:
  7116                           
  7117                           ;USART.c: 24:     RCREG = 0;
  7118  1E8C  019A               	clrf	26	;volatile
  7119  1E8D                     l132:
  7120  1E8D  0008               	return
  7121  1E8E                     __end_of_config_rcsta:
  7122                           
  7123                           	psect	text30
  7124  0004                     __ptext30:	
  7125 ;; *************** function _clear_LCD *****************
  7126 ;; Defined at:
  7127 ;;		line 52 in file "LCD.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0
  7144 ;;      Totals:         0       0       0       0       0
  7145 ;;Total ram usage:        0 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    2
  7148 ;; This function calls:
  7149 ;;		_CMDs
  7150 ;; This function is called by:
  7151 ;;		_main
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function _clear_LCD
  7157  0004                     _clear_LCD:
  7158  0004                     l2806:	
  7159                           ;incstack = 0
  7160                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  7161                           
  7162                           
  7163                           ;LCD.c: 53:     CMDs(0);
  7164  0004  3000               	movlw	0
  7165  0005  160A  118A  209D  120A  118A  	fcall	_CMDs
  7166                           
  7167                           ;LCD.c: 54:     CMDs(1);
  7168  000A  3001               	movlw	1
  7169  000B  160A  118A  209D  120A  118A  	fcall	_CMDs
  7170  0010                     l197:
  7171  0010  0008               	return
  7172  0011                     __end_of_clear_LCD:
  7173                           
  7174                           	psect	text31
  7175  1E74                     __ptext31:	
  7176 ;; *************** function __baudios *****************
  7177 ;; Defined at:
  7178 ;;		line 5 in file "USART.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7192 ;;      Params:         0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0
  7195 ;;      Totals:         0       0       0       0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_main
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           
  7206                           ;psect for function __baudios
  7207  1E74                     __baudios:
  7208  1E74                     l2774:	
  7209                           ;incstack = 0
  7210                           ; Regs used in __baudios: [wreg]
  7211                           
  7212                           
  7213                           ;USART.c: 6:     SPBRG = 12;
  7214  1E74  300C               	movlw	12
  7215  1E75  1683               	bsf	3,5	;RP0=1, select bank1
  7216  1E76  1303               	bcf	3,6	;RP1=0, select bank1
  7217  1E77  0099               	movwf	25	;volatile
  7218  1E78                     l126:
  7219  1E78  0008               	return
  7220  1E79                     __end_of__baudios:
  7221                           
  7222                           	psect	text32
  7223  1FA6                     __ptext32:	
  7224 ;; *************** function _Write_USART_String *****************
  7225 ;; Defined at:
  7226 ;;		line 30 in file "USART.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  a               2    1[COMMON] PTR unsigned char 
  7229 ;;		 -> STR_3(13), BUFFER(20), 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  i               1    4[COMMON] unsigned char 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7241 ;;      Params:         2       0       0       0       0
  7242 ;;      Locals:         1       0       0       0       0
  7243 ;;      Temps:          1       0       0       0       0
  7244 ;;      Totals:         4       0       0       0       0
  7245 ;;Total ram usage:        4 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    1
  7248 ;; This function calls:
  7249 ;;		_Write_USART
  7250 ;; This function is called by:
  7251 ;;		_main
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function _Write_USART_String
  7257  1FA6                     _Write_USART_String:
  7258  1FA6                     l3140:	
  7259                           ;incstack = 0
  7260                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7261                           
  7262                           
  7263                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  7264  1FA6  01F4               	clrf	Write_USART_String@i
  7265  1FA7  2FBD               	goto	l3146
  7266  1FA8                     l3142:
  7267                           
  7268                           ;USART.c: 33:         Write_USART(a[i]);
  7269  1FA8  0874               	movf	Write_USART_String@i,w
  7270  1FA9  0771               	addwf	Write_USART_String@a,w
  7271  1FAA  0084               	movwf	4
  7272  1FAB  0872               	movf	Write_USART_String@a+1,w
  7273  1FAC  1803               	skipnc
  7274  1FAD  0A72               	incf	Write_USART_String@a+1,w
  7275  1FAE  00FF               	movwf	btemp+1
  7276  1FAF  160A  118A  2000  160A  158A  	fcall	stringtab
  7277  1FB4  160A  158A  26B3  160A  158A  	fcall	_Write_USART
  7278  1FB9                     l3144:
  7279                           
  7280                           ;USART.c: 34:     }
  7281  1FB9  3001               	movlw	1
  7282  1FBA  00F3               	movwf	??_Write_USART_String
  7283  1FBB  0873               	movf	??_Write_USART_String,w
  7284  1FBC  07F4               	addwf	Write_USART_String@i,f
  7285  1FBD                     l3146:
  7286  1FBD  0874               	movf	Write_USART_String@i,w
  7287  1FBE  0771               	addwf	Write_USART_String@a,w
  7288  1FBF  0084               	movwf	4
  7289  1FC0  0872               	movf	Write_USART_String@a+1,w
  7290  1FC1  1803               	skipnc
  7291  1FC2  0A72               	incf	Write_USART_String@a+1,w
  7292  1FC3  1283               	bcf	3,5	;RP0=0, select bank0
  7293  1FC4  1303               	bcf	3,6	;RP1=0, select bank0
  7294  1FC5  00FF               	movwf	btemp+1
  7295  1FC6  160A  118A  2000  160A  158A  	fcall	stringtab
  7296  1FCB  3A00               	xorlw	0
  7297  1FCC  1D03               	skipz
  7298  1FCD  2FCF               	goto	u4471
  7299  1FCE  2FD0               	goto	u4470
  7300  1FCF                     u4471:
  7301  1FCF  2FA8               	goto	l3142
  7302  1FD0                     u4470:
  7303  1FD0                     l144:
  7304  1FD0  0008               	return
  7305  1FD1                     __end_of_Write_USART_String:
  7306                           
  7307                           	psect	text33
  7308  1EB3                     __ptext33:	
  7309 ;; *************** function _Write_USART *****************
  7310 ;; Defined at:
  7311 ;;		line 26 in file "USART.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  a               1    wreg     unsigned char 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  a               1    0[COMMON] unsigned char 
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7325 ;;      Params:         0       0       0       0       0
  7326 ;;      Locals:         1       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0
  7328 ;;      Totals:         1       0       0       0       0
  7329 ;;Total ram usage:        1 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;;		_Write_USART_String
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _Write_USART
  7341  1EB3                     _Write_USART:
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in _Write_USART: [wreg]
  7345                           ;Write_USART@a stored from wreg
  7346  1EB3  00F0               	movwf	Write_USART@a
  7347  1EB4                     l2384:
  7348  1EB4                     l135:	
  7349                           ;USART.c: 27:     while(!TRMT);
  7350                           
  7351  1EB4  1683               	bsf	3,5	;RP0=1, select bank1
  7352  1EB5  1303               	bcf	3,6	;RP1=0, select bank1
  7353  1EB6  1C98               	btfss	24,1	;volatile
  7354  1EB7  2EB9               	goto	u3181
  7355  1EB8  2EBA               	goto	u3180
  7356  1EB9                     u3181:
  7357  1EB9  2EB4               	goto	l135
  7358  1EBA                     u3180:
  7359  1EBA                     l2386:
  7360                           
  7361                           ;USART.c: 28:     TXREG=a;
  7362  1EBA  0870               	movf	Write_USART@a,w
  7363  1EBB  1283               	bcf	3,5	;RP0=0, select bank0
  7364  1EBC  1303               	bcf	3,6	;RP1=0, select bank0
  7365  1EBD  0099               	movwf	25	;volatile
  7366  1EBE                     l138:
  7367  1EBE  0008               	return
  7368  1EBF                     __end_of_Write_USART:
  7369                           
  7370                           	psect	text34
  7371  130E                     __ptext34:	
  7372 ;; *************** function _LCD_init *****************
  7373 ;; Defined at:
  7374 ;;		line 69 in file "LCD.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0, pclath, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0
  7390 ;;      Temps:          2       0       0       0       0
  7391 ;;      Totals:         2       0       0       0       0
  7392 ;;Total ram usage:        2 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    2
  7395 ;; This function calls:
  7396 ;;		_CMDs
  7397 ;; This function is called by:
  7398 ;;		_main
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _LCD_init
  7404  130E                     _LCD_init:
  7405  130E                     l2782:	
  7406                           ;incstack = 0
  7407                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7408                           
  7409                           
  7410                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7411  130E  301A               	movlw	26
  7412  130F  00F5               	movwf	??_LCD_init+1
  7413  1310  30F8               	movlw	248
  7414  1311  00F4               	movwf	??_LCD_init
  7415  1312                     u4537:
  7416  1312  0BF4               	decfsz	??_LCD_init,f
  7417  1313  2B12               	goto	u4537
  7418  1314  0BF5               	decfsz	??_LCD_init+1,f
  7419  1315  2B12               	goto	u4537
  7420  1316  0000               	nop
  7421  1317                     l2784:
  7422                           
  7423                           ;LCD.c: 71:     CMDs (0x30);
  7424  1317  3030               	movlw	48
  7425  1318  160A  118A  209D  160A  118A  	fcall	_CMDs
  7426  131D                     l2786:
  7427                           
  7428                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7429  131D  3007               	movlw	7
  7430  131E  00F5               	movwf	??_LCD_init+1
  7431  131F  307D               	movlw	125
  7432  1320  00F4               	movwf	??_LCD_init
  7433  1321                     u4547:
  7434  1321  0BF4               	decfsz	??_LCD_init,f
  7435  1322  2B21               	goto	u4547
  7436  1323  0BF5               	decfsz	??_LCD_init+1,f
  7437  1324  2B21               	goto	u4547
  7438                           
  7439                           ;LCD.c: 73:     CMDs (0x30);
  7440  1325  3030               	movlw	48
  7441  1326  160A  118A  209D  160A  118A  	fcall	_CMDs
  7442  132B                     l2788:
  7443                           
  7444                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7445  132B  3021               	movlw	33
  7446  132C  00F4               	movwf	??_LCD_init
  7447  132D                     u4557:
  7448  132D  0BF4               	decfsz	??_LCD_init,f
  7449  132E  2B2D               	goto	u4557
  7450  132F                     l2790:
  7451                           
  7452                           ;LCD.c: 75:     CMDs (0x30);
  7453  132F  3030               	movlw	48
  7454  1330  160A  118A  209D  160A  118A  	fcall	_CMDs
  7455                           
  7456                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7457  1335  3021               	movlw	33
  7458  1336  00F4               	movwf	??_LCD_init
  7459  1337                     u4567:
  7460  1337  0BF4               	decfsz	??_LCD_init,f
  7461  1338  2B37               	goto	u4567
  7462  1339                     l2792:
  7463                           
  7464                           ;LCD.c: 77:     CMDs (0x38);
  7465  1339  3038               	movlw	56
  7466  133A  160A  118A  209D  160A  118A  	fcall	_CMDs
  7467  133F                     l2794:
  7468                           
  7469                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7470  133F  3013               	movlw	19
  7471  1340  00F4               	movwf	??_LCD_init
  7472  1341                     u4577:
  7473  1341  0BF4               	decfsz	??_LCD_init,f
  7474  1342  2B41               	goto	u4577
  7475  1343  2B44               	nop2
  7476                           
  7477                           ;LCD.c: 79:     CMDs (0x08);
  7478  1344  3008               	movlw	8
  7479  1345  160A  118A  209D  160A  118A  	fcall	_CMDs
  7480  134A                     l2796:
  7481                           
  7482                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7483  134A  3013               	movlw	19
  7484  134B  00F4               	movwf	??_LCD_init
  7485  134C                     u4587:
  7486  134C  0BF4               	decfsz	??_LCD_init,f
  7487  134D  2B4C               	goto	u4587
  7488  134E  2B4F               	nop2
  7489  134F                     l2798:
  7490                           
  7491                           ;LCD.c: 81:     CMDs (0x01);
  7492  134F  3001               	movlw	1
  7493  1350  160A  118A  209D  160A  118A  	fcall	_CMDs
  7494                           
  7495                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7496  1355  3007               	movlw	7
  7497  1356  00F5               	movwf	??_LCD_init+1
  7498  1357  307D               	movlw	125
  7499  1358  00F4               	movwf	??_LCD_init
  7500  1359                     u4597:
  7501  1359  0BF4               	decfsz	??_LCD_init,f
  7502  135A  2B59               	goto	u4597
  7503  135B  0BF5               	decfsz	??_LCD_init+1,f
  7504  135C  2B59               	goto	u4597
  7505  135D                     l2800:
  7506                           
  7507                           ;LCD.c: 83:     CMDs (0x06);
  7508  135D  3006               	movlw	6
  7509  135E  160A  118A  209D  160A  118A  	fcall	_CMDs
  7510  1363                     l2802:
  7511                           
  7512                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7513  1363  3013               	movlw	19
  7514  1364  00F4               	movwf	??_LCD_init
  7515  1365                     u4607:
  7516  1365  0BF4               	decfsz	??_LCD_init,f
  7517  1366  2B65               	goto	u4607
  7518  1367  2B68               	nop2
  7519                           
  7520                           ;LCD.c: 85:     CMDs (0x0C);
  7521  1368  300C               	movlw	12
  7522  1369  160A  118A  209D  160A  118A  	fcall	_CMDs
  7523  136E                     l2804:
  7524                           
  7525                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  7526  136E  3013               	movlw	19
  7527  136F  00F4               	movwf	??_LCD_init
  7528  1370                     u4617:
  7529  1370  0BF4               	decfsz	??_LCD_init,f
  7530  1371  2B70               	goto	u4617
  7531  1372  2B73               	nop2
  7532  1373                     l206:
  7533  1373  0008               	return
  7534  1374                     __end_of_LCD_init:
  7535                           
  7536                           	psect	text35
  7537  109D                     __ptext35:	
  7538 ;; *************** function _CMDs *****************
  7539 ;; Defined at:
  7540 ;;		line 42 in file "LCD.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  a               1    wreg     unsigned char 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  a               1    3[COMMON] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, status,2, status,0, pclath, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7554 ;;      Params:         0       0       0       0       0
  7555 ;;      Locals:         1       0       0       0       0
  7556 ;;      Temps:          2       0       0       0       0
  7557 ;;      Totals:         3       0       0       0       0
  7558 ;;Total ram usage:        3 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    1
  7561 ;; This function calls:
  7562 ;;		_port
  7563 ;; This function is called by:
  7564 ;;		_clear_LCD
  7565 ;;		_set_cursor
  7566 ;;		_LCD_init
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           
  7571                           ;psect for function _CMDs
  7572  109D                     _CMDs:
  7573                           
  7574                           ;incstack = 0
  7575                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  7576                           ;CMDs@a stored from wreg
  7577  109D  00F3               	movwf	CMDs@a
  7578  109E                     l2406:
  7579                           
  7580                           ;LCD.c: 43:     RE0 = 0;
  7581  109E  1283               	bcf	3,5	;RP0=0, select bank0
  7582  109F  1303               	bcf	3,6	;RP1=0, select bank0
  7583  10A0  1009               	bcf	9,0	;volatile
  7584  10A1                     l2408:
  7585                           
  7586                           ;LCD.c: 44:     port(a);
  7587  10A1  0873               	movf	CMDs@a,w
  7588  10A2  160A  118A  219B  160A  118A  	fcall	_port
  7589  10A7                     l2410:
  7590                           
  7591                           ;LCD.c: 45:     RE1 = 1;
  7592  10A7  1283               	bcf	3,5	;RP0=0, select bank0
  7593  10A8  1303               	bcf	3,6	;RP1=0, select bank0
  7594  10A9  1489               	bsf	9,1	;volatile
  7595  10AA                     l2412:
  7596                           
  7597                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7598  10AA  28AB               	nop2	;2 cycle nop
  7599  10AB  28AC               	nop2	;2 cycle nop
  7600  10AC  0000               	nop
  7601  10AD                     l2414:
  7602                           
  7603                           ;LCD.c: 47:     RE1 = 0;
  7604  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  7605  10AE  1303               	bcf	3,6	;RP1=0, select bank0
  7606  10AF  1089               	bcf	9,1	;volatile
  7607  10B0                     l2416:
  7608                           
  7609                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  7610  10B0  28B1               	nop2	;2 cycle nop
  7611  10B1  28B2               	nop2	;2 cycle nop
  7612  10B2  0000               	nop
  7613  10B3                     l2418:
  7614                           
  7615                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  7616  10B3  3003               	movlw	3
  7617  10B4  00F2               	movwf	??_CMDs+1
  7618  10B5  3097               	movlw	151
  7619  10B6  00F1               	movwf	??_CMDs
  7620  10B7                     u4627:
  7621  10B7  0BF1               	decfsz	??_CMDs,f
  7622  10B8  28B7               	goto	u4627
  7623  10B9  0BF2               	decfsz	??_CMDs+1,f
  7624  10BA  28B7               	goto	u4627
  7625  10BB  28BC               	nop2
  7626  10BC                     l194:
  7627  10BC  0008               	return
  7628  10BD                     __end_of_CMDs:
  7629                           
  7630                           	psect	text36
  7631  119B                     __ptext36:	
  7632 ;; *************** function _port *****************
  7633 ;; Defined at:
  7634 ;;		line 7 in file "LCD.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  a               1    wreg     unsigned char 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  a               1    0[COMMON] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7648 ;;      Params:         0       0       0       0       0
  7649 ;;      Locals:         1       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0
  7651 ;;      Totals:         1       0       0       0       0
  7652 ;;Total ram usage:        1 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_CMDs
  7658 ;;		_write_char
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           
  7663                           ;psect for function _port
  7664  119B                     _port:
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _port: [wreg]
  7668                           ;port@a stored from wreg
  7669  119B  00F0               	movwf	port@a
  7670  119C                     l2102:
  7671                           
  7672                           ;LCD.c: 8:     if(a & 1){
  7673  119C  1C70               	btfss	port@a,0
  7674  119D  299F               	goto	u2381
  7675  119E  29A0               	goto	u2380
  7676  119F                     u2381:
  7677  119F  29A4               	goto	l175
  7678  11A0                     u2380:
  7679  11A0                     l2104:
  7680                           
  7681                           ;LCD.c: 9:         RD0=1;}
  7682  11A0  1283               	bcf	3,5	;RP0=0, select bank0
  7683  11A1  1303               	bcf	3,6	;RP1=0, select bank0
  7684  11A2  1408               	bsf	8,0	;volatile
  7685  11A3  29A7               	goto	l176
  7686  11A4                     l175:	
  7687                           ;LCD.c: 10:     else{
  7688                           
  7689                           
  7690                           ;LCD.c: 11:         RD0=0;}
  7691  11A4  1283               	bcf	3,5	;RP0=0, select bank0
  7692  11A5  1303               	bcf	3,6	;RP1=0, select bank0
  7693  11A6  1008               	bcf	8,0	;volatile
  7694  11A7                     l176:
  7695                           
  7696                           ;LCD.c: 12:     if(a & 2){
  7697  11A7  1CF0               	btfss	port@a,1
  7698  11A8  29AA               	goto	u2391
  7699  11A9  29AB               	goto	u2390
  7700  11AA                     u2391:
  7701  11AA  29AD               	goto	l177
  7702  11AB                     u2390:
  7703  11AB                     l2106:
  7704                           
  7705                           ;LCD.c: 13:         RD1=1;}
  7706  11AB  1488               	bsf	8,1	;volatile
  7707  11AC  29AE               	goto	l178
  7708  11AD                     l177:	
  7709                           ;LCD.c: 14:     else{
  7710                           
  7711                           
  7712                           ;LCD.c: 15:         RD1=0;}
  7713  11AD  1088               	bcf	8,1	;volatile
  7714  11AE                     l178:
  7715                           
  7716                           ;LCD.c: 16:     if(a & 4){
  7717  11AE  1D70               	btfss	port@a,2
  7718  11AF  29B1               	goto	u2401
  7719  11B0  29B2               	goto	u2400
  7720  11B1                     u2401:
  7721  11B1  29B4               	goto	l179
  7722  11B2                     u2400:
  7723  11B2                     l2108:
  7724                           
  7725                           ;LCD.c: 17:         RD2=1;}
  7726  11B2  1508               	bsf	8,2	;volatile
  7727  11B3  29B5               	goto	l180
  7728  11B4                     l179:	
  7729                           ;LCD.c: 18:     else{
  7730                           
  7731                           
  7732                           ;LCD.c: 19:         RD2=0;}
  7733  11B4  1108               	bcf	8,2	;volatile
  7734  11B5                     l180:
  7735                           
  7736                           ;LCD.c: 20:     if(a & 8){
  7737  11B5  1DF0               	btfss	port@a,3
  7738  11B6  29B8               	goto	u2411
  7739  11B7  29B9               	goto	u2410
  7740  11B8                     u2411:
  7741  11B8  29BB               	goto	l181
  7742  11B9                     u2410:
  7743  11B9                     l2110:
  7744                           
  7745                           ;LCD.c: 21:         RD3=1;}
  7746  11B9  1588               	bsf	8,3	;volatile
  7747  11BA  29BC               	goto	l182
  7748  11BB                     l181:	
  7749                           ;LCD.c: 22:     else{
  7750                           
  7751                           
  7752                           ;LCD.c: 23:         RD3=0;}
  7753  11BB  1188               	bcf	8,3	;volatile
  7754  11BC                     l182:
  7755                           
  7756                           ;LCD.c: 24:     if(a & 16){
  7757  11BC  1E70               	btfss	port@a,4
  7758  11BD  29BF               	goto	u2421
  7759  11BE  29C0               	goto	u2420
  7760  11BF                     u2421:
  7761  11BF  29C2               	goto	l183
  7762  11C0                     u2420:
  7763  11C0                     l2112:
  7764                           
  7765                           ;LCD.c: 25:         RD4=1;}
  7766  11C0  1608               	bsf	8,4	;volatile
  7767  11C1  29C3               	goto	l184
  7768  11C2                     l183:	
  7769                           ;LCD.c: 26:     else{
  7770                           
  7771                           
  7772                           ;LCD.c: 27:         RD4=0;}
  7773  11C2  1208               	bcf	8,4	;volatile
  7774  11C3                     l184:
  7775                           
  7776                           ;LCD.c: 28:     if(a & 32){
  7777  11C3  1EF0               	btfss	port@a,5
  7778  11C4  29C6               	goto	u2431
  7779  11C5  29C7               	goto	u2430
  7780  11C6                     u2431:
  7781  11C6  29C9               	goto	l185
  7782  11C7                     u2430:
  7783  11C7                     l2114:
  7784                           
  7785                           ;LCD.c: 29:         RD5=1;}
  7786  11C7  1688               	bsf	8,5	;volatile
  7787  11C8  29CA               	goto	l186
  7788  11C9                     l185:	
  7789                           ;LCD.c: 30:     else{
  7790                           
  7791                           
  7792                           ;LCD.c: 31:         RD5=0;}
  7793  11C9  1288               	bcf	8,5	;volatile
  7794  11CA                     l186:
  7795                           
  7796                           ;LCD.c: 32:     if(a & 64){
  7797  11CA  1F70               	btfss	port@a,6
  7798  11CB  29CD               	goto	u2441
  7799  11CC  29CE               	goto	u2440
  7800  11CD                     u2441:
  7801  11CD  29D0               	goto	l187
  7802  11CE                     u2440:
  7803  11CE                     l2116:
  7804                           
  7805                           ;LCD.c: 33:         RD6=1;}
  7806  11CE  1708               	bsf	8,6	;volatile
  7807  11CF  29D1               	goto	l188
  7808  11D0                     l187:	
  7809                           ;LCD.c: 34:     else{
  7810                           
  7811                           
  7812                           ;LCD.c: 35:         RD6=0;}
  7813  11D0  1308               	bcf	8,6	;volatile
  7814  11D1                     l188:
  7815                           
  7816                           ;LCD.c: 36:     if(a & 128){
  7817  11D1  1FF0               	btfss	port@a,7
  7818  11D2  29D4               	goto	u2451
  7819  11D3  29D5               	goto	u2450
  7820  11D4                     u2451:
  7821  11D4  29D7               	goto	l189
  7822  11D5                     u2450:
  7823  11D5                     l2118:
  7824                           
  7825                           ;LCD.c: 37:         RD7=1;}
  7826  11D5  1788               	bsf	8,7	;volatile
  7827  11D6  29D8               	goto	l191
  7828  11D7                     l189:	
  7829                           ;LCD.c: 38:     else{
  7830                           
  7831                           
  7832                           ;LCD.c: 39:         RD7=0;}
  7833  11D7  1388               	bcf	8,7	;volatile
  7834  11D8                     l191:
  7835  11D8  0008               	return
  7836  11D9                     __end_of_port:
  7837                           
  7838                           	psect	text37
  7839  1127                     __ptext37:	
  7840 ;; *************** function _ADCread *****************
  7841 ;; Defined at:
  7842 ;;		line 96 in file "master.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;		None
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      void 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, pclath, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7856 ;;      Params:         0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0
  7858 ;;      Temps:          2       0       0       0       0
  7859 ;;      Totals:         2       0       0       0       0
  7860 ;;Total ram usage:        2 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    2
  7863 ;; This function calls:
  7864 ;;		___lbtoft
  7865 ;;		_spiRead
  7866 ;;		_spiWrite
  7867 ;; This function is called by:
  7868 ;;		_main
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           
  7873                           ;psect for function _ADCread
  7874  1127                     _ADCread:
  7875  1127                     l2818:	
  7876                           ;incstack = 0
  7877                           ; Regs used in _ADCread: [wreg+status,2+status,0+pclath+cstack]
  7878                           
  7879  1127  1283               	bcf	3,5	;RP0=0, select bank0
  7880  1128  1303               	bcf	3,6	;RP1=0, select bank0
  7881  1129  1087               	bcf	7,1	;volatile
  7882  112A                     l2820:
  7883  112A  3003               	movlw	3
  7884  112B  00FD               	movwf	??_ADCread+1
  7885  112C  3097               	movlw	151
  7886  112D  00FC               	movwf	??_ADCread
  7887  112E                     u4637:
  7888  112E  0BFC               	decfsz	??_ADCread,f
  7889  112F  292E               	goto	u4637
  7890  1130  0BFD               	decfsz	??_ADCread+1,f
  7891  1131  292E               	goto	u4637
  7892  1132  2933               	nop2
  7893  1133                     l2822:
  7894  1133  3001               	movlw	1
  7895  1134  160A  158A  2679  160A  118A  	fcall	_spiWrite
  7896  1139                     l2824:
  7897  1139  160A  158A  2696  160A  118A  	fcall	_spiRead
  7898  113E  160A  158A  271A  160A  118A  	fcall	___lbtoft
  7899  1143  0878               	movf	?___lbtoft,w
  7900  1144  1283               	bcf	3,5	;RP0=0, select bank0
  7901  1145  1303               	bcf	3,6	;RP1=0, select bank0
  7902  1146  00EA               	movwf	_V1
  7903  1147  0879               	movf	?___lbtoft+1,w
  7904  1148  00EB               	movwf	_V1+1
  7905  1149  087A               	movf	?___lbtoft+2,w
  7906  114A  00EC               	movwf	_V1+2
  7907  114B  3003               	movlw	3
  7908  114C  00FD               	movwf	??_ADCread+1
  7909  114D  3097               	movlw	151
  7910  114E  00FC               	movwf	??_ADCread
  7911  114F                     u4647:
  7912  114F  0BFC               	decfsz	??_ADCread,f
  7913  1150  294F               	goto	u4647
  7914  1151  0BFD               	decfsz	??_ADCread+1,f
  7915  1152  294F               	goto	u4647
  7916  1153  2954               	nop2
  7917  1154                     l2826:
  7918  1154  1283               	bcf	3,5	;RP0=0, select bank0
  7919  1155  1303               	bcf	3,6	;RP1=0, select bank0
  7920  1156  1487               	bsf	7,1	;volatile
  7921  1157  3003               	movlw	3
  7922  1158  00FD               	movwf	??_ADCread+1
  7923  1159  3097               	movlw	151
  7924  115A  00FC               	movwf	??_ADCread
  7925  115B                     u4657:
  7926  115B  0BFC               	decfsz	??_ADCread,f
  7927  115C  295B               	goto	u4657
  7928  115D  0BFD               	decfsz	??_ADCread+1,f
  7929  115E  295B               	goto	u4657
  7930  115F  2960               	nop2
  7931  1160                     l72:
  7932  1160  0008               	return
  7933  1161                     __end_of_ADCread:
  7934                           
  7935                           	psect	text38
  7936  1E79                     __ptext38:	
  7937 ;; *************** function _spiWrite *****************
  7938 ;; Defined at:
  7939 ;;		line 34 in file "SPI.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  dat             1    wreg     unsigned char 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  dat             1    0[COMMON] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7953 ;;      Params:         0       0       0       0       0
  7954 ;;      Locals:         1       0       0       0       0
  7955 ;;      Temps:          0       0       0       0       0
  7956 ;;      Totals:         1       0       0       0       0
  7957 ;;Total ram usage:        1 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_contador
  7963 ;;		_ADCread
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           
  7968                           ;psect for function _spiWrite
  7969  1E79                     _spiWrite:
  7970                           
  7971                           ;incstack = 0
  7972                           ; Regs used in _spiWrite: [wreg]
  7973                           ;spiWrite@dat stored from wreg
  7974  1E79  00F0               	movwf	spiWrite@dat
  7975  1E7A                     l2388:
  7976                           
  7977                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  7978  1E7A  0870               	movf	spiWrite@dat,w
  7979  1E7B  1283               	bcf	3,5	;RP0=0, select bank0
  7980  1E7C  1303               	bcf	3,6	;RP1=0, select bank0
  7981  1E7D  0093               	movwf	19	;volatile
  7982  1E7E                     l101:
  7983  1E7E  0008               	return
  7984  1E7F                     __end_of_spiWrite:
  7985                           
  7986                           	psect	text39
  7987  1E96                     __ptext39:	
  7988 ;; *************** function _spiRead *****************
  7989 ;; Defined at:
  7990 ;;		line 47 in file "SPI.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      unsigned char 
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0, pclath, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8004 ;;      Params:         0       0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0
  8007 ;;      Totals:         0       0       0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    1
  8011 ;; This function calls:
  8012 ;;		_spiReceiveWait
  8013 ;; This function is called by:
  8014 ;;		_contador
  8015 ;;		_ADCread
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           
  8020                           ;psect for function _spiRead
  8021  1E96                     _spiRead:
  8022  1E96                     l2390:	
  8023                           ;incstack = 0
  8024                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8025                           
  8026                           
  8027                           ;SPI.c: 49:     spiReceiveWait();
  8028  1E96  160A  158A  267F  160A  158A  	fcall	_spiReceiveWait
  8029  1E9B                     l2392:
  8030                           
  8031                           ;SPI.c: 50:     return(SSPBUF);
  8032  1E9B  1283               	bcf	3,5	;RP0=0, select bank0
  8033  1E9C  1303               	bcf	3,6	;RP1=0, select bank0
  8034  1E9D  0813               	movf	19,w	;volatile
  8035  1E9E                     l109:
  8036  1E9E  0008               	return
  8037  1E9F                     __end_of_spiRead:
  8038                           
  8039                           	psect	text40
  8040  1E7F                     __ptext40:	
  8041 ;; *************** function _spiReceiveWait *****************
  8042 ;; Defined at:
  8043 ;;		line 29 in file "SPI.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;		None
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;		None
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      void 
  8050 ;; Registers used:
  8051 ;;		None
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8057 ;;      Params:         0       0       0       0       0
  8058 ;;      Locals:         0       0       0       0       0
  8059 ;;      Temps:          0       0       0       0       0
  8060 ;;      Totals:         0       0       0       0       0
  8061 ;;Total ram usage:        0 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_spiRead
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _spiReceiveWait
  8072  1E7F                     _spiReceiveWait:
  8073  1E7F                     l2100:	
  8074                           ;incstack = 0
  8075                           ; Regs used in _spiReceiveWait: []
  8076                           
  8077  1E7F                     l95:	
  8078                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  8079                           
  8080  1E7F  1683               	bsf	3,5	;RP0=1, select bank1
  8081  1E80  1303               	bcf	3,6	;RP1=0, select bank1
  8082  1E81  1C14               	btfss	20,0	;volatile
  8083  1E82  2E84               	goto	u2371
  8084  1E83  2E85               	goto	u2370
  8085  1E84                     u2371:
  8086  1E84  2E7F               	goto	l95
  8087  1E85                     u2370:
  8088  1E85                     l98:
  8089  1E85  0008               	return
  8090  1E86                     __end_of_spiReceiveWait:
  8091                           
  8092                           	psect	text41
  8093  1F1A                     __ptext41:	
  8094 ;; *************** function ___lbtoft *****************
  8095 ;; Defined at:
  8096 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lbtoft.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  c               1    wreg     unsigned char 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  c               1   11[COMMON] unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  3    8[COMMON] float 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0, pclath, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8110 ;;      Params:         3       0       0       0       0
  8111 ;;      Locals:         1       0       0       0       0
  8112 ;;      Temps:          0       4       0       0       0
  8113 ;;      Totals:         4       4       0       0       0
  8114 ;;Total ram usage:        8 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    1
  8117 ;; This function calls:
  8118 ;;		___ftpack
  8119 ;; This function is called by:
  8120 ;;		_ADCread
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           
  8125                           ;psect for function ___lbtoft
  8126  1F1A                     ___lbtoft:
  8127                           
  8128                           ;incstack = 0
  8129                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  8130                           ;___lbtoft@c stored from wreg
  8131  1F1A  00FB               	movwf	___lbtoft@c
  8132  1F1B                     l2728:
  8133  1F1B  087B               	movf	___lbtoft@c,w
  8134  1F1C  1283               	bcf	3,5	;RP0=0, select bank0
  8135  1F1D  1303               	bcf	3,6	;RP1=0, select bank0
  8136  1F1E  00A0               	movwf	??___lbtoft
  8137  1F1F  01A1               	clrf	??___lbtoft+1
  8138  1F20  01A2               	clrf	??___lbtoft+2
  8139  1F21  0820               	movf	??___lbtoft,w
  8140  1F22  00F0               	movwf	___ftpack@arg
  8141  1F23  0821               	movf	??___lbtoft+1,w
  8142  1F24  00F1               	movwf	___ftpack@arg+1
  8143  1F25  0822               	movf	??___lbtoft+2,w
  8144  1F26  00F2               	movwf	___ftpack@arg+2
  8145  1F27  308E               	movlw	142
  8146  1F28  00A3               	movwf	??___lbtoft+3
  8147  1F29  0823               	movf	??___lbtoft+3,w
  8148  1F2A  00F3               	movwf	___ftpack@exp
  8149  1F2B  01F4               	clrf	___ftpack@sign
  8150  1F2C  160A  118A  2443  160A  158A  	fcall	___ftpack
  8151  1F31  0870               	movf	?___ftpack,w
  8152  1F32  00F8               	movwf	?___lbtoft
  8153  1F33  0871               	movf	?___ftpack+1,w
  8154  1F34  00F9               	movwf	?___lbtoft+1
  8155  1F35  0872               	movf	?___ftpack+2,w
  8156  1F36  00FA               	movwf	?___lbtoft+2
  8157  1F37                     l781:
  8158  1F37  0008               	return
  8159  1F38                     __end_of___lbtoft:
  8160                           
  8161                           	psect	text42
  8162  1443                     __ptext42:	
  8163 ;; *************** function ___ftpack *****************
  8164 ;; Defined at:
  8165 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  arg             3    0[COMMON] unsigned um
  8168 ;;  exp             1    3[COMMON] unsigned char 
  8169 ;;  sign            1    4[COMMON] unsigned char 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  3    0[COMMON] float 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2, status,0
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8181 ;;      Params:         5       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0
  8183 ;;      Temps:          3       0       0       0       0
  8184 ;;      Totals:         8       0       0       0       0
  8185 ;;Total ram usage:        8 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		___ftadd
  8191 ;;		___ftmul
  8192 ;;		___lbtoft
  8193 ;;		___lltoft
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function ___ftpack
  8199  1443                     ___ftpack:
  8200  1443                     l2068:	
  8201                           ;incstack = 0
  8202                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8203                           
  8204  1443  0873               	movf	___ftpack@exp,w
  8205  1444  1903               	btfsc	3,2
  8206  1445  2C47               	goto	u2251
  8207  1446  2C48               	goto	u2250
  8208  1447                     u2251:
  8209  1447  2C4F               	goto	l2072
  8210  1448                     u2250:
  8211  1448                     l2070:
  8212  1448  0872               	movf	___ftpack@arg+2,w
  8213  1449  0471               	iorwf	___ftpack@arg+1,w
  8214  144A  0470               	iorwf	___ftpack@arg,w
  8215  144B  1D03               	skipz
  8216  144C  2C4E               	goto	u2261
  8217  144D  2C4F               	goto	u2260
  8218  144E                     u2261:
  8219  144E  2C62               	goto	l2078
  8220  144F                     u2260:
  8221  144F                     l2072:
  8222  144F  3000               	movlw	0
  8223  1450  00F0               	movwf	?___ftpack
  8224  1451  3000               	movlw	0
  8225  1452  00F1               	movwf	?___ftpack+1
  8226  1453  3000               	movlw	0
  8227  1454  00F2               	movwf	?___ftpack+2
  8228  1455  2CBE               	goto	l645
  8229  1456                     l2076:
  8230  1456  3001               	movlw	1
  8231  1457  00F5               	movwf	??___ftpack
  8232  1458  0875               	movf	??___ftpack,w
  8233  1459  07F3               	addwf	___ftpack@exp,f
  8234  145A  3001               	movlw	1
  8235  145B                     u2275:
  8236  145B  1003               	clrc
  8237  145C  0CF2               	rrf	___ftpack@arg+2,f
  8238  145D  0CF1               	rrf	___ftpack@arg+1,f
  8239  145E  0CF0               	rrf	___ftpack@arg,f
  8240  145F  3EFF               	addlw	-1
  8241  1460  1D03               	skipz
  8242  1461  2C5B               	goto	u2275
  8243  1462                     l2078:
  8244  1462  30FE               	movlw	254
  8245  1463  0572               	andwf	___ftpack@arg+2,w
  8246  1464  1D03               	btfss	3,2
  8247  1465  2C67               	goto	u2281
  8248  1466  2C68               	goto	u2280
  8249  1467                     u2281:
  8250  1467  2C56               	goto	l2076
  8251  1468                     u2280:
  8252  1468  2C7F               	goto	l649
  8253  1469                     l2080:
  8254  1469  3001               	movlw	1
  8255  146A  00F5               	movwf	??___ftpack
  8256  146B  0875               	movf	??___ftpack,w
  8257  146C  07F3               	addwf	___ftpack@exp,f
  8258  146D                     l2082:
  8259  146D  3001               	movlw	1
  8260  146E  07F0               	addwf	___ftpack@arg,f
  8261  146F  3000               	movlw	0
  8262  1470  1803               	skipnc
  8263  1471  3001               	movlw	1
  8264  1472  07F1               	addwf	___ftpack@arg+1,f
  8265  1473  3000               	movlw	0
  8266  1474  1803               	skipnc
  8267  1475  3001               	movlw	1
  8268  1476  07F2               	addwf	___ftpack@arg+2,f
  8269  1477                     l2084:
  8270  1477  3001               	movlw	1
  8271  1478                     u2295:
  8272  1478  1003               	clrc
  8273  1479  0CF2               	rrf	___ftpack@arg+2,f
  8274  147A  0CF1               	rrf	___ftpack@arg+1,f
  8275  147B  0CF0               	rrf	___ftpack@arg,f
  8276  147C  3EFF               	addlw	-1
  8277  147D  1D03               	skipz
  8278  147E  2C78               	goto	u2295
  8279  147F                     l649:
  8280  147F  30FF               	movlw	255
  8281  1480  0572               	andwf	___ftpack@arg+2,w
  8282  1481  1D03               	btfss	3,2
  8283  1482  2C84               	goto	u2301
  8284  1483  2C85               	goto	u2300
  8285  1484                     u2301:
  8286  1484  2C69               	goto	l2080
  8287  1485                     u2300:
  8288  1485  2C90               	goto	l2088
  8289  1486                     l2086:
  8290  1486  3001               	movlw	1
  8291  1487  02F3               	subwf	___ftpack@exp,f
  8292  1488  3001               	movlw	1
  8293  1489                     u2315:
  8294  1489  1003               	clrc
  8295  148A  0DF0               	rlf	___ftpack@arg,f
  8296  148B  0DF1               	rlf	___ftpack@arg+1,f
  8297  148C  0DF2               	rlf	___ftpack@arg+2,f
  8298  148D  3EFF               	addlw	-1
  8299  148E  1D03               	skipz
  8300  148F  2C89               	goto	u2315
  8301  1490                     l2088:
  8302  1490  1BF1               	btfsc	___ftpack@arg+1,7
  8303  1491  2C93               	goto	u2321
  8304  1492  2C94               	goto	u2320
  8305  1493                     u2321:
  8306  1493  2C9A               	goto	l656
  8307  1494                     u2320:
  8308  1494                     l2090:
  8309  1494  3002               	movlw	2
  8310  1495  0273               	subwf	___ftpack@exp,w
  8311  1496  1803               	skipnc
  8312  1497  2C99               	goto	u2331
  8313  1498  2C9A               	goto	u2330
  8314  1499                     u2331:
  8315  1499  2C86               	goto	l2086
  8316  149A                     u2330:
  8317  149A                     l656:
  8318  149A  1873               	btfsc	___ftpack@exp,0
  8319  149B  2C9D               	goto	u2341
  8320  149C  2C9E               	goto	u2340
  8321  149D                     u2341:
  8322  149D  2CA4               	goto	l657
  8323  149E                     u2340:
  8324  149E                     l2092:
  8325  149E  30FF               	movlw	255
  8326  149F  05F0               	andwf	___ftpack@arg,f
  8327  14A0  307F               	movlw	127
  8328  14A1  05F1               	andwf	___ftpack@arg+1,f
  8329  14A2  30FF               	movlw	255
  8330  14A3  05F2               	andwf	___ftpack@arg+2,f
  8331  14A4                     l657:
  8332  14A4  1003               	clrc
  8333  14A5  0CF3               	rrf	___ftpack@exp,f
  8334  14A6                     l2094:
  8335  14A6  0873               	movf	___ftpack@exp,w
  8336  14A7  00F5               	movwf	??___ftpack
  8337  14A8  01F6               	clrf	??___ftpack+1
  8338  14A9  01F7               	clrf	??___ftpack+2
  8339  14AA  3010               	movlw	16
  8340  14AB                     u2355:
  8341  14AB  1003               	clrc
  8342  14AC  0DF5               	rlf	??___ftpack,f
  8343  14AD  0DF6               	rlf	??___ftpack+1,f
  8344  14AE  0DF7               	rlf	??___ftpack+2,f
  8345  14AF                     u2350:
  8346  14AF  3EFF               	addlw	-1
  8347  14B0  1D03               	skipz
  8348  14B1  2CAB               	goto	u2355
  8349  14B2  0875               	movf	??___ftpack,w
  8350  14B3  04F0               	iorwf	___ftpack@arg,f
  8351  14B4  0876               	movf	??___ftpack+1,w
  8352  14B5  04F1               	iorwf	___ftpack@arg+1,f
  8353  14B6  0877               	movf	??___ftpack+2,w
  8354  14B7  04F2               	iorwf	___ftpack@arg+2,f
  8355  14B8                     l2096:
  8356  14B8  0874               	movf	___ftpack@sign,w
  8357  14B9  1903               	btfsc	3,2
  8358  14BA  2CBC               	goto	u2361
  8359  14BB  2CBD               	goto	u2360
  8360  14BC                     u2361:
  8361  14BC  2CBE               	goto	l658
  8362  14BD                     u2360:
  8363  14BD                     l2098:
  8364  14BD  17F2               	bsf	___ftpack@arg+2,7
  8365  14BE                     l658:
  8366  14BE                     l645:
  8367  14BE  0008               	return
  8368  14BF                     __end_of___ftpack:
  8369  007E                     btemp	set	126	;btemp
  8370  007E                     wtemp0	set	126
  8371                           
  8372                           	psect	config
  8373                           
  8374                           ;Config register CONFIG1 @ 0x2007
  8375                           ;	Oscillator Selection bits
  8376                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  8377                           ;	Watchdog Timer Enable bit
  8378                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8379                           ;	Power-up Timer Enable bit
  8380                           ;	PWRTE = OFF, PWRT disabled
  8381                           ;	RE3/MCLR pin function select bit
  8382                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8383                           ;	Code Protection bit
  8384                           ;	CP = OFF, Program memory code protection is disabled
  8385                           ;	Data Code Protection bit
  8386                           ;	CPD = OFF, Data memory code protection is disabled
  8387                           ;	Brown Out Reset Selection bits
  8388                           ;	BOREN = OFF, BOR disabled
  8389                           ;	Internal External Switchover bit
  8390                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8391                           ;	Fail-Safe Clock Monitor Enabled bit
  8392                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8393                           ;	Low Voltage Programming Enable bit
  8394                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8395                           ;	In-Circuit Debugger Mode bit
  8396                           ;	DEBUG = 0x1, unprogrammed default
  8397  2007                     	org	8199
  8398  2007  20D6               	dw	8406
  8399                           
  8400                           ;Config register CONFIG2 @ 0x2008
  8401                           ;	Brown-out Reset Selection bit
  8402                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8403                           ;	Flash Program Memory Self Write Enable bits
  8404                           ;	WRT = OFF, Write protection off
  8405  2008                     	org	8200
  8406  2008  3FFF               	dw	16383
  8407                           
  8408                           	psect	text3_split_1
  8409  0147                     u4070:
  8410  0147                     l2944:
  8411  0147  1683               	bsf	3,5	;RP0=1, select bank1
  8412  0148  1303               	bcf	3,6	;RP1=0, select bank1
  8413  0149  0834               	movf	(sprintf@fval+2)^(0+128),w
  8414  014A  0433               	iorwf	(sprintf@fval+1)^(0+128),w
  8415  014B  0432               	iorwf	sprintf@fval^(0+128),w
  8416  014C  1903               	skipnz
  8417  014D  294F               	goto	u4081
  8418  014E  2950               	goto	u4080
  8419  014F                     u4081:
  8420  014F  29E0               	goto	l2964
  8421  0150                     u4080:
  8422  0150                     l2946:
  8423  0150  0832               	movf	sprintf@fval^(0+128),w
  8424  0151  1283               	bcf	3,5	;RP0=0, select bank0
  8425  0152  1303               	bcf	3,6	;RP1=0, select bank0
  8426  0153  00C1               	movwf	___fttol@f1
  8427  0154  1683               	bsf	3,5	;RP0=1, select bank1
  8428  0155  1303               	bcf	3,6	;RP1=0, select bank1
  8429  0156  0833               	movf	(sprintf@fval+1)^(0+128),w
  8430  0157  1283               	bcf	3,5	;RP0=0, select bank0
  8431  0158  1303               	bcf	3,6	;RP1=0, select bank0
  8432  0159  00C2               	movwf	___fttol@f1+1
  8433  015A  1683               	bsf	3,5	;RP0=1, select bank1
  8434  015B  1303               	bcf	3,6	;RP1=0, select bank1
  8435  015C  0834               	movf	(sprintf@fval+2)^(0+128),w
  8436  015D  1283               	bcf	3,5	;RP0=0, select bank0
  8437  015E  1303               	bcf	3,6	;RP1=0, select bank0
  8438  015F  00C3               	movwf	___fttol@f1+2
  8439  0160  160A  118A  24BF  120A  118A  	fcall	___fttol
  8440  0165  1283               	bcf	3,5	;RP0=0, select bank0
  8441  0166  1303               	bcf	3,6	;RP1=0, select bank0
  8442  0167  0844               	movf	?___fttol+3,w
  8443  0168  0443               	iorwf	?___fttol+2,w
  8444  0169  0442               	iorwf	?___fttol+1,w
  8445  016A  0441               	iorwf	?___fttol,w
  8446  016B  1D03               	skipz
  8447  016C  296E               	goto	u4091
  8448  016D  296F               	goto	u4090
  8449  016E                     u4091:
  8450  016E  29E0               	goto	l2964
  8451  016F                     u4090:
  8452  016F                     l2948:
  8453  016F  1683               	bsf	3,5	;RP0=1, select bank1
  8454  0170  1303               	bcf	3,6	;RP1=0, select bank1
  8455  0171  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8456  0172  3A80               	xorlw	128
  8457  0173  00FF               	movwf	btemp+1
  8458  0174  3080               	movlw	128
  8459  0175  027F               	subwf	btemp+1,w
  8460  0176  1D03               	skipz
  8461  0177  297A               	goto	u4105
  8462  0178  3002               	movlw	2
  8463  0179  0230               	subwf	sprintf@eexp^(0+128),w
  8464  017A                     u4105:
  8465  017A  1C03               	skipc
  8466  017B  297D               	goto	u4101
  8467  017C  297E               	goto	u4100
  8468  017D                     u4101:
  8469  017D  29E0               	goto	l2964
  8470  017E                     u4100:
  8471  017E                     l2950:
  8472                           
  8473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8474  017E  1683               	bsf	3,5	;RP0=1, select bank1
  8475  017F  1303               	bcf	3,6	;RP1=0, select bank1
  8476  0180  0828               	movf	sprintf@tmpval^(0+128),w
  8477  0181  00F0               	movwf	___ftge@ff1
  8478  0182  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  8479  0183  00F1               	movwf	___ftge@ff1+1
  8480  0184  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  8481  0185  00F2               	movwf	___ftge@ff1+2
  8482  0186  3070               	movlw	112
  8483  0187  00F3               	movwf	___ftge@ff2
  8484  0188  3089               	movlw	137
  8485  0189  00F4               	movwf	___ftge@ff2+1
  8486  018A  3040               	movlw	64
  8487  018B  00F5               	movwf	___ftge@ff2+2
  8488  018C  160A  118A  20EF  120A  118A  	fcall	___ftge
  8489  0191  1803               	btfsc	3,0
  8490  0192  2994               	goto	u4111
  8491  0193  2995               	goto	u4110
  8492  0194                     u4111:
  8493  0194  299E               	goto	l2954
  8494  0195                     u4110:
  8495  0195                     l2952:
  8496                           
  8497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8498  0195  30F7               	movlw	247
  8499  0196  1683               	bsf	3,5	;RP0=1, select bank1
  8500  0197  1303               	bcf	3,6	;RP1=0, select bank1
  8501  0198  07B0               	addwf	sprintf@eexp^(0+128),f
  8502  0199  1803               	skipnc
  8503  019A  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8504  019B  30FF               	movlw	255
  8505  019C  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8506                           
  8507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8508  019D  29A6               	goto	l2956
  8509  019E                     l2954:
  8510                           
  8511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8512  019E  30F8               	movlw	248
  8513  019F  1683               	bsf	3,5	;RP0=1, select bank1
  8514  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  8515  01A1  07B0               	addwf	sprintf@eexp^(0+128),f
  8516  01A2  1803               	skipnc
  8517  01A3  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  8518  01A4  30FF               	movlw	255
  8519  01A5  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  8520  01A6                     l2956:
  8521                           
  8522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  8523  01A6  0830               	movf	sprintf@eexp^(0+128),w
  8524  01A7  120A  158A  227D  120A  118A  	fcall	_scale
  8525  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  8526  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  8527  01AE  0838               	movf	?_scale,w
  8528  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  8529  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  8530  01B1  00A8               	movwf	sprintf@tmpval^(0+128)
  8531  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  8532  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  8533  01B4  0839               	movf	?_scale+1,w
  8534  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  8535  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  8536  01B7  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  8537  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  8538  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  8539  01BA  083A               	movf	?_scale+2,w
  8540  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  8541  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  8542  01BD  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  8543  01BE                     l2960:	
  8544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8545                           
  8546  01BE  0832               	movf	sprintf@fval^(0+128),w
  8547  01BF  00F0               	movwf	__tdiv_to_l_@f1
  8548  01C0  0833               	movf	(sprintf@fval+1)^(0+128),w
  8549  01C1  00F1               	movwf	__tdiv_to_l_@f1+1
  8550  01C2  0834               	movf	(sprintf@fval+2)^(0+128),w
  8551  01C3  00F2               	movwf	__tdiv_to_l_@f1+2
  8552  01C4  0828               	movf	sprintf@tmpval^(0+128),w
  8553  01C5  00F3               	movwf	__tdiv_to_l_@f2
  8554  01C6  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  8555  01C7  00F4               	movwf	__tdiv_to_l_@f2+1
  8556  01C8  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  8557  01C9  00F5               	movwf	__tdiv_to_l_@f2+2
  8558  01CA  120A  158A  201F  120A  118A  	fcall	__tdiv_to_l_
  8559  01CF  0873               	movf	?__tdiv_to_l_+3,w
  8560  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  8561  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  8562  01D2  00AF               	movwf	(sprintf@val+3)^(0+128)
  8563  01D3  0872               	movf	?__tdiv_to_l_+2,w
  8564  01D4  00AE               	movwf	(sprintf@val+2)^(0+128)
  8565  01D5  0871               	movf	?__tdiv_to_l_+1,w
  8566  01D6  00AD               	movwf	(sprintf@val+1)^(0+128)
  8567  01D7  0870               	movf	?__tdiv_to_l_,w
  8568  01D8  00AC               	movwf	sprintf@val^(0+128)
  8569  01D9                     l2962:
  8570                           
  8571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8572  01D9  3000               	movlw	0
  8573  01DA  00B2               	movwf	sprintf@fval^(0+128)
  8574  01DB  3000               	movlw	0
  8575  01DC  00B3               	movwf	(sprintf@fval+1)^(0+128)
  8576  01DD  3000               	movlw	0
  8577  01DE  00B4               	movwf	(sprintf@fval+2)^(0+128)
  8578                           
  8579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8580  01DF  2A4F               	goto	l2968
  8581  01E0                     l2964:
  8582                           
  8583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8584  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  8585  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  8586  01E2  0832               	movf	sprintf@fval^(0+128),w
  8587  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  8588  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  8589  01E5  00C1               	movwf	___fttol@f1
  8590  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  8591  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  8592  01E8  0833               	movf	(sprintf@fval+1)^(0+128),w
  8593  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  8594  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  8595  01EB  00C2               	movwf	___fttol@f1+1
  8596  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  8597  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  8598  01EE  0834               	movf	(sprintf@fval+2)^(0+128),w
  8599  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  8600  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  8601  01F1  00C3               	movwf	___fttol@f1+2
  8602  01F2  160A  118A  24BF  120A  118A  	fcall	___fttol
  8603  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  8604  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  8605  01F9  0844               	movf	?___fttol+3,w
  8606  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  8607  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  8608  01FC  00AF               	movwf	(sprintf@val+3)^(0+128)
  8609  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  8610  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  8611  01FF  0843               	movf	?___fttol+2,w
  8612  0200  1683               	bsf	3,5	;RP0=1, select bank1
  8613  0201  1303               	bcf	3,6	;RP1=0, select bank1
  8614  0202  00AE               	movwf	(sprintf@val+2)^(0+128)
  8615  0203  1283               	bcf	3,5	;RP0=0, select bank0
  8616  0204  1303               	bcf	3,6	;RP1=0, select bank0
  8617  0205  0842               	movf	?___fttol+1,w
  8618  0206  1683               	bsf	3,5	;RP0=1, select bank1
  8619  0207  1303               	bcf	3,6	;RP1=0, select bank1
  8620  0208  00AD               	movwf	(sprintf@val+1)^(0+128)
  8621  0209  1283               	bcf	3,5	;RP0=0, select bank0
  8622  020A  1303               	bcf	3,6	;RP1=0, select bank0
  8623  020B  0841               	movf	?___fttol,w
  8624  020C  1683               	bsf	3,5	;RP0=1, select bank1
  8625  020D  1303               	bcf	3,6	;RP1=0, select bank1
  8626  020E  00AC               	movwf	sprintf@val^(0+128)
  8627                           
  8628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8629  020F  082F               	movf	(sprintf@val+3)^(0+128),w
  8630  0210  00FB               	movwf	___lltoft@c+3
  8631  0211  082E               	movf	(sprintf@val+2)^(0+128),w
  8632  0212  00FA               	movwf	___lltoft@c+2
  8633  0213  082D               	movf	(sprintf@val+1)^(0+128),w
  8634  0214  00F9               	movwf	___lltoft@c+1
  8635  0215  082C               	movf	sprintf@val^(0+128),w
  8636  0216  00F8               	movwf	___lltoft@c
  8637  0217  160A  158A  27D1  120A  118A  	fcall	___lltoft
  8638  021C  0878               	movf	?___lltoft,w
  8639  021D  1283               	bcf	3,5	;RP0=0, select bank0
  8640  021E  1303               	bcf	3,6	;RP1=0, select bank0
  8641  021F  00D5               	movwf	___ftsub@f2
  8642  0220  0879               	movf	?___lltoft+1,w
  8643  0221  00D6               	movwf	___ftsub@f2+1
  8644  0222  087A               	movf	?___lltoft+2,w
  8645  0223  00D7               	movwf	___ftsub@f2+2
  8646  0224  1683               	bsf	3,5	;RP0=1, select bank1
  8647  0225  1303               	bcf	3,6	;RP1=0, select bank1
  8648  0226  0832               	movf	sprintf@fval^(0+128),w
  8649  0227  1283               	bcf	3,5	;RP0=0, select bank0
  8650  0228  1303               	bcf	3,6	;RP1=0, select bank0
  8651  0229  00D8               	movwf	___ftsub@f1
  8652  022A  1683               	bsf	3,5	;RP0=1, select bank1
  8653  022B  1303               	bcf	3,6	;RP1=0, select bank1
  8654  022C  0833               	movf	(sprintf@fval+1)^(0+128),w
  8655  022D  1283               	bcf	3,5	;RP0=0, select bank0
  8656  022E  1303               	bcf	3,6	;RP1=0, select bank0
  8657  022F  00D9               	movwf	___ftsub@f1+1
  8658  0230  1683               	bsf	3,5	;RP0=1, select bank1
  8659  0231  1303               	bcf	3,6	;RP1=0, select bank1
  8660  0232  0834               	movf	(sprintf@fval+2)^(0+128),w
  8661  0233  1283               	bcf	3,5	;RP0=0, select bank0
  8662  0234  1303               	bcf	3,6	;RP1=0, select bank0
  8663  0235  00DA               	movwf	___ftsub@f1+2
  8664  0236  160A  158A  275C  120A  118A  	fcall	___ftsub
  8665  023B  1283               	bcf	3,5	;RP0=0, select bank0
  8666  023C  1303               	bcf	3,6	;RP1=0, select bank0
  8667  023D  0855               	movf	?___ftsub,w
  8668  023E  1683               	bsf	3,5	;RP0=1, select bank1
  8669  023F  1303               	bcf	3,6	;RP1=0, select bank1
  8670  0240  00B2               	movwf	sprintf@fval^(0+128)
  8671  0241  1283               	bcf	3,5	;RP0=0, select bank0
  8672  0242  1303               	bcf	3,6	;RP1=0, select bank0
  8673  0243  0856               	movf	?___ftsub+1,w
  8674  0244  1683               	bsf	3,5	;RP0=1, select bank1
  8675  0245  1303               	bcf	3,6	;RP1=0, select bank1
  8676  0246  00B3               	movwf	(sprintf@fval+1)^(0+128)
  8677  0247  1283               	bcf	3,5	;RP0=0, select bank0
  8678  0248  1303               	bcf	3,6	;RP1=0, select bank0
  8679  0249  0857               	movf	?___ftsub+2,w
  8680  024A  1683               	bsf	3,5	;RP0=1, select bank1
  8681  024B  1303               	bcf	3,6	;RP1=0, select bank1
  8682  024C  00B4               	movwf	(sprintf@fval+2)^(0+128)
  8683  024D                     l2966:
  8684                           
  8685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8686  024D  01B0               	clrf	sprintf@eexp^(0+128)
  8687  024E  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  8688  024F                     l2968:
  8689                           
  8690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8691  024F  01B8               	clrf	sprintf@c^(0+128)
  8692  0250  0AB8               	incf	sprintf@c^(0+128),f
  8693  0251                     l2974:
  8694                           
  8695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8696  0251  0838               	movf	sprintf@c^(0+128),w
  8697  0252  1283               	bcf	3,5	;RP0=0, select bank0
  8698  0253  1303               	bcf	3,6	;RP1=0, select bank0
  8699  0254  00E1               	movwf	??_sprintf
  8700  0255  3001               	movlw	1
  8701  0256                     u4125:
  8702  0256  1003               	clrc
  8703  0257  0DE1               	rlf	??_sprintf,f
  8704  0258  3EFF               	addlw	-1
  8705  0259  1D03               	skipz
  8706  025A  2A56               	goto	u4125
  8707  025B  1003               	clrc
  8708  025C  0D61               	rlf	??_sprintf,w
  8709  025D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8710  025E  0084               	movwf	4
  8711  025F  160A  118A  200A  120A  118A  	fcall	stringdir
  8712  0264  00E2               	movwf	??_sprintf+1
  8713  0265  160A  118A  200A  120A  118A  	fcall	stringdir
  8714  026A  00E3               	movwf	??_sprintf+2
  8715  026B  160A  118A  200A  120A  118A  	fcall	stringdir
  8716  0270  00E4               	movwf	??_sprintf+3
  8717  0271  160A  118A  200A  120A  118A  	fcall	stringdir
  8718  0276  00E5               	movwf	??_sprintf+4
  8719  0277  0865               	movf	??_sprintf+4,w
  8720  0278  1683               	bsf	3,5	;RP0=1, select bank1
  8721  0279  1303               	bcf	3,6	;RP1=0, select bank1
  8722  027A  022F               	subwf	(sprintf@val+3)^(0+128),w
  8723  027B  1D03               	skipz
  8724  027C  2A93               	goto	u4135
  8725  027D  1283               	bcf	3,5	;RP0=0, select bank0
  8726  027E  1303               	bcf	3,6	;RP1=0, select bank0
  8727  027F  0864               	movf	??_sprintf+3,w
  8728  0280  1683               	bsf	3,5	;RP0=1, select bank1
  8729  0281  1303               	bcf	3,6	;RP1=0, select bank1
  8730  0282  022E               	subwf	(sprintf@val+2)^(0+128),w
  8731  0283  1D03               	skipz
  8732  0284  2A93               	goto	u4135
  8733  0285  1283               	bcf	3,5	;RP0=0, select bank0
  8734  0286  1303               	bcf	3,6	;RP1=0, select bank0
  8735  0287  0863               	movf	??_sprintf+2,w
  8736  0288  1683               	bsf	3,5	;RP0=1, select bank1
  8737  0289  1303               	bcf	3,6	;RP1=0, select bank1
  8738  028A  022D               	subwf	(sprintf@val+1)^(0+128),w
  8739  028B  1D03               	skipz
  8740  028C  2A93               	goto	u4135
  8741  028D  1283               	bcf	3,5	;RP0=0, select bank0
  8742  028E  1303               	bcf	3,6	;RP1=0, select bank0
  8743  028F  0862               	movf	??_sprintf+1,w
  8744  0290  1683               	bsf	3,5	;RP0=1, select bank1
  8745  0291  1303               	bcf	3,6	;RP1=0, select bank1
  8746  0292  022C               	subwf	sprintf@val^(0+128),w
  8747  0293                     u4135:
  8748  0293  1803               	skipnc
  8749  0294  2A96               	goto	u4131
  8750  0295  2A97               	goto	u4130
  8751  0296                     u4131:
  8752  0296  2A98               	goto	l2978
  8753  0297                     u4130:
  8754  0297  2AA6               	goto	l2980
  8755  0298                     l2978:
  8756  0298  3001               	movlw	1
  8757  0299  1283               	bcf	3,5	;RP0=0, select bank0
  8758  029A  1303               	bcf	3,6	;RP1=0, select bank0
  8759  029B  00E1               	movwf	??_sprintf
  8760  029C  0861               	movf	??_sprintf,w
  8761  029D  1683               	bsf	3,5	;RP0=1, select bank1
  8762  029E  1303               	bcf	3,6	;RP1=0, select bank1
  8763  029F  07B8               	addwf	sprintf@c^(0+128),f
  8764  02A0  300A               	movlw	10
  8765  02A1  0638               	xorwf	sprintf@c^(0+128),w
  8766  02A2  1D03               	btfss	3,2
  8767  02A3  2AA5               	goto	u4141
  8768  02A4  2AA6               	goto	u4140
  8769  02A5                     u4141:
  8770  02A5  2A51               	goto	l2974
  8771  02A6                     u4140:
  8772  02A6                     l2980:
  8773                           
  8774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  8775  02A6  0838               	movf	sprintf@c^(0+128),w
  8776  02A7  0736               	addwf	sprintf@prec^(0+128),w
  8777  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  8778  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  8779  02AA  00E1               	movwf	??_sprintf
  8780  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  8781  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  8782  02AD  0837               	movf	(sprintf@prec+1)^(0+128),w
  8783  02AE  1803               	skipnc
  8784  02AF  0A37               	incf	(sprintf@prec+1)^(0+128),w
  8785  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  8786  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  8787  02B2  00E2               	movwf	??_sprintf+1
  8788  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  8789  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  8790  02B5  0830               	movf	sprintf@eexp^(0+128),w
  8791  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  8792  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  8793  02B8  0761               	addwf	??_sprintf,w
  8794  02B9  00E3               	movwf	??_sprintf+2
  8795  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  8796  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  8797  02BC  0831               	movf	(sprintf@eexp+1)^(0+128),w
  8798  02BD  1803               	skipnc
  8799  02BE  0A31               	incf	(sprintf@eexp+1)^(0+128),w
  8800  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  8801  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  8802  02C1  0762               	addwf	??_sprintf+1,w
  8803  02C2  00E4               	movwf	??_sprintf+3
  8804  02C3  0863               	movf	??_sprintf+2,w
  8805  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  8806  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  8807  02C6  02A6               	subwf	sprintf@width^(0+128),f
  8808  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  8809  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  8810  02C9  0864               	movf	??_sprintf+3,w
  8811  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  8812  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  8813  02CC  1C03               	skipc
  8814  02CD  03A7               	decf	(sprintf@width+1)^(0+128),f
  8815  02CE  02A7               	subwf	(sprintf@width+1)^(0+128),f
  8816                           
  8817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  8818  02CF  0836               	movf	sprintf@prec^(0+128),w
  8819  02D0  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  8820  02D1  1903               	btfsc	3,2
  8821  02D2  2AD4               	goto	u4151
  8822  02D3  2AD5               	goto	u4150
  8823  02D4                     u4151:
  8824  02D4  2ADB               	goto	l2984
  8825  02D5                     u4150:
  8826  02D5                     l2982:
  8827                           
  8828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  8829  02D5  30FF               	movlw	255
  8830  02D6  07A6               	addwf	sprintf@width^(0+128),f
  8831  02D7  1803               	skipnc
  8832  02D8  0AA7               	incf	(sprintf@width+1)^(0+128),f
  8833  02D9  30FF               	movlw	255
  8834  02DA  07A7               	addwf	(sprintf@width+1)^(0+128),f
  8835  02DB                     l2984:
  8836                           
  8837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  8838  02DB  3003               	movlw	3
  8839  02DC  0524               	andwf	sprintf@flag^(0+128),w
  8840  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  8841  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  8842  02DF  00E1               	movwf	??_sprintf
  8843  02E0  3000               	movlw	0
  8844  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  8845  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  8846  02E3  0525               	andwf	(sprintf@flag+1)^(0+128),w
  8847  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  8848  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  8849  02E6  00E2               	movwf	??_sprintf+1
  8850  02E7  0861               	movf	??_sprintf,w
  8851  02E8  0462               	iorwf	??_sprintf+1,w
  8852  02E9  1903               	btfsc	3,2
  8853  02EA  2AEC               	goto	u4161
  8854  02EB  2AED               	goto	u4160
  8855  02EC                     u4161:
  8856  02EC  2B0A               	goto	l2994
  8857  02ED                     u4160:
  8858  02ED                     l2986:
  8859                           
  8860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  8861  02ED  30FF               	movlw	255
  8862  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  8863  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  8864  02F0  07A6               	addwf	sprintf@width^(0+128),f
  8865  02F1  1803               	skipnc
  8866  02F2  0AA7               	incf	(sprintf@width+1)^(0+128),f
  8867  02F3  30FF               	movlw	255
  8868  02F4  07A7               	addwf	(sprintf@width+1)^(0+128),f
  8869  02F5  2B0A               	goto	l2994
  8870  02F6                     l2988:
  8871                           
  8872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  8873  02F6  3020               	movlw	32
  8874  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  8875  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  8876  02F9  00E1               	movwf	??_sprintf
  8877  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  8878  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  8879  02FC  0835               	movf	sprintf@sp^(0+128),w
  8880  02FD  0084               	movwf	4
  8881  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  8882  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  8883  0300  0861               	movf	??_sprintf,w
  8884  0301  1383               	bcf	3,7	;select IRP bank0
  8885  0302  0080               	movwf	0
  8886  0303                     l2990:
  8887  0303  3001               	movlw	1
  8888  0304  00E1               	movwf	??_sprintf
  8889  0305  0861               	movf	??_sprintf,w
  8890  0306  1683               	bsf	3,5	;RP0=1, select bank1
  8891  0307  1303               	bcf	3,6	;RP1=0, select bank1
  8892  0308  07B5               	addwf	sprintf@sp^(0+128),f
  8893  0309  2AED               	goto	l2986
  8894  030A                     l2994:
  8895                           
  8896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  8897  030A  1683               	bsf	3,5	;RP0=1, select bank1
  8898  030B  1303               	bcf	3,6	;RP1=0, select bank1
  8899  030C  0827               	movf	(sprintf@width+1)^(0+128),w
  8900  030D  3A80               	xorlw	128
  8901  030E  00FF               	movwf	btemp+1
  8902  030F  3080               	movlw	128
  8903  0310  027F               	subwf	btemp+1,w
  8904  0311  1D03               	skipz
  8905  0312  2B15               	goto	u4175
  8906  0313  3001               	movlw	1
  8907  0314  0226               	subwf	sprintf@width^(0+128),w
  8908  0315                     u4175:
  8909  0315  1803               	skipnc
  8910  0316  2B18               	goto	u4171
  8911  0317  2B19               	goto	u4170
  8912  0318                     u4171:
  8913  0318  2AF6               	goto	l2988
  8914  0319                     u4170:
  8915  0319                     l2996:
  8916                           
  8917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  8918  0319  3003               	movlw	3
  8919  031A  1683               	bsf	3,5	;RP0=1, select bank1
  8920  031B  1303               	bcf	3,6	;RP1=0, select bank1
  8921  031C  0524               	andwf	sprintf@flag^(0+128),w
  8922  031D  1283               	bcf	3,5	;RP0=0, select bank0
  8923  031E  1303               	bcf	3,6	;RP1=0, select bank0
  8924  031F  00E1               	movwf	??_sprintf
  8925  0320  3000               	movlw	0
  8926  0321  1683               	bsf	3,5	;RP0=1, select bank1
  8927  0322  1303               	bcf	3,6	;RP1=0, select bank1
  8928  0323  0525               	andwf	(sprintf@flag+1)^(0+128),w
  8929  0324  1283               	bcf	3,5	;RP0=0, select bank0
  8930  0325  1303               	bcf	3,6	;RP1=0, select bank0
  8931  0326  00E2               	movwf	??_sprintf+1
  8932  0327  0861               	movf	??_sprintf,w
  8933  0328  0462               	iorwf	??_sprintf+1,w
  8934  0329  1903               	btfsc	3,2
  8935  032A  2B2C               	goto	u4181
  8936  032B  2B2D               	goto	u4180
  8937  032C                     u4181:
  8938  032C  2BD1               	goto	l379
  8939  032D                     u4180:
  8940  032D                     l2998:
  8941                           
  8942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  8943  032D  302D               	movlw	45
  8944  032E  00E1               	movwf	??_sprintf
  8945  032F  1683               	bsf	3,5	;RP0=1, select bank1
  8946  0330  1303               	bcf	3,6	;RP1=0, select bank1
  8947  0331  0835               	movf	sprintf@sp^(0+128),w
  8948  0332  0084               	movwf	4
  8949  0333  1283               	bcf	3,5	;RP0=0, select bank0
  8950  0334  1303               	bcf	3,6	;RP1=0, select bank0
  8951  0335  0861               	movf	??_sprintf,w
  8952  0336  1383               	bcf	3,7	;select IRP bank0
  8953  0337  0080               	movwf	0
  8954  0338                     l3000:
  8955  0338  3001               	movlw	1
  8956  0339  00E1               	movwf	??_sprintf
  8957  033A  0861               	movf	??_sprintf,w
  8958  033B  1683               	bsf	3,5	;RP0=1, select bank1
  8959  033C  1303               	bcf	3,6	;RP1=0, select bank1
  8960  033D  07B5               	addwf	sprintf@sp^(0+128),f
  8961  033E  2BD1               	goto	l379
  8962  033F                     l3002:
  8963                           
  8964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  8965  033F  0838               	movf	sprintf@c^(0+128),w
  8966  0340  1283               	bcf	3,5	;RP0=0, select bank0
  8967  0341  1303               	bcf	3,6	;RP1=0, select bank0
  8968  0342  00E1               	movwf	??_sprintf
  8969  0343  3001               	movlw	1
  8970  0344                     u4195:
  8971  0344  1003               	clrc
  8972  0345  0DE1               	rlf	??_sprintf,f
  8973  0346  3EFF               	addlw	-1
  8974  0347  1D03               	skipz
  8975  0348  2B44               	goto	u4195
  8976  0349  1003               	clrc
  8977  034A  0D61               	rlf	??_sprintf,w
  8978  034B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8979  034C  0084               	movwf	4
  8980  034D  160A  118A  200A  120A  118A  	fcall	stringdir
  8981  0352  00F0               	movwf	___lldiv@divisor
  8982  0353  160A  118A  200A  120A  118A  	fcall	stringdir
  8983  0358  00F1               	movwf	___lldiv@divisor+1
  8984  0359  160A  118A  200A  120A  118A  	fcall	stringdir
  8985  035E  00F2               	movwf	___lldiv@divisor+2
  8986  035F  160A  118A  200A  120A  118A  	fcall	stringdir
  8987  0364  00F3               	movwf	___lldiv@divisor+3
  8988  0365  1683               	bsf	3,5	;RP0=1, select bank1
  8989  0366  1303               	bcf	3,6	;RP1=0, select bank1
  8990  0367  082F               	movf	(sprintf@val+3)^(0+128),w
  8991  0368  00F7               	movwf	___lldiv@dividend+3
  8992  0369  082E               	movf	(sprintf@val+2)^(0+128),w
  8993  036A  00F6               	movwf	___lldiv@dividend+2
  8994  036B  082D               	movf	(sprintf@val+1)^(0+128),w
  8995  036C  00F5               	movwf	___lldiv@dividend+1
  8996  036D  082C               	movf	sprintf@val^(0+128),w
  8997  036E  00F4               	movwf	___lldiv@dividend
  8998  036F  160A  118A  2374  120A  118A  	fcall	___lldiv
  8999  0374  0873               	movf	?___lldiv+3,w
  9000  0375  1683               	bsf	3,5	;RP0=1, select bank1
  9001  0376  1303               	bcf	3,6	;RP1=0, select bank1
  9002  0377  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9003  0378  0872               	movf	?___lldiv+2,w
  9004  0379  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9005  037A  0871               	movf	?___lldiv+1,w
  9006  037B  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9007  037C  0870               	movf	?___lldiv,w
  9008  037D  00A8               	movwf	sprintf@tmpval^(0+128)
  9009  037E                     l3004:
  9010                           
  9011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9012  037E  3000               	movlw	0
  9013  037F  1283               	bcf	3,5	;RP0=0, select bank0
  9014  0380  1303               	bcf	3,6	;RP1=0, select bank0
  9015  0381  00A3               	movwf	___llmod@divisor+3
  9016  0382  3000               	movlw	0
  9017  0383  00A2               	movwf	___llmod@divisor+2
  9018  0384  3000               	movlw	0
  9019  0385  00A1               	movwf	___llmod@divisor+1
  9020  0386  300A               	movlw	10
  9021  0387  00A0               	movwf	___llmod@divisor
  9022  0388  1683               	bsf	3,5	;RP0=1, select bank1
  9023  0389  1303               	bcf	3,6	;RP1=0, select bank1
  9024  038A  082B               	movf	(sprintf@tmpval+3)^(0+128),w
  9025  038B  1283               	bcf	3,5	;RP0=0, select bank0
  9026  038C  1303               	bcf	3,6	;RP1=0, select bank0
  9027  038D  00A7               	movwf	___llmod@dividend+3
  9028  038E  1683               	bsf	3,5	;RP0=1, select bank1
  9029  038F  1303               	bcf	3,6	;RP1=0, select bank1
  9030  0390  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  9031  0391  1283               	bcf	3,5	;RP0=0, select bank0
  9032  0392  1303               	bcf	3,6	;RP1=0, select bank0
  9033  0393  00A6               	movwf	___llmod@dividend+2
  9034  0394  1683               	bsf	3,5	;RP0=1, select bank1
  9035  0395  1303               	bcf	3,6	;RP1=0, select bank1
  9036  0396  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  9037  0397  1283               	bcf	3,5	;RP0=0, select bank0
  9038  0398  1303               	bcf	3,6	;RP1=0, select bank0
  9039  0399  00A5               	movwf	___llmod@dividend+1
  9040  039A  1683               	bsf	3,5	;RP0=1, select bank1
  9041  039B  1303               	bcf	3,6	;RP1=0, select bank1
  9042  039C  0828               	movf	sprintf@tmpval^(0+128),w
  9043  039D  1283               	bcf	3,5	;RP0=0, select bank0
  9044  039E  1303               	bcf	3,6	;RP1=0, select bank0
  9045  039F  00A4               	movwf	___llmod@dividend
  9046  03A0  160A  118A  225F  120A  118A  	fcall	___llmod
  9047  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  9048  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  9049  03A7  0823               	movf	?___llmod+3,w
  9050  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  9051  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  9052  03AA  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9053  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  9054  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  9055  03AD  0822               	movf	?___llmod+2,w
  9056  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  9057  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  9058  03B0  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9059  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  9060  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  9061  03B3  0821               	movf	?___llmod+1,w
  9062  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  9063  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  9064  03B6  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9065  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  9066  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  9067  03B9  0820               	movf	?___llmod,w
  9068  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  9069  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  9070  03BC  00A8               	movwf	sprintf@tmpval^(0+128)
  9071  03BD                     l3006:
  9072                           
  9073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9074  03BD  0828               	movf	sprintf@tmpval^(0+128),w
  9075  03BE  3E30               	addlw	48
  9076  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  9077  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  9078  03C1  00E1               	movwf	??_sprintf
  9079  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  9080  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  9081  03C4  0835               	movf	sprintf@sp^(0+128),w
  9082  03C5  0084               	movwf	4
  9083  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  9084  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  9085  03C8  0861               	movf	??_sprintf,w
  9086  03C9  1383               	bcf	3,7	;select IRP bank0
  9087  03CA  0080               	movwf	0
  9088  03CB  3001               	movlw	1
  9089  03CC  00E1               	movwf	??_sprintf
  9090  03CD  0861               	movf	??_sprintf,w
  9091  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  9092  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  9093  03D0  07B5               	addwf	sprintf@sp^(0+128),f
  9094  03D1                     l379:	
  9095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9096                           
  9097                           
  9098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9099  03D1  3001               	movlw	1
  9100  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  9101  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  9102  03D4  02B8               	subwf	sprintf@c^(0+128),f
  9103  03D5  0A38               	incf	sprintf@c^(0+128),w
  9104  03D6  1D03               	btfss	3,2
  9105  03D7  2BD9               	goto	u4201
  9106  03D8  2BDA               	goto	u4200
  9107  03D9                     u4201:
  9108  03D9  2B3F               	goto	l3002
  9109  03DA                     u4200:
  9110  03DA  2BF4               	goto	l3014
  9111  03DB                     l3008:
  9112                           
  9113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9114  03DB  3030               	movlw	48
  9115  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  9116  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  9117  03DE  00E1               	movwf	??_sprintf
  9118  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  9119  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  9120  03E1  0835               	movf	sprintf@sp^(0+128),w
  9121  03E2  0084               	movwf	4
  9122  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  9123  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  9124  03E5  0861               	movf	??_sprintf,w
  9125  03E6  1383               	bcf	3,7	;select IRP bank0
  9126  03E7  0080               	movwf	0
  9127  03E8                     l3010:
  9128  03E8  3001               	movlw	1
  9129  03E9  00E1               	movwf	??_sprintf
  9130  03EA  0861               	movf	??_sprintf,w
  9131  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  9132  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  9133  03ED  07B5               	addwf	sprintf@sp^(0+128),f
  9134  03EE                     l3012:
  9135                           
  9136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9137  03EE  30FF               	movlw	255
  9138  03EF  07B0               	addwf	sprintf@eexp^(0+128),f
  9139  03F0  1803               	skipnc
  9140  03F1  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  9141  03F2  30FF               	movlw	255
  9142  03F3  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  9143  03F4                     l3014:
  9144                           
  9145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9146  03F4  0831               	movf	(sprintf@eexp+1)^(0+128),w
  9147  03F5  3A80               	xorlw	128
  9148  03F6  00FF               	movwf	btemp+1
  9149  03F7  3080               	movlw	128
  9150  03F8  027F               	subwf	btemp+1,w
  9151  03F9  1D03               	skipz
  9152  03FA  2BFD               	goto	u4215
  9153  03FB  3001               	movlw	1
  9154  03FC  0230               	subwf	sprintf@eexp^(0+128),w
  9155  03FD                     u4215:
  9156  03FD  1803               	skipnc
  9157  03FE  2C00               	goto	u4211
  9158  03FF  2C01               	goto	u4210
  9159  0400                     u4211:
  9160  0400  2BDB               	goto	l3008
  9161  0401                     u4210:
  9162  0401                     l3016:
  9163                           
  9164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9165  0401  1683               	bsf	3,5	;RP0=1, select bank1
  9166  0402  1303               	bcf	3,6	;RP1=0, select bank1
  9167  0403  0837               	movf	(sprintf@prec+1)^(0+128),w
  9168  0404  3A80               	xorlw	128
  9169  0405  00FF               	movwf	btemp+1
  9170  0406  3080               	movlw	128
  9171  0407  027F               	subwf	btemp+1,w
  9172  0408  1D03               	skipz
  9173  0409  2C0C               	goto	u4225
  9174  040A  3009               	movlw	9
  9175  040B  0236               	subwf	sprintf@prec^(0+128),w
  9176  040C                     u4225:
  9177  040C  1C03               	skipc
  9178  040D  2C0F               	goto	u4221
  9179  040E  2C10               	goto	u4220
  9180  040F                     u4221:
  9181  040F  2C19               	goto	l3020
  9182  0410                     u4220:
  9183  0410                     l3018:
  9184                           
  9185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9186  0410  3008               	movlw	8
  9187  0411  1283               	bcf	3,5	;RP0=0, select bank0
  9188  0412  1303               	bcf	3,6	;RP1=0, select bank0
  9189  0413  00E1               	movwf	??_sprintf
  9190  0414  0861               	movf	??_sprintf,w
  9191  0415  1683               	bsf	3,5	;RP0=1, select bank1
  9192  0416  1303               	bcf	3,6	;RP1=0, select bank1
  9193  0417  00B8               	movwf	sprintf@c^(0+128)
  9194  0418  2C23               	goto	l386
  9195  0419                     l3020:
  9196                           
  9197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9198  0419  1683               	bsf	3,5	;RP0=1, select bank1
  9199  041A  1303               	bcf	3,6	;RP1=0, select bank1
  9200  041B  0836               	movf	sprintf@prec^(0+128),w
  9201  041C  1283               	bcf	3,5	;RP0=0, select bank0
  9202  041D  1303               	bcf	3,6	;RP1=0, select bank0
  9203  041E  00E1               	movwf	??_sprintf
  9204  041F  0861               	movf	??_sprintf,w
  9205  0420  1683               	bsf	3,5	;RP0=1, select bank1
  9206  0421  1303               	bcf	3,6	;RP1=0, select bank1
  9207  0422  00B8               	movwf	sprintf@c^(0+128)
  9208  0423                     l386:
  9209                           
  9210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9211  0423  0838               	movf	sprintf@c^(0+128),w
  9212  0424  1283               	bcf	3,5	;RP0=0, select bank0
  9213  0425  1303               	bcf	3,6	;RP1=0, select bank0
  9214  0426  00E1               	movwf	??_sprintf
  9215  0427  01E2               	clrf	??_sprintf+1
  9216  0428  0861               	movf	??_sprintf,w
  9217  0429  1683               	bsf	3,5	;RP0=1, select bank1
  9218  042A  1303               	bcf	3,6	;RP1=0, select bank1
  9219  042B  02B6               	subwf	sprintf@prec^(0+128),f
  9220  042C  1283               	bcf	3,5	;RP0=0, select bank0
  9221  042D  1303               	bcf	3,6	;RP1=0, select bank0
  9222  042E  0862               	movf	??_sprintf+1,w
  9223  042F  1683               	bsf	3,5	;RP0=1, select bank1
  9224  0430  1303               	bcf	3,6	;RP1=0, select bank1
  9225  0431  1C03               	skipc
  9226  0432  03B7               	decf	(sprintf@prec+1)^(0+128),f
  9227  0433  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  9228  0434                     l3022:
  9229                           
  9230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9231  0434  0838               	movf	sprintf@c^(0+128),w
  9232  0435  1903               	btfsc	3,2
  9233  0436  2C38               	goto	u4231
  9234  0437  2C39               	goto	u4230
  9235  0438                     u4231:
  9236  0438  2C4C               	goto	l3028
  9237  0439                     u4230:
  9238  0439                     l3024:
  9239                           
  9240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9241  0439  302E               	movlw	46
  9242  043A  1283               	bcf	3,5	;RP0=0, select bank0
  9243  043B  1303               	bcf	3,6	;RP1=0, select bank0
  9244  043C  00E1               	movwf	??_sprintf
  9245  043D  1683               	bsf	3,5	;RP0=1, select bank1
  9246  043E  1303               	bcf	3,6	;RP1=0, select bank1
  9247  043F  0835               	movf	sprintf@sp^(0+128),w
  9248  0440  0084               	movwf	4
  9249  0441  1283               	bcf	3,5	;RP0=0, select bank0
  9250  0442  1303               	bcf	3,6	;RP1=0, select bank0
  9251  0443  0861               	movf	??_sprintf,w
  9252  0444  1383               	bcf	3,7	;select IRP bank0
  9253  0445  0080               	movwf	0
  9254  0446                     l3026:
  9255  0446  3001               	movlw	1
  9256  0447  00E1               	movwf	??_sprintf
  9257  0448  0861               	movf	??_sprintf,w
  9258  0449  1683               	bsf	3,5	;RP0=1, select bank1
  9259  044A  1303               	bcf	3,6	;RP1=0, select bank1
  9260  044B  07B5               	addwf	sprintf@sp^(0+128),f
  9261  044C                     l3028:
  9262                           
  9263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9264  044C  0838               	movf	sprintf@c^(0+128),w
  9265  044D  120A  158A  227D  120A  118A  	fcall	_scale
  9266  0452  1283               	bcf	3,5	;RP0=0, select bank0
  9267  0453  1303               	bcf	3,6	;RP1=0, select bank0
  9268  0454  0838               	movf	?_scale,w
  9269  0455  1683               	bsf	3,5	;RP0=1, select bank1
  9270  0456  1303               	bcf	3,6	;RP1=0, select bank1
  9271  0457  00A0               	movwf	_sprintf$1078^(0+128)
  9272  0458  1283               	bcf	3,5	;RP0=0, select bank0
  9273  0459  1303               	bcf	3,6	;RP1=0, select bank0
  9274  045A  0839               	movf	?_scale+1,w
  9275  045B  1683               	bsf	3,5	;RP0=1, select bank1
  9276  045C  1303               	bcf	3,6	;RP1=0, select bank1
  9277  045D  00A1               	movwf	(_sprintf$1078+1)^(0+128)
  9278  045E  1283               	bcf	3,5	;RP0=0, select bank0
  9279  045F  1303               	bcf	3,6	;RP1=0, select bank0
  9280  0460  083A               	movf	?_scale+2,w
  9281  0461  1683               	bsf	3,5	;RP0=1, select bank1
  9282  0462  1303               	bcf	3,6	;RP1=0, select bank1
  9283  0463  00A2               	movwf	(_sprintf$1078+2)^(0+128)
  9284  0464                     l3030:
  9285                           
  9286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9287  0464  0820               	movf	_sprintf$1078^(0+128),w
  9288  0465  1283               	bcf	3,5	;RP0=0, select bank0
  9289  0466  1303               	bcf	3,6	;RP1=0, select bank0
  9290  0467  00AB               	movwf	___ftmul@f2
  9291  0468  1683               	bsf	3,5	;RP0=1, select bank1
  9292  0469  1303               	bcf	3,6	;RP1=0, select bank1
  9293  046A  0821               	movf	(_sprintf$1078+1)^(0+128),w
  9294  046B  1283               	bcf	3,5	;RP0=0, select bank0
  9295  046C  1303               	bcf	3,6	;RP1=0, select bank0
  9296  046D  00AC               	movwf	___ftmul@f2+1
  9297  046E  1683               	bsf	3,5	;RP0=1, select bank1
  9298  046F  1303               	bcf	3,6	;RP1=0, select bank1
  9299  0470  0822               	movf	(_sprintf$1078+2)^(0+128),w
  9300  0471  1283               	bcf	3,5	;RP0=0, select bank0
  9301  0472  1303               	bcf	3,6	;RP1=0, select bank0
  9302  0473  00AD               	movwf	___ftmul@f2+2
  9303  0474  1683               	bsf	3,5	;RP0=1, select bank1
  9304  0475  1303               	bcf	3,6	;RP1=0, select bank1
  9305  0476  0832               	movf	sprintf@fval^(0+128),w
  9306  0477  1283               	bcf	3,5	;RP0=0, select bank0
  9307  0478  1303               	bcf	3,6	;RP1=0, select bank0
  9308  0479  00A8               	movwf	___ftmul@f1
  9309  047A  1683               	bsf	3,5	;RP0=1, select bank1
  9310  047B  1303               	bcf	3,6	;RP1=0, select bank1
  9311  047C  0833               	movf	(sprintf@fval+1)^(0+128),w
  9312  047D  1283               	bcf	3,5	;RP0=0, select bank0
  9313  047E  1303               	bcf	3,6	;RP1=0, select bank0
  9314  047F  00A9               	movwf	___ftmul@f1+1
  9315  0480  1683               	bsf	3,5	;RP0=1, select bank1
  9316  0481  1303               	bcf	3,6	;RP1=0, select bank1
  9317  0482  0834               	movf	(sprintf@fval+2)^(0+128),w
  9318  0483  1283               	bcf	3,5	;RP0=0, select bank0
  9319  0484  1303               	bcf	3,6	;RP1=0, select bank0
  9320  0485  00AA               	movwf	___ftmul@f1+2
  9321  0486  160A  118A  25EF  120A  118A  	fcall	___ftmul
  9322  048B  1283               	bcf	3,5	;RP0=0, select bank0
  9323  048C  1303               	bcf	3,6	;RP1=0, select bank0
  9324  048D  0828               	movf	?___ftmul,w
  9325  048E  00C1               	movwf	___fttol@f1
  9326  048F  0829               	movf	?___ftmul+1,w
  9327  0490  00C2               	movwf	___fttol@f1+1
  9328  0491  082A               	movf	?___ftmul+2,w
  9329  0492  00C3               	movwf	___fttol@f1+2
  9330  0493  160A  118A  24BF  120A  118A  	fcall	___fttol
  9331  0498  1283               	bcf	3,5	;RP0=0, select bank0
  9332  0499  1303               	bcf	3,6	;RP1=0, select bank0
  9333  049A  0844               	movf	?___fttol+3,w
  9334  049B  1683               	bsf	3,5	;RP0=1, select bank1
  9335  049C  1303               	bcf	3,6	;RP1=0, select bank1
  9336  049D  00AF               	movwf	(sprintf@val+3)^(0+128)
  9337  049E  1283               	bcf	3,5	;RP0=0, select bank0
  9338  049F  1303               	bcf	3,6	;RP1=0, select bank0
  9339  04A0  0843               	movf	?___fttol+2,w
  9340  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  9341  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  9342  04A3  00AE               	movwf	(sprintf@val+2)^(0+128)
  9343  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  9344  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  9345  04A6  0842               	movf	?___fttol+1,w
  9346  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  9347  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  9348  04A9  00AD               	movwf	(sprintf@val+1)^(0+128)
  9349  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  9350  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  9351  04AC  0841               	movf	?___fttol,w
  9352  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  9353  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  9354  04AF  00AC               	movwf	sprintf@val^(0+128)
  9355                           
  9356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9357  04B0  2D9E               	goto	l3040
  9358  04B1                     l3032:
  9359                           
  9360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9361  04B1  0838               	movf	sprintf@c^(0+128),w
  9362  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  9363  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  9364  04B4  00E1               	movwf	??_sprintf
  9365  04B5  3001               	movlw	1
  9366  04B6                     u4245:
  9367  04B6  1003               	clrc
  9368  04B7  0DE1               	rlf	??_sprintf,f
  9369  04B8  3EFF               	addlw	-1
  9370  04B9  1D03               	skipz
  9371  04BA  2CB6               	goto	u4245
  9372  04BB  1003               	clrc
  9373  04BC  0D61               	rlf	??_sprintf,w
  9374  04BD  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9375  04BE  0084               	movwf	4
  9376  04BF  160A  118A  200A  120A  118A  	fcall	stringdir
  9377  04C4  00F0               	movwf	___lldiv@divisor
  9378  04C5  160A  118A  200A  120A  118A  	fcall	stringdir
  9379  04CA  00F1               	movwf	___lldiv@divisor+1
  9380  04CB  160A  118A  200A  120A  118A  	fcall	stringdir
  9381  04D0  00F2               	movwf	___lldiv@divisor+2
  9382  04D1  160A  118A  200A  120A  118A  	fcall	stringdir
  9383  04D6  00F3               	movwf	___lldiv@divisor+3
  9384  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  9385  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  9386  04D9  082F               	movf	(sprintf@val+3)^(0+128),w
  9387  04DA  00F7               	movwf	___lldiv@dividend+3
  9388  04DB  082E               	movf	(sprintf@val+2)^(0+128),w
  9389  04DC  00F6               	movwf	___lldiv@dividend+2
  9390  04DD  082D               	movf	(sprintf@val+1)^(0+128),w
  9391  04DE  00F5               	movwf	___lldiv@dividend+1
  9392  04DF  082C               	movf	sprintf@val^(0+128),w
  9393  04E0  00F4               	movwf	___lldiv@dividend
  9394  04E1  160A  118A  2374  120A  118A  	fcall	___lldiv
  9395  04E6  0873               	movf	?___lldiv+3,w
  9396  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  9397  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  9398  04E9  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9399  04EA  0872               	movf	?___lldiv+2,w
  9400  04EB  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9401  04EC  0871               	movf	?___lldiv+1,w
  9402  04ED  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9403  04EE  0870               	movf	?___lldiv,w
  9404  04EF  00A8               	movwf	sprintf@tmpval^(0+128)
  9405  04F0                     l3034:
  9406                           
  9407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9408  04F0  3000               	movlw	0
  9409  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  9410  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  9411  04F3  00A3               	movwf	___llmod@divisor+3
  9412  04F4  3000               	movlw	0
  9413  04F5  00A2               	movwf	___llmod@divisor+2
  9414  04F6  3000               	movlw	0
  9415  04F7  00A1               	movwf	___llmod@divisor+1
  9416  04F8  300A               	movlw	10
  9417  04F9  00A0               	movwf	___llmod@divisor
  9418  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  9419  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  9420  04FC  082B               	movf	(sprintf@tmpval+3)^(0+128),w
  9421  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  9422  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  9423  04FF  00A7               	movwf	___llmod@dividend+3
  9424  0500  1683               	bsf	3,5	;RP0=1, select bank1
  9425  0501  1303               	bcf	3,6	;RP1=0, select bank1
  9426  0502  082A               	movf	(sprintf@tmpval+2)^(0+128),w
  9427  0503  1283               	bcf	3,5	;RP0=0, select bank0
  9428  0504  1303               	bcf	3,6	;RP1=0, select bank0
  9429  0505  00A6               	movwf	___llmod@dividend+2
  9430  0506  1683               	bsf	3,5	;RP0=1, select bank1
  9431  0507  1303               	bcf	3,6	;RP1=0, select bank1
  9432  0508  0829               	movf	(sprintf@tmpval+1)^(0+128),w
  9433  0509  1283               	bcf	3,5	;RP0=0, select bank0
  9434  050A  1303               	bcf	3,6	;RP1=0, select bank0
  9435  050B  00A5               	movwf	___llmod@dividend+1
  9436  050C  1683               	bsf	3,5	;RP0=1, select bank1
  9437  050D  1303               	bcf	3,6	;RP1=0, select bank1
  9438  050E  0828               	movf	sprintf@tmpval^(0+128),w
  9439  050F  1283               	bcf	3,5	;RP0=0, select bank0
  9440  0510  1303               	bcf	3,6	;RP1=0, select bank0
  9441  0511  00A4               	movwf	___llmod@dividend
  9442  0512  160A  118A  225F  120A  118A  	fcall	___llmod
  9443  0517  1283               	bcf	3,5	;RP0=0, select bank0
  9444  0518  1303               	bcf	3,6	;RP1=0, select bank0
  9445  0519  0823               	movf	?___llmod+3,w
  9446  051A  1683               	bsf	3,5	;RP0=1, select bank1
  9447  051B  1303               	bcf	3,6	;RP1=0, select bank1
  9448  051C  00AB               	movwf	(sprintf@tmpval+3)^(0+128)
  9449  051D  1283               	bcf	3,5	;RP0=0, select bank0
  9450  051E  1303               	bcf	3,6	;RP1=0, select bank0
  9451  051F  0822               	movf	?___llmod+2,w
  9452  0520  1683               	bsf	3,5	;RP0=1, select bank1
  9453  0521  1303               	bcf	3,6	;RP1=0, select bank1
  9454  0522  00AA               	movwf	(sprintf@tmpval+2)^(0+128)
  9455  0523  1283               	bcf	3,5	;RP0=0, select bank0
  9456  0524  1303               	bcf	3,6	;RP1=0, select bank0
  9457  0525  0821               	movf	?___llmod+1,w
  9458  0526  1683               	bsf	3,5	;RP0=1, select bank1
  9459  0527  1303               	bcf	3,6	;RP1=0, select bank1
  9460  0528  00A9               	movwf	(sprintf@tmpval+1)^(0+128)
  9461  0529  1283               	bcf	3,5	;RP0=0, select bank0
  9462  052A  1303               	bcf	3,6	;RP1=0, select bank0
  9463  052B  0820               	movf	?___llmod,w
  9464  052C  1683               	bsf	3,5	;RP0=1, select bank1
  9465  052D  1303               	bcf	3,6	;RP1=0, select bank1
  9466  052E  00A8               	movwf	sprintf@tmpval^(0+128)
  9467  052F                     l3036:
  9468                           
  9469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9470  052F  0828               	movf	sprintf@tmpval^(0+128),w
  9471  0530  3E30               	addlw	48
  9472  0531  1283               	bcf	3,5	;RP0=0, select bank0
  9473  0532  1303               	bcf	3,6	;RP1=0, select bank0
  9474  0533  00E1               	movwf	??_sprintf
  9475  0534  1683               	bsf	3,5	;RP0=1, select bank1
  9476  0535  1303               	bcf	3,6	;RP1=0, select bank1
  9477  0536  0835               	movf	sprintf@sp^(0+128),w
  9478  0537  0084               	movwf	4
  9479  0538  1283               	bcf	3,5	;RP0=0, select bank0
  9480  0539  1303               	bcf	3,6	;RP1=0, select bank0
  9481  053A  0861               	movf	??_sprintf,w
  9482  053B  1383               	bcf	3,7	;select IRP bank0
  9483  053C  0080               	movwf	0
  9484  053D  3001               	movlw	1
  9485  053E  00E1               	movwf	??_sprintf
  9486  053F  0861               	movf	??_sprintf,w
  9487  0540  1683               	bsf	3,5	;RP0=1, select bank1
  9488  0541  1303               	bcf	3,6	;RP1=0, select bank1
  9489  0542  07B5               	addwf	sprintf@sp^(0+128),f
  9490  0543                     l3038:
  9491                           
  9492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9493  0543  0838               	movf	sprintf@c^(0+128),w
  9494  0544  1283               	bcf	3,5	;RP0=0, select bank0
  9495  0545  1303               	bcf	3,6	;RP1=0, select bank0
  9496  0546  00E1               	movwf	??_sprintf
  9497  0547  3001               	movlw	1
  9498  0548                     u4255:
  9499  0548  1003               	clrc
  9500  0549  0DE1               	rlf	??_sprintf,f
  9501  054A  3EFF               	addlw	-1
  9502  054B  1D03               	skipz
  9503  054C  2D48               	goto	u4255
  9504  054D  1003               	clrc
  9505  054E  0D61               	rlf	??_sprintf,w
  9506  054F  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9507  0550  0084               	movwf	4
  9508  0551  160A  118A  200A  120A  118A  	fcall	stringdir
  9509  0556  00A0               	movwf	___llmod@divisor
  9510  0557  160A  118A  200A  120A  118A  	fcall	stringdir
  9511  055C  00A1               	movwf	___llmod@divisor+1
  9512  055D  160A  118A  200A  120A  118A  	fcall	stringdir
  9513  0562  00A2               	movwf	___llmod@divisor+2
  9514  0563  160A  118A  200A  120A  118A  	fcall	stringdir
  9515  0568  00A3               	movwf	___llmod@divisor+3
  9516  0569  1683               	bsf	3,5	;RP0=1, select bank1
  9517  056A  1303               	bcf	3,6	;RP1=0, select bank1
  9518  056B  082F               	movf	(sprintf@val+3)^(0+128),w
  9519  056C  1283               	bcf	3,5	;RP0=0, select bank0
  9520  056D  1303               	bcf	3,6	;RP1=0, select bank0
  9521  056E  00A7               	movwf	___llmod@dividend+3
  9522  056F  1683               	bsf	3,5	;RP0=1, select bank1
  9523  0570  1303               	bcf	3,6	;RP1=0, select bank1
  9524  0571  082E               	movf	(sprintf@val+2)^(0+128),w
  9525  0572  1283               	bcf	3,5	;RP0=0, select bank0
  9526  0573  1303               	bcf	3,6	;RP1=0, select bank0
  9527  0574  00A6               	movwf	___llmod@dividend+2
  9528  0575  1683               	bsf	3,5	;RP0=1, select bank1
  9529  0576  1303               	bcf	3,6	;RP1=0, select bank1
  9530  0577  082D               	movf	(sprintf@val+1)^(0+128),w
  9531  0578  1283               	bcf	3,5	;RP0=0, select bank0
  9532  0579  1303               	bcf	3,6	;RP1=0, select bank0
  9533  057A  00A5               	movwf	___llmod@dividend+1
  9534  057B  1683               	bsf	3,5	;RP0=1, select bank1
  9535  057C  1303               	bcf	3,6	;RP1=0, select bank1
  9536  057D  082C               	movf	sprintf@val^(0+128),w
  9537  057E  1283               	bcf	3,5	;RP0=0, select bank0
  9538  057F  1303               	bcf	3,6	;RP1=0, select bank0
  9539  0580  00A4               	movwf	___llmod@dividend
  9540  0581  160A  118A  225F  120A  118A  	fcall	___llmod
  9541  0586  1283               	bcf	3,5	;RP0=0, select bank0
  9542  0587  1303               	bcf	3,6	;RP1=0, select bank0
  9543  0588  0823               	movf	?___llmod+3,w
  9544  0589  1683               	bsf	3,5	;RP0=1, select bank1
  9545  058A  1303               	bcf	3,6	;RP1=0, select bank1
  9546  058B  00AF               	movwf	(sprintf@val+3)^(0+128)
  9547  058C  1283               	bcf	3,5	;RP0=0, select bank0
  9548  058D  1303               	bcf	3,6	;RP1=0, select bank0
  9549  058E  0822               	movf	?___llmod+2,w
  9550  058F  1683               	bsf	3,5	;RP0=1, select bank1
  9551  0590  1303               	bcf	3,6	;RP1=0, select bank1
  9552  0591  00AE               	movwf	(sprintf@val+2)^(0+128)
  9553  0592  1283               	bcf	3,5	;RP0=0, select bank0
  9554  0593  1303               	bcf	3,6	;RP1=0, select bank0
  9555  0594  0821               	movf	?___llmod+1,w
  9556  0595  1683               	bsf	3,5	;RP0=1, select bank1
  9557  0596  1303               	bcf	3,6	;RP1=0, select bank1
  9558  0597  00AD               	movwf	(sprintf@val+1)^(0+128)
  9559  0598  1283               	bcf	3,5	;RP0=0, select bank0
  9560  0599  1303               	bcf	3,6	;RP1=0, select bank0
  9561  059A  0820               	movf	?___llmod,w
  9562  059B  1683               	bsf	3,5	;RP0=1, select bank1
  9563  059C  1303               	bcf	3,6	;RP1=0, select bank1
  9564  059D  00AC               	movwf	sprintf@val^(0+128)
  9565  059E                     l3040:
  9566                           
  9567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9568  059E  3001               	movlw	1
  9569  059F  02B8               	subwf	sprintf@c^(0+128),f
  9570  05A0  0A38               	incf	sprintf@c^(0+128),w
  9571  05A1  1D03               	btfss	3,2
  9572  05A2  2DA4               	goto	u4261
  9573  05A3  2DA5               	goto	u4260
  9574  05A4                     u4261:
  9575  05A4  2CB1               	goto	l3032
  9576  05A5                     u4260:
  9577  05A5  2DBF               	goto	l3048
  9578  05A6                     l3042:
  9579                           
  9580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9581  05A6  3030               	movlw	48
  9582  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  9583  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  9584  05A9  00E1               	movwf	??_sprintf
  9585  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  9586  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  9587  05AC  0835               	movf	sprintf@sp^(0+128),w
  9588  05AD  0084               	movwf	4
  9589  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  9590  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  9591  05B0  0861               	movf	??_sprintf,w
  9592  05B1  1383               	bcf	3,7	;select IRP bank0
  9593  05B2  0080               	movwf	0
  9594  05B3                     l3044:
  9595  05B3  3001               	movlw	1
  9596  05B4  00E1               	movwf	??_sprintf
  9597  05B5  0861               	movf	??_sprintf,w
  9598  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  9599  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  9600  05B8  07B5               	addwf	sprintf@sp^(0+128),f
  9601  05B9                     l3046:
  9602                           
  9603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9604  05B9  30FF               	movlw	255
  9605  05BA  07B6               	addwf	sprintf@prec^(0+128),f
  9606  05BB  1803               	skipnc
  9607  05BC  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9608  05BD  30FF               	movlw	255
  9609  05BE  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9610  05BF                     l3048:
  9611                           
  9612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9613  05BF  0836               	movf	sprintf@prec^(0+128),w
  9614  05C0  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9615  05C1  1D03               	btfss	3,2
  9616  05C2  2DC4               	goto	u4271
  9617  05C3  2DC5               	goto	u4270
  9618  05C4                     u4271:
  9619  05C4  2DA6               	goto	l3042
  9620  05C5                     u4270:
  9621  05C5  2FCF               	goto	l3128
  9622  05C6                     l3050:
  9623                           
  9624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9625  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  9626  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  9627  05C8  0823               	movf	sprintf@ap^(0+128),w
  9628  05C9  0084               	movwf	4
  9629  05CA  1383               	bcf	3,7	;select IRP bank0
  9630  05CB  0800               	movf	0,w
  9631  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  9632  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  9633  05CE  00E1               	movwf	??_sprintf
  9634  05CF  0A84               	incf	4,f
  9635  05D0  0800               	movf	0,w
  9636  05D1  00E2               	movwf	??_sprintf+1
  9637  05D2  0861               	movf	??_sprintf,w
  9638  05D3  1683               	bsf	3,5	;RP0=1, select bank1
  9639  05D4  1303               	bcf	3,6	;RP1=0, select bank1
  9640  05D5  00AC               	movwf	sprintf@val^(0+128)
  9641  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  9642  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  9643  05D8  0862               	movf	??_sprintf+1,w
  9644  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  9645  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  9646  05DB  00AD               	movwf	(sprintf@val+1)^(0+128)
  9647  05DC  3000               	movlw	0
  9648  05DD  1BAD               	btfsc	(sprintf@val+1)^(0+128),7
  9649  05DE  30FF               	movlw	255
  9650  05DF  00AE               	movwf	(sprintf@val+2)^(0+128)
  9651  05E0  00AF               	movwf	(sprintf@val+3)^(0+128)
  9652  05E1                     l3052:
  9653  05E1  3002               	movlw	2
  9654  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  9655  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  9656  05E4  00E1               	movwf	??_sprintf
  9657  05E5  0861               	movf	??_sprintf,w
  9658  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  9659  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  9660  05E8  07A3               	addwf	sprintf@ap^(0+128),f
  9661  05E9                     l3054:
  9662                           
  9663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  9664  05E9  1FAF               	btfss	(sprintf@val+3)^(0+128),7
  9665  05EA  2DEC               	goto	u4281
  9666  05EB  2DED               	goto	u4280
  9667  05EC                     u4281:
  9668  05EC  2DFC               	goto	l3060
  9669  05ED                     u4280:
  9670  05ED                     l3056:
  9671                           
  9672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9673  05ED  3003               	movlw	3
  9674  05EE  04A4               	iorwf	sprintf@flag^(0+128),f
  9675  05EF  3000               	movlw	0
  9676  05F0  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  9677  05F1                     l3058:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9680  05F1  09AC               	comf	sprintf@val^(0+128),f
  9681  05F2  09AD               	comf	(sprintf@val+1)^(0+128),f
  9682  05F3  09AE               	comf	(sprintf@val+2)^(0+128),f
  9683  05F4  09AF               	comf	(sprintf@val+3)^(0+128),f
  9684  05F5  0AAC               	incf	sprintf@val^(0+128),f
  9685  05F6  1903               	skipnz
  9686  05F7  0AAD               	incf	(sprintf@val+1)^(0+128),f
  9687  05F8  1903               	skipnz
  9688  05F9  0AAE               	incf	(sprintf@val+2)^(0+128),f
  9689  05FA  1903               	skipnz
  9690  05FB  0AAF               	incf	(sprintf@val+3)^(0+128),f
  9691  05FC                     l3060:
  9692                           
  9693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  9694  05FC  0836               	movf	sprintf@prec^(0+128),w
  9695  05FD  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9696  05FE  1D03               	btfss	3,2
  9697  05FF  2E01               	goto	u4291
  9698  0600  2E02               	goto	u4290
  9699  0601                     u4291:
  9700  0601  2E10               	goto	l3066
  9701  0602                     u4290:
  9702  0602                     l3062:
  9703  0602  082F               	movf	(sprintf@val+3)^(0+128),w
  9704  0603  042E               	iorwf	(sprintf@val+2)^(0+128),w
  9705  0604  042D               	iorwf	(sprintf@val+1)^(0+128),w
  9706  0605  042C               	iorwf	sprintf@val^(0+128),w
  9707  0606  1D03               	skipz
  9708  0607  2E09               	goto	u4301
  9709  0608  2E0A               	goto	u4300
  9710  0609                     u4301:
  9711  0609  2E10               	goto	l3066
  9712  060A                     u4300:
  9713  060A                     l3064:
  9714                           
  9715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9716  060A  3001               	movlw	1
  9717  060B  07B6               	addwf	sprintf@prec^(0+128),f
  9718  060C  1803               	skipnc
  9719  060D  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  9720  060E  3000               	movlw	0
  9721  060F  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  9722  0610                     l3066:
  9723                           
  9724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9725  0610  01B8               	clrf	sprintf@c^(0+128)
  9726  0611  0AB8               	incf	sprintf@c^(0+128),f
  9727  0612                     l3072:
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  9730  0612  0838               	movf	sprintf@c^(0+128),w
  9731  0613  1283               	bcf	3,5	;RP0=0, select bank0
  9732  0614  1303               	bcf	3,6	;RP1=0, select bank0
  9733  0615  00E1               	movwf	??_sprintf
  9734  0616  3001               	movlw	1
  9735  0617                     u4315:
  9736  0617  1003               	clrc
  9737  0618  0DE1               	rlf	??_sprintf,f
  9738  0619  3EFF               	addlw	-1
  9739  061A  1D03               	skipz
  9740  061B  2E17               	goto	u4315
  9741  061C  1003               	clrc
  9742  061D  0D61               	rlf	??_sprintf,w
  9743  061E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9744  061F  0084               	movwf	4
  9745  0620  160A  118A  200A  120A  118A  	fcall	stringdir
  9746  0625  00E2               	movwf	??_sprintf+1
  9747  0626  160A  118A  200A  120A  118A  	fcall	stringdir
  9748  062B  00E3               	movwf	??_sprintf+2
  9749  062C  160A  118A  200A  120A  118A  	fcall	stringdir
  9750  0631  00E4               	movwf	??_sprintf+3
  9751  0632  160A  118A  200A  120A  118A  	fcall	stringdir
  9752  0637  00E5               	movwf	??_sprintf+4
  9753  0638  0865               	movf	??_sprintf+4,w
  9754  0639  1683               	bsf	3,5	;RP0=1, select bank1
  9755  063A  1303               	bcf	3,6	;RP1=0, select bank1
  9756  063B  022F               	subwf	(sprintf@val+3)^(0+128),w
  9757  063C  1D03               	skipz
  9758  063D  2E54               	goto	u4325
  9759  063E  1283               	bcf	3,5	;RP0=0, select bank0
  9760  063F  1303               	bcf	3,6	;RP1=0, select bank0
  9761  0640  0864               	movf	??_sprintf+3,w
  9762  0641  1683               	bsf	3,5	;RP0=1, select bank1
  9763  0642  1303               	bcf	3,6	;RP1=0, select bank1
  9764  0643  022E               	subwf	(sprintf@val+2)^(0+128),w
  9765  0644  1D03               	skipz
  9766  0645  2E54               	goto	u4325
  9767  0646  1283               	bcf	3,5	;RP0=0, select bank0
  9768  0647  1303               	bcf	3,6	;RP1=0, select bank0
  9769  0648  0863               	movf	??_sprintf+2,w
  9770  0649  1683               	bsf	3,5	;RP0=1, select bank1
  9771  064A  1303               	bcf	3,6	;RP1=0, select bank1
  9772  064B  022D               	subwf	(sprintf@val+1)^(0+128),w
  9773  064C  1D03               	skipz
  9774  064D  2E54               	goto	u4325
  9775  064E  1283               	bcf	3,5	;RP0=0, select bank0
  9776  064F  1303               	bcf	3,6	;RP1=0, select bank0
  9777  0650  0862               	movf	??_sprintf+1,w
  9778  0651  1683               	bsf	3,5	;RP0=1, select bank1
  9779  0652  1303               	bcf	3,6	;RP1=0, select bank1
  9780  0653  022C               	subwf	sprintf@val^(0+128),w
  9781  0654                     u4325:
  9782  0654  1803               	skipnc
  9783  0655  2E57               	goto	u4321
  9784  0656  2E58               	goto	u4320
  9785  0657                     u4321:
  9786  0657  2E59               	goto	l3076
  9787  0658                     u4320:
  9788  0658  2E67               	goto	l3078
  9789  0659                     l3076:
  9790  0659  3001               	movlw	1
  9791  065A  1283               	bcf	3,5	;RP0=0, select bank0
  9792  065B  1303               	bcf	3,6	;RP1=0, select bank0
  9793  065C  00E1               	movwf	??_sprintf
  9794  065D  0861               	movf	??_sprintf,w
  9795  065E  1683               	bsf	3,5	;RP0=1, select bank1
  9796  065F  1303               	bcf	3,6	;RP1=0, select bank1
  9797  0660  07B8               	addwf	sprintf@c^(0+128),f
  9798  0661  300A               	movlw	10
  9799  0662  0638               	xorwf	sprintf@c^(0+128),w
  9800  0663  1D03               	btfss	3,2
  9801  0664  2E66               	goto	u4331
  9802  0665  2E67               	goto	u4330
  9803  0666                     u4331:
  9804  0666  2E12               	goto	l3072
  9805  0667                     u4330:
  9806  0667                     l3078:
  9807                           
  9808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9809  0667  0837               	movf	(sprintf@prec+1)^(0+128),w
  9810  0668  3A80               	xorlw	128
  9811  0669  3C80               	sublw	128
  9812  066A  1D03               	skipz
  9813  066B  2E6E               	goto	u4345
  9814  066C  0836               	movf	sprintf@prec^(0+128),w
  9815  066D  0238               	subwf	sprintf@c^(0+128),w
  9816  066E                     u4345:
  9817  066E  1803               	skipnc
  9818  066F  2E71               	goto	u4341
  9819  0670  2E72               	goto	u4340
  9820  0671                     u4341:
  9821  0671  2E7D               	goto	l3082
  9822  0672                     u4340:
  9823  0672                     l3080:
  9824                           
  9825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9826  0672  1683               	bsf	3,5	;RP0=1, select bank1
  9827  0673  1303               	bcf	3,6	;RP1=0, select bank1
  9828  0674  0836               	movf	sprintf@prec^(0+128),w
  9829  0675  1283               	bcf	3,5	;RP0=0, select bank0
  9830  0676  1303               	bcf	3,6	;RP1=0, select bank0
  9831  0677  00E1               	movwf	??_sprintf
  9832  0678  0861               	movf	??_sprintf,w
  9833  0679  1683               	bsf	3,5	;RP0=1, select bank1
  9834  067A  1303               	bcf	3,6	;RP1=0, select bank1
  9835  067B  00B8               	movwf	sprintf@c^(0+128)
  9836  067C  2EA1               	goto	l3086
  9837  067D                     l3082:
  9838  067D  1683               	bsf	3,5	;RP0=1, select bank1
  9839  067E  1303               	bcf	3,6	;RP1=0, select bank1
  9840  067F  0837               	movf	(sprintf@prec+1)^(0+128),w
  9841  0680  3A80               	xorlw	128
  9842  0681  1283               	bcf	3,5	;RP0=0, select bank0
  9843  0682  1303               	bcf	3,6	;RP1=0, select bank0
  9844  0683  00E1               	movwf	??_sprintf
  9845  0684  3080               	movlw	128
  9846  0685  0261               	subwf	??_sprintf,w
  9847  0686  1D03               	skipz
  9848  0687  2E8C               	goto	u4355
  9849  0688  1683               	bsf	3,5	;RP0=1, select bank1
  9850  0689  1303               	bcf	3,6	;RP1=0, select bank1
  9851  068A  0838               	movf	sprintf@c^(0+128),w
  9852  068B  0236               	subwf	sprintf@prec^(0+128),w
  9853  068C                     u4355:
  9854  068C  1803               	skipnc
  9855  068D  2E8F               	goto	u4351
  9856  068E  2E90               	goto	u4350
  9857  068F                     u4351:
  9858  068F  2EA1               	goto	l3086
  9859  0690                     u4350:
  9860  0690                     l3084:
  9861                           
  9862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9863  0690  1683               	bsf	3,5	;RP0=1, select bank1
  9864  0691  1303               	bcf	3,6	;RP1=0, select bank1
  9865  0692  0838               	movf	sprintf@c^(0+128),w
  9866  0693  1283               	bcf	3,5	;RP0=0, select bank0
  9867  0694  1303               	bcf	3,6	;RP1=0, select bank0
  9868  0695  00E1               	movwf	??_sprintf
  9869  0696  01E2               	clrf	??_sprintf+1
  9870  0697  0861               	movf	??_sprintf,w
  9871  0698  1683               	bsf	3,5	;RP0=1, select bank1
  9872  0699  1303               	bcf	3,6	;RP1=0, select bank1
  9873  069A  00B6               	movwf	sprintf@prec^(0+128)
  9874  069B  1283               	bcf	3,5	;RP0=0, select bank0
  9875  069C  1303               	bcf	3,6	;RP1=0, select bank0
  9876  069D  0862               	movf	??_sprintf+1,w
  9877  069E  1683               	bsf	3,5	;RP0=1, select bank1
  9878  069F  1303               	bcf	3,6	;RP1=0, select bank1
  9879  06A0  00B7               	movwf	(sprintf@prec+1)^(0+128)
  9880  06A1                     l3086:
  9881                           
  9882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9883  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  9884  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  9885  06A3  0826               	movf	sprintf@width^(0+128),w
  9886  06A4  0427               	iorwf	(sprintf@width+1)^(0+128),w
  9887  06A5  1903               	btfsc	3,2
  9888  06A6  2EA8               	goto	u4361
  9889  06A7  2EA9               	goto	u4360
  9890  06A8                     u4361:
  9891  06A8  2EC3               	goto	l3092
  9892  06A9                     u4360:
  9893  06A9                     l3088:
  9894  06A9  3003               	movlw	3
  9895  06AA  0524               	andwf	sprintf@flag^(0+128),w
  9896  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  9897  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  9898  06AD  00E1               	movwf	??_sprintf
  9899  06AE  3000               	movlw	0
  9900  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  9901  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  9902  06B1  0525               	andwf	(sprintf@flag+1)^(0+128),w
  9903  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  9904  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  9905  06B4  00E2               	movwf	??_sprintf+1
  9906  06B5  0861               	movf	??_sprintf,w
  9907  06B6  0462               	iorwf	??_sprintf+1,w
  9908  06B7  1903               	btfsc	3,2
  9909  06B8  2EBA               	goto	u4371
  9910  06B9  2EBB               	goto	u4370
  9911  06BA                     u4371:
  9912  06BA  2EC3               	goto	l3092
  9913  06BB                     u4370:
  9914  06BB                     l3090:
  9915                           
  9916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9917  06BB  30FF               	movlw	255
  9918  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  9919  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  9920  06BE  07A6               	addwf	sprintf@width^(0+128),f
  9921  06BF  1803               	skipnc
  9922  06C0  0AA7               	incf	(sprintf@width+1)^(0+128),f
  9923  06C1  30FF               	movlw	255
  9924  06C2  07A7               	addwf	(sprintf@width+1)^(0+128),f
  9925  06C3                     l3092:
  9926                           
  9927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9928  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  9929  06C4  1303               	bcf	3,6	;RP1=0, select bank1
  9930  06C5  1F25               	btfss	(sprintf@flag+1)^(0+128),6
  9931  06C6  2EC8               	goto	u4381
  9932  06C7  2EC9               	goto	u4380
  9933  06C8                     u4381:
  9934  06C8  2EEC               	goto	l3100
  9935  06C9                     u4380:
  9936  06C9                     l3094:
  9937                           
  9938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9939  06C9  0837               	movf	(sprintf@prec+1)^(0+128),w
  9940  06CA  3A80               	xorlw	128
  9941  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  9942  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  9943  06CD  00E1               	movwf	??_sprintf
  9944  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  9945  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  9946  06D0  0827               	movf	(sprintf@width+1)^(0+128),w
  9947  06D1  3A80               	xorlw	128
  9948  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  9949  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  9950  06D4  0261               	subwf	??_sprintf,w
  9951  06D5  1D03               	skipz
  9952  06D6  2EDB               	goto	u4395
  9953  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  9954  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  9955  06D9  0826               	movf	sprintf@width^(0+128),w
  9956  06DA  0236               	subwf	sprintf@prec^(0+128),w
  9957  06DB                     u4395:
  9958  06DB  1803               	skipnc
  9959  06DC  2EDE               	goto	u4391
  9960  06DD  2EDF               	goto	u4390
  9961  06DE                     u4391:
  9962  06DE  2EE8               	goto	l3098
  9963  06DF                     u4390:
  9964  06DF                     l3096:
  9965                           
  9966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  9967  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  9968  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  9969  06E1  0836               	movf	sprintf@prec^(0+128),w
  9970  06E2  02A6               	subwf	sprintf@width^(0+128),f
  9971  06E3  0837               	movf	(sprintf@prec+1)^(0+128),w
  9972  06E4  1C03               	skipc
  9973  06E5  03A7               	decf	(sprintf@width+1)^(0+128),f
  9974  06E6  02A7               	subwf	(sprintf@width+1)^(0+128),f
  9975  06E7  2EEC               	goto	l3100
  9976  06E8                     l3098:
  9977                           
  9978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  9979  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  9980  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  9981  06EA  01A6               	clrf	sprintf@width^(0+128)
  9982  06EB  01A7               	clrf	(sprintf@width+1)^(0+128)
  9983  06EC                     l3100:
  9984                           
  9985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  9986  06EC  0827               	movf	(sprintf@width+1)^(0+128),w
  9987  06ED  3A80               	xorlw	128
  9988  06EE  3C80               	sublw	128
  9989  06EF  1D03               	skipz
  9990  06F0  2EF3               	goto	u4405
  9991  06F1  0826               	movf	sprintf@width^(0+128),w
  9992  06F2  0238               	subwf	sprintf@c^(0+128),w
  9993  06F3                     u4405:
  9994  06F3  1803               	skipnc
  9995  06F4  2EF6               	goto	u4401
  9996  06F5  2EF7               	goto	u4400
  9997  06F6                     u4401:
  9998  06F6  2F0B               	goto	l3104
  9999  06F7                     u4400:
 10000  06F7                     l3102:
 10001                           
 10002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10003  06F7  1683               	bsf	3,5	;RP0=1, select bank1
 10004  06F8  1303               	bcf	3,6	;RP1=0, select bank1
 10005  06F9  0838               	movf	sprintf@c^(0+128),w
 10006  06FA  1283               	bcf	3,5	;RP0=0, select bank0
 10007  06FB  1303               	bcf	3,6	;RP1=0, select bank0
 10008  06FC  00E1               	movwf	??_sprintf
 10009  06FD  01E2               	clrf	??_sprintf+1
 10010  06FE  0861               	movf	??_sprintf,w
 10011  06FF  1683               	bsf	3,5	;RP0=1, select bank1
 10012  0700  1303               	bcf	3,6	;RP1=0, select bank1
 10013  0701  02A6               	subwf	sprintf@width^(0+128),f
 10014  0702  1283               	bcf	3,5	;RP0=0, select bank0
 10015  0703  1303               	bcf	3,6	;RP1=0, select bank0
 10016  0704  0862               	movf	??_sprintf+1,w
 10017  0705  1683               	bsf	3,5	;RP0=1, select bank1
 10018  0706  1303               	bcf	3,6	;RP1=0, select bank1
 10019  0707  1C03               	skipc
 10020  0708  03A7               	decf	(sprintf@width+1)^(0+128),f
 10021  0709  02A7               	subwf	(sprintf@width+1)^(0+128),f
 10022  070A  2F0F               	goto	l3106
 10023  070B                     l3104:
 10024                           
 10025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10026  070B  1683               	bsf	3,5	;RP0=1, select bank1
 10027  070C  1303               	bcf	3,6	;RP1=0, select bank1
 10028  070D  01A6               	clrf	sprintf@width^(0+128)
 10029  070E  01A7               	clrf	(sprintf@width+1)^(0+128)
 10030  070F                     l3106:
 10031                           
 10032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10033  070F  0826               	movf	sprintf@width^(0+128),w
 10034  0710  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10035  0711  1903               	btfsc	3,2
 10036  0712  2F14               	goto	u4411
 10037  0713  2F15               	goto	u4410
 10038  0714                     u4411:
 10039  0714  2F34               	goto	l3114
 10040  0715                     u4410:
 10041  0715                     l3108:
 10042                           
 10043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10044  0715  3020               	movlw	32
 10045  0716  1283               	bcf	3,5	;RP0=0, select bank0
 10046  0717  1303               	bcf	3,6	;RP1=0, select bank0
 10047  0718  00E1               	movwf	??_sprintf
 10048  0719  1683               	bsf	3,5	;RP0=1, select bank1
 10049  071A  1303               	bcf	3,6	;RP1=0, select bank1
 10050  071B  0835               	movf	sprintf@sp^(0+128),w
 10051  071C  0084               	movwf	4
 10052  071D  1283               	bcf	3,5	;RP0=0, select bank0
 10053  071E  1303               	bcf	3,6	;RP1=0, select bank0
 10054  071F  0861               	movf	??_sprintf,w
 10055  0720  1383               	bcf	3,7	;select IRP bank0
 10056  0721  0080               	movwf	0
 10057  0722                     l3110:
 10058  0722  3001               	movlw	1
 10059  0723  00E1               	movwf	??_sprintf
 10060  0724  0861               	movf	??_sprintf,w
 10061  0725  1683               	bsf	3,5	;RP0=1, select bank1
 10062  0726  1303               	bcf	3,6	;RP1=0, select bank1
 10063  0727  07B5               	addwf	sprintf@sp^(0+128),f
 10064  0728                     l3112:
 10065  0728  30FF               	movlw	255
 10066  0729  07A6               	addwf	sprintf@width^(0+128),f
 10067  072A  1803               	skipnc
 10068  072B  0AA7               	incf	(sprintf@width+1)^(0+128),f
 10069  072C  30FF               	movlw	255
 10070  072D  07A7               	addwf	(sprintf@width+1)^(0+128),f
 10071  072E  0826               	movf	sprintf@width^(0+128),w
 10072  072F  0427               	iorwf	(sprintf@width+1)^(0+128),w
 10073  0730  1D03               	btfss	3,2
 10074  0731  2F33               	goto	u4421
 10075  0732  2F34               	goto	u4420
 10076  0733                     u4421:
 10077  0733  2F15               	goto	l3108
 10078  0734                     u4420:
 10079  0734                     l3114:
 10080                           
 10081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10082  0734  3003               	movlw	3
 10083  0735  0524               	andwf	sprintf@flag^(0+128),w
 10084  0736  1283               	bcf	3,5	;RP0=0, select bank0
 10085  0737  1303               	bcf	3,6	;RP1=0, select bank0
 10086  0738  00E1               	movwf	??_sprintf
 10087  0739  3000               	movlw	0
 10088  073A  1683               	bsf	3,5	;RP0=1, select bank1
 10089  073B  1303               	bcf	3,6	;RP1=0, select bank1
 10090  073C  0525               	andwf	(sprintf@flag+1)^(0+128),w
 10091  073D  1283               	bcf	3,5	;RP0=0, select bank0
 10092  073E  1303               	bcf	3,6	;RP1=0, select bank0
 10093  073F  00E2               	movwf	??_sprintf+1
 10094  0740  0861               	movf	??_sprintf,w
 10095  0741  0462               	iorwf	??_sprintf+1,w
 10096  0742  1903               	btfsc	3,2
 10097  0743  2F45               	goto	u4431
 10098  0744  2F46               	goto	u4430
 10099  0745                     u4431:
 10100  0745  2FBF               	goto	l3126
 10101  0746                     u4430:
 10102  0746                     l3116:
 10103                           
 10104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10105  0746  302D               	movlw	45
 10106  0747  00E1               	movwf	??_sprintf
 10107  0748  1683               	bsf	3,5	;RP0=1, select bank1
 10108  0749  1303               	bcf	3,6	;RP1=0, select bank1
 10109  074A  0835               	movf	sprintf@sp^(0+128),w
 10110  074B  0084               	movwf	4
 10111  074C  1283               	bcf	3,5	;RP0=0, select bank0
 10112  074D  1303               	bcf	3,6	;RP1=0, select bank0
 10113  074E  0861               	movf	??_sprintf,w
 10114  074F  1383               	bcf	3,7	;select IRP bank0
 10115  0750  0080               	movwf	0
 10116  0751                     l3118:
 10117  0751  3001               	movlw	1
 10118  0752  00E1               	movwf	??_sprintf
 10119  0753  0861               	movf	??_sprintf,w
 10120  0754  1683               	bsf	3,5	;RP0=1, select bank1
 10121  0755  1303               	bcf	3,6	;RP1=0, select bank1
 10122  0756  07B5               	addwf	sprintf@sp^(0+128),f
 10123  0757  2FBF               	goto	l3126
 10124  0758                     l3120:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10127  0758  3000               	movlw	0
 10128  0759  1283               	bcf	3,5	;RP0=0, select bank0
 10129  075A  1303               	bcf	3,6	;RP1=0, select bank0
 10130  075B  00A3               	movwf	___llmod@divisor+3
 10131  075C  3000               	movlw	0
 10132  075D  00A2               	movwf	___llmod@divisor+2
 10133  075E  3000               	movlw	0
 10134  075F  00A1               	movwf	___llmod@divisor+1
 10135  0760  300A               	movlw	10
 10136  0761  00A0               	movwf	___llmod@divisor
 10137  0762  1683               	bsf	3,5	;RP0=1, select bank1
 10138  0763  1303               	bcf	3,6	;RP1=0, select bank1
 10139  0764  0836               	movf	sprintf@prec^(0+128),w
 10140  0765  1283               	bcf	3,5	;RP0=0, select bank0
 10141  0766  1303               	bcf	3,6	;RP1=0, select bank0
 10142  0767  00E1               	movwf	??_sprintf
 10143  0768  3001               	movlw	1
 10144  0769                     u4445:
 10145  0769  1003               	clrc
 10146  076A  0DE1               	rlf	??_sprintf,f
 10147  076B  3EFF               	addlw	-1
 10148  076C  1D03               	skipz
 10149  076D  2F69               	goto	u4445
 10150  076E  1003               	clrc
 10151  076F  0D61               	rlf	??_sprintf,w
 10152  0770  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10153  0771  0084               	movwf	4
 10154  0772  160A  118A  200A  120A  118A  	fcall	stringdir
 10155  0777  00F0               	movwf	___lldiv@divisor
 10156  0778  160A  118A  200A  120A  118A  	fcall	stringdir
 10157  077D  00F1               	movwf	___lldiv@divisor+1
 10158  077E  160A  118A  200A  120A  118A  	fcall	stringdir
 10159  0783  00F2               	movwf	___lldiv@divisor+2
 10160  0784  160A  118A  200A  120A  118A  	fcall	stringdir
 10161  0789  00F3               	movwf	___lldiv@divisor+3
 10162  078A  1683               	bsf	3,5	;RP0=1, select bank1
 10163  078B  1303               	bcf	3,6	;RP1=0, select bank1
 10164  078C  082F               	movf	(sprintf@val+3)^(0+128),w
 10165  078D  00F7               	movwf	___lldiv@dividend+3
 10166  078E  082E               	movf	(sprintf@val+2)^(0+128),w
 10167  078F  00F6               	movwf	___lldiv@dividend+2
 10168  0790  082D               	movf	(sprintf@val+1)^(0+128),w
 10169  0791  00F5               	movwf	___lldiv@dividend+1
 10170  0792  082C               	movf	sprintf@val^(0+128),w
 10171  0793  00F4               	movwf	___lldiv@dividend
 10172  0794  160A  118A  2374  120A  118A  	fcall	___lldiv
 10173  0799  0873               	movf	?___lldiv+3,w
 10174  079A  1283               	bcf	3,5	;RP0=0, select bank0
 10175  079B  1303               	bcf	3,6	;RP1=0, select bank0
 10176  079C  00A7               	movwf	___llmod@dividend+3
 10177  079D  0872               	movf	?___lldiv+2,w
 10178  079E  00A6               	movwf	___llmod@dividend+2
 10179  079F  0871               	movf	?___lldiv+1,w
 10180  07A0  00A5               	movwf	___llmod@dividend+1
 10181  07A1  0870               	movf	?___lldiv,w
 10182  07A2  00A4               	movwf	___llmod@dividend
 10183  07A3  160A  118A  225F  120A  118A  	fcall	___llmod
 10184  07A8  1283               	bcf	3,5	;RP0=0, select bank0
 10185  07A9  1303               	bcf	3,6	;RP1=0, select bank0
 10186  07AA  0820               	movf	?___llmod,w
 10187  07AB  3E30               	addlw	48
 10188  07AC  00E2               	movwf	??_sprintf+1
 10189  07AD  0862               	movf	??_sprintf+1,w
 10190  07AE  1683               	bsf	3,5	;RP0=1, select bank1
 10191  07AF  1303               	bcf	3,6	;RP1=0, select bank1
 10192  07B0  00B8               	movwf	sprintf@c^(0+128)
 10193  07B1                     l3122:
 10194                           
 10195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10196  07B1  0838               	movf	sprintf@c^(0+128),w
 10197  07B2  1283               	bcf	3,5	;RP0=0, select bank0
 10198  07B3  1303               	bcf	3,6	;RP1=0, select bank0
 10199  07B4  00E1               	movwf	??_sprintf
 10200  07B5  1683               	bsf	3,5	;RP0=1, select bank1
 10201  07B6  1303               	bcf	3,6	;RP1=0, select bank1
 10202  07B7  0835               	movf	sprintf@sp^(0+128),w
 10203  07B8  0084               	movwf	4
 10204  07B9  1283               	bcf	3,5	;RP0=0, select bank0
 10205  07BA  1303               	bcf	3,6	;RP1=0, select bank0
 10206  07BB  0861               	movf	??_sprintf,w
 10207  07BC  1383               	bcf	3,7	;select IRP bank0
 10208  07BD  0080               	movwf	0
 10209  07BE  2F51               	goto	l3118
 10210  07BF                     l3126:
 10211                           
 10212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10213  07BF  30FF               	movlw	255
 10214  07C0  1683               	bsf	3,5	;RP0=1, select bank1
 10215  07C1  1303               	bcf	3,6	;RP1=0, select bank1
 10216  07C2  07B6               	addwf	sprintf@prec^(0+128),f
 10217  07C3  1803               	skipnc
 10218  07C4  0AB7               	incf	(sprintf@prec+1)^(0+128),f
 10219  07C5  30FF               	movlw	255
 10220  07C6  07B7               	addwf	(sprintf@prec+1)^(0+128),f
 10221  07C7  0A36               	incf	sprintf@prec^(0+128),w
 10222  07C8  1D03               	skipz
 10223  07C9  2FCE               	goto	u4451
 10224  07CA  0A37               	incf	(sprintf@prec+1)^(0+128),w
 10225  07CB  1D03               	btfss	3,2
 10226  07CC  2FCE               	goto	u4451
 10227  07CD  2FCF               	goto	u4450
 10228  07CE                     u4451:
 10229  07CE  2F58               	goto	l3120
 10230  07CF                     u4450:
 10231  07CF                     l3128:
 10232                           
 10233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10234  07CF  3001               	movlw	1
 10235  07D0  1283               	bcf	3,5	;RP0=0, select bank0
 10236  07D1  07DB               	addwf	sprintf@f,f
 10237  07D2  30FF               	movlw	-1
 10238  07D3  075B               	addwf	sprintf@f,w
 10239  07D4  0084               	movwf	4
 10240  07D5  160A  118A  200A  120A  118A  	fcall	stringdir
 10241  07DA  00E1               	movwf	??_sprintf
 10242  07DB  0861               	movf	??_sprintf,w
 10243  07DC  1683               	bsf	3,5	;RP0=1, select bank1
 10244  07DD  1303               	bcf	3,6	;RP1=0, select bank1
 10245  07DE  00B8               	movwf	sprintf@c^(0+128)
 10246  07DF  0838               	movf	sprintf@c^(0+128),w
 10247  07E0  1D03               	btfss	3,2
 10248  07E1  2FE3               	goto	u4461
 10249  07E2  2FE6               	goto	u4460
 10250  07E3                     u4461:
 10251  07E3  120A  158A  2D36   	goto	l2850
 10252  07E6                     u4460:
 10253  07E6                     l3130:
 10254                           
 10255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10256  07E6  1683               	bsf	3,5	;RP0=1, select bank1
 10257  07E7  1303               	bcf	3,6	;RP1=0, select bank1
 10258  07E8  0835               	movf	sprintf@sp^(0+128),w
 10259  07E9  0084               	movwf	4
 10260  07EA  1383               	bcf	3,7	;select IRP bank0
 10261  07EB  0180               	clrf	0
 10262  07EC                     l416:
 10263  07EC  0008               	return
 10264  07ED                     __end_of_sprintf:

Data Sizes:
    Strings     22
    Constant    118
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      78
    BANK1            80     25      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[13]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[13]), BUFFER(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_ADCread
    _write_string->_write_char
    _write_char->_port
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___ftmul->___lwdiv
    ___bmul->___lwdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _setup->_spiInit
    _set_cursor->_CMDs
    _contador->_spiWrite
    _clear_LCD->_CMDs
    _Write_USART_String->_Write_USART
    _LCD_init->_CMDs
    _CMDs->_port
    _ADCread->___lbtoft
    ___lbtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _ADCread->___lbtoft

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   36371
                                             71 BANK0      3     3      0
                            _ADCread
                           _LCD_init
                        _Write_USART
                 _Write_USART_String
                           __baudios
                          _clear_LCD
                       _config_rcsta
                       _config_txsta
                           _contador
                         _set_cursor
                              _setup
                            _sprintf
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     394
                                              3 COMMON     7     5      2
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     198
                                              1 COMMON     2     2      0
                               _port
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    36      6   32599
                                             59 BANK0     12     6      6
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6734
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5519
                                             24 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3757
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2069
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     583
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3172
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2999
                                             40 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     291
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     438
                                              4 COMMON     4     3      1
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _contador                                             2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     198
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     198
                                              4 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     198
                                              1 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _port                                                 1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCread                                              2     2      0    1991
                                             12 COMMON     2     2      0
                           ___lbtoft
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    1969
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCread
     ___lbtoft
       ___ftpack
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LCD_init
     _CMDs
       _port
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _clear_LCD
     _CMDs
       _port
   _config_rcsta
   _config_txsta
   _contador
     _spiRead
       _spiReceiveWait
     _spiWrite
   _set_cursor
     _CMDs
       _port
   _setup
     _spiInit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _write_string
     _write_char
       _port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      89       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     19      2D       7       56.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      89      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 15:35:56 2021

                          pc 0002               ___bmul@product 0026                  _SSPSTATbits 0094  
                         l63 1569                           l72 1160                           l91 1EE1  
                         l75 081E                           l92 1EE6                           l69 10EE  
                         l95 1E7F                           _V1 006A                           l98 1E85  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
               ___ftadd@exp1 0054                 ___ftadd@exp2 0053         __size_of_Write_USART 000C  
               ___ftadd@sign 0052                          l101 1E7E                          l203 1F5B  
                        l132 1E8D                          l109 1E9E                          l206 1373  
                        l126 1E78                          l135 1EB4                          l215 121A  
                        l144 1FD0                          l129 1EA8                          l209 1F19  
                        l138 1EBE                          l180 11B5                          l420 1F8D  
                        l324 0D27                          l181 11BB                          l317 0A7C  
                        l182 11BC                          l422 1FA5                          l191 11D8  
                        l183 11C2                          l175 11A4                          l184 11C3  
                        l176 11A7                          l416 07EC                          l185 11C9  
                        l177 11AD                          l186 11CA                          l178 11AE  
                        l194 10BC                          l346 0E1A                          l187 11D0  
                        l179 11B4                          l603 1442                          l188 11D1  
                        l189 11D7                          l197 0010                          l630 17C2  
                        l446 1EFD                          l456 13D9                          l616 130D  
                        l705 08DB                          l626 17FF                          l706 084D  
                        l386 0423                          l723 1126                          l379 03D1  
                        l740 1EB2                          l716 08CE                          l645 14BE  
                        l637 17F2                          l629 17AF                          l709 089E  
                        l670 0066                          l750 154A                          l671 006B  
                        l656 149A                          l680 00DC                          l657 14A4  
                        l649 147F                          l729 16D3                          l658 14BE  
                        l666 0146                          l746 1F80                          l781 1F37  
                        l669 005C                          l757 152D                          l862 125E  
                        l791 12B4                          l872 119A                          l882 1ED0  
                        l799 1FFF                          _RD0 0040                          _RD1 0041  
                        _RD2 0042                          _RE0 0048                          _RD3 0043  
                        _RE1 0049                          _RD4 0044                          _RD5 0045  
                        _RD6 0046                          _RD7 0047                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0076              __end_of_ADCread 1161  
__size_of_Write_USART_String 002B                         l2100 1E7F                         l2110 11B9  
                       l2102 119C                         l2112 11C0                         l2104 11A0  
                       l2120 1EEA                         l2200 12E2                         l3000 0338  
                       l2114 11C7                         l2106 11AB                         l2130 1EFC  
                       l2122 1EEB                         l2210 1304                         l2202 12EC  
                       l3010 03E8                         l3002 033F                         l2116 11CE  
                       l2108 11B2                         l2220 0036                         l2124 1EEF  
                       l2300 164E                         l2140 13E6                         l2212 1309  
                       l2204 12F2                         l3100 06EC                         l3020 0419  
                       l3012 03EE                         l3004 037E                         l2070 1448  
                       l2118 11D5                         l2230 0052                         l2222 0040  
                       l2126 1EF3                         l2310 1660                         l2302 164F  
                       l2150 13F7                         l2142 13E8                         l2134 13DA  
                       l2206 12F9                         l3110 0722                         l3102 06F7  
                       l3030 0464                         l3022 0434                         l3014 03F4  
                       l3006 03BD                         l2080 1469                         l2072 144F  
                       l2400 1EDB                         l2240 006C                         l2232 005D  
                       l2216 0011                         l2128 1EF5                         l2320 168A  
                       l2312 1664                         l2304 1650                         l2160 140F  
                       l2152 13FD                         l2144 13EC                         l2136 13DD  
                       l2208 12FF                         l3120 0758                         l3112 0728  
                       l3104 070B                         l3032 04B1                         l3040 059E  
                       l3024 0439                         l3016 0401                         l3008 03DB  
                       l3200 0E36                         l2090 1494                         l2082 146D  
                       l2410 10A7                         l2402 1EDD                         l2250 0098  
                       l2242 0072                         l2234 0061                         l2226 0047  
                       l2218 0030                         l2330 16B2                         l2322 168E  
                       l2314 1674                         l2306 1656                         l2162 1420  
                       l2154 1400                         l2170 1434                         l2146 13F1  
                       l2138 13E1                         l3122 07B1                         l3114 0734  
                       l3106 070F                         l3042 05A6                         l3034 04F0  
                       l3026 0446                         l3018 0410                         l3050 05C6  
                       l3130 07E6                         l2092 149E                         l2084 1477  
                       l2076 1456                         l2068 1443                         l2412 10AA  
                       l3140 1FA6                         l2404 1EE0                         l2260 00C1  
                       l2252 00A4                         l2244 007F                         l2236 0065  
                       l2228 004C                         l2332 16B8                         l2324 1692  
                       l2316 167C                         l2308 165C                         l2340 1223  
                       l2500 1EC7                         l2172 1439                         l2164 1426  
                       l2156 1407                         l2148 13F5                         l2180 12B6  
                       l3116 0746                         l3108 0715                         l3060 05FC  
                       l3052 05E1                         l3044 05B3                         l3036 052F  
                       l3028 044C                         l2420 1EFF                         l2094 14A6  
                       l2086 1486                         l2078 1462                         l2414 10AD  
                       l2406 109E                         l3142 1FA8                         l2270 00F4  
                       l2262 00CA                         l2246 0089                         l2254 00AB  
                       l2238 006A                         l2510 0832                         l2326 16A2  
                       l2318 1684                         l2350 1246                         l2342 1226  
                       l2502 1ECD                         l2174 143E                         l2166 1427  
                       l2158 140B                         l2190 12CA                         l2182 12BA  
                       l3118 0751                         l3126 07BF                         l3062 0602  
                       l3054 05E9                         l3046 05B9                         l3038 0543  
                       l2430 1F11                         l2422 1F02                         l3150 1555  
                       l2096 14B8                         l2088 1490                         l2416 10B0  
                       l2408 10A1                         l3144 1FB9                         l2280 0129  
                       l2272 0104                         l2264 00D6                         l2256 00B1  
                       l2248 008F                         l2600 17E0                         l2520 084E  
                       l2328 16AA                         l2352 124C                         l2344 122D  
                       l2336 121B                         l2504 1ECF                         l2168 142E  
                       l2192 12D0                         l2184 12BF                         l3080 0672  
                       l3072 0612                         l3064 060A                         l3056 05ED  
                       l3048 05BF                         l3128 07CF                         l2432 1F14  
                       l2424 1F08                         l3160 15B3                         l3152 155A  
                       l2098 14BD                         l2418 10B3                         l3146 1FBD  
                       l2282 012B                         l2274 0105                         l2266 00E0  
                       l2258 00BB                         l2530 0877                         l2522 0854  
                       l2514 083B                         l2354 124D                         l2346 1231  
                       l2338 121D                         l2370 1175                         l2362 1161  
                       l2434 08DF                         l2194 12D3                         l2186 12C1  
                       l2178 12B5                         l3090 06BB                         l3082 067D  
                       l3066 0610                         l3058 05F1                         l2426 1F0B  
                       l3162 15C8                         l3154 1580                         l2276 0115  
                       l2268 00F0                         l2700 14FB                         l2620 1F9B  
                       l2612 1F81                         l2540 08A2                         l2532 0885  
                       l2524 0863                         l2508 081F                         l2292 1609  
                       l2356 1254                         l2348 1235                         l2372 1179  
                       l2364 1167                         l2380 1196                         l2452 0A49  
                       l2436 08E5                         l2444 09BC                         l2196 12DA  
                       l2188 12C5                         l2460 0A86                         l3092 06C3  
                       l3084 0690                         l3076 0659                         l2428 1F0E  
                       l3164 15D1                         l3156 1589                         l3148 154B  
                       l2390 1E96                         l2278 0119                         l2710 1509  
                       l2702 14FD                         l2630 1387                         l2622 1FA1  
                       l2614 1F83                         l2606 17E7                         l2534 088F  
                       l2526 0865                         l2294 161A                         l2286 15EF  
                       l2358 125A                         l2374 1183                         l2366 116A  
                       l2446 09C2                         l2438 09A2                         l2198 12DE  
                       l2470 0B4C                         l2462 0A8D                         l3094 06C9  
                       l3086 06A1                         l3078 0667                         l3166 15D7  
                       l3158 15AA                         l2392 1E9B                         l2800 135D  
                       l2384 1EB4                         l2720 1532                         l2704 1501  
                       l2712 151B                         l2640 13C1                         l2632 1394  
                       l2616 1F87                         l2608 17F7                         l2560 16D4  
                       l2536 0890                         l2528 086E                         l2288 1602  
                       l2376 1189                         l2368 1171                         l2448 0A2F  
                       l2480 0BDE                         l2456 0A80                         l3096 06DF  
                       l3088 06A9                         l3168 15DD                         l2802 1363  
                       l2386 1EBA                         l2810 10C0                         l2650 10EF  
                       l2722 1537                         l2642 13C2                         l2634 1398  
                       l2626 1374                         l2618 1F94                         l2562 16EE  
                       l2554 08C3                         l2546 08AA                         l2538 0898  
                       l2298 1621                         l2378 1190                         l2474 0BB6  
                       l2458 0A84                         l3098 06E8                         l2388 1E7A  
                       l2820 112A                         l2804 136E                         l2812 10C9  
                       l2396 1ED2                         l2660 1113                         l2652 10F3  
                       l2724 1542                         l2644 13CB                         l2636 13A1  
                       l2628 1384                         l2740 127D                         l2732 125F  
                       l2580 1753                         l2572 1710                         l2556 08D3  
                       l2548 08BC                         l2492 0D07                         l2468 0B45  
                       l2900 0E64                         l2822 1133                         l2806 0004  
                       l2814 10CF                         l2830 1F3E                         l2398 1ED9  
                       l2662 1115                         l2654 1100                         l2670 1EA9  
                       l2718 1522                         l2638 13B3                         l2646 13D1  
                       l2742 128F                         l2734 1269                         l2590 17BC  
                       l2582 1757                         l2574 1744                         l2566 16F7  
                       l2486 0C96                         l2478 0BD7                         l2910 0EA5  
                       l2902 0E6F                         l2728 1F1B                         l2824 1139  
                       l2816 10E2                         l2808 10BD                         l2832 1F43  
                       l2664 1123                         l2656 1104                         l2672 1EB0  
                       l2680 1F65                         l2744 129D                         l2736 126C  
                       l2752 1FD1                         l2592 17C6                         l2584 1760  
                       l2576 174C                         l2496 1EC0                         l2488 0C9D  
                       l2920 0EF6                         l2912 0EA9                         l2904 0E77  
                       l2840 11D9                         l2826 1154                         l2818 1127  
                       l2834 1F4A                         l2770 0814                         l2762 0801  
                       l2666 1125                         l2658 1111                         l2674 1EB2  
                       l2682 1F67                         l2746 12A6                         l2738 1279  
                       l2754 1FD6                         l2586 178C                         l2578 174E  
                       l2498 1EC1                         l2930 0F65                         l2922 0F09  
                       l2914 0EB0                         l2906 0E8C                         l2850 0D36  
                       l2842 11DC                         l2780 1E8C                         l2836 1F50  
                       l2828 1F39                         l2772 0815                         l2764 080D  
                       l2692 14DB                         l2748 12AC                         l2756 1FE3  
                       l2588 17AE                         l2940 0FB1                         l2932 0F7A  
                       l2924 0F0D                         l2916 0EDD                         l2908 0EA1  
                       l2860 0D66                         l2852 0D3C                         l2844 11F8  
                       l2790 132F                         l2782 130E                         l2774 1E74  
                       l2838 1F55                         l2766 0810                         l2678 1F5C  
                       l2694 14ED                         l2686 14BF                         l2758 1FE9  
                       l2598 17CE                         l2950 017E                         l2942 0FEA  
                       l2934 0F83                         l2926 0F13                         l2918 0EE3  
                       l2862 0D6A                         l2870 0DB0                         l2854 0D49  
                       l2846 11FE                         l2792 1339                         l2784 1317  
                       l2776 1E9F                         l2768 0811                         l2696 14EE  
                       l2688 14D2                         l2960 01BE                         l2952 0195  
                       l2944 0147                         l2936 0F9A                         l2928 0F2C  
                       l2880 0DE1                         l2872 0DBE                         l2864 0D7F  
                       l2856 0D50                         l2848 0D2B                         l2794 133F  
                       l2786 131D                         l2778 1E86                         l2698 14F4  
                       l2962 01D9                         l2954 019E                         l2946 0150  
                       l2938 0FA2                         l2882 0DFC                         l2874 0DC1  
                       l2866 0D9A                         l2858 0D54                         l2796 134A  
                       l2788 132B                         l2980 02A6                         l2956 01A6  
                       l2948 016F                         l2964 01E0                         l2892 0E1E  
                       l2884 0E02                         l2876 0DC7                         l2868 0DA0  
                       l2798 134F                         l2990 0303                         l2982 02D5  
                       l2974 0251                         l2966 024D                         l2894 0E44  
                       l2878 0DCC                         l2886 0E14                         l2984 02DB  
                       l2968 024F                         l2896 0E5A                         l2888 0E18  
                       l2986 02ED                         l2994 030A                         l2978 0298  
                       l2898 0E60                         l2996 0319                         l2988 02F6  
                       l2998 032D                         STR_1 1086                         STR_2 1093  
                       STR_3 1086                         _CMDs 109D                         u3000 1692  
                       u3001 1691                         u3011 169B                         u2300 1485  
                       u3012 16A2                         u2301 1484                         u3110 125A  
                       u3111 1259                         u2320 1494                         u2400 11B2  
                       u3040 16B8                         u3120 1167                         u3200 08E5  
                       u4000 0E8C                         u2321 1493                         u2401 11B1  
                       u3041 16B7                         u3025 16A3                         u3105 124E  
                       u3121 1166                         u3201 08E4                         u4001 0E8B  
                       u2330 149A                         u2250 1448                         u2410 11B9  
                       u3050 1223                         u3210 09C2                         u4010 0EB0  
                       u2331 1499                         u2315 1489                         u2251 1447  
                       u2411 11B8                         u3035 16AB                         u3051 1222  
                       u3211 09C1                         u4011 0EAF                         u2340 149E  
                       u2260 144F                         u2420 11C0                         u3300 084C  
                       u3140 1179                         u2500 13FD                         u3220 0A84  
                       u4100 017E                         u4020 0EC6                         u2341 149D  
                       u2261 144E                         u2421 11BF                         u3301 084B  
                       u3141 1178                         u2501 13FC                         u3221 0A83  
                       u4101 017D                         u2350 14AF                         u2430 11C7  
                       u3070 1235                         u3150 1183                         u3230 0A8D  
                       u4110 0195                         u4030 0F0D                         u2431 11C6  
                       u3071 1234                         u3151 1182                         u3135 116B  
                       u3231 0A8C                         u4111 0194                         u4031 0F0C  
                       u2360 14BD                         u2280 1468                         u2440 11CE  
                       u3320 0885                         u2520 140F                         u2600 12D0  
                       u3240 0B4C                         u4200 03DA                         u4040 0F7A  
                       u2361 14BC                         u2281 1467                         u2441 11CD  
                       u3321 0884                         u3065 1227                         u2521 140E  
                       u2601 12CF                         u3241 0B4B                         u4201 03D9  
                       u4105 017A                         u4041 0F79                         u4025 0EC1  
                       u2370 1E85                         u2450 11D5                         u3410 08D3  
                       u3090 1246                         u3170 1196                         u3250 0BDE  
                       u4210 0401                         u4130 0297                         u4050 0F9A  
                       u2355 14AB                         u2275 145B                         u2371 1E84  
                       u2451 11D4                         u3411 08D2                         u3315 0870  
                       u3091 1245                         u3171 1195                         u3155 117F  
                       u2515 1401                         u3251 0BDD                         u4211 0400  
                       u4131 0296                         u4051 0F99                         u2380 11A0  
                       u3180 1EBA                         u2700 004C                         u3500 17DF  
                       u3420 16EE                         u3340 089E                         u2460 1EEF  
                       u2540 1420                         u2620 12E2                         u3260 0C9D  
                       u4300 060A                         u4220 0410                         u4140 02A6  
                       u4060 0FB1                         u2381 119F                         u3181 1EB9  
                       u2701 004B                         u3501 17DE                         u3421 16ED  
                       u3405 08C5                         u3341 089D                         u3325 0881  
                       u2461 1EEE                         u3085 1236                         u3165 118A  
                       u2541 141F                         u2621 12E1                         u3261 0C9C  
                       u4301 0609                         u4221 040F                         u4141 02A5  
                       u4125 0256                         u4061 0FB0                         u2390 11AB  
                       u3190 1ED9                         u2710 0052                         u3510 17E6  
                       u3430 170F                         u3350 08A2                         u2470 1EFC  
                       u3270 1EC7                         u2630 12EC                         u4230 0439  
                       u4150 02D5                         u4070 0147                         u2295 1478  
                       u2391 11AA                         u3191 1ED8                         u2711 0051  
                       u3511 17E5                         u3431 170E                         u3351 08A1  
                       u3335 0891                         u2471 1EFB                         u3095 1242  
                       u3271 1EC6                         u2535 1410                         u2631 12EB  
                       u2615 12D4                         u4231 0438                         u4215 03FD  
                       u4151 02D4                         u4135 0293                         u4071 0FFA  
                       u2800 00AA                         u2720 005C                         u3600 1398  
                       u3360 08A9                         u3280 1ECD                         u2560 1434  
                       u2480 13E1                         u4400 06F7                         u4320 0658  
                       u4160 02ED                         u4080 0150                         u2801 00A9  
                       u2721 005B                         u3601 1397                         u3361 08A8  
                       u3281 1ECC                         u2561 1433                         u2545 141C  
                       u2481 13E0                         u4401 06F6                         u4321 0657  
                       u4225 040C                         u4161 02EC                         u4081 014F  
                       u4065 0FAD                         u2810 00B1                         u2730 0065  
                       u3530 17F7                         u3450 178C                         u3290 0832  
                       u2570 1439                         u2490 13EC                         u2650 12FF  
                       u4410 0715                         u4330 0667                         u4170 0319  
                       u4090 016F                         u2811 00B0                         u2731 0064  
                       u3531 17F6                         u3451 178B                         u3291 0831  
                       u2571 1438                         u2555 1428                         u2491 13EB  
                       u2651 12FE                         u2635 12E8                         u4411 0714  
                       u4331 0666                         u4315 0617                         u4171 0318  
                       u4091 016E                         u4075 0FF5                         u2900 0119  
                       u2740 006A                         u3700 14D2                         u3620 13B3  
                       u3540 1F87                         u3460 17C2                         u3380 08BB  
                       u2660 1304                         u2580 12BA                         u4420 0734  
                       u4340 0672                         u4260 05A5                         u4180 032D  
                       u2901 0118                         u2741 0069                         u3701 14D1  
                       u3621 13B2                         u3541 1F86                         u3525 17E9  
                       u3461 17C1                         u3445 1759                         u3381 08BA  
                       u2661 1303                         u2645 12F3                         u2581 12B9  
                       u4421 0733                         u4405 06F3                         u4341 0671  
                       u4325 0654                         u4261 05A4                         u4245 04B6  
                       u4181 032C                         u2830 00C1                         u2750 007F  
                       u2670 0030                         u3710 14E6                         u3470 17C6  
                       u3390 08C2                         u2910 1602                         u2590 12C5  
                       u4430 0746                         u4350 0690                         u4270 05C5  
                       u2831 00C0                         u2751 007E                         u2671 002F  
                       u3615 139A                         u3471 17C5                         u3455 1788  
                       u3391 08C1                         u3375 08AB                         u2911 1601  
                       u2591 12C4                         u4431 0745                         u4351 068F  
                       u4271 05C4                         u4255 0548                         u4175 0315  
                       u2840 00C9                         u2680 0036                         u3720 1501  
                       u3640 13D1                         u3800 1269                         u3480 17CD  
                       u2920 161A                         u4360 06A9                         u4280 05ED  
                       u2841 00C8                         u2825 00B2                         u2681 0035  
                       u3721 1500                         u3641 13D0                         u3625 13AF  
                       u3801 1268                         u3481 17CC                         u2921 1619  
                       u4361 06A8                         u4345 066E                         u4281 05EC  
                       u3650 10F3                         u2770 008F                         u2690 0040  
                       u3730 1508                         u3570 1FA1                         u2930 1631  
                       u4450 07CF                         u4370 06BB                         u4290 0602  
                       u4507 10C4                         u3651 10F2                         u2771 008E  
                       u2691 003F                         u3731 1507                         u3715 14E2  
                       u3635 13C3                         u3571 1FA0                         u3555 1F8E  
                       u4451 07CE                         u4371 06BA                         u4355 068C  
                       u4291 0601                         u4195 0344                         u3660 1104  
                       u2860 00DC                         u2780 0097                         u3580 1384  
                       u3820 127D                         u2940 1643                         u4460 07E6  
                       u4380 06C9                         u3900 11E6                         u4517 10DD  
                       u3661 1103                         u2861 00DB                         u2781 0096  
                       u2765 0080                         u3581 1383                         u3821 127C  
                       u3565 1F95                         u4461 07E3                         u4445 0769  
                       u4381 06C8                         u4470 1FD0                         u3670 1123  
                       u2870 00E0                         u3750 151A                         u3830 128F  
                       u2950 1664                         u4390 06DF                         u3910 1208  
                       u4607 1365                         u4471 1FCF                         u4527 10E9  
                       u3671 1122                         u2871 00DF                         u2855 00CB  
                       u3751 1519                         u3831 128E                         u3815 126E  
                       u3495 17CF                         u2951 1663                         u2935 162D  
                       u4391 06DE                         u3680 1EB0                         u2880 00F4  
                       u3760 1521                         u3920 121A                         u4617 1370  
                       u4537 1312                         u3681 1EAF                         u2881 00F3  
                       u3761 1520                         u3745 150A                         u2961 166D  
                       u2945 163F                         u3921 1219                         u3690 1F65  
                       u3850 12AC                         u2962 1674                         u3930 0D3C  
                       u4627 10B7                         u4547 1321                         u3675 111F  
                       u2891 010E                         u2795 0099                         u3691 1F64  
                       u3595 1389                         u3851 12AB                         u3835 128B  
                       u4395 06DB                         u3931 0D3B                         u2892 0115  
                       u3780 1532                         u3940 0D66                         _RCIF 0065  
                       u4637 112E                         u4557 132D                         u3781 1531  
                       u3845 129E                         u3941 0D65                         u3790 1537  
                       u3870 1FE9                         u2990 168A                         u3950 0DB0  
                       u4647 114F                         u4567 1337                         u3791 1536  
                       u3775 1524                         u3871 1FE8                         u2991 1689  
                       u2975 1675                         u3951 0DAF                         u4487 15E5  
                       u3880 1F3E                         u3960 0DBE                         u4657 115B  
                       u4577 1341                         u3881 1F3D                         u3865 1FD7  
                       u2985 167D                         u3961 0DBD                         u4497 1F16  
                       u3890 1F50                         u3970 0E13                         u4587 134C  
                       u3891 1F4F                         u3971 0E12                         u3980 0E5A  
                       u4597 1359                         u3981 0E57                         u3990 0E60  
                       u3991 0E5F                         _TRMT 04C1                         _cont 006D  
                       _main 154B                 ___ftpack@arg 0070                 ___ftpack@exp 0073  
                       _port 119B                         btemp 007E                         start 0000  
             ??_config_rcsta 0070               ??_config_txsta 0070                 _sprintf$1078 00A0  
          ___bmul@multiplier 0027                 ___ftmul@cntr 0036                 ___ftmul@sign 0037  
               ___fttol@exp1 004E                 ___fttol@lval 004A                        CMDs@a 0073  
                      ?_CMDs 0070             __end_of_LCD_init 1374                        ?_main 0070  
            __end_of___awdiv 1443              __end_of___ftadd 0147              __end_of___awmod 130E  
                      ?_port 0070              __end_of___ftneg 1EB3                        _ANSEL 0188  
            __end_of___lldiv 13DA              __end_of___ftmul 16D4              ___awdiv@divisor 0077  
            __end_of___llmod 12B5              __end_of___ftsub 1F81              __end_of___fttol 154B  
            __end_of___lwdiv 125F                write_string@a 0073                write_string@i 0078  
            __end_of___lwmod 119B              ___awdiv@counter 0020                        _RCREG 001A  
                      _SPBRG 0099                        _PORTD 0008                        _PORTE 0009  
                      _TRISD 0088                        _TRISE 0089                        _TXREG 0019  
               ___lltoft@exp 007D              __end_of_dpowers 1086                        _scale 0A7D  
            __end_of_isdigit 1ED1                ___ftpack@sign 0074                        _setup 0801  
                      pclath 000A              __end_of_spiInit 1EE7              __end_of_spiRead 1E9F  
                      port@a 0070                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07ED                 __end_of_CMDs 10BD              __initialization 07ED  
               __end_of_main 15EF                 __end_of_port 11D9                       ??_CMDs 0071  
                  ??_ADCread 007C                       ??_main 0067                ___fttol@sign1 0049  
                     ??_port 0070        __size_of_write_string 0042         __size_of__tdiv_to_l_ 00BD  
           ___llmod@dividend 0024                       ?_scale 0038             ___awdiv@dividend 0079  
                     ?_setup 0070             __end_of___ftpack 14BF                       _ANSELH 0189  
           __end_of___lbtoft 1F38             __end_of__baudios 1E79                       _BUFFER 00B9  
           __end_of___lltoft 2000                       _TRISC1 0439                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISC5 043D                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__powers_ 1037                       ___bmul 1EE7  
                     ___ftge 10EF             __end_of_contador 10EF                 _write_string 11D9  
                     ___wmul 1F81                    ??___awdiv 007B                    ??___ftadd 004E  
                  ??___awmod 0074                    ??___ftneg 0073                    ??___lldiv 0078  
                  ??___ftmul 002E                    ??___llmod 0028                    ??___ftsub 007E  
                  ??___fttol 0045                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _fround 08DC             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075        ___ftmul@f3_as_product 0033                    ??_isdigit 0070  
       __end_of_config_rcsta 1E8E             __end_of_spiWrite 1E7F         __end_of_config_txsta 1EA9  
                  ??_spiInit 0073                    ??_spiRead 0070                    ??_sprintf 0061  
    __end_of__initialization 07FC                   ___ftadd@f1 0048                   ___ftadd@f2 004B  
                 ___ftge@ff1 0070                   ___ftge@ff2 0073                    ?_LCD_init 0070  
                 ___ftneg@f1 0070          ___bmul@multiplicand 0024                   ___lbtoft@c 007B  
                 ___ftmul@f1 0028                   ___ftmul@f2 002B                   ___ftsub@f1 0058  
                 ___ftsub@f2 0055                   ___fttol@f1 0041               __pcstackCOMMON 0070  
                 ___lltoft@c 0078                __end_of_scale 0D28                __end_of_setup 081F  
         __size_of_clear_LCD 000D                   __div_to_l_ 16D4              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 003B              __div_to_l_@quot 0020  
               sprintf@width 00A6                      ??_setup 0074                 Write_USART@a 0070  
                 __pbssBANK0 006A                   __pbssBANK1 00B9                   ??_LCD_init 0074  
              __div_to_l_@f1 0070                __div_to_l_@f2 0073                   __pmaintext 154B  
                    ?___bmul 0024                      ?___ftge 0070                      ?___wmul 0070  
              ??_Write_USART 0070      __size_of_spiReceiveWait 0007                      ?_fround 0038  
                  ?___ftpack 0070                    ?___lbtoft 0078                    ?__baudios 0070  
                    _ADCread 1127                    ?___lltoft 0078   __end_of_Write_USART_String 1FD1  
                    _SSPSTAT 0094                   __stringtab 1000                    ?_contador 0070  
          __end_of_clear_LCD 0011            __end_of__npowers_ 105E                   _scale$1077 003D  
                  ?_spiWrite 0070              __size_of___bmul 0017              __size_of___ftge 0038  
                    ___awdiv 13DA                      ___ftadd 0011                      ___awmod 12B5  
                    ___ftneg 1EA9                      ___lldiv 1374              __size_of___wmul 0025  
                    ___ftmul 15EF                      ___llmod 125F                      ___ftsub 1F5C  
                    ___fttol 14BF                      ___lwdiv 121B                      ___lwmod 1161  
      __size_of_config_rcsta 0008                   ??___ftpack 0075                   ??___lbtoft 0020  
                 ??__baudios 0070              __size_of_fround 01A1                   ??___lltoft 007C  
                    __ptext1 11D9                      __ptext2 1EFE        __size_of_config_txsta 000A  
                    __ptext3 0D28                      __ptext4 0A7D                      __ptext5 12B5  
                    __ptext6 13DA                      __ptext7 1EBF                      __ptext8 08DC  
                    __ptext9 1161                  ?__div_to_l_ 0070                      _dpowers 105E  
        __end_of_Write_USART 1EBF                      _isdigit 1EBF             ___awmod@dividend 0072  
                    _spiInit 1ED1                      _spiRead 1E96                  set_cursor@a 0076  
                set_cursor@b 0074                  set_cursor@x 0077                      _sprintf 0D28  
                    clrloop0 1E8F         end_of_initialization 07FC                   ??_contador 0071  
            ___lldiv@divisor 0070              ___lldiv@counter 007D                 _config_rcsta 1E86  
                 _set_cursor 1F38                 _config_txsta 1E9F                    _RCSTAbits 0018  
                 ??_spiWrite 0070                      psplit$0 D0036               __tdiv_to_l_@f1 0070  
             __tdiv_to_l_@f2 0073                ??__tdiv_to_l_ 0076                    _PORTCbits 0007  
                spiWrite@dat 0070                    _TXSTAbits 0098          __size_of__div_to_l_ 012C  
          __size_of_LCD_init 0066                  ___ftmul@exp 0032               _spiReceiveWait 1E7F  
             __end_of___bmul 1EFE               __end_of___ftge 1127                  _Write_USART 1EB3  
             __end_of___wmul 1FA6                   _write_char 1EFE               __end_of_fround 0A7D  
          pnum$text3_split_1 0036          start_initialization 07ED          __end_of__tdiv_to_l_ 08DC  
            ___llmod@divisor 0020              ___llmod@counter 0029                  ?_set_cursor 0074  
     __end_of_spiReceiveWait 1E86                     ??___bmul 0025                     ??___ftge 0076  
                   ??___wmul 0074                     ??_fround 003B                     ?_ADCread 0070  
              sprintf@tmpval 00A8                   fround@prec 0047            __size_of___ftpack 007C  
          __size_of___lbtoft 001E            __size_of__baudios 0005            __size_of___lltoft 002F  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
                sprintf@flag 00A4                  sprintf@eexp 00B0                  sprintf@fval 00B2  
         _Write_USART_String 1FA6                  sprintf@prec 00B6            __size_of_contador 0032  
                  _clear_LCD 0004             ___lwdiv@dividend 0078              ?_spiReceiveWait 0070  
        ?_Write_USART_String 0071                     ?___awdiv 0077                     ?___ftadd 0048  
                   ?___awmod 0070                     ?___ftneg 0070                     ?___lldiv 0070  
                   ?___ftmul 0028                     ?___llmod 0020                     ?___ftsub 0055  
                  __npowers_ 1037                     ?___fttol 0041                     ?___lwdiv 0076  
                   ?___lwmod 0070                  ?_write_char 0070            __size_of_spiWrite 0006  
                  __pstrings 1000                  __tdiv_to_l_ 081F                 ??__div_to_l_ 0076  
                   ?_isdigit 0070                     ?_spiInit 0070                     ?_spiRead 0070  
       ??_Write_USART_String 0073             ___lwdiv@quotient 007B          __size_of_set_cursor 0024  
                   ?_sprintf 005B               __size_of_scale 02AB               __size_of_setup 001E  
       spiInit@sTransmitEdge 0072               ___wmul@product 0074                     _LCD_init 130E  
                  clear_ram0 1E8E                   ?_clear_LCD 0070           spiInit@sDataSample 0070  
         __end_of__div_to_l_ 1800                ?_write_string 0073                  __stringbase 100F  
          ___wmul@multiplier 0070             __size_of_ADCread 003A                  write_char@a 0072  
        __size_of_write_char 001C               ??_write_string 0075                 ?_Write_USART 0070  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftneg 000A             __size_of___lldiv 0066             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                     ___ftpack 1443  
                   ___lbtoft 1F1A                     __baudios 1E74                  _fround$1075 0044  
                _fround$1076 0041           __end_of__stringtab 1010                     ___lltoft 1FD1  
                _isdigit$880 0070                   sprintf@val 00AC             __size_of_isdigit 0012  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 121B  
                   __ptext11 15EF                     __ptext20 1F5C                     __ptext12 1EE7  
                   __ptext21 0011                     __ptext13 081F                     __ptext30 0004  
                   __ptext22 1EA9                     __ptext14 16D4                     __ptext31 1E74  
                   __ptext23 10EF                     __ptext15 1F81                     __ptext40 1E7F  
                   __ptext32 1FA6                     __ptext24 0801                     __ptext16 1FD1  
                   __ptext41 1F1A                     __ptext33 1EB3                     __ptext25 1ED1  
                   __ptext17 125F                     __ptext42 1443                     __ptext34 130E  
                   __ptext26 1F38                     __ptext18 1374                     __ptext35 109D  
                   __ptext27 10BD                     __ptext19 14BF                     __ptext36 119B  
                   __ptext28 1E9F                     __ptext37 1127                     __ptext29 1E86  
                   __ptext38 1E79                     __ptext39 1E96             __size_of_spiInit 0016  
           __size_of_spiRead 0009                     __powers_ 1010                     _contador 10BD  
           __size_of_sprintf FAC5                __size_of_CMDs 0020                __size_of_main 00A4  
                  pnum$text3 000D                __size_of_port 003E                  ??_clear_LCD 0074  
               ??_set_cursor 0075                     _spiWrite 1E79                 spiInit@sType 0073  
          spiInit@sClockIdle 0071          Write_USART_String@a 0071          Write_USART_String@i 0074  
                   isdigit@c 0071                     scale@scl 0040           __end_of_set_cursor 1F5C  
                  sprintf@ap 00A3             __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024  
                  sprintf@sp 00B5             __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074             ??_spiReceiveWait 0070                    stringcode 100A  
               ??_write_char 0071                 ?__tdiv_to_l_ 0070                     sprintf@c 00B8  
                   sprintf@f 005B             ___lldiv@quotient 0079              ___lwmod@divisor 0070  
            ___lwmod@counter 0075                     stringdir 100A                     stringtab 1000  
       __end_of_write_string 121B           __end_of_write_char 1F1A                ?_config_rcsta 0070  
              ?_config_txsta 0070  
