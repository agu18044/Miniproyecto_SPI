

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 22:34:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	psect	text4_split_1,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F887 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0088                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  0105                     	;# 
   236  0107                     	;# 
   237  0108                     	;# 
   238  0109                     	;# 
   239  010C                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  0185                     	;# 
   245  0187                     	;# 
   246  0188                     	;# 
   247  0189                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0185                     	;# 
   323  0187                     	;# 
   324  0188                     	;# 
   325  0189                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0088                     	;# 
   368  0089                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  008F                     	;# 
   373  0090                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0094                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0098                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  0105                     	;# 
   392  0107                     	;# 
   393  0108                     	;# 
   394  0109                     	;# 
   395  010C                     	;# 
   396  010C                     	;# 
   397  010D                     	;# 
   398  010E                     	;# 
   399  010F                     	;# 
   400  0185                     	;# 
   401  0187                     	;# 
   402  0188                     	;# 
   403  0189                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0088                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484                           
   485                           	psect	strings
   486  1000                     __pstrings:
   487  1000                     stringtab:
   488  1000                     __stringtab:
   489                           
   490                           ;	String table - string pointers are 1 byte each
   491  1000  1BFF               	btfsc	btemp+1,7
   492  1001  280A               	ljmp	stringcode
   493  1002  1383               	bcf	3,7
   494  1003  187F               	btfsc	btemp+1,0
   495  1004  1783               	bsf	3,7
   496  1005  0800               	movf	0,w
   497  1006  0A84               	incf	4,f
   498  1007  1903               	skipnz
   499  1008  0AFF               	incf	btemp+1,f
   500  1009  0008               	return
   501  100A                     stringcode:
   502  100A                     stringdir:
   503  100A  3010               	movlw	high stringdir
   504  100B  008A               	movwf	10
   505  100C  0804               	movf	4,w
   506  100D  0A84               	incf	4,f
   507  100E  0782               	addwf	2,f
   508  100F                     __stringbase:
   509  100F  3400               	retlw	0
   510  1010                     __end_of__stringtab:
   511  1010                     __powers_:
   512  1010  3400               	retlw	0
   513  1011  3480               	retlw	128
   514  1012  343F               	retlw	63
   515  1013  3400               	retlw	0
   516  1014  3420               	retlw	32
   517  1015  3441               	retlw	65
   518  1016  3400               	retlw	0
   519  1017  34C8               	retlw	200
   520  1018  3442               	retlw	66
   521  1019  3400               	retlw	0
   522  101A  347A               	retlw	122
   523  101B  3444               	retlw	68
   524  101C  3440               	retlw	64
   525  101D  341C               	retlw	28
   526  101E  3446               	retlw	70
   527  101F  3450               	retlw	80
   528  1020  34C3               	retlw	195
   529  1021  3447               	retlw	71
   530  1022  3424               	retlw	36
   531  1023  3474               	retlw	116
   532  1024  3449               	retlw	73
   533  1025  3497               	retlw	151
   534  1026  3418               	retlw	24
   535  1027  344B               	retlw	75
   536  1028  34BC               	retlw	188
   537  1029  34BE               	retlw	190
   538  102A  344C               	retlw	76
   539  102B  346B               	retlw	107
   540  102C  346E               	retlw	110
   541  102D  344E               	retlw	78
   542  102E  3403               	retlw	3
   543  102F  3415               	retlw	21
   544  1030  3450               	retlw	80
   545  1031  3479               	retlw	121
   546  1032  34AD               	retlw	173
   547  1033  3460               	retlw	96
   548  1034  34F3               	retlw	243
   549  1035  3449               	retlw	73
   550  1036  3471               	retlw	113
   551  1037                     __end_of__powers_:
   552  1037                     __npowers_:
   553  1037  3400               	retlw	0
   554  1038  3480               	retlw	128
   555  1039  343F               	retlw	63
   556  103A  34CD               	retlw	205
   557  103B  34CC               	retlw	204
   558  103C  343D               	retlw	61
   559  103D  34D7               	retlw	215
   560  103E  3423               	retlw	35
   561  103F  343C               	retlw	60
   562  1040  3412               	retlw	18
   563  1041  3483               	retlw	131
   564  1042  343A               	retlw	58
   565  1043  34B7               	retlw	183
   566  1044  34D1               	retlw	209
   567  1045  3438               	retlw	56
   568  1046  34C6               	retlw	198
   569  1047  3427               	retlw	39
   570  1048  3437               	retlw	55
   571  1049  3438               	retlw	56
   572  104A  3486               	retlw	134
   573  104B  3435               	retlw	53
   574  104C  34C0               	retlw	192
   575  104D  34D6               	retlw	214
   576  104E  3433               	retlw	51
   577  104F  34CC               	retlw	204
   578  1050  342B               	retlw	43
   579  1051  3432               	retlw	50
   580  1052  3470               	retlw	112
   581  1053  3489               	retlw	137
   582  1054  3430               	retlw	48
   583  1055  34E7               	retlw	231
   584  1056  34DB               	retlw	219
   585  1057  342E               	retlw	46
   586  1058  34E5               	retlw	229
   587  1059  343C               	retlw	60
   588  105A  341E               	retlw	30
   589  105B  3442               	retlw	66
   590  105C  34A2               	retlw	162
   591  105D  340D               	retlw	13
   592  105E                     __end_of__npowers_:
   593  105E                     _dpowers:
   594  105E  3401               	retlw	1
   595  105F  3400               	retlw	0
   596  1060  3400               	retlw	0
   597  1061  3400               	retlw	0
   598  1062  340A               	retlw	10
   599  1063  3400               	retlw	0
   600  1064  3400               	retlw	0
   601  1065  3400               	retlw	0
   602  1066  3464               	retlw	100
   603  1067  3400               	retlw	0
   604  1068  3400               	retlw	0
   605  1069  3400               	retlw	0
   606  106A  34E8               	retlw	232
   607  106B  3403               	retlw	3
   608  106C  3400               	retlw	0
   609  106D  3400               	retlw	0
   610  106E  3410               	retlw	16
   611  106F  3427               	retlw	39
   612  1070  3400               	retlw	0
   613  1071  3400               	retlw	0
   614  1072  34A0               	retlw	160
   615  1073  3486               	retlw	134
   616  1074  3401               	retlw	1
   617  1075  3400               	retlw	0
   618  1076  3440               	retlw	64
   619  1077  3442               	retlw	66
   620  1078  340F               	retlw	15
   621  1079  3400               	retlw	0
   622  107A  3480               	retlw	128
   623  107B  3496               	retlw	150
   624  107C  3498               	retlw	152
   625  107D  3400               	retlw	0
   626  107E  3400               	retlw	0
   627  107F  34E1               	retlw	225
   628  1080  34F5               	retlw	245
   629  1081  3405               	retlw	5
   630  1082  3400               	retlw	0
   631  1083  34CA               	retlw	202
   632  1084  349A               	retlw	154
   633  1085  343B               	retlw	59
   634  1086                     __end_of_dpowers:
   635  0019                     _TXREG	set	25
   636  001A                     _RCREG	set	26
   637  0018                     _RCSTAbits	set	24
   638  0013                     _SSPBUF	set	19
   639  0014                     _SSPCON	set	20
   640  0009                     _PORTE	set	9
   641  0008                     _PORTD	set	8
   642  0007                     _PORTCbits	set	7
   643  0049                     _RE1	set	73
   644  0048                     _RE0	set	72
   645  0047                     _RD7	set	71
   646  0046                     _RD6	set	70
   647  0045                     _RD5	set	69
   648  0044                     _RD4	set	68
   649  0043                     _RD3	set	67
   650  0042                     _RD2	set	66
   651  0041                     _RD1	set	65
   652  0040                     _RD0	set	64
   653  0065                     _RCIF	set	101
   654  0098                     _TXSTAbits	set	152
   655  0099                     _SPBRG	set	153
   656  0094                     _SSPSTATbits	set	148
   657  0094                     _SSPSTAT	set	148
   658  0089                     _TRISE	set	137
   659  0088                     _TRISD	set	136
   660  04C1                     _TRMT	set	1217
   661  043B                     _TRISC3	set	1083
   662  043D                     _TRISC5	set	1085
   663  0438                     _TRISC0	set	1080
   664  043A                     _TRISC2	set	1082
   665  0439                     _TRISC1	set	1081
   666  0189                     _ANSELH	set	393
   667  0188                     _ANSEL	set	392
   668  1086                     STR_2:
   669  1086  3425               	retlw	37	;'%'
   670  1087  3432               	retlw	50	;'2'
   671  1088  342E               	retlw	46	;'.'
   672  1089  3431               	retlw	49	;'1'
   673  108A  3466               	retlw	102	;'f'
   674  108B  3420               	retlw	32	;' '
   675  108C  3420               	retlw	32	;' '
   676  108D  3425               	retlw	37	;'%'
   677  108E  3464               	retlw	100	;'d'
   678  108F  3420               	retlw	32	;' '
   679  1090  3420               	retlw	32	;' '
   680  1091  3420               	retlw	32	;' '
   681  1092  3425               	retlw	37	;'%'
   682  1093  3432               	retlw	50	;'2'
   683  1094  342E               	retlw	46	;'.'
   684  1095  3431               	retlw	49	;'1'
   685  1096  3466               	retlw	102	;'f'
   686  1097  3400               	retlw	0
   687  1098                     STR_1:
   688  1098  3420               	retlw	32	;' '
   689  1099  3453               	retlw	83	;'S'
   690  109A  3431               	retlw	49	;'1'
   691  109B  3420               	retlw	32	;' '
   692  109C  3420               	retlw	32	;' '
   693  109D  3420               	retlw	32	;' '
   694  109E  3453               	retlw	83	;'S'
   695  109F  3432               	retlw	50	;'2'
   696  10A0  3420               	retlw	32	;' '
   697  10A1  3420               	retlw	32	;' '
   698  10A2  3420               	retlw	32	;' '
   699  10A3  3453               	retlw	83	;'S'
   700  10A4  3433               	retlw	51	;'3'
   701  10A5  3400               	retlw	0
   702  1099                     
   703                           	psect	cinit
   704  07EE                     start_initialization:	
   705                           ; #config settings
   706                           
   707  07EE                     __initialization:
   708                           
   709                           ; Clear objects allocated to BANK0
   710  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   711  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   712  07F0  01ED               	clrf	__pbssBANK0& (0+127)
   713  07F1  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   714  07F2  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   715                           
   716                           ; Clear objects allocated to BANK1
   717  07F3  1383               	bcf	3,7	;select IRP bank0
   718  07F4  30A0               	movlw	low __pbssBANK1
   719  07F5  0084               	movwf	4
   720  07F6  30BA               	movlw	low (__pbssBANK1+26)
   721  07F7  160A  158A  25C7  120A  118A  	fcall	clear_ram0
   722  07FC                     end_of_initialization:	
   723                           ;End of C runtime variable initialization code
   724                           
   725  07FC                     __end_of__initialization:
   726  07FC  0183               	clrf	3
   727  07FD  160A  118A  2ED3   	ljmp	_main	;jump to C main() function
   728                           
   729                           	psect	bssBANK0
   730  006D                     __pbssBANK0:
   731  006D                     _ADC2:
   732  006D                     	ds	1
   733  006E                     _ADC:
   734  006E                     	ds	1
   735  006F                     _cont:
   736  006F                     	ds	1
   737                           
   738                           	psect	bssBANK1
   739  00A0                     __pbssBANK1:
   740  00A0                     _TEMP:
   741  00A0                     	ds	3
   742  00A3                     _V1:
   743  00A3                     	ds	3
   744  00A6                     _BUFFER:
   745  00A6                     	ds	20
   746                           
   747                           	psect	clrtext
   748  1DC7                     clear_ram0:	
   749                           ;	Called with FSR containing the base address, and
   750                           ;	W with the last address+1
   751                           
   752  1DC7  0064               	clrwdt	;clear the watchdog before getting into this loop
   753  1DC8                     clrloop0:
   754  1DC8  0180               	clrf	0	;clear RAM location pointed to by FSR
   755  1DC9  0A84               	incf	4,f	;increment pointer
   756  1DCA  0604               	xorwf	4,w	;XOR with final address
   757  1DCB  1903               	btfsc	3,2	;have we reached the end yet?
   758  1DCC  3400               	retlw	0	;all done for this memory range, return
   759  1DCD  0604               	xorwf	4,w	;XOR again to restore value
   760  1DCE  2DC8               	goto	clrloop0	;do the next byte
   761                           
   762                           	psect	cstackBANK1
   763  00BA                     __pcstackBANK1:
   764  00BA                     _sprintf$1087:
   765                           
   766                           ; 3 bytes @ 0x0
   767  00BA                     	ds	3
   768  00BD                     sprintf@ap:
   769                           
   770                           ; 1 bytes @ 0x3
   771  00BD                     	ds	1
   772  00BE                     sprintf@flag:
   773                           
   774                           ; 2 bytes @ 0x4
   775  00BE                     	ds	2
   776  00C0                     sprintf@width:
   777                           
   778                           ; 2 bytes @ 0x6
   779  00C0                     	ds	2
   780  00C2                     sprintf@tmpval:
   781                           
   782                           ; 4 bytes @ 0x8
   783  00C2                     	ds	4
   784  00C6                     sprintf@val:
   785                           
   786                           ; 4 bytes @ 0xC
   787  00C6                     	ds	4
   788  00CA                     sprintf@eexp:
   789                           
   790                           ; 2 bytes @ 0x10
   791  00CA                     	ds	2
   792  00CC                     sprintf@fval:
   793                           
   794                           ; 3 bytes @ 0x12
   795  00CC                     	ds	3
   796  00CF                     sprintf@sp:
   797                           
   798                           ; 1 bytes @ 0x15
   799  00CF                     	ds	1
   800  00D0                     sprintf@prec:
   801                           
   802                           ; 2 bytes @ 0x16
   803  00D0                     	ds	2
   804  00D2                     sprintf@c:
   805                           
   806                           ; 1 bytes @ 0x18
   807  00D2                     	ds	1
   808                           
   809                           	psect	cstackCOMMON
   810  0070                     __pcstackCOMMON:
   811  0070                     ?_isdigit:
   812  0070                     ?___ftge:	
   813                           ; 1 bit 
   814                           
   815  0070                     ?_setup:	
   816                           ; 1 bit 
   817                           
   818  0070                     ?__baudios:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ??__baudios:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_config_txsta:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ??_config_txsta:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_config_rcsta:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ??_config_rcsta:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_LCD_init:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_clear_LCD:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_contador:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_ADCread:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_temperatura:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_Write_USART:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ??_Write_USART:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_spiWrite:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ??_spiWrite:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_spiRead:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ??_spiRead:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_spiInit:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ??_isdigit:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_main:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_spiReceiveWait:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ??_spiReceiveWait:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_port:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ??_port:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_CMDs:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_write_char:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?___wmul:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?___awmod:	
   900                           ; 2 bytes @ 0x0
   901                           
   902  0070                     ?___lwmod:	
   903                           ; 2 bytes @ 0x0
   904                           
   905  0070                     ?___ftpack:	
   906                           ; 2 bytes @ 0x0
   907                           
   908  0070                     ?___ftneg:	
   909                           ; 3 bytes @ 0x0
   910                           
   911  0070                     ?__tdiv_to_l_:	
   912                           ; 3 bytes @ 0x0
   913                           
   914  0070                     ?__div_to_l_:	
   915                           ; 4 bytes @ 0x0
   916                           
   917  0070                     ?___lldiv:	
   918                           ; 4 bytes @ 0x0
   919                           
   920  0070                     spiInit@sDataSample:	
   921                           ; 4 bytes @ 0x0
   922                           
   923  0070                     spiWrite@dat:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     Write_USART@a:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     port@a:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     _isdigit$889:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ___wmul@multiplier:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ___awmod@divisor:	
   939                           ; 2 bytes @ 0x0
   940                           
   941  0070                     ___lwmod@divisor:	
   942                           ; 2 bytes @ 0x0
   943                           
   944  0070                     __div_to_l_@f1:	
   945                           ; 2 bytes @ 0x0
   946                           
   947  0070                     ___ftpack@arg:	
   948                           ; 3 bytes @ 0x0
   949                           
   950  0070                     __tdiv_to_l_@f1:	
   951                           ; 3 bytes @ 0x0
   952                           
   953  0070                     ___ftge@ff1:	
   954                           ; 3 bytes @ 0x0
   955                           
   956  0070                     ___ftneg@f1:	
   957                           ; 3 bytes @ 0x0
   958                           
   959  0070                     ___lldiv@divisor:	
   960                           ; 3 bytes @ 0x0
   961                           
   962                           
   963                           ; 4 bytes @ 0x0
   964  0070                     	ds	1
   965  0071                     ??_contador:
   966  0071                     ??_ADCread:	
   967                           ; 1 bytes @ 0x1
   968                           
   969  0071                     ??_temperatura:	
   970                           ; 1 bytes @ 0x1
   971                           
   972  0071                     ?_Write_USART_String:	
   973                           ; 1 bytes @ 0x1
   974                           
   975  0071                     ??_CMDs:	
   976                           ; 1 bytes @ 0x1
   977                           
   978  0071                     ??_write_char:	
   979                           ; 1 bytes @ 0x1
   980                           
   981  0071                     spiInit@sClockIdle:	
   982                           ; 1 bytes @ 0x1
   983                           
   984  0071                     isdigit@c:	
   985                           ; 1 bytes @ 0x1
   986                           
   987  0071                     Write_USART_String@a:	
   988                           ; 1 bytes @ 0x1
   989                           
   990                           
   991                           ; 2 bytes @ 0x1
   992  0071                     	ds	1
   993  0072                     spiInit@sTransmitEdge:
   994  0072                     write_char@a:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0072                     ___wmul@multiplicand:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0072                     ___awmod@dividend:	
  1001                           ; 2 bytes @ 0x2
  1002                           
  1003  0072                     ___lwmod@dividend:	
  1004                           ; 2 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0072                     	ds	1
  1009  0073                     ?_write_string:
  1010  0073                     ??_Write_USART_String:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013  0073                     ??_spiInit:	
  1014                           ; 1 bytes @ 0x3
  1015                           
  1016  0073                     ??___ftneg:	
  1017                           ; 1 bytes @ 0x3
  1018                           
  1019  0073                     spiInit@sType:	
  1020                           ; 1 bytes @ 0x3
  1021                           
  1022  0073                     CMDs@a:	
  1023                           ; 1 bytes @ 0x3
  1024                           
  1025  0073                     ___ftpack@exp:	
  1026                           ; 1 bytes @ 0x3
  1027                           
  1028  0073                     write_string@a:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031  0073                     __div_to_l_@f2:	
  1032                           ; 2 bytes @ 0x3
  1033                           
  1034  0073                     __tdiv_to_l_@f2:	
  1035                           ; 3 bytes @ 0x3
  1036                           
  1037  0073                     ___ftge@ff2:	
  1038                           ; 3 bytes @ 0x3
  1039                           
  1040                           
  1041                           ; 3 bytes @ 0x3
  1042  0073                     	ds	1
  1043  0074                     ??_setup:
  1044  0074                     ??_LCD_init:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047  0074                     ??_clear_LCD:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050  0074                     ?_set_cursor:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053  0074                     ??___wmul:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056  0074                     ??___awmod:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059  0074                     ??___lwmod:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062  0074                     Write_USART_String@i:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065  0074                     set_cursor@b:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068  0074                     ___ftpack@sign:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071  0074                     ___wmul@product:	
  1072                           ; 1 bytes @ 0x4
  1073                           
  1074  0074                     ___lldiv@dividend:	
  1075                           ; 2 bytes @ 0x4
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0x4
  1079  0074                     	ds	1
  1080  0075                     ??_set_cursor:
  1081  0075                     ??_write_string:	
  1082                           ; 1 bytes @ 0x5
  1083                           
  1084  0075                     ??___ftpack:	
  1085                           ; 1 bytes @ 0x5
  1086                           
  1087  0075                     ___awmod@counter:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090  0075                     ___lwmod@counter:	
  1091                           ; 1 bytes @ 0x5
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x5
  1095  0075                     	ds	1
  1096  0076                     ??__tdiv_to_l_:
  1097  0076                     ??__div_to_l_:	
  1098                           ; 1 bytes @ 0x6
  1099                           
  1100  0076                     ??___ftge:	
  1101                           ; 1 bytes @ 0x6
  1102                           
  1103  0076                     ?___lwdiv:	
  1104                           ; 1 bytes @ 0x6
  1105                           
  1106  0076                     set_cursor@a:	
  1107                           ; 2 bytes @ 0x6
  1108                           
  1109  0076                     ___awmod@sign:	
  1110                           ; 1 bytes @ 0x6
  1111                           
  1112  0076                     ___lwdiv@divisor:	
  1113                           ; 1 bytes @ 0x6
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x6
  1117  0076                     	ds	1
  1118  0077                     ?___awdiv:
  1119  0077                     set_cursor@x:	
  1120                           ; 2 bytes @ 0x7
  1121                           
  1122  0077                     ___awdiv@divisor:	
  1123                           ; 1 bytes @ 0x7
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x7
  1127  0077                     	ds	1
  1128  0078                     ??___lldiv:
  1129  0078                     ?___awtoft:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132  0078                     ?___lltoft:	
  1133                           ; 3 bytes @ 0x8
  1134                           
  1135  0078                     write_string@i:	
  1136                           ; 3 bytes @ 0x8
  1137                           
  1138  0078                     ___awtoft@c:	
  1139                           ; 2 bytes @ 0x8
  1140                           
  1141  0078                     ___lwdiv@dividend:	
  1142                           ; 2 bytes @ 0x8
  1143                           
  1144  0078                     ___lltoft@c:	
  1145                           ; 2 bytes @ 0x8
  1146                           
  1147                           
  1148                           ; 4 bytes @ 0x8
  1149  0078                     	ds	1
  1150  0079                     ___awdiv@dividend:
  1151  0079                     ___lldiv@quotient:	
  1152                           ; 2 bytes @ 0x9
  1153                           
  1154                           
  1155                           ; 4 bytes @ 0x9
  1156  0079                     	ds	1
  1157  007A                     ??___lwdiv:
  1158                           
  1159                           ; 1 bytes @ 0xA
  1160  007A                     	ds	1
  1161  007B                     ??___awdiv:
  1162  007B                     ??___awtoft:	
  1163                           ; 1 bytes @ 0xB
  1164                           
  1165  007B                     ___lwdiv@quotient:	
  1166                           ; 1 bytes @ 0xB
  1167                           
  1168                           
  1169                           ; 2 bytes @ 0xB
  1170  007B                     	ds	1
  1171  007C                     ??___lltoft:
  1172                           
  1173                           ; 1 bytes @ 0xC
  1174  007C                     	ds	1
  1175  007D                     ___lldiv@counter:
  1176  007D                     ___awtoft@sign:	
  1177                           ; 1 bytes @ 0xD
  1178                           
  1179  007D                     ___lltoft@exp:	
  1180                           ; 1 bytes @ 0xD
  1181                           
  1182  007D                     ___lwdiv@counter:	
  1183                           ; 1 bytes @ 0xD
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0xD
  1187  007D                     	ds	1
  1188  007E                     ??___ftsub:
  1189                           
  1190                           	psect	cstackBANK0
  1191  0020                     __pcstackBANK0:	
  1192                           ; 1 bytes @ 0xE
  1193                           
  1194  0020                     ?___llmod:
  1195  0020                     ___awdiv@counter:	
  1196                           ; 4 bytes @ 0x0
  1197                           
  1198  0020                     __div_to_l_@quot:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0020                     __tdiv_to_l_@quot:	
  1202                           ; 4 bytes @ 0x0
  1203                           
  1204  0020                     ___llmod@divisor:	
  1205                           ; 4 bytes @ 0x0
  1206                           
  1207                           
  1208                           ; 4 bytes @ 0x0
  1209  0020                     	ds	1
  1210  0021                     ___awdiv@sign:
  1211                           
  1212                           ; 1 bytes @ 0x1
  1213  0021                     	ds	1
  1214  0022                     ___awdiv@quotient:
  1215                           
  1216                           ; 2 bytes @ 0x2
  1217  0022                     	ds	2
  1218  0024                     ?___bmul:
  1219  0024                     ___bmul@multiplicand:	
  1220                           ; 1 bytes @ 0x4
  1221                           
  1222  0024                     __div_to_l_@cntr:	
  1223                           ; 1 bytes @ 0x4
  1224                           
  1225  0024                     __tdiv_to_l_@cntr:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0024                     ___llmod@dividend:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231                           
  1232                           ; 4 bytes @ 0x4
  1233  0024                     	ds	1
  1234  0025                     ??___bmul:
  1235  0025                     __div_to_l_@exp1:	
  1236                           ; 1 bytes @ 0x5
  1237                           
  1238  0025                     __tdiv_to_l_@exp1:	
  1239                           ; 1 bytes @ 0x5
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0x5
  1243  0025                     	ds	1
  1244  0026                     ___bmul@product:
  1245                           
  1246                           ; 1 bytes @ 0x6
  1247  0026                     	ds	1
  1248  0027                     ___bmul@multiplier:
  1249                           
  1250                           ; 1 bytes @ 0x7
  1251  0027                     	ds	1
  1252  0028                     ??___llmod:
  1253  0028                     ?___ftmul:	
  1254                           ; 1 bytes @ 0x8
  1255                           
  1256  0028                     ___ftmul@f1:	
  1257                           ; 3 bytes @ 0x8
  1258                           
  1259                           
  1260                           ; 3 bytes @ 0x8
  1261  0028                     	ds	1
  1262  0029                     ___llmod@counter:
  1263                           
  1264                           ; 1 bytes @ 0x9
  1265  0029                     	ds	2
  1266  002B                     ___ftmul@f2:
  1267                           
  1268                           ; 3 bytes @ 0xB
  1269  002B                     	ds	3
  1270  002E                     ??___ftmul:
  1271                           
  1272                           ; 1 bytes @ 0xE
  1273  002E                     	ds	4
  1274  0032                     ___ftmul@exp:
  1275                           
  1276                           ; 1 bytes @ 0x12
  1277  0032                     	ds	1
  1278  0033                     ___ftmul@f3_as_product:
  1279                           
  1280                           ; 3 bytes @ 0x13
  1281  0033                     	ds	3
  1282  0036                     ___ftmul@cntr:
  1283                           
  1284                           ; 1 bytes @ 0x16
  1285  0036                     	ds	1
  1286  0037                     ___ftmul@sign:
  1287                           
  1288                           ; 1 bytes @ 0x17
  1289  0037                     	ds	1
  1290  0038                     ?_fround:
  1291  0038                     ?_scale:	
  1292                           ; 3 bytes @ 0x18
  1293                           
  1294                           
  1295                           ; 3 bytes @ 0x18
  1296  0038                     	ds	3
  1297  003B                     ??_fround:
  1298  003B                     ??_scale:	
  1299                           ; 1 bytes @ 0x1B
  1300                           
  1301                           
  1302                           ; 1 bytes @ 0x1B
  1303  003B                     	ds	2
  1304  003D                     _scale$1086:
  1305                           
  1306                           ; 3 bytes @ 0x1D
  1307  003D                     	ds	3
  1308  0040                     scale@scl:
  1309                           
  1310                           ; 1 bytes @ 0x20
  1311  0040                     	ds	1
  1312  0041                     ?___fttol:
  1313  0041                     ___fttol@f1:	
  1314                           ; 4 bytes @ 0x21
  1315                           
  1316  0041                     _fround$1085:	
  1317                           ; 3 bytes @ 0x21
  1318                           
  1319                           
  1320                           ; 3 bytes @ 0x21
  1321  0041                     	ds	3
  1322  0044                     _fround$1084:
  1323                           
  1324                           ; 3 bytes @ 0x24
  1325  0044                     	ds	1
  1326  0045                     ??___fttol:
  1327                           
  1328                           ; 1 bytes @ 0x25
  1329  0045                     	ds	2
  1330  0047                     fround@prec:
  1331                           
  1332                           ; 1 bytes @ 0x27
  1333  0047                     	ds	1
  1334  0048                     ?___ftadd:
  1335  0048                     ___ftadd@f1:	
  1336                           ; 3 bytes @ 0x28
  1337                           
  1338                           
  1339                           ; 3 bytes @ 0x28
  1340  0048                     	ds	1
  1341  0049                     ___fttol@sign1:
  1342                           
  1343                           ; 1 bytes @ 0x29
  1344  0049                     	ds	1
  1345  004A                     ___fttol@lval:
  1346                           
  1347                           ; 4 bytes @ 0x2A
  1348  004A                     	ds	1
  1349  004B                     ___ftadd@f2:
  1350                           
  1351                           ; 3 bytes @ 0x2B
  1352  004B                     	ds	3
  1353  004E                     ??___ftadd:
  1354  004E                     ___fttol@exp1:	
  1355                           ; 1 bytes @ 0x2E
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x2E
  1359  004E                     	ds	4
  1360  0052                     ___ftadd@sign:
  1361                           
  1362                           ; 1 bytes @ 0x32
  1363  0052                     	ds	1
  1364  0053                     ___ftadd@exp2:
  1365                           
  1366                           ; 1 bytes @ 0x33
  1367  0053                     	ds	1
  1368  0054                     ___ftadd@exp1:
  1369                           
  1370                           ; 1 bytes @ 0x34
  1371  0054                     	ds	1
  1372  0055                     ?___ftsub:
  1373  0055                     ___ftsub@f2:	
  1374                           ; 3 bytes @ 0x35
  1375                           
  1376                           
  1377                           ; 3 bytes @ 0x35
  1378  0055                     	ds	3
  1379  0058                     ___ftsub@f1:
  1380                           
  1381                           ; 3 bytes @ 0x38
  1382  0058                     	ds	3
  1383  005B                     ?_sprintf:
  1384  005B                     sprintf@f:	
  1385                           ; 2 bytes @ 0x3B
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0x3B
  1389  005B                     	ds	9
  1390  0064                     ??_sprintf:
  1391                           
  1392                           ; 1 bytes @ 0x44
  1393  0064                     	ds	6
  1394  006A                     ??_main:
  1395                           
  1396                           ; 1 bytes @ 0x4A
  1397  006A                     	ds	3
  1398                           
  1399                           	psect	maintext
  1400  16D3                     __pmaintext:	
  1401 ;;
  1402 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1403 ;;
  1404 ;; *************** function _main *****************
  1405 ;; Defined at:
  1406 ;;		line 55 in file "master.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : B00/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0
  1422 ;;      Temps:          0       3       0       0       0
  1423 ;;      Totals:         0       3       0       0       0
  1424 ;;Total ram usage:        3 bytes
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		_ADCread
  1428 ;;		_LCD_init
  1429 ;;		_Write_USART
  1430 ;;		_Write_USART_String
  1431 ;;		___awtoft
  1432 ;;		___ftmul
  1433 ;;		__baudios
  1434 ;;		_clear_LCD
  1435 ;;		_config_rcsta
  1436 ;;		_config_txsta
  1437 ;;		_contador
  1438 ;;		_set_cursor
  1439 ;;		_setup
  1440 ;;		_sprintf
  1441 ;;		_temperatura
  1442 ;;		_write_string
  1443 ;; This function is called by:
  1444 ;;		Startup code after reset
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _main
  1450  16D3                     _main:
  1451  16D3                     l3209:	
  1452                           ;incstack = 0
  1453                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1454                           
  1455                           
  1456                           ;master.c: 56: void contador (void){
  1457  16D3  160A  158A  2657  160A  118A  	fcall	_setup
  1458                           
  1459                           ;master.c: 57:     PORTCbits.RC2 = 0;
  1460  16D8  160A  158A  25AD  160A  118A  	fcall	__baudios
  1461  16DD                     l3211:
  1462                           
  1463                           ;master.c: 58:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1464  16DD  160A  158A  25D8  160A  118A  	fcall	_config_txsta
  1465  16E2                     l3213:
  1466                           
  1467                           ;master.c: 59: 
  1468  16E2  160A  158A  25BF  160A  118A  	fcall	_config_rcsta
  1469                           
  1470                           ;master.c: 60:     spiWrite(1);
  1471  16E7  160A  118A  2285  160A  118A  	fcall	_LCD_init
  1472                           
  1473                           ;master.c: 61:     cont = spiRead();
  1474  16EC  120A  118A  2005  160A  118A  	fcall	_clear_LCD
  1475  16F1                     l73:	
  1476                           ;master.c: 62: 
  1477                           
  1478                           
  1479                           ;master.c: 63:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1480  16F1  160A  158A  2796  160A  118A  	fcall	_contador
  1481                           
  1482                           ;master.c: 64:     PORTCbits.RC2 = 1;
  1483  16F6  160A  158A  2764  160A  118A  	fcall	_ADCread
  1484                           
  1485                           ;master.c: 65:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1486  16FB  160A  118A  20A6  160A  118A  	fcall	_temperatura
  1487                           
  1488                           ;master.c: 67: 
  1489  1700  120A  118A  2005  160A  118A  	fcall	_clear_LCD
  1490                           
  1491                           ;master.c: 68: void ADCread (void){
  1492  1705  01F4               	clrf	set_cursor@b
  1493  1706  0AF4               	incf	set_cursor@b,f
  1494  1707  3001               	movlw	1
  1495  1708  160A  158A  2677  160A  118A  	fcall	_set_cursor
  1496  170D                     l3215:
  1497                           
  1498                           ;master.c: 69:     PORTCbits.RC1 = 0;
  1499  170D  3089               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1500  170E  00F3               	movwf	write_string@a
  1501  170F  3080               	movlw	128
  1502  1710  00F4               	movwf	write_string@a+1
  1503  1711  160A  118A  2150  160A  118A  	fcall	_write_string
  1504  1716                     l3217:
  1505                           
  1506                           ;master.c: 71: 
  1507  1716  3090               	movlw	144
  1508  1717  1283               	bcf	3,5	;RP0=0, select bank0
  1509  1718  1303               	bcf	3,6	;RP1=0, select bank0
  1510  1719  00A8               	movwf	___ftmul@f1
  1511  171A  30A0               	movlw	160
  1512  171B  00A9               	movwf	___ftmul@f1+1
  1513  171C  303C               	movlw	60
  1514  171D  00AA               	movwf	___ftmul@f1+2
  1515  171E  086E               	movf	_ADC,w
  1516  171F  00EA               	movwf	??_main
  1517  1720  01EB               	clrf	??_main+1
  1518  1721  086A               	movf	??_main,w
  1519  1722  00F8               	movwf	___awtoft@c
  1520  1723  086B               	movf	??_main+1,w
  1521  1724  00F9               	movwf	___awtoft@c+1
  1522  1725  160A  158A  269B  160A  118A  	fcall	___awtoft
  1523  172A  0878               	movf	?___awtoft,w
  1524  172B  1283               	bcf	3,5	;RP0=0, select bank0
  1525  172C  1303               	bcf	3,6	;RP1=0, select bank0
  1526  172D  00AB               	movwf	___ftmul@f2
  1527  172E  0879               	movf	?___awtoft+1,w
  1528  172F  00AC               	movwf	___ftmul@f2+1
  1529  1730  087A               	movf	?___awtoft+2,w
  1530  1731  00AD               	movwf	___ftmul@f2+2
  1531  1732  160A  118A  24C2  160A  118A  	fcall	___ftmul
  1532  1737  1283               	bcf	3,5	;RP0=0, select bank0
  1533  1738  1303               	bcf	3,6	;RP1=0, select bank0
  1534  1739  0828               	movf	?___ftmul,w
  1535  173A  1683               	bsf	3,5	;RP0=1, select bank1
  1536  173B  1303               	bcf	3,6	;RP1=0, select bank1
  1537  173C  00A3               	movwf	_V1^(0+128)
  1538  173D  1283               	bcf	3,5	;RP0=0, select bank0
  1539  173E  1303               	bcf	3,6	;RP1=0, select bank0
  1540  173F  0829               	movf	?___ftmul+1,w
  1541  1740  1683               	bsf	3,5	;RP0=1, select bank1
  1542  1741  1303               	bcf	3,6	;RP1=0, select bank1
  1543  1742  00A4               	movwf	(_V1+1)^(0+128)
  1544  1743  1283               	bcf	3,5	;RP0=0, select bank0
  1545  1744  1303               	bcf	3,6	;RP1=0, select bank0
  1546  1745  082A               	movf	?___ftmul+2,w
  1547  1746  1683               	bsf	3,5	;RP0=1, select bank1
  1548  1747  1303               	bcf	3,6	;RP1=0, select bank1
  1549  1748  00A5               	movwf	(_V1+2)^(0+128)
  1550  1749                     l3219:
  1551                           
  1552                           ;master.c: 72:     spiWrite(1);
  1553  1749  3034               	movlw	52
  1554  174A  1283               	bcf	3,5	;RP0=0, select bank0
  1555  174B  1303               	bcf	3,6	;RP1=0, select bank0
  1556  174C  00A8               	movwf	___ftmul@f1
  1557  174D  30FA               	movlw	250
  1558  174E  00A9               	movwf	___ftmul@f1+1
  1559  174F  303F               	movlw	63
  1560  1750  00AA               	movwf	___ftmul@f1+2
  1561  1751  086D               	movf	_ADC2,w
  1562  1752  00EA               	movwf	??_main
  1563  1753  01EB               	clrf	??_main+1
  1564  1754  086A               	movf	??_main,w
  1565  1755  00F8               	movwf	___awtoft@c
  1566  1756  086B               	movf	??_main+1,w
  1567  1757  00F9               	movwf	___awtoft@c+1
  1568  1758  160A  158A  269B  160A  118A  	fcall	___awtoft
  1569  175D  0878               	movf	?___awtoft,w
  1570  175E  1283               	bcf	3,5	;RP0=0, select bank0
  1571  175F  1303               	bcf	3,6	;RP1=0, select bank0
  1572  1760  00AB               	movwf	___ftmul@f2
  1573  1761  0879               	movf	?___awtoft+1,w
  1574  1762  00AC               	movwf	___ftmul@f2+1
  1575  1763  087A               	movf	?___awtoft+2,w
  1576  1764  00AD               	movwf	___ftmul@f2+2
  1577  1765  160A  118A  24C2  160A  118A  	fcall	___ftmul
  1578  176A  1283               	bcf	3,5	;RP0=0, select bank0
  1579  176B  1303               	bcf	3,6	;RP1=0, select bank0
  1580  176C  0828               	movf	?___ftmul,w
  1581  176D  1683               	bsf	3,5	;RP0=1, select bank1
  1582  176E  1303               	bcf	3,6	;RP1=0, select bank1
  1583  176F  00A0               	movwf	_TEMP^(0+128)
  1584  1770  1283               	bcf	3,5	;RP0=0, select bank0
  1585  1771  1303               	bcf	3,6	;RP1=0, select bank0
  1586  1772  0829               	movf	?___ftmul+1,w
  1587  1773  1683               	bsf	3,5	;RP0=1, select bank1
  1588  1774  1303               	bcf	3,6	;RP1=0, select bank1
  1589  1775  00A1               	movwf	(_TEMP+1)^(0+128)
  1590  1776  1283               	bcf	3,5	;RP0=0, select bank0
  1591  1777  1303               	bcf	3,6	;RP1=0, select bank0
  1592  1778  082A               	movf	?___ftmul+2,w
  1593  1779  1683               	bsf	3,5	;RP0=1, select bank1
  1594  177A  1303               	bcf	3,6	;RP1=0, select bank1
  1595  177B  00A2               	movwf	(_TEMP+2)^(0+128)
  1596  177C                     l3221:
  1597                           
  1598                           ;master.c: 73:     ADC = spiRead();
  1599  177C  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1600  177D  1283               	bcf	3,5	;RP0=0, select bank0
  1601  177E  1303               	bcf	3,6	;RP1=0, select bank0
  1602  177F  00EA               	movwf	??_main
  1603  1780  086A               	movf	??_main,w
  1604  1781  00DB               	movwf	sprintf@f
  1605  1782  1683               	bsf	3,5	;RP0=1, select bank1
  1606  1783  1303               	bcf	3,6	;RP1=0, select bank1
  1607  1784  0823               	movf	_V1^(0+128),w
  1608  1785  1283               	bcf	3,5	;RP0=0, select bank0
  1609  1786  1303               	bcf	3,6	;RP1=0, select bank0
  1610  1787  00DC               	movwf	?_sprintf+1
  1611  1788  1683               	bsf	3,5	;RP0=1, select bank1
  1612  1789  1303               	bcf	3,6	;RP1=0, select bank1
  1613  178A  0824               	movf	(_V1+1)^(0+128),w
  1614  178B  1283               	bcf	3,5	;RP0=0, select bank0
  1615  178C  1303               	bcf	3,6	;RP1=0, select bank0
  1616  178D  00DD               	movwf	?_sprintf+2
  1617  178E  1683               	bsf	3,5	;RP0=1, select bank1
  1618  178F  1303               	bcf	3,6	;RP1=0, select bank1
  1619  1790  0825               	movf	(_V1+2)^(0+128),w
  1620  1791  1283               	bcf	3,5	;RP0=0, select bank0
  1621  1792  1303               	bcf	3,6	;RP1=0, select bank0
  1622  1793  00DE               	movwf	?_sprintf+3
  1623  1794  086F               	movf	_cont,w
  1624  1795  00EB               	movwf	??_main+1
  1625  1796  01EC               	clrf	??_main+2
  1626  1797  086B               	movf	??_main+1,w
  1627  1798  00DF               	movwf	?_sprintf+4
  1628  1799  086C               	movf	??_main+2,w
  1629  179A  00E0               	movwf	?_sprintf+5
  1630  179B  1683               	bsf	3,5	;RP0=1, select bank1
  1631  179C  1303               	bcf	3,6	;RP1=0, select bank1
  1632  179D  0820               	movf	_TEMP^(0+128),w
  1633  179E  1283               	bcf	3,5	;RP0=0, select bank0
  1634  179F  1303               	bcf	3,6	;RP1=0, select bank0
  1635  17A0  00E1               	movwf	?_sprintf+6
  1636  17A1  1683               	bsf	3,5	;RP0=1, select bank1
  1637  17A2  1303               	bcf	3,6	;RP1=0, select bank1
  1638  17A3  0821               	movf	(_TEMP+1)^(0+128),w
  1639  17A4  1283               	bcf	3,5	;RP0=0, select bank0
  1640  17A5  1303               	bcf	3,6	;RP1=0, select bank0
  1641  17A6  00E2               	movwf	?_sprintf+7
  1642  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  1643  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  1644  17A9  0822               	movf	(_TEMP+2)^(0+128),w
  1645  17AA  1283               	bcf	3,5	;RP0=0, select bank0
  1646  17AB  1303               	bcf	3,6	;RP1=0, select bank0
  1647  17AC  00E3               	movwf	?_sprintf+8
  1648  17AD  30A6               	movlw	(low (_BUFFER| 0))& (0+255)
  1649  17AE  120A  158A  2528  160A  118A  	fcall	_sprintf
  1650                           
  1651                           ;master.c: 75:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1652  17B3  01F4               	clrf	set_cursor@b
  1653  17B4  0AF4               	incf	set_cursor@b,f
  1654  17B5  3002               	movlw	2
  1655  17B6  160A  158A  2677  160A  118A  	fcall	_set_cursor
  1656  17BB                     l3223:
  1657                           
  1658                           ;master.c: 76:     PORTCbits.RC1 = 1;
  1659  17BB  30A6               	movlw	(low (_BUFFER| 0))& (0+255)
  1660  17BC  00F3               	movwf	write_string@a
  1661  17BD  3000               	movlw	0
  1662  17BE  00F4               	movwf	write_string@a+1
  1663  17BF  160A  118A  2150  160A  118A  	fcall	_write_string
  1664  17C4                     l3225:
  1665                           
  1666                           ;master.c: 78: }
  1667  17C4  308A               	movlw	(low (((STR_1+1)-__stringbase)| (0+32768)))& (0+255)
  1668  17C5  00F1               	movwf	Write_USART_String@a
  1669  17C6  3080               	movlw	128
  1670  17C7  00F2               	movwf	Write_USART_String@a+1
  1671  17C8  160A  158A  270A  160A  118A  	fcall	_Write_USART_String
  1672                           
  1673                           ;master.c: 79: 
  1674  17CD  300D               	movlw	13
  1675  17CE  160A  158A  25EC  160A  118A  	fcall	_Write_USART
  1676                           
  1677                           ;master.c: 80: void temperatura (void){
  1678  17D3  300A               	movlw	10
  1679  17D4  160A  158A  25EC  160A  118A  	fcall	_Write_USART
  1680  17D9                     l3227:
  1681                           
  1682                           ;master.c: 82:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1683  17D9  30A6               	movlw	(low (_BUFFER| 0))& (0+255)
  1684  17DA  00F1               	movwf	Write_USART_String@a
  1685  17DB  3000               	movlw	0
  1686  17DC  00F2               	movwf	Write_USART_String@a+1
  1687  17DD  160A  158A  270A  160A  118A  	fcall	_Write_USART_String
  1688  17E2                     l3229:
  1689                           
  1690                           ;master.c: 83: 
  1691  17E2  300D               	movlw	13
  1692  17E3  160A  158A  25EC  160A  118A  	fcall	_Write_USART
  1693  17E8                     l3231:
  1694                           
  1695                           ;master.c: 84:     spiWrite(1);
  1696  17E8  300A               	movlw	10
  1697  17E9  160A  158A  25EC  160A  118A  	fcall	_Write_USART
  1698  17EE                     l3233:
  1699                           
  1700                           ;master.c: 86: 
  1701  17EE  3006               	movlw	6
  1702  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  1703  17F0  1303               	bcf	3,6	;RP1=0, select bank0
  1704  17F1  00EC               	movwf	??_main+2
  1705  17F2  3013               	movlw	19
  1706  17F3  00EB               	movwf	??_main+1
  1707  17F4  30AD               	movlw	173
  1708  17F5  00EA               	movwf	??_main
  1709  17F6                     u4507:
  1710  17F6  0BEA               	decfsz	??_main,f
  1711  17F7  2FF6               	goto	u4507
  1712  17F8  0BEB               	decfsz	??_main+1,f
  1713  17F9  2FF6               	goto	u4507
  1714  17FA  0BEC               	decfsz	??_main+2,f
  1715  17FB  2FF6               	goto	u4507
  1716  17FC  2EF1               	goto	l73
  1717  17FD  120A  118A  2800   	ljmp	start
  1718  1800                     __end_of_main:
  1719                           
  1720                           	psect	text1
  1721  1150                     __ptext1:	
  1722 ;; *************** function _write_string *****************
  1723 ;; Defined at:
  1724 ;;		line 99 in file "LCD.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  a               2    3[COMMON] PTR unsigned char 
  1727 ;;		 -> BUFFER(20), STR_1(14), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  i               2    8[COMMON] int 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         2       0       0       0       0
  1740 ;;      Locals:         2       0       0       0       0
  1741 ;;      Temps:          3       0       0       0       0
  1742 ;;      Totals:         7       0       0       0       0
  1743 ;;Total ram usage:        7 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    2
  1746 ;; This function calls:
  1747 ;;		_write_char
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function _write_string
  1755  1150                     _write_string:
  1756  1150                     l2889:	
  1757                           ;incstack = 0
  1758                           ; Regs used in _write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1759                           
  1760                           
  1761                           ;LCD.c: 100:     int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
  1762  1150  01F8               	clrf	write_string@i
  1763  1151  01F9               	clrf	write_string@i+1
  1764  1152  2975               	goto	l2895
  1765  1153                     l2891:
  1766                           
  1767                           ;LCD.c: 102:  write_char(a[i]);
  1768  1153  0878               	movf	write_string@i,w
  1769  1154  0773               	addwf	write_string@a,w
  1770  1155  00F6               	movwf	??_write_string+1
  1771  1156  0874               	movf	write_string@a+1,w
  1772  1157  00F5               	movwf	??_write_string
  1773  1158  1803               	skipnc
  1774  1159  0AF5               	incf	??_write_string,f
  1775  115A  1FF8               	btfss	write_string@i,7
  1776  115B  295D               	goto	u3910
  1777  115C  03F5               	decf	??_write_string,f
  1778  115D                     u3910:
  1779  115D  0875               	movf	??_write_string,w
  1780  115E  00F7               	movwf	??_write_string+2
  1781  115F  0877               	movf	??_write_string+2,w
  1782  1160  1283               	bcf	3,5	;RP0=0, select bank0
  1783  1161  1303               	bcf	3,6	;RP1=0, select bank0
  1784  1162  00FF               	movwf	btemp+1
  1785  1163  0876               	movf	??_write_string+1,w
  1786  1164  0084               	movwf	4
  1787  1165  160A  118A  2000  160A  118A  	fcall	stringtab
  1788  116A  120A  158A  2003  160A  118A  	fcall	_write_char
  1789  116F                     l2893:
  1790  116F  3001               	movlw	1
  1791  1170  07F8               	addwf	write_string@i,f
  1792  1171  1803               	skipnc
  1793  1172  0AF9               	incf	write_string@i+1,f
  1794  1173  3000               	movlw	0
  1795  1174  07F9               	addwf	write_string@i+1,f
  1796  1175                     l2895:
  1797  1175  0878               	movf	write_string@i,w
  1798  1176  0773               	addwf	write_string@a,w
  1799  1177  00F6               	movwf	??_write_string+1
  1800  1178  0874               	movf	write_string@a+1,w
  1801  1179  00F5               	movwf	??_write_string
  1802  117A  1803               	skipnc
  1803  117B  0AF5               	incf	??_write_string,f
  1804  117C  1FF8               	btfss	write_string@i,7
  1805  117D  297F               	goto	u3920
  1806  117E  03F5               	decf	??_write_string,f
  1807  117F                     u3920:
  1808  117F  0875               	movf	??_write_string,w
  1809  1180  00F7               	movwf	??_write_string+2
  1810  1181  0877               	movf	??_write_string+2,w
  1811  1182  1283               	bcf	3,5	;RP0=0, select bank0
  1812  1183  1303               	bcf	3,6	;RP1=0, select bank0
  1813  1184  00FF               	movwf	btemp+1
  1814  1185  0876               	movf	??_write_string+1,w
  1815  1186  0084               	movwf	4
  1816  1187  160A  118A  2000  160A  118A  	fcall	stringtab
  1817  118C  3A00               	xorlw	0
  1818  118D  1D03               	skipz
  1819  118E  2990               	goto	u3931
  1820  118F  2991               	goto	u3930
  1821  1190                     u3931:
  1822  1190  2953               	goto	l2891
  1823  1191                     u3930:
  1824  1191                     l228:
  1825  1191  0008               	return
  1826  1192                     __end_of_write_string:
  1827                           
  1828                           	psect	text2
  1829  0803                     __ptext2:	
  1830 ;; *************** function _write_char *****************
  1831 ;; Defined at:
  1832 ;;		line 89 in file "LCD.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  a               1    wreg     unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  a               1    2[COMMON] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         0       0       0       0       0
  1847 ;;      Locals:         1       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0
  1849 ;;      Totals:         2       0       0       0       0
  1850 ;;Total ram usage:        2 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    1
  1853 ;; This function calls:
  1854 ;;		_port
  1855 ;; This function is called by:
  1856 ;;		_write_string
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _write_char
  1862  0803                     _write_char:
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _write_char: [wreg+status,2+status,0+pclath+cstack]
  1866                           ;write_char@a stored from wreg
  1867  0803  00F2               	movwf	write_char@a
  1868  0804                     l2459:
  1869                           
  1870                           ;LCD.c: 90:     RE0 = 1;
  1871  0804  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0805  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0806  1409               	bsf	9,0	;volatile
  1874  0807                     l2461:
  1875                           
  1876                           ;LCD.c: 91:     port(a);
  1877  0807  0872               	movf	write_char@a,w
  1878  0808  160A  118A  2112  120A  158A  	fcall	_port
  1879  080D                     l2463:
  1880                           
  1881                           ;LCD.c: 92:     RE1 = 1;
  1882  080D  1283               	bcf	3,5	;RP0=0, select bank0
  1883  080E  1303               	bcf	3,6	;RP1=0, select bank0
  1884  080F  1489               	bsf	9,1	;volatile
  1885  0810                     l2465:
  1886                           
  1887                           ;LCD.c: 93:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1888  0810  2811               	nop2	;2 cycle nop
  1889  0811  2812               	nop2	;2 cycle nop
  1890  0812  0000               	nop
  1891  0813                     l2467:
  1892                           
  1893                           ;LCD.c: 94:     RE1 = 0;
  1894  0813  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0814  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0815  1089               	bcf	9,1	;volatile
  1897  0816                     l2469:
  1898                           
  1899                           ;LCD.c: 95:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1900  0816  2817               	nop2	;2 cycle nop
  1901  0817  2818               	nop2	;2 cycle nop
  1902  0818  0000               	nop
  1903  0819                     l2471:
  1904                           
  1905                           ;LCD.c: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1906  0819  3010               	movlw	16
  1907  081A  00F1               	movwf	??_write_char
  1908  081B                     u4517:
  1909  081B  0BF1               	decfsz	??_write_char,f
  1910  081C  281B               	goto	u4517
  1911  081D  0000               	nop
  1912  081E                     l222:
  1913  081E  0008               	return
  1914  081F                     __end_of_write_char:
  1915                           
  1916                           	psect	text3
  1917  10A6                     __ptext3:	
  1918 ;; *************** function _temperatura *****************
  1919 ;; Defined at:
  1920 ;;		line 114 in file "master.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          2       0       0       0       0
  1937 ;;      Totals:         2       0       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    2
  1941 ;; This function calls:
  1942 ;;		_spiRead
  1943 ;;		_spiWrite
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _temperatura
  1951  10A6                     _temperatura:
  1952  10A6                     l2867:	
  1953                           ;incstack = 0
  1954                           ; Regs used in _temperatura: [wreg+status,2+status,0+pclath+cstack]
  1955                           
  1956  10A6  1283               	bcf	3,5	;RP0=0, select bank0
  1957  10A7  1303               	bcf	3,6	;RP1=0, select bank0
  1958  10A8  1007               	bcf	7,0	;volatile
  1959  10A9                     l2869:
  1960  10A9  3003               	movlw	3
  1961  10AA  00F2               	movwf	??_temperatura+1
  1962  10AB  3097               	movlw	151
  1963  10AC  00F1               	movwf	??_temperatura
  1964  10AD                     u4527:
  1965  10AD  0BF1               	decfsz	??_temperatura,f
  1966  10AE  28AD               	goto	u4527
  1967  10AF  0BF2               	decfsz	??_temperatura+1,f
  1968  10B0  28AD               	goto	u4527
  1969  10B1  28B2               	nop2
  1970  10B2                     l2871:
  1971  10B2  3001               	movlw	1
  1972  10B3  160A  158A  25B2  160A  118A  	fcall	_spiWrite
  1973  10B8                     l2873:
  1974  10B8  160A  158A  25CF  160A  118A  	fcall	_spiRead
  1975  10BD  00F1               	movwf	??_temperatura
  1976  10BE  0871               	movf	??_temperatura,w
  1977  10BF  1283               	bcf	3,5	;RP0=0, select bank0
  1978  10C0  1303               	bcf	3,6	;RP1=0, select bank0
  1979  10C1  00ED               	movwf	_ADC2
  1980  10C2  3003               	movlw	3
  1981  10C3  00F2               	movwf	??_temperatura+1
  1982  10C4  3097               	movlw	151
  1983  10C5  00F1               	movwf	??_temperatura
  1984  10C6                     u4537:
  1985  10C6  0BF1               	decfsz	??_temperatura,f
  1986  10C7  28C6               	goto	u4537
  1987  10C8  0BF2               	decfsz	??_temperatura+1,f
  1988  10C9  28C6               	goto	u4537
  1989  10CA  28CB               	nop2
  1990  10CB                     l2875:
  1991  10CB  1283               	bcf	3,5	;RP0=0, select bank0
  1992  10CC  1303               	bcf	3,6	;RP1=0, select bank0
  1993  10CD  1407               	bsf	7,0	;volatile
  1994  10CE  3003               	movlw	3
  1995  10CF  00F2               	movwf	??_temperatura+1
  1996  10D0  3097               	movlw	151
  1997  10D1  00F1               	movwf	??_temperatura
  1998  10D2                     u4547:
  1999  10D2  0BF1               	decfsz	??_temperatura,f
  2000  10D3  28D2               	goto	u4547
  2001  10D4  0BF2               	decfsz	??_temperatura+1,f
  2002  10D5  28D2               	goto	u4547
  2003  10D6  28D7               	nop2
  2004  10D7                     l85:
  2005  10D7  0008               	return
  2006  10D8                     __end_of_temperatura:
  2007                           
  2008                           	psect	text4
  2009  0D28                     __ptext4:	
  2010 ;; *************** function _sprintf *****************
  2011 ;; Defined at:
  2012 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  sp              1    wreg     PTR unsigned char 
  2015 ;;		 -> BUFFER(20), 
  2016 ;;  f               1   59[BANK0 ] PTR const unsigned char 
  2017 ;;		 -> STR_2(18), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  2020 ;;		 -> BUFFER(20), 
  2021 ;;  val             4   12[BANK1 ] unsigned long 
  2022 ;;  tmpval          4    8[BANK1 ] struct .
  2023 ;;  fval            3   18[BANK1 ] struct .
  2024 ;;  prec            2   22[BANK1 ] int 
  2025 ;;  eexp            2   16[BANK1 ] int 
  2026 ;;  width           2    6[BANK1 ] int 
  2027 ;;  flag            2    4[BANK1 ] unsigned short 
  2028 ;;  cp              2    0        PTR const unsigned char 
  2029 ;;  len             2    0        unsigned int 
  2030 ;;  c               1   24[BANK1 ] unsigned char 
  2031 ;;  ap              1    3[BANK1 ] PTR void [1]
  2032 ;;		 -> ?_sprintf(2), 
  2033 ;;  d               1    0        unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2   59[BANK0 ] int 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       9       0       0       0
  2044 ;;      Locals:         0       0      25       0       0
  2045 ;;      Temps:          0       6       0       0       0
  2046 ;;      Totals:         0      15      25       0       0
  2047 ;;Total ram usage:       40 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    3
  2050 ;; This function calls:
  2051 ;;		___awdiv
  2052 ;;		___ftadd
  2053 ;;		___ftge
  2054 ;;		___ftmul
  2055 ;;		___ftneg
  2056 ;;		___ftsub
  2057 ;;		___fttol
  2058 ;;		___lldiv
  2059 ;;		___llmod
  2060 ;;		___lltoft
  2061 ;;		___wmul
  2062 ;;		__div_to_l_
  2063 ;;		__tdiv_to_l_
  2064 ;;		_fround
  2065 ;;		_isdigit
  2066 ;;		_scale
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _sprintf
  2074  0D28                     _sprintf:
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2078                           ;sprintf@sp stored from wreg
  2079  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0D2A  00CF               	movwf	sprintf@sp^(0+128)
  2082  0D2B                     l2897:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2085  0D2B  305C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2086  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0D2E  00E4               	movwf	??_sprintf
  2089  0D2F  0864               	movf	??_sprintf,w
  2090  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0D32  00BD               	movwf	sprintf@ap^(0+128)
  2093  0D33                     L1:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2096  0D33  120A  118A  2FD0   	goto	l3177
  2097  0D36                     l2899:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2100  0D36  3025               	movlw	37
  2101  0D37  0652               	xorwf	sprintf@c^(0+128),w
  2102  0D38  1903               	btfsc	3,2
  2103  0D39  2D3B               	goto	u3941
  2104  0D3A  2D3C               	goto	u3940
  2105  0D3B                     u3941:
  2106  0D3B  2D50               	goto	l2905
  2107  0D3C                     u3940:
  2108  0D3C                     l2901:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2111  0D3C  0852               	movf	sprintf@c^(0+128),w
  2112  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0D3F  00E4               	movwf	??_sprintf
  2115  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0D41  1303               	bcf	3,6	;RP1=0, select bank1
  2117  0D42  084F               	movf	sprintf@sp^(0+128),w
  2118  0D43  0084               	movwf	4
  2119  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0D46  0864               	movf	??_sprintf,w
  2122  0D47  1383               	bcf	3,7	;select IRP bank0
  2123  0D48  0080               	movwf	0
  2124  0D49                     l2903:
  2125  0D49  3001               	movlw	1
  2126  0D4A  00E4               	movwf	??_sprintf
  2127  0D4B  0864               	movf	??_sprintf,w
  2128  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0D4E  07CF               	addwf	sprintf@sp^(0+128),f
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2133  0D4F  2D33               	goto	L1
  2134  0D50                     l2905:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2137  0D50  01C0               	clrf	sprintf@width^(0+128)
  2138  0D51  01C1               	clrf	(sprintf@width+1)^(0+128)
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2141  0D52  01BE               	clrf	sprintf@flag^(0+128)
  2142  0D53  01BF               	clrf	(sprintf@flag+1)^(0+128)
  2143  0D54                     l2907:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2146  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0D56  085B               	movf	sprintf@f,w
  2149  0D57  0084               	movwf	4
  2150  0D58  160A  118A  200A  120A  158A  	fcall	stringdir
  2151  0D5D  160A  158A  25F8  120A  158A  	fcall	_isdigit
  2152  0D62  1C03               	btfss	3,0
  2153  0D63  2D65               	goto	u3951
  2154  0D64  2D66               	goto	u3950
  2155  0D65                     u3951:
  2156  0D65  2DB0               	goto	l2919
  2157  0D66                     u3950:
  2158  0D66                     l2909:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2161  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0D68  01C0               	clrf	sprintf@width^(0+128)
  2164  0D69  01C1               	clrf	(sprintf@width+1)^(0+128)
  2165  0D6A                     l2911:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2168  0D6A  300A               	movlw	10
  2169  0D6B  00F0               	movwf	___wmul@multiplier
  2170  0D6C  3000               	movlw	0
  2171  0D6D  00F1               	movwf	___wmul@multiplier+1
  2172  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0D70  0841               	movf	(sprintf@width+1)^(0+128),w
  2175  0D71  00F3               	movwf	___wmul@multiplicand+1
  2176  0D72  0840               	movf	sprintf@width^(0+128),w
  2177  0D73  00F2               	movwf	___wmul@multiplicand
  2178  0D74  160A  158A  26E5  120A  158A  	fcall	___wmul
  2179  0D79  0871               	movf	?___wmul+1,w
  2180  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0D7C  00C1               	movwf	(sprintf@width+1)^(0+128)
  2183  0D7D  0870               	movf	?___wmul,w
  2184  0D7E  00C0               	movwf	sprintf@width^(0+128)
  2185  0D7F                     l2913:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2188  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0D81  085B               	movf	sprintf@f,w
  2191  0D82  0084               	movwf	4
  2192  0D83  160A  118A  200A  120A  158A  	fcall	stringdir
  2193  0D88  3ED0               	addlw	208
  2194  0D89  00E4               	movwf	??_sprintf
  2195  0D8A  30FF               	movlw	255
  2196  0D8B  1803               	skipnc
  2197  0D8C  3000               	movlw	0
  2198  0D8D  00E5               	movwf	??_sprintf+1
  2199  0D8E  0864               	movf	??_sprintf,w
  2200  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  2202  0D91  07C0               	addwf	sprintf@width^(0+128),f
  2203  0D92  1803               	skipnc
  2204  0D93  0AC1               	incf	(sprintf@width+1)^(0+128),f
  2205  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0D96  0865               	movf	??_sprintf+1,w
  2208  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0D99  07C1               	addwf	(sprintf@width+1)^(0+128),f
  2211  0D9A                     l2915:
  2212  0D9A  3001               	movlw	1
  2213  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0D9D  00E4               	movwf	??_sprintf
  2216  0D9E  0864               	movf	??_sprintf,w
  2217  0D9F  07DB               	addwf	sprintf@f,f
  2218  0DA0                     l2917:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2221  0DA0  085B               	movf	sprintf@f,w
  2222  0DA1  0084               	movwf	4
  2223  0DA2  160A  118A  200A  120A  158A  	fcall	stringdir
  2224  0DA7  160A  158A  25F8  120A  158A  	fcall	_isdigit
  2225  0DAC  1803               	btfsc	3,0
  2226  0DAD  2DAF               	goto	u3961
  2227  0DAE  2DB0               	goto	u3960
  2228  0DAF                     u3961:
  2229  0DAF  2D6A               	goto	l2911
  2230  0DB0                     u3960:
  2231  0DB0                     l2919:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2234  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0DB2  085B               	movf	sprintf@f,w
  2237  0DB3  0084               	movwf	4
  2238  0DB4  160A  118A  200A  120A  158A  	fcall	stringdir
  2239  0DB9  3A2E               	xorlw	46
  2240  0DBA  1D03               	skipz
  2241  0DBB  2DBD               	goto	u3971
  2242  0DBC  2DBE               	goto	u3970
  2243  0DBD                     u3971:
  2244  0DBD  2E14               	goto	l2935
  2245  0DBE                     u3970:
  2246  0DBE                     l2921:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2249  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0DC0  173F               	bsf	(sprintf@flag^(0+128)+1),6
  2252  0DC1                     l2923:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2255  0DC1  3001               	movlw	1
  2256  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0DC4  00E4               	movwf	??_sprintf
  2259  0DC5  0864               	movf	??_sprintf,w
  2260  0DC6  07DB               	addwf	sprintf@f,f
  2261  0DC7                     l2925:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2264  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0DC9  01D0               	clrf	sprintf@prec^(0+128)
  2267  0DCA  01D1               	clrf	(sprintf@prec+1)^(0+128)
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2270  0DCB  2E02               	goto	l2933
  2271  0DCC                     l2927:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2274  0DCC  300A               	movlw	10
  2275  0DCD  00F0               	movwf	___wmul@multiplier
  2276  0DCE  3000               	movlw	0
  2277  0DCF  00F1               	movwf	___wmul@multiplier+1
  2278  0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  2279  0DD1  1303               	bcf	3,6	;RP1=0, select bank1
  2280  0DD2  0851               	movf	(sprintf@prec+1)^(0+128),w
  2281  0DD3  00F3               	movwf	___wmul@multiplicand+1
  2282  0DD4  0850               	movf	sprintf@prec^(0+128),w
  2283  0DD5  00F2               	movwf	___wmul@multiplicand
  2284  0DD6  160A  158A  26E5  120A  158A  	fcall	___wmul
  2285  0DDB  0871               	movf	?___wmul+1,w
  2286  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  2287  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  2288  0DDE  00D1               	movwf	(sprintf@prec+1)^(0+128)
  2289  0DDF  0870               	movf	?___wmul,w
  2290  0DE0  00D0               	movwf	sprintf@prec^(0+128)
  2291  0DE1                     l2929:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2294  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0DE3  085B               	movf	sprintf@f,w
  2297  0DE4  0084               	movwf	4
  2298  0DE5  160A  118A  200A  120A  158A  	fcall	stringdir
  2299  0DEA  3ED0               	addlw	208
  2300  0DEB  00E4               	movwf	??_sprintf
  2301  0DEC  30FF               	movlw	255
  2302  0DED  1803               	skipnc
  2303  0DEE  3000               	movlw	0
  2304  0DEF  00E5               	movwf	??_sprintf+1
  2305  0DF0  0864               	movf	??_sprintf,w
  2306  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0DF3  07D0               	addwf	sprintf@prec^(0+128),f
  2309  0DF4  1803               	skipnc
  2310  0DF5  0AD1               	incf	(sprintf@prec+1)^(0+128),f
  2311  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0DF8  0865               	movf	??_sprintf+1,w
  2314  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0DFB  07D1               	addwf	(sprintf@prec+1)^(0+128),f
  2317  0DFC                     l2931:
  2318  0DFC  3001               	movlw	1
  2319  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0DFF  00E4               	movwf	??_sprintf
  2322  0E00  0864               	movf	??_sprintf,w
  2323  0E01  07DB               	addwf	sprintf@f,f
  2324  0E02                     l2933:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2327  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0E03  085B               	movf	sprintf@f,w
  2329  0E04  0084               	movwf	4
  2330  0E05  160A  118A  200A  120A  158A  	fcall	stringdir
  2331  0E0A  160A  158A  25F8  120A  158A  	fcall	_isdigit
  2332  0E0F  1803               	btfsc	3,0
  2333  0E10  2E12               	goto	u3981
  2334  0E11  2E13               	goto	u3980
  2335  0E12                     u3981:
  2336  0E12  2DCC               	goto	l2927
  2337  0E13                     u3980:
  2338  0E13  2E1E               	goto	l2941
  2339  0E14                     l2935:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2342  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  2344  0E16  01D0               	clrf	sprintf@prec^(0+128)
  2345  0E17  01D1               	clrf	(sprintf@prec+1)^(0+128)
  2346  0E18                     l2937:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2349  0E18  163F               	bsf	(sprintf@flag^(0+128)+1),4
  2350  0E19  2E1E               	goto	l2941
  2351  0E1A                     l359:	
  2352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2353                           
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2356  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0E1C  153F               	bsf	(sprintf@flag^(0+128)+1),2
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2361  0E1D  2E44               	goto	l2943
  2362  0E1E                     l2941:
  2363  0E1E  3001               	movlw	1
  2364  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0E21  07DB               	addwf	sprintf@f,f
  2367  0E22  30FF               	movlw	-1
  2368  0E23  075B               	addwf	sprintf@f,w
  2369  0E24  0084               	movwf	4
  2370  0E25  160A  118A  200A  120A  158A  	fcall	stringdir
  2371  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0E2C  00D2               	movwf	sprintf@c^(0+128)
  2374  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0E2F  00E4               	movwf	??_sprintf
  2377  0E30  01E5               	clrf	??_sprintf+1
  2378                           
  2379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2380                           ; Switch size 1, requested type "simple"
  2381                           ; Number of cases is 1, Range of values is 0 to 0
  2382                           ; switch strategies available:
  2383                           ; Name         Instructions Cycles
  2384                           ; simple_byte            4     3 (average)
  2385                           ; direct_byte           11     8 (fixed)
  2386                           ; jumptable            260     6 (fixed)
  2387                           ;	Chosen strategy is simple_byte
  2388  0E31  0865               	movf	??_sprintf+1,w
  2389  0E32  3A00               	xorlw	0	; case 0
  2390  0E33  1903               	skipnz
  2391  0E34  2E36               	goto	l3265
  2392  0E35  2D33               	goto	L1
  2393  0E36                     l3265:
  2394                           
  2395                           ; Switch size 1, requested type "simple"
  2396                           ; Number of cases is 4, Range of values is 0 to 105
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte           13     7 (average)
  2400                           ; jumptable            260     6 (fixed)
  2401                           ;	Chosen strategy is simple_byte
  2402  0E36  0864               	movf	??_sprintf,w
  2403  0E37  3A00               	xorlw	0	; case 0
  2404  0E38  1903               	skipnz
  2405  0E39  2FFD               	goto	L3
  2406  0E3A  3A64               	xorlw	100	; case 100
  2407  0E3B  1903               	skipnz
  2408  0E3C  2E44               	goto	l2943
  2409  0E3D  3A02               	xorlw	2	; case 102
  2410  0E3E  1903               	skipnz
  2411  0E3F  2E1A               	goto	l359
  2412  0E40  3A0F               	xorlw	15	; case 105
  2413  0E41  1903               	skipnz
  2414  0E42  2E44               	goto	l2943
  2415  0E43  2D33               	goto	L1
  2416  0E44                     l2943:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2419  0E44  3000               	movlw	0
  2420  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  2421  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  2422  0E47  053E               	andwf	sprintf@flag^(0+128),w
  2423  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0E4A  00E4               	movwf	??_sprintf
  2426  0E4B  3007               	movlw	7
  2427  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2429  0E4E  053F               	andwf	(sprintf@flag+1)^(0+128),w
  2430  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0E51  00E5               	movwf	??_sprintf+1
  2433  0E52  0864               	movf	??_sprintf,w
  2434  0E53  0465               	iorwf	??_sprintf+1,w
  2435  0E54  1903               	btfsc	3,2
  2436  0E55  2E57               	goto	u3991
  2437  0E56  2E5A               	goto	u3990
  2438  0E57                     u3991:
  2439  0E57  120A  118A  2DC7   	goto	l3099
  2440  0E5A                     u3990:
  2441  0E5A                     l2945:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2444  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  2446  0E5C  1E3F               	btfss	(sprintf@flag+1)^(0+128),4
  2447  0E5D  2E5F               	goto	u4001
  2448  0E5E  2E60               	goto	u4000
  2449  0E5F                     u4001:
  2450  0E5F  2E64               	goto	l2949
  2451  0E60                     u4000:
  2452  0E60                     l2947:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2455  0E60  3006               	movlw	6
  2456  0E61  00D0               	movwf	sprintf@prec^(0+128)
  2457  0E62  3000               	movlw	0
  2458  0E63  00D1               	movwf	(sprintf@prec^(0+128)+1)
  2459  0E64                     l2949:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2462  0E64  083D               	movf	sprintf@ap^(0+128),w
  2463  0E65  0084               	movwf	4
  2464  0E66  1383               	bcf	3,7	;select IRP bank0
  2465  0E67  0800               	movf	0,w
  2466  0E68  00CC               	movwf	sprintf@fval^(0+128)
  2467  0E69  0A84               	incf	4,f
  2468  0E6A  0800               	movf	0,w
  2469  0E6B  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2470  0E6C  0A84               	incf	4,f
  2471  0E6D  0800               	movf	0,w
  2472  0E6E  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2473  0E6F                     l2951:
  2474  0E6F  3003               	movlw	3
  2475  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0E72  00E4               	movwf	??_sprintf
  2478  0E73  0864               	movf	??_sprintf,w
  2479  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0E76  07BD               	addwf	sprintf@ap^(0+128),f
  2482  0E77                     l2953:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2485  0E77  084C               	movf	sprintf@fval^(0+128),w
  2486  0E78  00F0               	movwf	___ftge@ff1
  2487  0E79  084D               	movf	(sprintf@fval+1)^(0+128),w
  2488  0E7A  00F1               	movwf	___ftge@ff1+1
  2489  0E7B  084E               	movf	(sprintf@fval+2)^(0+128),w
  2490  0E7C  00F2               	movwf	___ftge@ff1+2
  2491  0E7D  3000               	movlw	0
  2492  0E7E  00F3               	movwf	___ftge@ff2
  2493  0E7F  3000               	movlw	0
  2494  0E80  00F4               	movwf	___ftge@ff2+1
  2495  0E81  3000               	movlw	0
  2496  0E82  00F5               	movwf	___ftge@ff2+2
  2497  0E83  160A  158A  27C8  120A  158A  	fcall	___ftge
  2498  0E88  1803               	btfsc	3,0
  2499  0E89  2E8B               	goto	u4011
  2500  0E8A  2E8C               	goto	u4010
  2501  0E8B                     u4011:
  2502  0E8B  2EA5               	goto	l2959
  2503  0E8C                     u4010:
  2504  0E8C                     l2955:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2507  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  2508  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  2509  0E8E  084C               	movf	sprintf@fval^(0+128),w
  2510  0E8F  00F0               	movwf	___ftneg@f1
  2511  0E90  084D               	movf	(sprintf@fval+1)^(0+128),w
  2512  0E91  00F1               	movwf	___ftneg@f1+1
  2513  0E92  084E               	movf	(sprintf@fval+2)^(0+128),w
  2514  0E93  00F2               	movwf	___ftneg@f1+2
  2515  0E94  160A  158A  25E2  120A  158A  	fcall	___ftneg
  2516  0E99  0870               	movf	?___ftneg,w
  2517  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0E9C  00CC               	movwf	sprintf@fval^(0+128)
  2520  0E9D  0871               	movf	?___ftneg+1,w
  2521  0E9E  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2522  0E9F  0872               	movf	?___ftneg+2,w
  2523  0EA0  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2524  0EA1                     l2957:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2527  0EA1  3003               	movlw	3
  2528  0EA2  04BE               	iorwf	sprintf@flag^(0+128),f
  2529  0EA3  3000               	movlw	0
  2530  0EA4  04BF               	iorwf	(sprintf@flag+1)^(0+128),f
  2531  0EA5                     l2959:
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2534  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0EA7  01CA               	clrf	sprintf@eexp^(0+128)
  2537  0EA8  01CB               	clrf	(sprintf@eexp+1)^(0+128)
  2538  0EA9                     l2961:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2541  0EA9  084E               	movf	(sprintf@fval+2)^(0+128),w
  2542  0EAA  044D               	iorwf	(sprintf@fval+1)^(0+128),w
  2543  0EAB  044C               	iorwf	sprintf@fval^(0+128),w
  2544  0EAC  1903               	skipnz
  2545  0EAD  2EAF               	goto	u4021
  2546  0EAE  2EB0               	goto	u4020
  2547  0EAF                     u4021:
  2548  0EAF  2FA2               	goto	l2987
  2549  0EB0                     u4020:
  2550  0EB0                     l2963:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2553  0EB0  30CC               	movlw	low (sprintf@fval| 0)
  2554  0EB1  0084               	movwf	4
  2555  0EB2  1383               	bcf	3,7	;select IRP bank1
  2556  0EB3  0800               	movf	0,w
  2557  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0EB6  00E4               	movwf	??_sprintf
  2560  0EB7  0A84               	incf	4,f
  2561  0EB8  0800               	movf	0,w
  2562  0EB9  00E5               	movwf	??_sprintf+1
  2563  0EBA  0A84               	incf	4,f
  2564  0EBB  0800               	movf	0,w
  2565  0EBC  00E6               	movwf	??_sprintf+2
  2566  0EBD  0A84               	incf	4,f
  2567  0EBE  0800               	movf	0,w
  2568  0EBF  00E7               	movwf	??_sprintf+3
  2569  0EC0  300F               	movlw	15
  2570  0EC1                     u4035:
  2571  0EC1  1003               	clrc
  2572  0EC2  0CE7               	rrf	??_sprintf+3,f
  2573  0EC3  0CE6               	rrf	??_sprintf+2,f
  2574  0EC4  0CE5               	rrf	??_sprintf+1,f
  2575  0EC5  0CE4               	rrf	??_sprintf,f
  2576  0EC6                     u4030:
  2577  0EC6  3EFF               	addlw	-1
  2578  0EC7  1D03               	skipz
  2579  0EC8  2EC1               	goto	u4035
  2580  0EC9  30FF               	movlw	255
  2581  0ECA  0564               	andwf	??_sprintf,w
  2582  0ECB  00E8               	movwf	??_sprintf+4
  2583  0ECC  3000               	movlw	0
  2584  0ECD  0565               	andwf	??_sprintf+1,w
  2585  0ECE  00E9               	movwf	??_sprintf+5
  2586  0ECF  0868               	movf	??_sprintf+4,w
  2587  0ED0  3E82               	addlw	130
  2588  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0ED3  00CA               	movwf	sprintf@eexp^(0+128)
  2591  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0ED6  0869               	movf	??_sprintf+5,w
  2594  0ED7  1803               	skipnc
  2595  0ED8  3E01               	addlw	1
  2596  0ED9  3EFF               	addlw	255
  2597  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0EDC  00CB               	movwf	(sprintf@eexp+1)^(0+128)
  2600  0EDD                     l2965:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2603  0EDD  30FF               	movlw	255
  2604  0EDE  07CA               	addwf	sprintf@eexp^(0+128),f
  2605  0EDF  1803               	skipnc
  2606  0EE0  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  2607  0EE1  30FF               	movlw	255
  2608  0EE2  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  2609  0EE3                     l2967:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2612  0EE3  3003               	movlw	3
  2613  0EE4  00F0               	movwf	___wmul@multiplier
  2614  0EE5  3000               	movlw	0
  2615  0EE6  00F1               	movwf	___wmul@multiplier+1
  2616  0EE7  084B               	movf	(sprintf@eexp+1)^(0+128),w
  2617  0EE8  00F3               	movwf	___wmul@multiplicand+1
  2618  0EE9  084A               	movf	sprintf@eexp^(0+128),w
  2619  0EEA  00F2               	movwf	___wmul@multiplicand
  2620  0EEB  160A  158A  26E5  120A  158A  	fcall	___wmul
  2621  0EF0  0871               	movf	?___wmul+1,w
  2622  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0EF3  00CB               	movwf	(sprintf@eexp+1)^(0+128)
  2625  0EF4  0870               	movf	?___wmul,w
  2626  0EF5  00CA               	movwf	sprintf@eexp^(0+128)
  2627  0EF6                     l2969:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2630  0EF6  300A               	movlw	10
  2631  0EF7  00F7               	movwf	___awdiv@divisor
  2632  0EF8  3000               	movlw	0
  2633  0EF9  00F8               	movwf	___awdiv@divisor+1
  2634  0EFA  084B               	movf	(sprintf@eexp+1)^(0+128),w
  2635  0EFB  00FA               	movwf	___awdiv@dividend+1
  2636  0EFC  084A               	movf	sprintf@eexp^(0+128),w
  2637  0EFD  00F9               	movwf	___awdiv@dividend
  2638  0EFE  160A  118A  2351  120A  158A  	fcall	___awdiv
  2639  0F03  0878               	movf	?___awdiv+1,w
  2640  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0F06  00CB               	movwf	(sprintf@eexp+1)^(0+128)
  2643  0F07  0877               	movf	?___awdiv,w
  2644  0F08  00CA               	movwf	sprintf@eexp^(0+128)
  2645  0F09                     l2971:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2648  0F09  1FCB               	btfss	(sprintf@eexp+1)^(0+128),7
  2649  0F0A  2F0C               	goto	u4041
  2650  0F0B  2F0D               	goto	u4040
  2651  0F0C                     u4041:
  2652  0F0C  2F13               	goto	l2975
  2653  0F0D                     u4040:
  2654  0F0D                     l2973:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2657  0F0D  30FF               	movlw	255
  2658  0F0E  07CA               	addwf	sprintf@eexp^(0+128),f
  2659  0F0F  1803               	skipnc
  2660  0F10  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  2661  0F11  30FF               	movlw	255
  2662  0F12  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  2663  0F13                     l2975:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2666  0F13  034A               	decf	sprintf@eexp^(0+128),w
  2667  0F14  3AFF               	xorlw	255
  2668  0F15  120A  158A  227D  120A  158A  	fcall	_scale
  2669  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0F1C  0838               	movf	?_scale,w
  2672  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2674  0F1F  00C2               	movwf	sprintf@tmpval^(0+128)
  2675  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0F22  0839               	movf	?_scale+1,w
  2678  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0F25  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2681  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0F28  083A               	movf	?_scale+2,w
  2684  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2686  0F2B  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2687  0F2C                     l2977:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2690  0F2C  084C               	movf	sprintf@fval^(0+128),w
  2691  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0F2F  00A8               	movwf	___ftmul@f1
  2694  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2695  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2696  0F32  084D               	movf	(sprintf@fval+1)^(0+128),w
  2697  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0F35  00A9               	movwf	___ftmul@f1+1
  2700  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2701  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2702  0F38  084E               	movf	(sprintf@fval+2)^(0+128),w
  2703  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0F3B  00AA               	movwf	___ftmul@f1+2
  2706  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0F3E  0842               	movf	sprintf@tmpval^(0+128),w
  2709  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0F41  00AB               	movwf	___ftmul@f2
  2712  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2714  0F44  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2715  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0F47  00AC               	movwf	___ftmul@f2+1
  2718  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2720  0F4A  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2721  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0F4D  00AD               	movwf	___ftmul@f2+2
  2724  0F4E  160A  118A  24C2  120A  158A  	fcall	___ftmul
  2725  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0F55  0828               	movf	?___ftmul,w
  2728  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  2729  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  2730  0F58  00C2               	movwf	sprintf@tmpval^(0+128)
  2731  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0F5B  0829               	movf	?___ftmul+1,w
  2734  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0F5E  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2737  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0F61  082A               	movf	?___ftmul+2,w
  2740  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  2741  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  2742  0F64  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2743  0F65                     l2979:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2746  0F65  0842               	movf	sprintf@tmpval^(0+128),w
  2747  0F66  00F0               	movwf	___ftge@ff1
  2748  0F67  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2749  0F68  00F1               	movwf	___ftge@ff1+1
  2750  0F69  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2751  0F6A  00F2               	movwf	___ftge@ff1+2
  2752  0F6B  3000               	movlw	0
  2753  0F6C  00F3               	movwf	___ftge@ff2
  2754  0F6D  3080               	movlw	128
  2755  0F6E  00F4               	movwf	___ftge@ff2+1
  2756  0F6F  303F               	movlw	63
  2757  0F70  00F5               	movwf	___ftge@ff2+2
  2758  0F71  160A  158A  27C8  120A  158A  	fcall	___ftge
  2759  0F76  1803               	btfsc	3,0
  2760  0F77  2F79               	goto	u4051
  2761  0F78  2F7A               	goto	u4050
  2762  0F79                     u4051:
  2763  0F79  2F83               	goto	l2983
  2764  0F7A                     u4050:
  2765  0F7A                     l2981:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2768  0F7A  30FF               	movlw	255
  2769  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0F7D  07CA               	addwf	sprintf@eexp^(0+128),f
  2772  0F7E  1803               	skipnc
  2773  0F7F  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  2774  0F80  30FF               	movlw	255
  2775  0F81  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  2776  0F82  2FA2               	goto	l2987
  2777  0F83                     l2983:
  2778  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0F85  0842               	movf	sprintf@tmpval^(0+128),w
  2781  0F86  00F0               	movwf	___ftge@ff1
  2782  0F87  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2783  0F88  00F1               	movwf	___ftge@ff1+1
  2784  0F89  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2785  0F8A  00F2               	movwf	___ftge@ff1+2
  2786  0F8B  3000               	movlw	0
  2787  0F8C  00F3               	movwf	___ftge@ff2
  2788  0F8D  3020               	movlw	32
  2789  0F8E  00F4               	movwf	___ftge@ff2+1
  2790  0F8F  3041               	movlw	65
  2791  0F90  00F5               	movwf	___ftge@ff2+2
  2792  0F91  160A  158A  27C8  120A  158A  	fcall	___ftge
  2793  0F96  1C03               	btfss	3,0
  2794  0F97  2F99               	goto	u4061
  2795  0F98  2F9A               	goto	u4060
  2796  0F99                     u4061:
  2797  0F99  2FA2               	goto	l2987
  2798  0F9A                     u4060:
  2799  0F9A                     l2985:
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2802  0F9A  3001               	movlw	1
  2803  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0F9D  07CA               	addwf	sprintf@eexp^(0+128),f
  2806  0F9E  1803               	skipnc
  2807  0F9F  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  2808  0FA0  3000               	movlw	0
  2809  0FA1  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  2810  0FA2                     l2987:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2813  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0FA4  0851               	movf	(sprintf@prec+1)^(0+128),w
  2816  0FA5  3A80               	xorlw	128
  2817  0FA6  00FF               	movwf	btemp+1
  2818  0FA7  3080               	movlw	128
  2819  0FA8  027F               	subwf	btemp+1,w
  2820  0FA9  1D03               	skipz
  2821  0FAA  2FAD               	goto	u4075
  2822  0FAB  300D               	movlw	13
  2823  0FAC  0250               	subwf	sprintf@prec^(0+128),w
  2824  0FAD                     u4075:
  2825  0FAD  1803               	skipnc
  2826  0FAE  2FB0               	goto	u4071
  2827  0FAF  2FB1               	goto	u4070
  2828  0FB0                     u4071:
  2829  0FB0  2FEA               	goto	l2991
  2830  0FB1                     u4070:
  2831  0FB1                     l2989:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2834  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2835  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2836  0FB3  0850               	movf	sprintf@prec^(0+128),w
  2837  0FB4  120A  158A  20DC  120A  158A  	fcall	_fround
  2838  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0FBB  0838               	movf	?_fround,w
  2841  0FBC  00C8               	movwf	___ftadd@f1
  2842  0FBD  0839               	movf	?_fround+1,w
  2843  0FBE  00C9               	movwf	___ftadd@f1+1
  2844  0FBF  083A               	movf	?_fround+2,w
  2845  0FC0  00CA               	movwf	___ftadd@f1+2
  2846  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2847  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2848  0FC3  084C               	movf	sprintf@fval^(0+128),w
  2849  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0FC6  00CB               	movwf	___ftadd@f2
  2852  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2853  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2854  0FC9  084D               	movf	(sprintf@fval+1)^(0+128),w
  2855  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0FCC  00CC               	movwf	___ftadd@f2+1
  2858  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2859  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2860  0FCF  084E               	movf	(sprintf@fval+2)^(0+128),w
  2861  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0FD2  00CD               	movwf	___ftadd@f2+2
  2864  0FD3  120A  118A  2012  120A  158A  	fcall	___ftadd
  2865  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0FDA  0848               	movf	?___ftadd,w
  2868  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2869  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2870  0FDD  00CC               	movwf	sprintf@fval^(0+128)
  2871  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0FE0  0849               	movf	?___ftadd+1,w
  2874  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0FE3  00CD               	movwf	(sprintf@fval+1)^(0+128)
  2877  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0FE6  084A               	movf	?___ftadd+2,w
  2880  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2881  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2882  0FE9  00CE               	movwf	(sprintf@fval+2)^(0+128)
  2883  0FEA                     l2991:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2886  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2887  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2888  0FEC  084B               	movf	(sprintf@eexp+1)^(0+128),w
  2889  0FED  3A80               	xorlw	128
  2890  0FEE  00FF               	movwf	btemp+1
  2891  0FEF  3080               	movlw	128
  2892  0FF0  027F               	subwf	btemp+1,w
  2893  0FF1  1D03               	skipz
  2894  0FF2  2FF5               	goto	u4085
  2895  0FF3  300A               	movlw	10
  2896  0FF4  024A               	subwf	sprintf@eexp^(0+128),w
  2897  0FF5                     u4085:
  2898  0FF5  1803               	skipnc
  2899  0FF6  2FFA               	goto	u4081
  2900  0FF7  120A  118A  2948   	goto	u4080
  2901  0FFA                     u4081:
  2902  0FFA  120A  118A  297F   	goto	l2999
  2903  0FFD                     L3:
  2904  0FFD                     L2:
  2905  0FFD  120A  118A  2FE7   	ljmp	l3179
  2906                           
  2907                           	psect	text5
  2908  0A7D                     __ptext5:	
  2909 ;; *************** function _scale *****************
  2910 ;; Defined at:
  2911 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  scl             1    wreg     char 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  scl             1   32[BANK0 ] char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  3   24[BANK0 ] char 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       3       0       0       0
  2926 ;;      Locals:         0       4       0       0       0
  2927 ;;      Temps:          0       2       0       0       0
  2928 ;;      Totals:         0       9       0       0       0
  2929 ;;Total ram usage:        9 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    2
  2932 ;; This function calls:
  2933 ;;		___awdiv
  2934 ;;		___awmod
  2935 ;;		___bmul
  2936 ;;		___ftmul
  2937 ;; This function is called by:
  2938 ;;		_sprintf
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _scale
  2944  0A7D                     _scale:
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2948                           ;scale@scl stored from wreg
  2949  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0A7F  00C0               	movwf	scale@scl
  2952  0A80                     l2495:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2955  0A80  1FC0               	btfss	scale@scl,7
  2956  0A81  2A83               	goto	u3231
  2957  0A82  2A84               	goto	u3230
  2958  0A83                     u3231:
  2959  0A83  2BD7               	goto	l2517
  2960  0A84                     u3230:
  2961  0A84                     l2497:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2964  0A84  09C0               	comf	scale@scl,f
  2965  0A85  0AC0               	incf	scale@scl,f
  2966  0A86                     l2499:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2969  0A86  0840               	movf	scale@scl,w
  2970  0A87  3A80               	xorlw	128
  2971  0A88  3E12               	addlw	-238
  2972  0A89  1C03               	skipc
  2973  0A8A  2A8C               	goto	u3241
  2974  0A8B  2A8D               	goto	u3240
  2975  0A8C                     u3241:
  2976  0A8C  2B45               	goto	l2507
  2977  0A8D                     u3240:
  2978  0A8D                     l2501:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2981  0A8D  3003               	movlw	3
  2982  0A8E  00BB               	movwf	??_scale
  2983  0A8F  083B               	movf	??_scale,w
  2984  0A90  00A4               	movwf	___bmul@multiplicand
  2985  0A91  0840               	movf	scale@scl,w
  2986  0A92  00F2               	movwf	___awmod@dividend
  2987  0A93  01F3               	clrf	___awmod@dividend+1
  2988  0A94  1BF2               	btfsc	___awmod@dividend,7
  2989  0A95  03F3               	decf	___awmod@dividend+1,f
  2990  0A96  3064               	movlw	100
  2991  0A97  00F0               	movwf	___awmod@divisor
  2992  0A98  3000               	movlw	0
  2993  0A99  00F1               	movwf	___awmod@divisor+1
  2994  0A9A  160A  118A  222C  120A  158A  	fcall	___awmod
  2995  0A9F  0871               	movf	?___awmod+1,w
  2996  0AA0  00FA               	movwf	___awdiv@dividend+1
  2997  0AA1  0870               	movf	?___awmod,w
  2998  0AA2  00F9               	movwf	___awdiv@dividend
  2999  0AA3  300A               	movlw	10
  3000  0AA4  00F7               	movwf	___awdiv@divisor
  3001  0AA5  3000               	movlw	0
  3002  0AA6  00F8               	movwf	___awdiv@divisor+1
  3003  0AA7  160A  118A  2351  120A  158A  	fcall	___awdiv
  3004  0AAC  0877               	movf	?___awdiv,w
  3005  0AAD  160A  158A  2620  120A  158A  	fcall	___bmul
  3006  0AB2  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3007  0AB3  0084               	movwf	4
  3008  0AB4  160A  118A  200A  120A  158A  	fcall	stringdir
  3009  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0ABB  00A8               	movwf	___ftmul@f1
  3012  0ABC  160A  118A  200A  120A  158A  	fcall	stringdir
  3013  0AC1  00A9               	movwf	___ftmul@f1+1
  3014  0AC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3015  0AC7  00AA               	movwf	___ftmul@f1+2
  3016  0AC8  3003               	movlw	3
  3017  0AC9  00BC               	movwf	??_scale+1
  3018  0ACA  083C               	movf	??_scale+1,w
  3019  0ACB  00A4               	movwf	___bmul@multiplicand
  3020  0ACC  0840               	movf	scale@scl,w
  3021  0ACD  00F9               	movwf	___awdiv@dividend
  3022  0ACE  01FA               	clrf	___awdiv@dividend+1
  3023  0ACF  1BF9               	btfsc	___awdiv@dividend,7
  3024  0AD0  03FA               	decf	___awdiv@dividend+1,f
  3025  0AD1  3064               	movlw	100
  3026  0AD2  00F7               	movwf	___awdiv@divisor
  3027  0AD3  3000               	movlw	0
  3028  0AD4  00F8               	movwf	___awdiv@divisor+1
  3029  0AD5  160A  118A  2351  120A  158A  	fcall	___awdiv
  3030  0ADA  0877               	movf	?___awdiv,w
  3031  0ADB  160A  158A  2620  120A  158A  	fcall	___bmul
  3032  0AE0  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3033  0AE1  0084               	movwf	4
  3034  0AE2  160A  118A  200A  120A  158A  	fcall	stringdir
  3035  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0AE9  00AB               	movwf	___ftmul@f2
  3038  0AEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3039  0AEF  00AC               	movwf	___ftmul@f2+1
  3040  0AF0  160A  118A  200A  120A  158A  	fcall	stringdir
  3041  0AF5  00AD               	movwf	___ftmul@f2+2
  3042  0AF6  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3043  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0AFD  0828               	movf	?___ftmul,w
  3046  0AFE  00BD               	movwf	_scale$1086
  3047  0AFF  0829               	movf	?___ftmul+1,w
  3048  0B00  00BE               	movwf	_scale$1086+1
  3049  0B01  082A               	movf	?___ftmul+2,w
  3050  0B02  00BF               	movwf	_scale$1086+2
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3053  0B03  3003               	movlw	3
  3054  0B04  00BB               	movwf	??_scale
  3055  0B05  083B               	movf	??_scale,w
  3056  0B06  00A4               	movwf	___bmul@multiplicand
  3057  0B07  0840               	movf	scale@scl,w
  3058  0B08  00F2               	movwf	___awmod@dividend
  3059  0B09  01F3               	clrf	___awmod@dividend+1
  3060  0B0A  1BF2               	btfsc	___awmod@dividend,7
  3061  0B0B  03F3               	decf	___awmod@dividend+1,f
  3062  0B0C  300A               	movlw	10
  3063  0B0D  00F0               	movwf	___awmod@divisor
  3064  0B0E  3000               	movlw	0
  3065  0B0F  00F1               	movwf	___awmod@divisor+1
  3066  0B10  160A  118A  222C  120A  158A  	fcall	___awmod
  3067  0B15  0870               	movf	?___awmod,w
  3068  0B16  160A  158A  2620  120A  158A  	fcall	___bmul
  3069  0B1B  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3070  0B1C  0084               	movwf	4
  3071  0B1D  160A  118A  200A  120A  158A  	fcall	stringdir
  3072  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0B24  00A8               	movwf	___ftmul@f1
  3075  0B25  160A  118A  200A  120A  158A  	fcall	stringdir
  3076  0B2A  00A9               	movwf	___ftmul@f1+1
  3077  0B2B  160A  118A  200A  120A  158A  	fcall	stringdir
  3078  0B30  00AA               	movwf	___ftmul@f1+2
  3079  0B31  083D               	movf	_scale$1086,w
  3080  0B32  00AB               	movwf	___ftmul@f2
  3081  0B33  083E               	movf	_scale$1086+1,w
  3082  0B34  00AC               	movwf	___ftmul@f2+1
  3083  0B35  083F               	movf	_scale$1086+2,w
  3084  0B36  00AD               	movwf	___ftmul@f2+2
  3085  0B37  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3086  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0B3E  0828               	movf	?___ftmul,w
  3089  0B3F  00B8               	movwf	?_scale
  3090  0B40  0829               	movf	?___ftmul+1,w
  3091  0B41  00B9               	movwf	?_scale+1
  3092  0B42  082A               	movf	?___ftmul+2,w
  3093  0B43  00BA               	movwf	?_scale+2
  3094  0B44  2D27               	goto	l337
  3095  0B45                     l2507:
  3096  0B45  0840               	movf	scale@scl,w
  3097  0B46  3A80               	xorlw	128
  3098  0B47  3E75               	addlw	-139
  3099  0B48  1C03               	skipc
  3100  0B49  2B4B               	goto	u3251
  3101  0B4A  2B4C               	goto	u3250
  3102  0B4B                     u3251:
  3103  0B4B  2BB6               	goto	l2513
  3104  0B4C                     u3250:
  3105  0B4C                     l2509:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3108  0B4C  3003               	movlw	3
  3109  0B4D  00BB               	movwf	??_scale
  3110  0B4E  083B               	movf	??_scale,w
  3111  0B4F  00A4               	movwf	___bmul@multiplicand
  3112  0B50  0840               	movf	scale@scl,w
  3113  0B51  00F2               	movwf	___awmod@dividend
  3114  0B52  01F3               	clrf	___awmod@dividend+1
  3115  0B53  1BF2               	btfsc	___awmod@dividend,7
  3116  0B54  03F3               	decf	___awmod@dividend+1,f
  3117  0B55  300A               	movlw	10
  3118  0B56  00F0               	movwf	___awmod@divisor
  3119  0B57  3000               	movlw	0
  3120  0B58  00F1               	movwf	___awmod@divisor+1
  3121  0B59  160A  118A  222C  120A  158A  	fcall	___awmod
  3122  0B5E  0870               	movf	?___awmod,w
  3123  0B5F  160A  158A  2620  120A  158A  	fcall	___bmul
  3124  0B64  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3125  0B65  0084               	movwf	4
  3126  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  3127  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0B6D  00A8               	movwf	___ftmul@f1
  3130  0B6E  160A  118A  200A  120A  158A  	fcall	stringdir
  3131  0B73  00A9               	movwf	___ftmul@f1+1
  3132  0B74  160A  118A  200A  120A  158A  	fcall	stringdir
  3133  0B79  00AA               	movwf	___ftmul@f1+2
  3134  0B7A  3003               	movlw	3
  3135  0B7B  00BC               	movwf	??_scale+1
  3136  0B7C  083C               	movf	??_scale+1,w
  3137  0B7D  00A4               	movwf	___bmul@multiplicand
  3138  0B7E  0840               	movf	scale@scl,w
  3139  0B7F  00F9               	movwf	___awdiv@dividend
  3140  0B80  01FA               	clrf	___awdiv@dividend+1
  3141  0B81  1BF9               	btfsc	___awdiv@dividend,7
  3142  0B82  03FA               	decf	___awdiv@dividend+1,f
  3143  0B83  300A               	movlw	10
  3144  0B84  00F7               	movwf	___awdiv@divisor
  3145  0B85  3000               	movlw	0
  3146  0B86  00F8               	movwf	___awdiv@divisor+1
  3147  0B87  160A  118A  2351  120A  158A  	fcall	___awdiv
  3148  0B8C  0877               	movf	?___awdiv,w
  3149  0B8D  160A  158A  2620  120A  158A  	fcall	___bmul
  3150  0B92  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3151  0B93  0084               	movwf	4
  3152  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  3153  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0B9B  00AB               	movwf	___ftmul@f2
  3156  0B9C  160A  118A  200A  120A  158A  	fcall	stringdir
  3157  0BA1  00AC               	movwf	___ftmul@f2+1
  3158  0BA2  160A  118A  200A  120A  158A  	fcall	stringdir
  3159  0BA7  00AD               	movwf	___ftmul@f2+2
  3160  0BA8  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3161  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0BAF  0828               	movf	?___ftmul,w
  3164  0BB0  00B8               	movwf	?_scale
  3165  0BB1  0829               	movf	?___ftmul+1,w
  3166  0BB2  00B9               	movwf	?_scale+1
  3167  0BB3  082A               	movf	?___ftmul+2,w
  3168  0BB4  00BA               	movwf	?_scale+2
  3169  0BB5  2D27               	goto	l337
  3170  0BB6                     l2513:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3173  0BB6  3003               	movlw	3
  3174  0BB7  00BB               	movwf	??_scale
  3175  0BB8  083B               	movf	??_scale,w
  3176  0BB9  00A4               	movwf	___bmul@multiplicand
  3177  0BBA  0840               	movf	scale@scl,w
  3178  0BBB  160A  158A  2620  120A  158A  	fcall	___bmul
  3179  0BC0  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3180  0BC1  0084               	movwf	4
  3181  0BC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3182  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0BC9  00B8               	movwf	?_scale
  3185  0BCA  160A  118A  200A  120A  158A  	fcall	stringdir
  3186  0BCF  00B9               	movwf	?_scale+1
  3187  0BD0  160A  118A  200A  120A  158A  	fcall	stringdir
  3188  0BD5  00BA               	movwf	?_scale+2
  3189  0BD6  2D27               	goto	l337
  3190  0BD7                     l2517:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3193  0BD7  0840               	movf	scale@scl,w
  3194  0BD8  3A80               	xorlw	128
  3195  0BD9  3E12               	addlw	-238
  3196  0BDA  1C03               	skipc
  3197  0BDB  2BDD               	goto	u3261
  3198  0BDC  2BDE               	goto	u3260
  3199  0BDD                     u3261:
  3200  0BDD  2C96               	goto	l2525
  3201  0BDE                     u3260:
  3202  0BDE                     l2519:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3205  0BDE  3003               	movlw	3
  3206  0BDF  00BB               	movwf	??_scale
  3207  0BE0  083B               	movf	??_scale,w
  3208  0BE1  00A4               	movwf	___bmul@multiplicand
  3209  0BE2  0840               	movf	scale@scl,w
  3210  0BE3  00F2               	movwf	___awmod@dividend
  3211  0BE4  01F3               	clrf	___awmod@dividend+1
  3212  0BE5  1BF2               	btfsc	___awmod@dividend,7
  3213  0BE6  03F3               	decf	___awmod@dividend+1,f
  3214  0BE7  3064               	movlw	100
  3215  0BE8  00F0               	movwf	___awmod@divisor
  3216  0BE9  3000               	movlw	0
  3217  0BEA  00F1               	movwf	___awmod@divisor+1
  3218  0BEB  160A  118A  222C  120A  158A  	fcall	___awmod
  3219  0BF0  0871               	movf	?___awmod+1,w
  3220  0BF1  00FA               	movwf	___awdiv@dividend+1
  3221  0BF2  0870               	movf	?___awmod,w
  3222  0BF3  00F9               	movwf	___awdiv@dividend
  3223  0BF4  300A               	movlw	10
  3224  0BF5  00F7               	movwf	___awdiv@divisor
  3225  0BF6  3000               	movlw	0
  3226  0BF7  00F8               	movwf	___awdiv@divisor+1
  3227  0BF8  160A  118A  2351  120A  158A  	fcall	___awdiv
  3228  0BFD  0877               	movf	?___awdiv,w
  3229  0BFE  160A  158A  2620  120A  158A  	fcall	___bmul
  3230  0C03  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3231  0C04  0084               	movwf	4
  3232  0C05  160A  118A  200A  120A  158A  	fcall	stringdir
  3233  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0C0C  00A8               	movwf	___ftmul@f1
  3236  0C0D  160A  118A  200A  120A  158A  	fcall	stringdir
  3237  0C12  00A9               	movwf	___ftmul@f1+1
  3238  0C13  160A  118A  200A  120A  158A  	fcall	stringdir
  3239  0C18  00AA               	movwf	___ftmul@f1+2
  3240  0C19  3003               	movlw	3
  3241  0C1A  00BC               	movwf	??_scale+1
  3242  0C1B  083C               	movf	??_scale+1,w
  3243  0C1C  00A4               	movwf	___bmul@multiplicand
  3244  0C1D  0840               	movf	scale@scl,w
  3245  0C1E  00F9               	movwf	___awdiv@dividend
  3246  0C1F  01FA               	clrf	___awdiv@dividend+1
  3247  0C20  1BF9               	btfsc	___awdiv@dividend,7
  3248  0C21  03FA               	decf	___awdiv@dividend+1,f
  3249  0C22  3064               	movlw	100
  3250  0C23  00F7               	movwf	___awdiv@divisor
  3251  0C24  3000               	movlw	0
  3252  0C25  00F8               	movwf	___awdiv@divisor+1
  3253  0C26  160A  118A  2351  120A  158A  	fcall	___awdiv
  3254  0C2B  0877               	movf	?___awdiv,w
  3255  0C2C  160A  158A  2620  120A  158A  	fcall	___bmul
  3256  0C31  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3257  0C32  0084               	movwf	4
  3258  0C33  160A  118A  200A  120A  158A  	fcall	stringdir
  3259  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0C3A  00AB               	movwf	___ftmul@f2
  3262  0C3B  160A  118A  200A  120A  158A  	fcall	stringdir
  3263  0C40  00AC               	movwf	___ftmul@f2+1
  3264  0C41  160A  118A  200A  120A  158A  	fcall	stringdir
  3265  0C46  00AD               	movwf	___ftmul@f2+2
  3266  0C47  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3267  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0C4E  0828               	movf	?___ftmul,w
  3270  0C4F  00BD               	movwf	_scale$1086
  3271  0C50  0829               	movf	?___ftmul+1,w
  3272  0C51  00BE               	movwf	_scale$1086+1
  3273  0C52  082A               	movf	?___ftmul+2,w
  3274  0C53  00BF               	movwf	_scale$1086+2
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3277  0C54  3003               	movlw	3
  3278  0C55  00BB               	movwf	??_scale
  3279  0C56  083B               	movf	??_scale,w
  3280  0C57  00A4               	movwf	___bmul@multiplicand
  3281  0C58  0840               	movf	scale@scl,w
  3282  0C59  00F2               	movwf	___awmod@dividend
  3283  0C5A  01F3               	clrf	___awmod@dividend+1
  3284  0C5B  1BF2               	btfsc	___awmod@dividend,7
  3285  0C5C  03F3               	decf	___awmod@dividend+1,f
  3286  0C5D  300A               	movlw	10
  3287  0C5E  00F0               	movwf	___awmod@divisor
  3288  0C5F  3000               	movlw	0
  3289  0C60  00F1               	movwf	___awmod@divisor+1
  3290  0C61  160A  118A  222C  120A  158A  	fcall	___awmod
  3291  0C66  0870               	movf	?___awmod,w
  3292  0C67  160A  158A  2620  120A  158A  	fcall	___bmul
  3293  0C6C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3294  0C6D  0084               	movwf	4
  3295  0C6E  160A  118A  200A  120A  158A  	fcall	stringdir
  3296  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0C75  00A8               	movwf	___ftmul@f1
  3299  0C76  160A  118A  200A  120A  158A  	fcall	stringdir
  3300  0C7B  00A9               	movwf	___ftmul@f1+1
  3301  0C7C  160A  118A  200A  120A  158A  	fcall	stringdir
  3302  0C81  00AA               	movwf	___ftmul@f1+2
  3303  0C82  083D               	movf	_scale$1086,w
  3304  0C83  00AB               	movwf	___ftmul@f2
  3305  0C84  083E               	movf	_scale$1086+1,w
  3306  0C85  00AC               	movwf	___ftmul@f2+1
  3307  0C86  083F               	movf	_scale$1086+2,w
  3308  0C87  00AD               	movwf	___ftmul@f2+2
  3309  0C88  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3310  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0C8F  0828               	movf	?___ftmul,w
  3313  0C90  00B8               	movwf	?_scale
  3314  0C91  0829               	movf	?___ftmul+1,w
  3315  0C92  00B9               	movwf	?_scale+1
  3316  0C93  082A               	movf	?___ftmul+2,w
  3317  0C94  00BA               	movwf	?_scale+2
  3318  0C95  2D27               	goto	l337
  3319  0C96                     l2525:
  3320  0C96  0840               	movf	scale@scl,w
  3321  0C97  3A80               	xorlw	128
  3322  0C98  3E75               	addlw	-139
  3323  0C99  1C03               	skipc
  3324  0C9A  2C9C               	goto	u3271
  3325  0C9B  2C9D               	goto	u3270
  3326  0C9C                     u3271:
  3327  0C9C  2D07               	goto	l2531
  3328  0C9D                     u3270:
  3329  0C9D                     l2527:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3332  0C9D  3003               	movlw	3
  3333  0C9E  00BB               	movwf	??_scale
  3334  0C9F  083B               	movf	??_scale,w
  3335  0CA0  00A4               	movwf	___bmul@multiplicand
  3336  0CA1  0840               	movf	scale@scl,w
  3337  0CA2  00F2               	movwf	___awmod@dividend
  3338  0CA3  01F3               	clrf	___awmod@dividend+1
  3339  0CA4  1BF2               	btfsc	___awmod@dividend,7
  3340  0CA5  03F3               	decf	___awmod@dividend+1,f
  3341  0CA6  300A               	movlw	10
  3342  0CA7  00F0               	movwf	___awmod@divisor
  3343  0CA8  3000               	movlw	0
  3344  0CA9  00F1               	movwf	___awmod@divisor+1
  3345  0CAA  160A  118A  222C  120A  158A  	fcall	___awmod
  3346  0CAF  0870               	movf	?___awmod,w
  3347  0CB0  160A  158A  2620  120A  158A  	fcall	___bmul
  3348  0CB5  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3349  0CB6  0084               	movwf	4
  3350  0CB7  160A  118A  200A  120A  158A  	fcall	stringdir
  3351  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0CBE  00A8               	movwf	___ftmul@f1
  3354  0CBF  160A  118A  200A  120A  158A  	fcall	stringdir
  3355  0CC4  00A9               	movwf	___ftmul@f1+1
  3356  0CC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3357  0CCA  00AA               	movwf	___ftmul@f1+2
  3358  0CCB  3003               	movlw	3
  3359  0CCC  00BC               	movwf	??_scale+1
  3360  0CCD  083C               	movf	??_scale+1,w
  3361  0CCE  00A4               	movwf	___bmul@multiplicand
  3362  0CCF  0840               	movf	scale@scl,w
  3363  0CD0  00F9               	movwf	___awdiv@dividend
  3364  0CD1  01FA               	clrf	___awdiv@dividend+1
  3365  0CD2  1BF9               	btfsc	___awdiv@dividend,7
  3366  0CD3  03FA               	decf	___awdiv@dividend+1,f
  3367  0CD4  300A               	movlw	10
  3368  0CD5  00F7               	movwf	___awdiv@divisor
  3369  0CD6  3000               	movlw	0
  3370  0CD7  00F8               	movwf	___awdiv@divisor+1
  3371  0CD8  160A  118A  2351  120A  158A  	fcall	___awdiv
  3372  0CDD  0877               	movf	?___awdiv,w
  3373  0CDE  160A  158A  2620  120A  158A  	fcall	___bmul
  3374  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3375  0CE4  0084               	movwf	4
  3376  0CE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3377  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0CEC  00AB               	movwf	___ftmul@f2
  3380  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  3381  0CF2  00AC               	movwf	___ftmul@f2+1
  3382  0CF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3383  0CF8  00AD               	movwf	___ftmul@f2+2
  3384  0CF9  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3385  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0D00  0828               	movf	?___ftmul,w
  3388  0D01  00B8               	movwf	?_scale
  3389  0D02  0829               	movf	?___ftmul+1,w
  3390  0D03  00B9               	movwf	?_scale+1
  3391  0D04  082A               	movf	?___ftmul+2,w
  3392  0D05  00BA               	movwf	?_scale+2
  3393  0D06  2D27               	goto	l337
  3394  0D07                     l2531:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3397  0D07  3003               	movlw	3
  3398  0D08  00BB               	movwf	??_scale
  3399  0D09  083B               	movf	??_scale,w
  3400  0D0A  00A4               	movwf	___bmul@multiplicand
  3401  0D0B  0840               	movf	scale@scl,w
  3402  0D0C  160A  158A  2620  120A  158A  	fcall	___bmul
  3403  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3404  0D12  0084               	movwf	4
  3405  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  3406  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0D1A  00B8               	movwf	?_scale
  3409  0D1B  160A  118A  200A  120A  158A  	fcall	stringdir
  3410  0D20  00B9               	movwf	?_scale+1
  3411  0D21  160A  118A  200A  120A  158A  	fcall	stringdir
  3412  0D26  00BA               	movwf	?_scale+2
  3413  0D27                     l337:
  3414  0D27  0008               	return
  3415  0D28                     __end_of_scale:
  3416                           
  3417                           	psect	text6
  3418  122C                     __ptext6:	
  3419 ;; *************** function ___awmod *****************
  3420 ;; Defined at:
  3421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  divisor         2    0[COMMON] int 
  3424 ;;  dividend        2    2[COMMON] int 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  sign            1    6[COMMON] unsigned char 
  3427 ;;  counter         1    5[COMMON] unsigned char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2    0[COMMON] int 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         4       0       0       0       0
  3438 ;;      Locals:         2       0       0       0       0
  3439 ;;      Temps:          1       0       0       0       0
  3440 ;;      Totals:         7       0       0       0       0
  3441 ;;Total ram usage:        7 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_scale
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           
  3451                           ;psect for function ___awmod
  3452  122C                     ___awmod:
  3453  122C                     l2217:	
  3454                           ;incstack = 0
  3455                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3456                           
  3457  122C  01F6               	clrf	___awmod@sign
  3458  122D                     l2219:
  3459  122D  1FF3               	btfss	___awmod@dividend+1,7
  3460  122E  2A30               	goto	u2591
  3461  122F  2A31               	goto	u2590
  3462  1230                     u2591:
  3463  1230  2A38               	goto	l2225
  3464  1231                     u2590:
  3465  1231                     l2221:
  3466  1231  09F2               	comf	___awmod@dividend,f
  3467  1232  09F3               	comf	___awmod@dividend+1,f
  3468  1233  0AF2               	incf	___awmod@dividend,f
  3469  1234  1903               	skipnz
  3470  1235  0AF3               	incf	___awmod@dividend+1,f
  3471  1236                     l2223:
  3472  1236  01F6               	clrf	___awmod@sign
  3473  1237  0AF6               	incf	___awmod@sign,f
  3474  1238                     l2225:
  3475  1238  1FF1               	btfss	___awmod@divisor+1,7
  3476  1239  2A3B               	goto	u2601
  3477  123A  2A3C               	goto	u2600
  3478  123B                     u2601:
  3479  123B  2A41               	goto	l2229
  3480  123C                     u2600:
  3481  123C                     l2227:
  3482  123C  09F0               	comf	___awmod@divisor,f
  3483  123D  09F1               	comf	___awmod@divisor+1,f
  3484  123E  0AF0               	incf	___awmod@divisor,f
  3485  123F  1903               	skipnz
  3486  1240  0AF1               	incf	___awmod@divisor+1,f
  3487  1241                     l2229:
  3488  1241  0870               	movf	___awmod@divisor,w
  3489  1242  0471               	iorwf	___awmod@divisor+1,w
  3490  1243  1903               	btfsc	3,2
  3491  1244  2A46               	goto	u2611
  3492  1245  2A47               	goto	u2610
  3493  1246                     u2611:
  3494  1246  2A76               	goto	l2247
  3495  1247                     u2610:
  3496  1247                     l2231:
  3497  1247  01F5               	clrf	___awmod@counter
  3498  1248  0AF5               	incf	___awmod@counter,f
  3499  1249  2A55               	goto	l2237
  3500  124A                     l2233:
  3501  124A  3001               	movlw	1
  3502  124B                     u2625:
  3503  124B  1003               	clrc
  3504  124C  0DF0               	rlf	___awmod@divisor,f
  3505  124D  0DF1               	rlf	___awmod@divisor+1,f
  3506  124E  3EFF               	addlw	-1
  3507  124F  1D03               	skipz
  3508  1250  2A4B               	goto	u2625
  3509  1251                     l2235:
  3510  1251  3001               	movlw	1
  3511  1252  00F4               	movwf	??___awmod
  3512  1253  0874               	movf	??___awmod,w
  3513  1254  07F5               	addwf	___awmod@counter,f
  3514  1255                     l2237:
  3515  1255  1FF1               	btfss	___awmod@divisor+1,7
  3516  1256  2A58               	goto	u2631
  3517  1257  2A59               	goto	u2630
  3518  1258                     u2631:
  3519  1258  2A4A               	goto	l2233
  3520  1259                     u2630:
  3521  1259                     l2239:
  3522  1259  0871               	movf	___awmod@divisor+1,w
  3523  125A  0273               	subwf	___awmod@dividend+1,w
  3524  125B  1D03               	skipz
  3525  125C  2A5F               	goto	u2645
  3526  125D  0870               	movf	___awmod@divisor,w
  3527  125E  0272               	subwf	___awmod@dividend,w
  3528  125F                     u2645:
  3529  125F  1C03               	skipc
  3530  1260  2A62               	goto	u2641
  3531  1261  2A63               	goto	u2640
  3532  1262                     u2641:
  3533  1262  2A69               	goto	l2243
  3534  1263                     u2640:
  3535  1263                     l2241:
  3536  1263  0870               	movf	___awmod@divisor,w
  3537  1264  02F2               	subwf	___awmod@dividend,f
  3538  1265  0871               	movf	___awmod@divisor+1,w
  3539  1266  1C03               	skipc
  3540  1267  03F3               	decf	___awmod@dividend+1,f
  3541  1268  02F3               	subwf	___awmod@dividend+1,f
  3542  1269                     l2243:
  3543  1269  3001               	movlw	1
  3544  126A                     u2655:
  3545  126A  1003               	clrc
  3546  126B  0CF1               	rrf	___awmod@divisor+1,f
  3547  126C  0CF0               	rrf	___awmod@divisor,f
  3548  126D  3EFF               	addlw	-1
  3549  126E  1D03               	skipz
  3550  126F  2A6A               	goto	u2655
  3551  1270                     l2245:
  3552  1270  3001               	movlw	1
  3553  1271  02F5               	subwf	___awmod@counter,f
  3554  1272  1D03               	btfss	3,2
  3555  1273  2A75               	goto	u2661
  3556  1274  2A76               	goto	u2660
  3557  1275                     u2661:
  3558  1275  2A59               	goto	l2239
  3559  1276                     u2660:
  3560  1276                     l2247:
  3561  1276  0876               	movf	___awmod@sign,w
  3562  1277  1903               	btfsc	3,2
  3563  1278  2A7A               	goto	u2671
  3564  1279  2A7B               	goto	u2670
  3565  127A                     u2671:
  3566  127A  2A80               	goto	l2251
  3567  127B                     u2670:
  3568  127B                     l2249:
  3569  127B  09F2               	comf	___awmod@dividend,f
  3570  127C  09F3               	comf	___awmod@dividend+1,f
  3571  127D  0AF2               	incf	___awmod@dividend,f
  3572  127E  1903               	skipnz
  3573  127F  0AF3               	incf	___awmod@dividend+1,f
  3574  1280                     l2251:
  3575  1280  0873               	movf	___awmod@dividend+1,w
  3576  1281  00F1               	movwf	?___awmod+1
  3577  1282  0872               	movf	___awmod@dividend,w
  3578  1283  00F0               	movwf	?___awmod
  3579  1284                     l629:
  3580  1284  0008               	return
  3581  1285                     __end_of___awmod:
  3582                           
  3583                           	psect	text7
  3584  1351                     __ptext7:	
  3585 ;; *************** function ___awdiv *****************
  3586 ;; Defined at:
  3587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  divisor         2    7[COMMON] int 
  3590 ;;  dividend        2    9[COMMON] int 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  quotient        2    2[BANK0 ] int 
  3593 ;;  sign            1    1[BANK0 ] unsigned char 
  3594 ;;  counter         1    0[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2    7[COMMON] int 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         4       0       0       0       0
  3605 ;;      Locals:         0       4       0       0       0
  3606 ;;      Temps:          1       0       0       0       0
  3607 ;;      Totals:         5       4       0       0       0
  3608 ;;Total ram usage:        9 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_scale
  3614 ;;		_sprintf
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function ___awdiv
  3620  1351                     ___awdiv:
  3621  1351                     l2173:	
  3622                           ;incstack = 0
  3623                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3624                           
  3625  1351  1283               	bcf	3,5	;RP0=0, select bank0
  3626  1352  1303               	bcf	3,6	;RP1=0, select bank0
  3627  1353  01A1               	clrf	___awdiv@sign
  3628  1354                     l2175:
  3629  1354  1FF8               	btfss	___awdiv@divisor+1,7
  3630  1355  2B57               	goto	u2491
  3631  1356  2B58               	goto	u2490
  3632  1357                     u2491:
  3633  1357  2B5F               	goto	l2181
  3634  1358                     u2490:
  3635  1358                     l2177:
  3636  1358  09F7               	comf	___awdiv@divisor,f
  3637  1359  09F8               	comf	___awdiv@divisor+1,f
  3638  135A  0AF7               	incf	___awdiv@divisor,f
  3639  135B  1903               	skipnz
  3640  135C  0AF8               	incf	___awdiv@divisor+1,f
  3641  135D                     l2179:
  3642  135D  01A1               	clrf	___awdiv@sign
  3643  135E  0AA1               	incf	___awdiv@sign,f
  3644  135F                     l2181:
  3645  135F  1FFA               	btfss	___awdiv@dividend+1,7
  3646  1360  2B62               	goto	u2501
  3647  1361  2B63               	goto	u2500
  3648  1362                     u2501:
  3649  1362  2B6C               	goto	l2187
  3650  1363                     u2500:
  3651  1363                     l2183:
  3652  1363  09F9               	comf	___awdiv@dividend,f
  3653  1364  09FA               	comf	___awdiv@dividend+1,f
  3654  1365  0AF9               	incf	___awdiv@dividend,f
  3655  1366  1903               	skipnz
  3656  1367  0AFA               	incf	___awdiv@dividend+1,f
  3657  1368                     l2185:
  3658  1368  3001               	movlw	1
  3659  1369  00FB               	movwf	??___awdiv
  3660  136A  087B               	movf	??___awdiv,w
  3661  136B  06A1               	xorwf	___awdiv@sign,f
  3662  136C                     l2187:
  3663  136C  01A2               	clrf	___awdiv@quotient
  3664  136D  01A3               	clrf	___awdiv@quotient+1
  3665  136E                     l2189:
  3666  136E  0877               	movf	___awdiv@divisor,w
  3667  136F  0478               	iorwf	___awdiv@divisor+1,w
  3668  1370  1903               	btfsc	3,2
  3669  1371  2B73               	goto	u2511
  3670  1372  2B74               	goto	u2510
  3671  1373                     u2511:
  3672  1373  2BAB               	goto	l2209
  3673  1374                     u2510:
  3674  1374                     l2191:
  3675  1374  01A0               	clrf	___awdiv@counter
  3676  1375  0AA0               	incf	___awdiv@counter,f
  3677  1376  2B82               	goto	l2197
  3678  1377                     l2193:
  3679  1377  3001               	movlw	1
  3680  1378                     u2525:
  3681  1378  1003               	clrc
  3682  1379  0DF7               	rlf	___awdiv@divisor,f
  3683  137A  0DF8               	rlf	___awdiv@divisor+1,f
  3684  137B  3EFF               	addlw	-1
  3685  137C  1D03               	skipz
  3686  137D  2B78               	goto	u2525
  3687  137E                     l2195:
  3688  137E  3001               	movlw	1
  3689  137F  00FB               	movwf	??___awdiv
  3690  1380  087B               	movf	??___awdiv,w
  3691  1381  07A0               	addwf	___awdiv@counter,f
  3692  1382                     l2197:
  3693  1382  1FF8               	btfss	___awdiv@divisor+1,7
  3694  1383  2B85               	goto	u2531
  3695  1384  2B86               	goto	u2530
  3696  1385                     u2531:
  3697  1385  2B77               	goto	l2193
  3698  1386                     u2530:
  3699  1386                     l2199:
  3700  1386  3001               	movlw	1
  3701  1387                     u2545:
  3702  1387  1003               	clrc
  3703  1388  0DA2               	rlf	___awdiv@quotient,f
  3704  1389  0DA3               	rlf	___awdiv@quotient+1,f
  3705  138A  3EFF               	addlw	-1
  3706  138B  1D03               	skipz
  3707  138C  2B87               	goto	u2545
  3708  138D  0878               	movf	___awdiv@divisor+1,w
  3709  138E  027A               	subwf	___awdiv@dividend+1,w
  3710  138F  1D03               	skipz
  3711  1390  2B93               	goto	u2555
  3712  1391  0877               	movf	___awdiv@divisor,w
  3713  1392  0279               	subwf	___awdiv@dividend,w
  3714  1393                     u2555:
  3715  1393  1C03               	skipc
  3716  1394  2B96               	goto	u2551
  3717  1395  2B97               	goto	u2550
  3718  1396                     u2551:
  3719  1396  2B9E               	goto	l2205
  3720  1397                     u2550:
  3721  1397                     l2201:
  3722  1397  0877               	movf	___awdiv@divisor,w
  3723  1398  02F9               	subwf	___awdiv@dividend,f
  3724  1399  0878               	movf	___awdiv@divisor+1,w
  3725  139A  1C03               	skipc
  3726  139B  03FA               	decf	___awdiv@dividend+1,f
  3727  139C  02FA               	subwf	___awdiv@dividend+1,f
  3728  139D                     l2203:
  3729  139D  1422               	bsf	___awdiv@quotient,0
  3730  139E                     l2205:
  3731  139E  3001               	movlw	1
  3732  139F                     u2565:
  3733  139F  1003               	clrc
  3734  13A0  0CF8               	rrf	___awdiv@divisor+1,f
  3735  13A1  0CF7               	rrf	___awdiv@divisor,f
  3736  13A2  3EFF               	addlw	-1
  3737  13A3  1D03               	skipz
  3738  13A4  2B9F               	goto	u2565
  3739  13A5                     l2207:
  3740  13A5  3001               	movlw	1
  3741  13A6  02A0               	subwf	___awdiv@counter,f
  3742  13A7  1D03               	btfss	3,2
  3743  13A8  2BAA               	goto	u2571
  3744  13A9  2BAB               	goto	u2570
  3745  13AA                     u2571:
  3746  13AA  2B86               	goto	l2199
  3747  13AB                     u2570:
  3748  13AB                     l2209:
  3749  13AB  0821               	movf	___awdiv@sign,w
  3750  13AC  1903               	btfsc	3,2
  3751  13AD  2BAF               	goto	u2581
  3752  13AE  2BB0               	goto	u2580
  3753  13AF                     u2581:
  3754  13AF  2BB5               	goto	l2213
  3755  13B0                     u2580:
  3756  13B0                     l2211:
  3757  13B0  09A2               	comf	___awdiv@quotient,f
  3758  13B1  09A3               	comf	___awdiv@quotient+1,f
  3759  13B2  0AA2               	incf	___awdiv@quotient,f
  3760  13B3  1903               	skipnz
  3761  13B4  0AA3               	incf	___awdiv@quotient+1,f
  3762  13B5                     l2213:
  3763  13B5  0823               	movf	___awdiv@quotient+1,w
  3764  13B6  00F8               	movwf	?___awdiv+1
  3765  13B7  0822               	movf	___awdiv@quotient,w
  3766  13B8  00F7               	movwf	?___awdiv
  3767  13B9                     l616:
  3768  13B9  0008               	return
  3769  13BA                     __end_of___awdiv:
  3770                           
  3771                           	psect	text8
  3772  1DF8                     __ptext8:	
  3773 ;; *************** function _isdigit *****************
  3774 ;; Defined at:
  3775 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  c               1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  c               1    1[COMMON] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;		None               void
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       0       0
  3790 ;;      Locals:         2       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0
  3792 ;;      Totals:         2       0       0       0       0
  3793 ;;Total ram usage:        2 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_sprintf
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function _isdigit
  3804  1DF8                     _isdigit:
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3808                           ;isdigit@c stored from wreg
  3809  1DF8  00F1               	movwf	isdigit@c
  3810  1DF9                     l2535:
  3811  1DF9  01F0               	clrf	_isdigit$889
  3812  1DFA                     l2537:
  3813  1DFA  303A               	movlw	58
  3814  1DFB  0271               	subwf	isdigit@c,w
  3815  1DFC  1803               	skipnc
  3816  1DFD  2DFF               	goto	u3281
  3817  1DFE  2E00               	goto	u3280
  3818  1DFF                     u3281:
  3819  1DFF  2E08               	goto	l2543
  3820  1E00                     u3280:
  3821  1E00                     l2539:
  3822  1E00  3030               	movlw	48
  3823  1E01  0271               	subwf	isdigit@c,w
  3824  1E02  1C03               	skipc
  3825  1E03  2E05               	goto	u3291
  3826  1E04  2E06               	goto	u3290
  3827  1E05                     u3291:
  3828  1E05  2E08               	goto	l2543
  3829  1E06                     u3290:
  3830  1E06                     l2541:
  3831  1E06  01F0               	clrf	_isdigit$889
  3832  1E07  0AF0               	incf	_isdigit$889,f
  3833  1E08                     l2543:
  3834  1E08  0C70               	rrf	_isdigit$889,w
  3835  1E09                     l895:
  3836  1E09  0008               	return
  3837  1E0A                     __end_of_isdigit:
  3838                           
  3839                           	psect	text9
  3840  08DC                     __ptext9:	
  3841 ;; *************** function _fround *****************
  3842 ;; Defined at:
  3843 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  prec            1    wreg     unsigned char 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  prec            1   39[BANK0 ] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  3   24[BANK0 ] unsigned char 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         0       3       0       0       0
  3858 ;;      Locals:         0       7       0       0       0
  3859 ;;      Temps:          0       6       0       0       0
  3860 ;;      Totals:         0      16       0       0       0
  3861 ;;Total ram usage:       16 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    2
  3864 ;; This function calls:
  3865 ;;		___bmul
  3866 ;;		___ftmul
  3867 ;;		___lwdiv
  3868 ;;		___lwmod
  3869 ;; This function is called by:
  3870 ;;		_sprintf
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _fround
  3876  08DC                     _fround:
  3877                           
  3878                           ;incstack = 0
  3879                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3880                           ;fround@prec stored from wreg
  3881  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  3882  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  3883  08DE  00C7               	movwf	fround@prec
  3884  08DF                     l2473:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3887  08DF  306E               	movlw	110
  3888  08E0  0247               	subwf	fround@prec,w
  3889  08E1  1C03               	skipc
  3890  08E2  28E4               	goto	u3211
  3891  08E3  28E5               	goto	u3210
  3892  08E4                     u3211:
  3893  08E4  29BC               	goto	l2483
  3894  08E5                     u3210:
  3895  08E5                     l2475:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3898  08E5  3003               	movlw	3
  3899  08E6  00BB               	movwf	??_fround
  3900  08E7  083B               	movf	??_fround,w
  3901  08E8  00A4               	movwf	___bmul@multiplicand
  3902  08E9  0847               	movf	fround@prec,w
  3903  08EA  00BC               	movwf	??_fround+1
  3904  08EB  01BD               	clrf	??_fround+2
  3905  08EC  083C               	movf	??_fround+1,w
  3906  08ED  00F2               	movwf	___lwmod@dividend
  3907  08EE  083D               	movf	??_fround+2,w
  3908  08EF  00F3               	movwf	___lwmod@dividend+1
  3909  08F0  3064               	movlw	100
  3910  08F1  00F0               	movwf	___lwmod@divisor
  3911  08F2  3000               	movlw	0
  3912  08F3  00F1               	movwf	___lwmod@divisor+1
  3913  08F4  160A  118A  20D8  120A  158A  	fcall	___lwmod
  3914  08F9  0871               	movf	?___lwmod+1,w
  3915  08FA  00F9               	movwf	___lwdiv@dividend+1
  3916  08FB  0870               	movf	?___lwmod,w
  3917  08FC  00F8               	movwf	___lwdiv@dividend
  3918  08FD  300A               	movlw	10
  3919  08FE  00F6               	movwf	___lwdiv@divisor
  3920  08FF  3000               	movlw	0
  3921  0900  00F7               	movwf	___lwdiv@divisor+1
  3922  0901  160A  118A  2192  120A  158A  	fcall	___lwdiv
  3923  0906  0876               	movf	?___lwdiv,w
  3924  0907  160A  158A  2620  120A  158A  	fcall	___bmul
  3925  090C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3926  090D  0084               	movwf	4
  3927  090E  160A  118A  200A  120A  158A  	fcall	stringdir
  3928  0913  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0914  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0915  00A8               	movwf	___ftmul@f1
  3931  0916  160A  118A  200A  120A  158A  	fcall	stringdir
  3932  091B  00A9               	movwf	___ftmul@f1+1
  3933  091C  160A  118A  200A  120A  158A  	fcall	stringdir
  3934  0921  00AA               	movwf	___ftmul@f1+2
  3935  0922  3003               	movlw	3
  3936  0923  00BE               	movwf	??_fround+3
  3937  0924  083E               	movf	??_fround+3,w
  3938  0925  00A4               	movwf	___bmul@multiplicand
  3939  0926  0847               	movf	fround@prec,w
  3940  0927  00BF               	movwf	??_fround+4
  3941  0928  01C0               	clrf	??_fround+5
  3942  0929  083F               	movf	??_fround+4,w
  3943  092A  00F8               	movwf	___lwdiv@dividend
  3944  092B  0840               	movf	??_fround+5,w
  3945  092C  00F9               	movwf	___lwdiv@dividend+1
  3946  092D  3064               	movlw	100
  3947  092E  00F6               	movwf	___lwdiv@divisor
  3948  092F  3000               	movlw	0
  3949  0930  00F7               	movwf	___lwdiv@divisor+1
  3950  0931  160A  118A  2192  120A  158A  	fcall	___lwdiv
  3951  0936  0876               	movf	?___lwdiv,w
  3952  0937  160A  158A  2620  120A  158A  	fcall	___bmul
  3953  093C  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3954  093D  0084               	movwf	4
  3955  093E  160A  118A  200A  120A  158A  	fcall	stringdir
  3956  0943  1283               	bcf	3,5	;RP0=0, select bank0
  3957  0944  1303               	bcf	3,6	;RP1=0, select bank0
  3958  0945  00AB               	movwf	___ftmul@f2
  3959  0946  160A  118A  200A  120A  158A  	fcall	stringdir
  3960  094B  00AC               	movwf	___ftmul@f2+1
  3961  094C  160A  118A  200A  120A  158A  	fcall	stringdir
  3962  0951  00AD               	movwf	___ftmul@f2+2
  3963  0952  160A  118A  24C2  120A  158A  	fcall	___ftmul
  3964  0957  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0958  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0959  0828               	movf	?___ftmul,w
  3967  095A  00C4               	movwf	_fround$1084
  3968  095B  0829               	movf	?___ftmul+1,w
  3969  095C  00C5               	movwf	_fround$1084+1
  3970  095D  082A               	movf	?___ftmul+2,w
  3971  095E  00C6               	movwf	_fround$1084+2
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3974  095F  3003               	movlw	3
  3975  0960  00BB               	movwf	??_fround
  3976  0961  083B               	movf	??_fround,w
  3977  0962  00A4               	movwf	___bmul@multiplicand
  3978  0963  0847               	movf	fround@prec,w
  3979  0964  00BC               	movwf	??_fround+1
  3980  0965  01BD               	clrf	??_fround+2
  3981  0966  083C               	movf	??_fround+1,w
  3982  0967  00F2               	movwf	___lwmod@dividend
  3983  0968  083D               	movf	??_fround+2,w
  3984  0969  00F3               	movwf	___lwmod@dividend+1
  3985  096A  300A               	movlw	10
  3986  096B  00F0               	movwf	___lwmod@divisor
  3987  096C  3000               	movlw	0
  3988  096D  00F1               	movwf	___lwmod@divisor+1
  3989  096E  160A  118A  20D8  120A  158A  	fcall	___lwmod
  3990  0973  0870               	movf	?___lwmod,w
  3991  0974  160A  158A  2620  120A  158A  	fcall	___bmul
  3992  0979  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3993  097A  0084               	movwf	4
  3994  097B  160A  118A  200A  120A  158A  	fcall	stringdir
  3995  0980  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0981  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0982  00A8               	movwf	___ftmul@f1
  3998  0983  160A  118A  200A  120A  158A  	fcall	stringdir
  3999  0988  00A9               	movwf	___ftmul@f1+1
  4000  0989  160A  118A  200A  120A  158A  	fcall	stringdir
  4001  098E  00AA               	movwf	___ftmul@f1+2
  4002  098F  0844               	movf	_fround$1084,w
  4003  0990  00AB               	movwf	___ftmul@f2
  4004  0991  0845               	movf	_fround$1084+1,w
  4005  0992  00AC               	movwf	___ftmul@f2+1
  4006  0993  0846               	movf	_fround$1084+2,w
  4007  0994  00AD               	movwf	___ftmul@f2+2
  4008  0995  160A  118A  24C2  120A  158A  	fcall	___ftmul
  4009  099A  1283               	bcf	3,5	;RP0=0, select bank0
  4010  099B  1303               	bcf	3,6	;RP1=0, select bank0
  4011  099C  0828               	movf	?___ftmul,w
  4012  099D  00C1               	movwf	_fround$1085
  4013  099E  0829               	movf	?___ftmul+1,w
  4014  099F  00C2               	movwf	_fround$1085+1
  4015  09A0  082A               	movf	?___ftmul+2,w
  4016  09A1  00C3               	movwf	_fround$1085+2
  4017  09A2                     l2477:
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4020  09A2  3000               	movlw	0
  4021  09A3  00A8               	movwf	___ftmul@f1
  4022  09A4  3000               	movlw	0
  4023  09A5  00A9               	movwf	___ftmul@f1+1
  4024  09A6  303F               	movlw	63
  4025  09A7  00AA               	movwf	___ftmul@f1+2
  4026  09A8  0841               	movf	_fround$1085,w
  4027  09A9  00AB               	movwf	___ftmul@f2
  4028  09AA  0842               	movf	_fround$1085+1,w
  4029  09AB  00AC               	movwf	___ftmul@f2+1
  4030  09AC  0843               	movf	_fround$1085+2,w
  4031  09AD  00AD               	movwf	___ftmul@f2+2
  4032  09AE  160A  118A  24C2  120A  158A  	fcall	___ftmul
  4033  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  4034  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  4035  09B5  0828               	movf	?___ftmul,w
  4036  09B6  00B8               	movwf	?_fround
  4037  09B7  0829               	movf	?___ftmul+1,w
  4038  09B8  00B9               	movwf	?_fround+1
  4039  09B9  082A               	movf	?___ftmul+2,w
  4040  09BA  00BA               	movwf	?_fround+2
  4041  09BB  2A7C               	goto	l330
  4042  09BC                     l2483:
  4043  09BC  300B               	movlw	11
  4044  09BD  0247               	subwf	fround@prec,w
  4045  09BE  1C03               	skipc
  4046  09BF  29C1               	goto	u3221
  4047  09C0  29C2               	goto	u3220
  4048  09C1                     u3221:
  4049  09C1  2A49               	goto	l2491
  4050  09C2                     u3220:
  4051  09C2                     l2485:
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4054  09C2  3003               	movlw	3
  4055  09C3  00BB               	movwf	??_fround
  4056  09C4  083B               	movf	??_fround,w
  4057  09C5  00A4               	movwf	___bmul@multiplicand
  4058  09C6  0847               	movf	fround@prec,w
  4059  09C7  00BC               	movwf	??_fround+1
  4060  09C8  01BD               	clrf	??_fround+2
  4061  09C9  083C               	movf	??_fround+1,w
  4062  09CA  00F2               	movwf	___lwmod@dividend
  4063  09CB  083D               	movf	??_fround+2,w
  4064  09CC  00F3               	movwf	___lwmod@dividend+1
  4065  09CD  300A               	movlw	10
  4066  09CE  00F0               	movwf	___lwmod@divisor
  4067  09CF  3000               	movlw	0
  4068  09D0  00F1               	movwf	___lwmod@divisor+1
  4069  09D1  160A  118A  20D8  120A  158A  	fcall	___lwmod
  4070  09D6  0870               	movf	?___lwmod,w
  4071  09D7  160A  158A  2620  120A  158A  	fcall	___bmul
  4072  09DC  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4073  09DD  0084               	movwf	4
  4074  09DE  160A  118A  200A  120A  158A  	fcall	stringdir
  4075  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  4076  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  4077  09E5  00A8               	movwf	___ftmul@f1
  4078  09E6  160A  118A  200A  120A  158A  	fcall	stringdir
  4079  09EB  00A9               	movwf	___ftmul@f1+1
  4080  09EC  160A  118A  200A  120A  158A  	fcall	stringdir
  4081  09F1  00AA               	movwf	___ftmul@f1+2
  4082  09F2  3003               	movlw	3
  4083  09F3  00BE               	movwf	??_fround+3
  4084  09F4  083E               	movf	??_fround+3,w
  4085  09F5  00A4               	movwf	___bmul@multiplicand
  4086  09F6  0847               	movf	fround@prec,w
  4087  09F7  00BF               	movwf	??_fround+4
  4088  09F8  01C0               	clrf	??_fround+5
  4089  09F9  083F               	movf	??_fround+4,w
  4090  09FA  00F8               	movwf	___lwdiv@dividend
  4091  09FB  0840               	movf	??_fround+5,w
  4092  09FC  00F9               	movwf	___lwdiv@dividend+1
  4093  09FD  300A               	movlw	10
  4094  09FE  00F6               	movwf	___lwdiv@divisor
  4095  09FF  3000               	movlw	0
  4096  0A00  00F7               	movwf	___lwdiv@divisor+1
  4097  0A01  160A  118A  2192  120A  158A  	fcall	___lwdiv
  4098  0A06  0876               	movf	?___lwdiv,w
  4099  0A07  160A  158A  2620  120A  158A  	fcall	___bmul
  4100  0A0C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4101  0A0D  0084               	movwf	4
  4102  0A0E  160A  118A  200A  120A  158A  	fcall	stringdir
  4103  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0A15  00AB               	movwf	___ftmul@f2
  4106  0A16  160A  118A  200A  120A  158A  	fcall	stringdir
  4107  0A1B  00AC               	movwf	___ftmul@f2+1
  4108  0A1C  160A  118A  200A  120A  158A  	fcall	stringdir
  4109  0A21  00AD               	movwf	___ftmul@f2+2
  4110  0A22  160A  118A  24C2  120A  158A  	fcall	___ftmul
  4111  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0A29  0828               	movf	?___ftmul,w
  4114  0A2A  00C4               	movwf	_fround$1084
  4115  0A2B  0829               	movf	?___ftmul+1,w
  4116  0A2C  00C5               	movwf	_fround$1084+1
  4117  0A2D  082A               	movf	?___ftmul+2,w
  4118  0A2E  00C6               	movwf	_fround$1084+2
  4119  0A2F                     l2487:
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4122  0A2F  3000               	movlw	0
  4123  0A30  00A8               	movwf	___ftmul@f1
  4124  0A31  3000               	movlw	0
  4125  0A32  00A9               	movwf	___ftmul@f1+1
  4126  0A33  303F               	movlw	63
  4127  0A34  00AA               	movwf	___ftmul@f1+2
  4128  0A35  0844               	movf	_fround$1084,w
  4129  0A36  00AB               	movwf	___ftmul@f2
  4130  0A37  0845               	movf	_fround$1084+1,w
  4131  0A38  00AC               	movwf	___ftmul@f2+1
  4132  0A39  0846               	movf	_fround$1084+2,w
  4133  0A3A  00AD               	movwf	___ftmul@f2+2
  4134  0A3B  160A  118A  24C2  120A  158A  	fcall	___ftmul
  4135  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0A42  0828               	movf	?___ftmul,w
  4138  0A43  00B8               	movwf	?_fround
  4139  0A44  0829               	movf	?___ftmul+1,w
  4140  0A45  00B9               	movwf	?_fround+1
  4141  0A46  082A               	movf	?___ftmul+2,w
  4142  0A47  00BA               	movwf	?_fround+2
  4143  0A48  2A7C               	goto	l330
  4144  0A49                     l2491:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4147  0A49  3000               	movlw	0
  4148  0A4A  00A8               	movwf	___ftmul@f1
  4149  0A4B  3000               	movlw	0
  4150  0A4C  00A9               	movwf	___ftmul@f1+1
  4151  0A4D  303F               	movlw	63
  4152  0A4E  00AA               	movwf	___ftmul@f1+2
  4153  0A4F  3003               	movlw	3
  4154  0A50  00BB               	movwf	??_fround
  4155  0A51  083B               	movf	??_fround,w
  4156  0A52  00A4               	movwf	___bmul@multiplicand
  4157  0A53  0847               	movf	fround@prec,w
  4158  0A54  160A  158A  2620  120A  158A  	fcall	___bmul
  4159  0A59  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4160  0A5A  0084               	movwf	4
  4161  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  4162  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0A62  00AB               	movwf	___ftmul@f2
  4165  0A63  160A  118A  200A  120A  158A  	fcall	stringdir
  4166  0A68  00AC               	movwf	___ftmul@f2+1
  4167  0A69  160A  118A  200A  120A  158A  	fcall	stringdir
  4168  0A6E  00AD               	movwf	___ftmul@f2+2
  4169  0A6F  160A  118A  24C2  120A  158A  	fcall	___ftmul
  4170  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  4171  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  4172  0A76  0828               	movf	?___ftmul,w
  4173  0A77  00B8               	movwf	?_fround
  4174  0A78  0829               	movf	?___ftmul+1,w
  4175  0A79  00B9               	movwf	?_fround+1
  4176  0A7A  082A               	movf	?___ftmul+2,w
  4177  0A7B  00BA               	movwf	?_fround+2
  4178  0A7C                     l330:
  4179  0A7C  0008               	return
  4180  0A7D                     __end_of_fround:
  4181                           
  4182                           	psect	text10
  4183  10D8                     __ptext10:	
  4184 ;; *************** function ___lwmod *****************
  4185 ;; Defined at:
  4186 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  divisor         2    0[COMMON] unsigned int 
  4189 ;;  dividend        2    2[COMMON] unsigned int 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  counter         1    5[COMMON] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  2    0[COMMON] unsigned int 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         4       0       0       0       0
  4202 ;;      Locals:         1       0       0       0       0
  4203 ;;      Temps:          1       0       0       0       0
  4204 ;;      Totals:         6       0       0       0       0
  4205 ;;Total ram usage:        6 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_fround
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function ___lwmod
  4216  10D8                     ___lwmod:
  4217  10D8                     l2401:	
  4218                           ;incstack = 0
  4219                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4220                           
  4221  10D8  0870               	movf	___lwmod@divisor,w
  4222  10D9  0471               	iorwf	___lwmod@divisor+1,w
  4223  10DA  1903               	btfsc	3,2
  4224  10DB  28DD               	goto	u3131
  4225  10DC  28DE               	goto	u3130
  4226  10DD                     u3131:
  4227  10DD  290D               	goto	l2419
  4228  10DE                     u3130:
  4229  10DE                     l2403:
  4230  10DE  01F5               	clrf	___lwmod@counter
  4231  10DF  0AF5               	incf	___lwmod@counter,f
  4232  10E0  28EC               	goto	l2409
  4233  10E1                     l2405:
  4234  10E1  3001               	movlw	1
  4235  10E2                     u3145:
  4236  10E2  1003               	clrc
  4237  10E3  0DF0               	rlf	___lwmod@divisor,f
  4238  10E4  0DF1               	rlf	___lwmod@divisor+1,f
  4239  10E5  3EFF               	addlw	-1
  4240  10E6  1D03               	skipz
  4241  10E7  28E2               	goto	u3145
  4242  10E8                     l2407:
  4243  10E8  3001               	movlw	1
  4244  10E9  00F4               	movwf	??___lwmod
  4245  10EA  0874               	movf	??___lwmod,w
  4246  10EB  07F5               	addwf	___lwmod@counter,f
  4247  10EC                     l2409:
  4248  10EC  1FF1               	btfss	___lwmod@divisor+1,7
  4249  10ED  28EF               	goto	u3151
  4250  10EE  28F0               	goto	u3150
  4251  10EF                     u3151:
  4252  10EF  28E1               	goto	l2405
  4253  10F0                     u3150:
  4254  10F0                     l2411:
  4255  10F0  0871               	movf	___lwmod@divisor+1,w
  4256  10F1  0273               	subwf	___lwmod@dividend+1,w
  4257  10F2  1D03               	skipz
  4258  10F3  28F6               	goto	u3165
  4259  10F4  0870               	movf	___lwmod@divisor,w
  4260  10F5  0272               	subwf	___lwmod@dividend,w
  4261  10F6                     u3165:
  4262  10F6  1C03               	skipc
  4263  10F7  28F9               	goto	u3161
  4264  10F8  28FA               	goto	u3160
  4265  10F9                     u3161:
  4266  10F9  2900               	goto	l2415
  4267  10FA                     u3160:
  4268  10FA                     l2413:
  4269  10FA  0870               	movf	___lwmod@divisor,w
  4270  10FB  02F2               	subwf	___lwmod@dividend,f
  4271  10FC  0871               	movf	___lwmod@divisor+1,w
  4272  10FD  1C03               	skipc
  4273  10FE  03F3               	decf	___lwmod@dividend+1,f
  4274  10FF  02F3               	subwf	___lwmod@dividend+1,f
  4275  1100                     l2415:
  4276  1100  3001               	movlw	1
  4277  1101                     u3175:
  4278  1101  1003               	clrc
  4279  1102  0CF1               	rrf	___lwmod@divisor+1,f
  4280  1103  0CF0               	rrf	___lwmod@divisor,f
  4281  1104  3EFF               	addlw	-1
  4282  1105  1D03               	skipz
  4283  1106  2901               	goto	u3175
  4284  1107                     l2417:
  4285  1107  3001               	movlw	1
  4286  1108  02F5               	subwf	___lwmod@counter,f
  4287  1109  1D03               	btfss	3,2
  4288  110A  290C               	goto	u3181
  4289  110B  290D               	goto	u3180
  4290  110C                     u3181:
  4291  110C  28F0               	goto	l2411
  4292  110D                     u3180:
  4293  110D                     l2419:
  4294  110D  0873               	movf	___lwmod@dividend+1,w
  4295  110E  00F1               	movwf	?___lwmod+1
  4296  110F  0872               	movf	___lwmod@dividend,w
  4297  1110  00F0               	movwf	?___lwmod
  4298  1111                     l885:
  4299  1111  0008               	return
  4300  1112                     __end_of___lwmod:
  4301                           
  4302                           	psect	text11
  4303  1192                     __ptext11:	
  4304 ;; *************** function ___lwdiv *****************
  4305 ;; Defined at:
  4306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  divisor         2    6[COMMON] unsigned int 
  4309 ;;  dividend        2    8[COMMON] unsigned int 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  quotient        2   11[COMMON] unsigned int 
  4312 ;;  counter         1   13[COMMON] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  2    6[COMMON] unsigned int 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4322 ;;      Params:         4       0       0       0       0
  4323 ;;      Locals:         3       0       0       0       0
  4324 ;;      Temps:          1       0       0       0       0
  4325 ;;      Totals:         8       0       0       0       0
  4326 ;;Total ram usage:        8 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_fround
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function ___lwdiv
  4337  1192                     ___lwdiv:
  4338  1192                     l2375:	
  4339                           ;incstack = 0
  4340                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4341                           
  4342  1192  01FB               	clrf	___lwdiv@quotient
  4343  1193  01FC               	clrf	___lwdiv@quotient+1
  4344  1194                     l2377:
  4345  1194  0876               	movf	___lwdiv@divisor,w
  4346  1195  0477               	iorwf	___lwdiv@divisor+1,w
  4347  1196  1903               	btfsc	3,2
  4348  1197  2999               	goto	u3061
  4349  1198  299A               	goto	u3060
  4350  1199                     u3061:
  4351  1199  29D1               	goto	l2397
  4352  119A                     u3060:
  4353  119A                     l2379:
  4354  119A  01FD               	clrf	___lwdiv@counter
  4355  119B  0AFD               	incf	___lwdiv@counter,f
  4356  119C  29A8               	goto	l2385
  4357  119D                     l2381:
  4358  119D  3001               	movlw	1
  4359  119E                     u3075:
  4360  119E  1003               	clrc
  4361  119F  0DF6               	rlf	___lwdiv@divisor,f
  4362  11A0  0DF7               	rlf	___lwdiv@divisor+1,f
  4363  11A1  3EFF               	addlw	-1
  4364  11A2  1D03               	skipz
  4365  11A3  299E               	goto	u3075
  4366  11A4                     l2383:
  4367  11A4  3001               	movlw	1
  4368  11A5  00FA               	movwf	??___lwdiv
  4369  11A6  087A               	movf	??___lwdiv,w
  4370  11A7  07FD               	addwf	___lwdiv@counter,f
  4371  11A8                     l2385:
  4372  11A8  1FF7               	btfss	___lwdiv@divisor+1,7
  4373  11A9  29AB               	goto	u3081
  4374  11AA  29AC               	goto	u3080
  4375  11AB                     u3081:
  4376  11AB  299D               	goto	l2381
  4377  11AC                     u3080:
  4378  11AC                     l2387:
  4379  11AC  3001               	movlw	1
  4380  11AD                     u3095:
  4381  11AD  1003               	clrc
  4382  11AE  0DFB               	rlf	___lwdiv@quotient,f
  4383  11AF  0DFC               	rlf	___lwdiv@quotient+1,f
  4384  11B0  3EFF               	addlw	-1
  4385  11B1  1D03               	skipz
  4386  11B2  29AD               	goto	u3095
  4387  11B3  0877               	movf	___lwdiv@divisor+1,w
  4388  11B4  0279               	subwf	___lwdiv@dividend+1,w
  4389  11B5  1D03               	skipz
  4390  11B6  29B9               	goto	u3105
  4391  11B7  0876               	movf	___lwdiv@divisor,w
  4392  11B8  0278               	subwf	___lwdiv@dividend,w
  4393  11B9                     u3105:
  4394  11B9  1C03               	skipc
  4395  11BA  29BC               	goto	u3101
  4396  11BB  29BD               	goto	u3100
  4397  11BC                     u3101:
  4398  11BC  29C4               	goto	l2393
  4399  11BD                     u3100:
  4400  11BD                     l2389:
  4401  11BD  0876               	movf	___lwdiv@divisor,w
  4402  11BE  02F8               	subwf	___lwdiv@dividend,f
  4403  11BF  0877               	movf	___lwdiv@divisor+1,w
  4404  11C0  1C03               	skipc
  4405  11C1  03F9               	decf	___lwdiv@dividend+1,f
  4406  11C2  02F9               	subwf	___lwdiv@dividend+1,f
  4407  11C3                     l2391:
  4408  11C3  147B               	bsf	___lwdiv@quotient,0
  4409  11C4                     l2393:
  4410  11C4  3001               	movlw	1
  4411  11C5                     u3115:
  4412  11C5  1003               	clrc
  4413  11C6  0CF7               	rrf	___lwdiv@divisor+1,f
  4414  11C7  0CF6               	rrf	___lwdiv@divisor,f
  4415  11C8  3EFF               	addlw	-1
  4416  11C9  1D03               	skipz
  4417  11CA  29C5               	goto	u3115
  4418  11CB                     l2395:
  4419  11CB  3001               	movlw	1
  4420  11CC  02FD               	subwf	___lwdiv@counter,f
  4421  11CD  1D03               	btfss	3,2
  4422  11CE  29D0               	goto	u3121
  4423  11CF  29D1               	goto	u3120
  4424  11D0                     u3121:
  4425  11D0  29AC               	goto	l2387
  4426  11D1                     u3120:
  4427  11D1                     l2397:
  4428  11D1  087C               	movf	___lwdiv@quotient+1,w
  4429  11D2  00F7               	movwf	?___lwdiv+1
  4430  11D3  087B               	movf	___lwdiv@quotient,w
  4431  11D4  00F6               	movwf	?___lwdiv
  4432  11D5                     l875:
  4433  11D5  0008               	return
  4434  11D6                     __end_of___lwdiv:
  4435                           
  4436                           	psect	text12
  4437  14C2                     __ptext12:	
  4438 ;; *************** function ___ftmul *****************
  4439 ;; Defined at:
  4440 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  f1              3    8[BANK0 ] float 
  4443 ;;  f2              3   11[BANK0 ] float 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  4446 ;;  sign            1   23[BANK0 ] unsigned char 
  4447 ;;  cntr            1   22[BANK0 ] unsigned char 
  4448 ;;  exp             1   18[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  3    8[BANK0 ] float 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       6       0       0       0
  4459 ;;      Locals:         0       6       0       0       0
  4460 ;;      Temps:          0       4       0       0       0
  4461 ;;      Totals:         0      16       0       0       0
  4462 ;;Total ram usage:       16 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    1
  4465 ;; This function calls:
  4466 ;;		___ftpack
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;;		_fround
  4470 ;;		_scale
  4471 ;;		_sprintf
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function ___ftmul
  4477  14C2                     ___ftmul:
  4478  14C2                     l2325:	
  4479                           ;incstack = 0
  4480                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4481                           
  4482  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  4483  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  4484  14C4  0828               	movf	___ftmul@f1,w
  4485  14C5  00AE               	movwf	??___ftmul
  4486  14C6  0829               	movf	___ftmul@f1+1,w
  4487  14C7  00AF               	movwf	??___ftmul+1
  4488  14C8  082A               	movf	___ftmul@f1+2,w
  4489  14C9  00B0               	movwf	??___ftmul+2
  4490  14CA  1003               	clrc
  4491  14CB  0D2F               	rlf	??___ftmul+1,w
  4492  14CC  0D30               	rlf	??___ftmul+2,w
  4493  14CD  00B1               	movwf	??___ftmul+3
  4494  14CE  0831               	movf	??___ftmul+3,w
  4495  14CF  00B2               	movwf	___ftmul@exp
  4496  14D0  0832               	movf	___ftmul@exp,w
  4497  14D1  1D03               	btfss	3,2
  4498  14D2  2CD4               	goto	u2921
  4499  14D3  2CD5               	goto	u2920
  4500  14D4                     u2921:
  4501  14D4  2CDC               	goto	l2331
  4502  14D5                     u2920:
  4503  14D5                     l2327:
  4504  14D5  3000               	movlw	0
  4505  14D6  00A8               	movwf	?___ftmul
  4506  14D7  3000               	movlw	0
  4507  14D8  00A9               	movwf	?___ftmul+1
  4508  14D9  3000               	movlw	0
  4509  14DA  00AA               	movwf	?___ftmul+2
  4510  14DB  2DA6               	goto	l742
  4511  14DC                     l2331:
  4512  14DC  082B               	movf	___ftmul@f2,w
  4513  14DD  00AE               	movwf	??___ftmul
  4514  14DE  082C               	movf	___ftmul@f2+1,w
  4515  14DF  00AF               	movwf	??___ftmul+1
  4516  14E0  082D               	movf	___ftmul@f2+2,w
  4517  14E1  00B0               	movwf	??___ftmul+2
  4518  14E2  1003               	clrc
  4519  14E3  0D2F               	rlf	??___ftmul+1,w
  4520  14E4  0D30               	rlf	??___ftmul+2,w
  4521  14E5  00B1               	movwf	??___ftmul+3
  4522  14E6  0831               	movf	??___ftmul+3,w
  4523  14E7  00B7               	movwf	___ftmul@sign
  4524  14E8  0837               	movf	___ftmul@sign,w
  4525  14E9  1D03               	btfss	3,2
  4526  14EA  2CEC               	goto	u2931
  4527  14EB  2CED               	goto	u2930
  4528  14EC                     u2931:
  4529  14EC  2CF4               	goto	l2337
  4530  14ED                     u2930:
  4531  14ED                     l2333:
  4532  14ED  3000               	movlw	0
  4533  14EE  00A8               	movwf	?___ftmul
  4534  14EF  3000               	movlw	0
  4535  14F0  00A9               	movwf	?___ftmul+1
  4536  14F1  3000               	movlw	0
  4537  14F2  00AA               	movwf	?___ftmul+2
  4538  14F3  2DA6               	goto	l742
  4539  14F4                     l2337:
  4540  14F4  0837               	movf	___ftmul@sign,w
  4541  14F5  3E7B               	addlw	123
  4542  14F6  00AE               	movwf	??___ftmul
  4543  14F7  082E               	movf	??___ftmul,w
  4544  14F8  07B2               	addwf	___ftmul@exp,f
  4545  14F9  0828               	movf	___ftmul@f1,w
  4546  14FA  00AE               	movwf	??___ftmul
  4547  14FB  0829               	movf	___ftmul@f1+1,w
  4548  14FC  00AF               	movwf	??___ftmul+1
  4549  14FD  082A               	movf	___ftmul@f1+2,w
  4550  14FE  00B0               	movwf	??___ftmul+2
  4551  14FF  3010               	movlw	16
  4552  1500                     u2945:
  4553  1500  1003               	clrc
  4554  1501  0CB0               	rrf	??___ftmul+2,f
  4555  1502  0CAF               	rrf	??___ftmul+1,f
  4556  1503  0CAE               	rrf	??___ftmul,f
  4557  1504                     u2940:
  4558  1504  3EFF               	addlw	-1
  4559  1505  1D03               	skipz
  4560  1506  2D00               	goto	u2945
  4561  1507  082E               	movf	??___ftmul,w
  4562  1508  00B1               	movwf	??___ftmul+3
  4563  1509  0831               	movf	??___ftmul+3,w
  4564  150A  00B7               	movwf	___ftmul@sign
  4565  150B  082B               	movf	___ftmul@f2,w
  4566  150C  00AE               	movwf	??___ftmul
  4567  150D  082C               	movf	___ftmul@f2+1,w
  4568  150E  00AF               	movwf	??___ftmul+1
  4569  150F  082D               	movf	___ftmul@f2+2,w
  4570  1510  00B0               	movwf	??___ftmul+2
  4571  1511  3010               	movlw	16
  4572  1512                     u2955:
  4573  1512  1003               	clrc
  4574  1513  0CB0               	rrf	??___ftmul+2,f
  4575  1514  0CAF               	rrf	??___ftmul+1,f
  4576  1515  0CAE               	rrf	??___ftmul,f
  4577  1516                     u2950:
  4578  1516  3EFF               	addlw	-1
  4579  1517  1D03               	skipz
  4580  1518  2D12               	goto	u2955
  4581  1519  082E               	movf	??___ftmul,w
  4582  151A  00B1               	movwf	??___ftmul+3
  4583  151B  0831               	movf	??___ftmul+3,w
  4584  151C  06B7               	xorwf	___ftmul@sign,f
  4585  151D  3080               	movlw	128
  4586  151E  00AE               	movwf	??___ftmul
  4587  151F  082E               	movf	??___ftmul,w
  4588  1520  05B7               	andwf	___ftmul@sign,f
  4589  1521                     l2339:
  4590  1521  17A9               	bsf	___ftmul@f1+1,7
  4591  1522                     l2341:
  4592  1522  17AC               	bsf	___ftmul@f2+1,7
  4593  1523                     l2343:
  4594  1523  30FF               	movlw	255
  4595  1524  05AB               	andwf	___ftmul@f2,f
  4596  1525  30FF               	movlw	255
  4597  1526  05AC               	andwf	___ftmul@f2+1,f
  4598  1527  3000               	movlw	0
  4599  1528  05AD               	andwf	___ftmul@f2+2,f
  4600  1529                     l2345:
  4601  1529  3000               	movlw	0
  4602  152A  00B3               	movwf	___ftmul@f3_as_product
  4603  152B  3000               	movlw	0
  4604  152C  00B4               	movwf	___ftmul@f3_as_product+1
  4605  152D  3000               	movlw	0
  4606  152E  00B5               	movwf	___ftmul@f3_as_product+2
  4607  152F                     l2347:
  4608  152F  3007               	movlw	7
  4609  1530  00AE               	movwf	??___ftmul
  4610  1531  082E               	movf	??___ftmul,w
  4611  1532  00B6               	movwf	___ftmul@cntr
  4612  1533                     l2349:
  4613  1533  1C28               	btfss	___ftmul@f1,0
  4614  1534  2D36               	goto	u2961
  4615  1535  2D37               	goto	u2960
  4616  1536                     u2961:
  4617  1536  2D47               	goto	l2353
  4618  1537                     u2960:
  4619  1537                     l2351:
  4620  1537  082B               	movf	___ftmul@f2,w
  4621  1538  07B3               	addwf	___ftmul@f3_as_product,f
  4622  1539  082C               	movf	___ftmul@f2+1,w
  4623  153A  1103               	clrz
  4624  153B  1803               	skipnc
  4625  153C  0A2C               	incf	___ftmul@f2+1,w
  4626  153D  1903               	skipnz
  4627  153E  2D40               	goto	u2971
  4628  153F  07B4               	addwf	___ftmul@f3_as_product+1,f
  4629  1540                     u2971:
  4630  1540  082D               	movf	___ftmul@f2+2,w
  4631  1541  1103               	clrz
  4632  1542  1803               	skipnc
  4633  1543  0A2D               	incf	___ftmul@f2+2,w
  4634  1544  1903               	skipnz
  4635  1545  2D47               	goto	u2972
  4636  1546  07B5               	addwf	___ftmul@f3_as_product+2,f
  4637  1547                     u2972:
  4638  1547                     l2353:
  4639  1547  3001               	movlw	1
  4640  1548                     u2985:
  4641  1548  1003               	clrc
  4642  1549  0CAA               	rrf	___ftmul@f1+2,f
  4643  154A  0CA9               	rrf	___ftmul@f1+1,f
  4644  154B  0CA8               	rrf	___ftmul@f1,f
  4645  154C  3EFF               	addlw	-1
  4646  154D  1D03               	skipz
  4647  154E  2D48               	goto	u2985
  4648  154F                     l2355:
  4649  154F  3001               	movlw	1
  4650  1550                     u2995:
  4651  1550  1003               	clrc
  4652  1551  0DAB               	rlf	___ftmul@f2,f
  4653  1552  0DAC               	rlf	___ftmul@f2+1,f
  4654  1553  0DAD               	rlf	___ftmul@f2+2,f
  4655  1554  3EFF               	addlw	-1
  4656  1555  1D03               	skipz
  4657  1556  2D50               	goto	u2995
  4658  1557                     l2357:
  4659  1557  3001               	movlw	1
  4660  1558  02B6               	subwf	___ftmul@cntr,f
  4661  1559  1D03               	btfss	3,2
  4662  155A  2D5C               	goto	u3001
  4663  155B  2D5D               	goto	u3000
  4664  155C                     u3001:
  4665  155C  2D33               	goto	l2349
  4666  155D                     u3000:
  4667  155D                     l2359:
  4668  155D  3009               	movlw	9
  4669  155E  00AE               	movwf	??___ftmul
  4670  155F  082E               	movf	??___ftmul,w
  4671  1560  00B6               	movwf	___ftmul@cntr
  4672  1561                     l2361:
  4673  1561  1C28               	btfss	___ftmul@f1,0
  4674  1562  2D64               	goto	u3011
  4675  1563  2D65               	goto	u3010
  4676  1564                     u3011:
  4677  1564  2D75               	goto	l2365
  4678  1565                     u3010:
  4679  1565                     l2363:
  4680  1565  082B               	movf	___ftmul@f2,w
  4681  1566  07B3               	addwf	___ftmul@f3_as_product,f
  4682  1567  082C               	movf	___ftmul@f2+1,w
  4683  1568  1103               	clrz
  4684  1569  1803               	skipnc
  4685  156A  0A2C               	incf	___ftmul@f2+1,w
  4686  156B  1903               	skipnz
  4687  156C  2D6E               	goto	u3021
  4688  156D  07B4               	addwf	___ftmul@f3_as_product+1,f
  4689  156E                     u3021:
  4690  156E  082D               	movf	___ftmul@f2+2,w
  4691  156F  1103               	clrz
  4692  1570  1803               	skipnc
  4693  1571  0A2D               	incf	___ftmul@f2+2,w
  4694  1572  1903               	skipnz
  4695  1573  2D75               	goto	u3022
  4696  1574  07B5               	addwf	___ftmul@f3_as_product+2,f
  4697  1575                     u3022:
  4698  1575                     l2365:
  4699  1575  3001               	movlw	1
  4700  1576                     u3035:
  4701  1576  1003               	clrc
  4702  1577  0CAA               	rrf	___ftmul@f1+2,f
  4703  1578  0CA9               	rrf	___ftmul@f1+1,f
  4704  1579  0CA8               	rrf	___ftmul@f1,f
  4705  157A  3EFF               	addlw	-1
  4706  157B  1D03               	skipz
  4707  157C  2D76               	goto	u3035
  4708  157D                     l2367:
  4709  157D  3001               	movlw	1
  4710  157E                     u3045:
  4711  157E  1003               	clrc
  4712  157F  0CB5               	rrf	___ftmul@f3_as_product+2,f
  4713  1580  0CB4               	rrf	___ftmul@f3_as_product+1,f
  4714  1581  0CB3               	rrf	___ftmul@f3_as_product,f
  4715  1582  3EFF               	addlw	-1
  4716  1583  1D03               	skipz
  4717  1584  2D7E               	goto	u3045
  4718  1585                     l2369:
  4719  1585  3001               	movlw	1
  4720  1586  02B6               	subwf	___ftmul@cntr,f
  4721  1587  1D03               	btfss	3,2
  4722  1588  2D8A               	goto	u3051
  4723  1589  2D8B               	goto	u3050
  4724  158A                     u3051:
  4725  158A  2D61               	goto	l2361
  4726  158B                     u3050:
  4727  158B                     l2371:
  4728  158B  0833               	movf	___ftmul@f3_as_product,w
  4729  158C  00F0               	movwf	___ftpack@arg
  4730  158D  0834               	movf	___ftmul@f3_as_product+1,w
  4731  158E  00F1               	movwf	___ftpack@arg+1
  4732  158F  0835               	movf	___ftmul@f3_as_product+2,w
  4733  1590  00F2               	movwf	___ftpack@arg+2
  4734  1591  0832               	movf	___ftmul@exp,w
  4735  1592  00AE               	movwf	??___ftmul
  4736  1593  082E               	movf	??___ftmul,w
  4737  1594  00F3               	movwf	___ftpack@exp
  4738  1595  0837               	movf	___ftmul@sign,w
  4739  1596  00AF               	movwf	??___ftmul+1
  4740  1597  082F               	movf	??___ftmul+1,w
  4741  1598  00F4               	movwf	___ftpack@sign
  4742  1599  160A  118A  23BA  160A  118A  	fcall	___ftpack
  4743  159E  0870               	movf	?___ftpack,w
  4744  159F  1283               	bcf	3,5	;RP0=0, select bank0
  4745  15A0  1303               	bcf	3,6	;RP1=0, select bank0
  4746  15A1  00A8               	movwf	?___ftmul
  4747  15A2  0871               	movf	?___ftpack+1,w
  4748  15A3  00A9               	movwf	?___ftmul+1
  4749  15A4  0872               	movf	?___ftpack+2,w
  4750  15A5  00AA               	movwf	?___ftmul+2
  4751  15A6                     l742:
  4752  15A6  0008               	return
  4753  15A7                     __end_of___ftmul:
  4754                           
  4755                           	psect	text13
  4756  1E20                     __ptext13:	
  4757 ;; *************** function ___bmul *****************
  4758 ;; Defined at:
  4759 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  multiplier      1    wreg     unsigned char 
  4762 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4765 ;;  product         1    6[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4775 ;;      Params:         0       1       0       0       0
  4776 ;;      Locals:         0       2       0       0       0
  4777 ;;      Temps:          0       1       0       0       0
  4778 ;;      Totals:         0       4       0       0       0
  4779 ;;Total ram usage:        4 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_fround
  4785 ;;		_scale
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function ___bmul
  4791  1E20                     ___bmul:
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4795                           ;___bmul@multiplier stored from wreg
  4796  1E20  1283               	bcf	3,5	;RP0=0, select bank0
  4797  1E21  1303               	bcf	3,6	;RP1=0, select bank0
  4798  1E22  00A7               	movwf	___bmul@multiplier
  4799  1E23                     l2159:
  4800  1E23  01A6               	clrf	___bmul@product
  4801  1E24                     l2161:
  4802  1E24  1C27               	btfss	___bmul@multiplier,0
  4803  1E25  2E27               	goto	u2471
  4804  1E26  2E28               	goto	u2470
  4805  1E27                     u2471:
  4806  1E27  2E2C               	goto	l2165
  4807  1E28                     u2470:
  4808  1E28                     l2163:
  4809  1E28  0824               	movf	___bmul@multiplicand,w
  4810  1E29  00A5               	movwf	??___bmul
  4811  1E2A  0825               	movf	??___bmul,w
  4812  1E2B  07A6               	addwf	___bmul@product,f
  4813  1E2C                     l2165:
  4814  1E2C  1003               	clrc
  4815  1E2D  0DA4               	rlf	___bmul@multiplicand,f
  4816  1E2E                     l2167:
  4817  1E2E  1003               	clrc
  4818  1E2F  0CA7               	rrf	___bmul@multiplier,f
  4819  1E30  0827               	movf	___bmul@multiplier,w
  4820  1E31  1D03               	btfss	3,2
  4821  1E32  2E34               	goto	u2481
  4822  1E33  2E35               	goto	u2480
  4823  1E34                     u2481:
  4824  1E34  2E24               	goto	l2161
  4825  1E35                     u2480:
  4826  1E35                     l2169:
  4827  1E35  0826               	movf	___bmul@product,w
  4828  1E36                     l459:
  4829  1E36  0008               	return
  4830  1E37                     __end_of___bmul:
  4831                           
  4832                           	psect	text14
  4833  081F                     __ptext14:	
  4834 ;; *************** function __tdiv_to_l_ *****************
  4835 ;; Defined at:
  4836 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  f1              3    0[COMMON] float 
  4839 ;;  f2              3    3[COMMON] float 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  quot            4    0[BANK0 ] unsigned long 
  4842 ;;  exp1            1    5[BANK0 ] unsigned char 
  4843 ;;  cntr            1    4[BANK0 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  4    0[COMMON] unsigned long 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4853 ;;      Params:         6       0       0       0       0
  4854 ;;      Locals:         0       6       0       0       0
  4855 ;;      Temps:          4       0       0       0       0
  4856 ;;      Totals:        10       6       0       0       0
  4857 ;;Total ram usage:       16 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_sprintf
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function __tdiv_to_l_
  4868  081F                     __tdiv_to_l_:
  4869  081F                     l2547:	
  4870                           ;incstack = 0
  4871                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4872                           
  4873  081F  0870               	movf	__tdiv_to_l_@f1,w
  4874  0820  00F6               	movwf	??__tdiv_to_l_
  4875  0821  0871               	movf	__tdiv_to_l_@f1+1,w
  4876  0822  00F7               	movwf	??__tdiv_to_l_+1
  4877  0823  0872               	movf	__tdiv_to_l_@f1+2,w
  4878  0824  00F8               	movwf	??__tdiv_to_l_+2
  4879  0825  1003               	clrc
  4880  0826  0D77               	rlf	??__tdiv_to_l_+1,w
  4881  0827  0D78               	rlf	??__tdiv_to_l_+2,w
  4882  0828  00F9               	movwf	??__tdiv_to_l_+3
  4883  0829  0879               	movf	??__tdiv_to_l_+3,w
  4884  082A  1283               	bcf	3,5	;RP0=0, select bank0
  4885  082B  1303               	bcf	3,6	;RP1=0, select bank0
  4886  082C  00A5               	movwf	__tdiv_to_l_@exp1
  4887  082D  0825               	movf	__tdiv_to_l_@exp1,w
  4888  082E  1D03               	btfss	3,2
  4889  082F  2831               	goto	u3301
  4890  0830  2832               	goto	u3300
  4891  0831                     u3301:
  4892  0831  283B               	goto	l2553
  4893  0832                     u3300:
  4894  0832                     l2549:
  4895  0832  3000               	movlw	0
  4896  0833  00F3               	movwf	?__tdiv_to_l_+3
  4897  0834  3000               	movlw	0
  4898  0835  00F2               	movwf	?__tdiv_to_l_+2
  4899  0836  3000               	movlw	0
  4900  0837  00F1               	movwf	?__tdiv_to_l_+1
  4901  0838  3000               	movlw	0
  4902  0839  00F0               	movwf	?__tdiv_to_l_
  4903  083A  28DB               	goto	l718
  4904  083B                     l2553:
  4905  083B  0873               	movf	__tdiv_to_l_@f2,w
  4906  083C  00F6               	movwf	??__tdiv_to_l_
  4907  083D  0874               	movf	__tdiv_to_l_@f2+1,w
  4908  083E  00F7               	movwf	??__tdiv_to_l_+1
  4909  083F  0875               	movf	__tdiv_to_l_@f2+2,w
  4910  0840  00F8               	movwf	??__tdiv_to_l_+2
  4911  0841  1003               	clrc
  4912  0842  0D77               	rlf	??__tdiv_to_l_+1,w
  4913  0843  0D78               	rlf	??__tdiv_to_l_+2,w
  4914  0844  00F9               	movwf	??__tdiv_to_l_+3
  4915  0845  0879               	movf	??__tdiv_to_l_+3,w
  4916  0846  00A4               	movwf	__tdiv_to_l_@cntr
  4917  0847  0824               	movf	__tdiv_to_l_@cntr,w
  4918  0848  1D03               	btfss	3,2
  4919  0849  284B               	goto	u3311
  4920  084A  284C               	goto	u3310
  4921  084B                     u3311:
  4922  084B  284D               	goto	l719
  4923  084C                     u3310:
  4924  084C  2832               	goto	l2549
  4925  084D                     l719:
  4926  084D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4927  084E                     l2559:
  4928  084E  30FF               	movlw	255
  4929  084F  05F0               	andwf	__tdiv_to_l_@f1,f
  4930  0850  30FF               	movlw	255
  4931  0851  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4932  0852  3000               	movlw	0
  4933  0853  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4934  0854                     l2561:
  4935  0854  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4936  0855  30FF               	movlw	255
  4937  0856  05F3               	andwf	__tdiv_to_l_@f2,f
  4938  0857  30FF               	movlw	255
  4939  0858  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4940  0859  3000               	movlw	0
  4941  085A  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4942  085B  3000               	movlw	0
  4943  085C  00A3               	movwf	__tdiv_to_l_@quot+3
  4944  085D  3000               	movlw	0
  4945  085E  00A2               	movwf	__tdiv_to_l_@quot+2
  4946  085F  3000               	movlw	0
  4947  0860  00A1               	movwf	__tdiv_to_l_@quot+1
  4948  0861  3000               	movlw	0
  4949  0862  00A0               	movwf	__tdiv_to_l_@quot
  4950  0863                     l2563:
  4951  0863  307F               	movlw	127
  4952  0864  02A5               	subwf	__tdiv_to_l_@exp1,f
  4953  0865                     l2565:
  4954  0865  3098               	movlw	152
  4955  0866  0724               	addwf	__tdiv_to_l_@cntr,w
  4956  0867  00F6               	movwf	??__tdiv_to_l_
  4957  0868  0876               	movf	??__tdiv_to_l_,w
  4958  0869  02A5               	subwf	__tdiv_to_l_@exp1,f
  4959  086A  3018               	movlw	24
  4960  086B  00F6               	movwf	??__tdiv_to_l_
  4961  086C  0876               	movf	??__tdiv_to_l_,w
  4962  086D  00A4               	movwf	__tdiv_to_l_@cntr
  4963  086E                     l2567:
  4964  086E  3001               	movlw	1
  4965  086F  00F6               	movwf	??__tdiv_to_l_
  4966  0870                     u3325:
  4967  0870  1003               	clrc
  4968  0871  0DA0               	rlf	__tdiv_to_l_@quot,f
  4969  0872  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4970  0873  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4971  0874  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4972  0875  0BF6               	decfsz	??__tdiv_to_l_,f
  4973  0876  2870               	goto	u3325
  4974  0877                     l2569:
  4975  0877  0875               	movf	__tdiv_to_l_@f2+2,w
  4976  0878  0272               	subwf	__tdiv_to_l_@f1+2,w
  4977  0879  1D03               	skipz
  4978  087A  2881               	goto	u3335
  4979  087B  0874               	movf	__tdiv_to_l_@f2+1,w
  4980  087C  0271               	subwf	__tdiv_to_l_@f1+1,w
  4981  087D  1D03               	skipz
  4982  087E  2881               	goto	u3335
  4983  087F  0873               	movf	__tdiv_to_l_@f2,w
  4984  0880  0270               	subwf	__tdiv_to_l_@f1,w
  4985  0881                     u3335:
  4986  0881  1C03               	skipc
  4987  0882  2884               	goto	u3331
  4988  0883  2885               	goto	u3330
  4989  0884                     u3331:
  4990  0884  2890               	goto	l2575
  4991  0885                     u3330:
  4992  0885                     l2571:
  4993  0885  0873               	movf	__tdiv_to_l_@f2,w
  4994  0886  02F0               	subwf	__tdiv_to_l_@f1,f
  4995  0887  0874               	movf	__tdiv_to_l_@f2+1,w
  4996  0888  1C03               	skipc
  4997  0889  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4998  088A  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4999  088B  0875               	movf	__tdiv_to_l_@f2+2,w
  5000  088C  1C03               	skipc
  5001  088D  0A75               	incf	__tdiv_to_l_@f2+2,w
  5002  088E  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5003  088F                     l2573:
  5004  088F  1420               	bsf	__tdiv_to_l_@quot,0
  5005  0890                     l2575:
  5006  0890  3001               	movlw	1
  5007  0891                     u3345:
  5008  0891  1003               	clrc
  5009  0892  0DF0               	rlf	__tdiv_to_l_@f1,f
  5010  0893  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5011  0894  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5012  0895  3EFF               	addlw	-1
  5013  0896  1D03               	skipz
  5014  0897  2891               	goto	u3345
  5015  0898                     l2577:
  5016  0898  3001               	movlw	1
  5017  0899  02A4               	subwf	__tdiv_to_l_@cntr,f
  5018  089A  1D03               	btfss	3,2
  5019  089B  289D               	goto	u3351
  5020  089C  289E               	goto	u3350
  5021  089D                     u3351:
  5022  089D  286E               	goto	l2567
  5023  089E                     u3350:
  5024  089E                     l722:
  5025  089E  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5026  089F  28A1               	goto	u3361
  5027  08A0  28A2               	goto	u3360
  5028  08A1                     u3361:
  5029  08A1  28BC               	goto	l2587
  5030  08A2                     u3360:
  5031  08A2                     l2579:
  5032  08A2  0825               	movf	__tdiv_to_l_@exp1,w
  5033  08A3  3A80               	xorlw	128
  5034  08A4  3E97               	addlw	151
  5035  08A5  1803               	skipnc
  5036  08A6  28A8               	goto	u3371
  5037  08A7  28A9               	goto	u3370
  5038  08A8                     u3371:
  5039  08A8  28AA               	goto	l2585
  5040  08A9                     u3370:
  5041  08A9  2832               	goto	l2549
  5042  08AA                     l2585:
  5043  08AA  3001               	movlw	1
  5044  08AB                     u3385:
  5045  08AB  1003               	clrc
  5046  08AC  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5047  08AD  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5048  08AE  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5049  08AF  0CA0               	rrf	__tdiv_to_l_@quot,f
  5050  08B0  3EFF               	addlw	-1
  5051  08B1  1D03               	skipz
  5052  08B2  28AB               	goto	u3385
  5053  08B3  3001               	movlw	1
  5054  08B4  00F6               	movwf	??__tdiv_to_l_
  5055  08B5  0876               	movf	??__tdiv_to_l_,w
  5056  08B6  07A5               	addwf	__tdiv_to_l_@exp1,f
  5057  08B7  1D03               	btfss	3,2
  5058  08B8  28BA               	goto	u3391
  5059  08B9  28BB               	goto	u3390
  5060  08BA                     u3391:
  5061  08BA  28AA               	goto	l2585
  5062  08BB                     u3390:
  5063  08BB  28D3               	goto	l2595
  5064  08BC                     l2587:
  5065  08BC  3018               	movlw	24
  5066  08BD  0225               	subwf	__tdiv_to_l_@exp1,w
  5067  08BE  1C03               	skipc
  5068  08BF  28C1               	goto	u3401
  5069  08C0  28C2               	goto	u3400
  5070  08C1                     u3401:
  5071  08C1  28CE               	goto	l729
  5072  08C2                     u3400:
  5073  08C2  2832               	goto	l2549
  5074  08C3                     l2593:
  5075  08C3  3001               	movlw	1
  5076  08C4  00F6               	movwf	??__tdiv_to_l_
  5077  08C5                     u3415:
  5078  08C5  1003               	clrc
  5079  08C6  0DA0               	rlf	__tdiv_to_l_@quot,f
  5080  08C7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5081  08C8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5082  08C9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5083  08CA  0BF6               	decfsz	??__tdiv_to_l_,f
  5084  08CB  28C5               	goto	u3415
  5085  08CC  3001               	movlw	1
  5086  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  5087  08CE                     l729:
  5088  08CE  0825               	movf	__tdiv_to_l_@exp1,w
  5089  08CF  1D03               	btfss	3,2
  5090  08D0  28D2               	goto	u3421
  5091  08D1  28D3               	goto	u3420
  5092  08D2                     u3421:
  5093  08D2  28C3               	goto	l2593
  5094  08D3                     u3420:
  5095  08D3                     l2595:
  5096  08D3  0823               	movf	__tdiv_to_l_@quot+3,w
  5097  08D4  00F3               	movwf	?__tdiv_to_l_+3
  5098  08D5  0822               	movf	__tdiv_to_l_@quot+2,w
  5099  08D6  00F2               	movwf	?__tdiv_to_l_+2
  5100  08D7  0821               	movf	__tdiv_to_l_@quot+1,w
  5101  08D8  00F1               	movwf	?__tdiv_to_l_+1
  5102  08D9  0820               	movf	__tdiv_to_l_@quot,w
  5103  08DA  00F0               	movwf	?__tdiv_to_l_
  5104  08DB                     l718:
  5105  08DB  0008               	return
  5106  08DC                     __end_of__tdiv_to_l_:
  5107                           
  5108                           	psect	text15
  5109  15A7                     __ptext15:	
  5110 ;; *************** function __div_to_l_ *****************
  5111 ;; Defined at:
  5112 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  f1              3    0[COMMON] unsigned long 
  5115 ;;  f2              3    3[COMMON] unsigned long 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  quot            4    0[BANK0 ] unsigned long 
  5118 ;;  exp1            1    5[BANK0 ] unsigned char 
  5119 ;;  cntr            1    4[BANK0 ] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  4    0[COMMON] unsigned long 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5129 ;;      Params:         6       0       0       0       0
  5130 ;;      Locals:         0       6       0       0       0
  5131 ;;      Temps:          8       0       0       0       0
  5132 ;;      Totals:        14       6       0       0       0
  5133 ;;Total ram usage:       20 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_sprintf
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function __div_to_l_
  5144  15A7                     __div_to_l_:
  5145  15A7                     l2599:	
  5146                           ;incstack = 0
  5147                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5148                           
  5149  15A7  3070               	movlw	low (__div_to_l_@f1| 0)
  5150  15A8  0084               	movwf	4
  5151  15A9  0800               	movf	0,w
  5152  15AA  00F6               	movwf	??__div_to_l_
  5153  15AB  0A84               	incf	4,f
  5154  15AC  0800               	movf	0,w
  5155  15AD  00F7               	movwf	??__div_to_l_+1
  5156  15AE  0A84               	incf	4,f
  5157  15AF  0800               	movf	0,w
  5158  15B0  00F8               	movwf	??__div_to_l_+2
  5159  15B1  0A84               	incf	4,f
  5160  15B2  0800               	movf	0,w
  5161  15B3  00F9               	movwf	??__div_to_l_+3
  5162  15B4  1003               	clrc
  5163  15B5  0D78               	rlf	??__div_to_l_+2,w
  5164  15B6  0D79               	rlf	??__div_to_l_+3,w
  5165  15B7  00FA               	movwf	??__div_to_l_+4
  5166  15B8  087A               	movf	??__div_to_l_+4,w
  5167  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  5168  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  5169  15BB  00A5               	movwf	__div_to_l_@exp1
  5170  15BC  0825               	movf	__div_to_l_@exp1,w
  5171  15BD  1D03               	btfss	3,2
  5172  15BE  2DC0               	goto	u3431
  5173  15BF  2DC1               	goto	u3430
  5174  15C0                     u3431:
  5175  15C0  2DCA               	goto	l2605
  5176  15C1                     u3430:
  5177  15C1                     l2601:
  5178  15C1  3000               	movlw	0
  5179  15C2  00F3               	movwf	?__div_to_l_+3
  5180  15C3  3000               	movlw	0
  5181  15C4  00F2               	movwf	?__div_to_l_+2
  5182  15C5  3000               	movlw	0
  5183  15C6  00F1               	movwf	?__div_to_l_+1
  5184  15C7  3000               	movlw	0
  5185  15C8  00F0               	movwf	?__div_to_l_
  5186  15C9  2ED2               	goto	l639
  5187  15CA                     l2605:
  5188  15CA  3073               	movlw	low (__div_to_l_@f2| 0)
  5189  15CB  0084               	movwf	4
  5190  15CC  0800               	movf	0,w
  5191  15CD  00F6               	movwf	??__div_to_l_
  5192  15CE  0A84               	incf	4,f
  5193  15CF  0800               	movf	0,w
  5194  15D0  00F7               	movwf	??__div_to_l_+1
  5195  15D1  0A84               	incf	4,f
  5196  15D2  0800               	movf	0,w
  5197  15D3  00F8               	movwf	??__div_to_l_+2
  5198  15D4  0A84               	incf	4,f
  5199  15D5  0800               	movf	0,w
  5200  15D6  00F9               	movwf	??__div_to_l_+3
  5201  15D7  1003               	clrc
  5202  15D8  0D78               	rlf	??__div_to_l_+2,w
  5203  15D9  0D79               	rlf	??__div_to_l_+3,w
  5204  15DA  00FA               	movwf	??__div_to_l_+4
  5205  15DB  087A               	movf	??__div_to_l_+4,w
  5206  15DC  00A4               	movwf	__div_to_l_@cntr
  5207  15DD  0824               	movf	__div_to_l_@cntr,w
  5208  15DE  1D03               	btfss	3,2
  5209  15DF  2DE1               	goto	u3441
  5210  15E0  2DE2               	goto	u3440
  5211  15E1                     u3441:
  5212  15E1  2DE3               	goto	l2611
  5213  15E2                     u3440:
  5214  15E2  2DC1               	goto	l2601
  5215  15E3                     l2611:
  5216  15E3  3070               	movlw	low (__div_to_l_@f1| 0)
  5217  15E4  0084               	movwf	4
  5218  15E5  3000               	movlw	0
  5219  15E6  0480               	iorwf	0,f
  5220  15E7  0A84               	incf	4,f
  5221  15E8  3000               	movlw	0
  5222  15E9  0480               	iorwf	0,f
  5223  15EA  0A84               	incf	4,f
  5224  15EB  3080               	movlw	128
  5225  15EC  0480               	iorwf	0,f
  5226  15ED  0A84               	incf	4,f
  5227  15EE  3000               	movlw	0
  5228  15EF  0480               	iorwf	0,f
  5229  15F0  3070               	movlw	low (__div_to_l_@f1| 0)
  5230  15F1  0084               	movwf	4
  5231  15F2  30FF               	movlw	255
  5232  15F3  0580               	andwf	0,f
  5233  15F4  0A84               	incf	4,f
  5234  15F5  30FF               	movlw	255
  5235  15F6  0580               	andwf	0,f
  5236  15F7  0A84               	incf	4,f
  5237  15F8  30FF               	movlw	255
  5238  15F9  0580               	andwf	0,f
  5239  15FA  0A84               	incf	4,f
  5240  15FB  3000               	movlw	0
  5241  15FC  0580               	andwf	0,f
  5242  15FD  3073               	movlw	low (__div_to_l_@f2| 0)
  5243  15FE  0084               	movwf	4
  5244  15FF  3000               	movlw	0
  5245  1600  0480               	iorwf	0,f
  5246  1601  0A84               	incf	4,f
  5247  1602  3000               	movlw	0
  5248  1603  0480               	iorwf	0,f
  5249  1604  0A84               	incf	4,f
  5250  1605  3080               	movlw	128
  5251  1606  0480               	iorwf	0,f
  5252  1607  0A84               	incf	4,f
  5253  1608  3000               	movlw	0
  5254  1609  0480               	iorwf	0,f
  5255  160A  3073               	movlw	low (__div_to_l_@f2| 0)
  5256  160B  0084               	movwf	4
  5257  160C  30FF               	movlw	255
  5258  160D  0580               	andwf	0,f
  5259  160E  0A84               	incf	4,f
  5260  160F  30FF               	movlw	255
  5261  1610  0580               	andwf	0,f
  5262  1611  0A84               	incf	4,f
  5263  1612  30FF               	movlw	255
  5264  1613  0580               	andwf	0,f
  5265  1614  0A84               	incf	4,f
  5266  1615  3000               	movlw	0
  5267  1616  0580               	andwf	0,f
  5268  1617                     l2613:
  5269  1617  3000               	movlw	0
  5270  1618  00A3               	movwf	__div_to_l_@quot+3
  5271  1619  3000               	movlw	0
  5272  161A  00A2               	movwf	__div_to_l_@quot+2
  5273  161B  3000               	movlw	0
  5274  161C  00A1               	movwf	__div_to_l_@quot+1
  5275  161D  3000               	movlw	0
  5276  161E  00A0               	movwf	__div_to_l_@quot
  5277  161F                     l2615:
  5278  161F  307F               	movlw	127
  5279  1620  02A5               	subwf	__div_to_l_@exp1,f
  5280  1621                     l2617:
  5281  1621  30A0               	movlw	160
  5282  1622  0724               	addwf	__div_to_l_@cntr,w
  5283  1623  00F6               	movwf	??__div_to_l_
  5284  1624  0876               	movf	??__div_to_l_,w
  5285  1625  02A5               	subwf	__div_to_l_@exp1,f
  5286  1626                     l2619:
  5287  1626  3020               	movlw	32
  5288  1627  00F6               	movwf	??__div_to_l_
  5289  1628  0876               	movf	??__div_to_l_,w
  5290  1629  00A4               	movwf	__div_to_l_@cntr
  5291  162A                     l2621:
  5292  162A  3001               	movlw	1
  5293  162B  00F6               	movwf	??__div_to_l_
  5294  162C                     u3455:
  5295  162C  1003               	clrc
  5296  162D  0DA0               	rlf	__div_to_l_@quot,f
  5297  162E  0DA1               	rlf	__div_to_l_@quot+1,f
  5298  162F  0DA2               	rlf	__div_to_l_@quot+2,f
  5299  1630  0DA3               	rlf	__div_to_l_@quot+3,f
  5300  1631  0BF6               	decfsz	??__div_to_l_,f
  5301  1632  2E2C               	goto	u3455
  5302  1633                     l2623:
  5303  1633  3073               	movlw	low (__div_to_l_@f2| 0)
  5304  1634  0084               	movwf	4
  5305  1635  0800               	movf	0,w
  5306  1636  00F6               	movwf	??__div_to_l_
  5307  1637  0A84               	incf	4,f
  5308  1638  0800               	movf	0,w
  5309  1639  00F7               	movwf	??__div_to_l_+1
  5310  163A  0A84               	incf	4,f
  5311  163B  0800               	movf	0,w
  5312  163C  00F8               	movwf	??__div_to_l_+2
  5313  163D  0A84               	incf	4,f
  5314  163E  0800               	movf	0,w
  5315  163F  00F9               	movwf	??__div_to_l_+3
  5316  1640  3070               	movlw	low (__div_to_l_@f1| 0)
  5317  1641  0084               	movwf	4
  5318  1642  0800               	movf	0,w
  5319  1643  00FA               	movwf	??__div_to_l_+4
  5320  1644  0A84               	incf	4,f
  5321  1645  0800               	movf	0,w
  5322  1646  00FB               	movwf	??__div_to_l_+5
  5323  1647  0A84               	incf	4,f
  5324  1648  0800               	movf	0,w
  5325  1649  00FC               	movwf	??__div_to_l_+6
  5326  164A  0A84               	incf	4,f
  5327  164B  0800               	movf	0,w
  5328  164C  00FD               	movwf	??__div_to_l_+7
  5329  164D  0879               	movf	??__div_to_l_+3,w
  5330  164E  027D               	subwf	??__div_to_l_+7,w
  5331  164F  1D03               	skipz
  5332  1650  2E5B               	goto	u3465
  5333  1651  0878               	movf	??__div_to_l_+2,w
  5334  1652  027C               	subwf	??__div_to_l_+6,w
  5335  1653  1D03               	skipz
  5336  1654  2E5B               	goto	u3465
  5337  1655  0877               	movf	??__div_to_l_+1,w
  5338  1656  027B               	subwf	??__div_to_l_+5,w
  5339  1657  1D03               	skipz
  5340  1658  2E5B               	goto	u3465
  5341  1659  0876               	movf	??__div_to_l_,w
  5342  165A  027A               	subwf	??__div_to_l_+4,w
  5343  165B                     u3465:
  5344  165B  1C03               	skipc
  5345  165C  2E5E               	goto	u3461
  5346  165D  2E5F               	goto	u3460
  5347  165E                     u3461:
  5348  165E  2E82               	goto	l642
  5349  165F                     u3460:
  5350  165F                     l2625:
  5351  165F  3073               	movlw	low (__div_to_l_@f2| 0)
  5352  1660  0084               	movwf	4
  5353  1661  0800               	movf	0,w
  5354  1662  00F6               	movwf	??__div_to_l_
  5355  1663  0A84               	incf	4,f
  5356  1664  0800               	movf	0,w
  5357  1665  00F7               	movwf	??__div_to_l_+1
  5358  1666  0A84               	incf	4,f
  5359  1667  0800               	movf	0,w
  5360  1668  00F8               	movwf	??__div_to_l_+2
  5361  1669  0A84               	incf	4,f
  5362  166A  0800               	movf	0,w
  5363  166B  00F9               	movwf	??__div_to_l_+3
  5364  166C  3070               	movlw	low (__div_to_l_@f1| 0)
  5365  166D  0084               	movwf	4
  5366  166E  0876               	movf	??__div_to_l_,w
  5367  166F  0280               	subwf	0,f
  5368  1670  0A84               	incf	4,f
  5369  1671  0877               	movf	??__div_to_l_+1,w
  5370  1672  1C03               	skipc
  5371  1673  0F77               	incfsz	??__div_to_l_+1,w
  5372  1674  0280               	subwf	0,f
  5373  1675  0A84               	incf	4,f
  5374  1676  0878               	movf	??__div_to_l_+2,w
  5375  1677  1C03               	skipc
  5376  1678  0F78               	incfsz	??__div_to_l_+2,w
  5377  1679  0280               	subwf	0,f
  5378  167A  0A84               	incf	4,f
  5379  167B  0879               	movf	??__div_to_l_+3,w
  5380  167C  1C03               	skipc
  5381  167D  0A79               	incf	??__div_to_l_+3,w
  5382  167E  0280               	subwf	0,f
  5383  167F  3003               	movlw	3
  5384  1680  0284               	subwf	4,f
  5385  1681                     l2627:
  5386  1681  1420               	bsf	__div_to_l_@quot,0
  5387  1682                     l642:
  5388  1682  3070               	movlw	low (__div_to_l_@f1| 0)
  5389  1683  0084               	movwf	4
  5390  1684  1003               	clrc
  5391  1685  0D80               	rlf	0,f
  5392  1686  0A84               	incf	4,f
  5393  1687  0D80               	rlf	0,f
  5394  1688  0A84               	incf	4,f
  5395  1689  0D80               	rlf	0,f
  5396  168A  0A84               	incf	4,f
  5397  168B  0D80               	rlf	0,f
  5398  168C  0384               	decf	4,f
  5399  168D  0384               	decf	4,f
  5400  168E  0384               	decf	4,f
  5401  168F                     l2629:
  5402  168F  3001               	movlw	1
  5403  1690  02A4               	subwf	__div_to_l_@cntr,f
  5404  1691  1D03               	btfss	3,2
  5405  1692  2E94               	goto	u3471
  5406  1693  2E95               	goto	u3470
  5407  1694                     u3471:
  5408  1694  2E2A               	goto	l2621
  5409  1695                     u3470:
  5410  1695                     l643:
  5411  1695  1FA5               	btfss	__div_to_l_@exp1,7
  5412  1696  2E98               	goto	u3481
  5413  1697  2E99               	goto	u3480
  5414  1698                     u3481:
  5415  1698  2EB3               	goto	l2639
  5416  1699                     u3480:
  5417  1699                     l2631:
  5418  1699  0825               	movf	__div_to_l_@exp1,w
  5419  169A  3A80               	xorlw	128
  5420  169B  3E9F               	addlw	159
  5421  169C  1803               	skipnc
  5422  169D  2E9F               	goto	u3491
  5423  169E  2EA0               	goto	u3490
  5424  169F                     u3491:
  5425  169F  2EA1               	goto	l2637
  5426  16A0                     u3490:
  5427  16A0  2DC1               	goto	l2601
  5428  16A1                     l2637:
  5429  16A1  3001               	movlw	1
  5430  16A2                     u3505:
  5431  16A2  1003               	clrc
  5432  16A3  0CA3               	rrf	__div_to_l_@quot+3,f
  5433  16A4  0CA2               	rrf	__div_to_l_@quot+2,f
  5434  16A5  0CA1               	rrf	__div_to_l_@quot+1,f
  5435  16A6  0CA0               	rrf	__div_to_l_@quot,f
  5436  16A7  3EFF               	addlw	-1
  5437  16A8  1D03               	skipz
  5438  16A9  2EA2               	goto	u3505
  5439  16AA  3001               	movlw	1
  5440  16AB  00F6               	movwf	??__div_to_l_
  5441  16AC  0876               	movf	??__div_to_l_,w
  5442  16AD  07A5               	addwf	__div_to_l_@exp1,f
  5443  16AE  1D03               	btfss	3,2
  5444  16AF  2EB1               	goto	u3511
  5445  16B0  2EB2               	goto	u3510
  5446  16B1                     u3511:
  5447  16B1  2EA1               	goto	l2637
  5448  16B2                     u3510:
  5449  16B2  2ECA               	goto	l2647
  5450  16B3                     l2639:
  5451  16B3  3020               	movlw	32
  5452  16B4  0225               	subwf	__div_to_l_@exp1,w
  5453  16B5  1C03               	skipc
  5454  16B6  2EB8               	goto	u3521
  5455  16B7  2EB9               	goto	u3520
  5456  16B8                     u3521:
  5457  16B8  2EC5               	goto	l650
  5458  16B9                     u3520:
  5459  16B9  2DC1               	goto	l2601
  5460  16BA                     l2645:
  5461  16BA  3001               	movlw	1
  5462  16BB  00F6               	movwf	??__div_to_l_
  5463  16BC                     u3535:
  5464  16BC  1003               	clrc
  5465  16BD  0DA0               	rlf	__div_to_l_@quot,f
  5466  16BE  0DA1               	rlf	__div_to_l_@quot+1,f
  5467  16BF  0DA2               	rlf	__div_to_l_@quot+2,f
  5468  16C0  0DA3               	rlf	__div_to_l_@quot+3,f
  5469  16C1  0BF6               	decfsz	??__div_to_l_,f
  5470  16C2  2EBC               	goto	u3535
  5471  16C3  3001               	movlw	1
  5472  16C4  02A5               	subwf	__div_to_l_@exp1,f
  5473  16C5                     l650:
  5474  16C5  0825               	movf	__div_to_l_@exp1,w
  5475  16C6  1D03               	btfss	3,2
  5476  16C7  2EC9               	goto	u3541
  5477  16C8  2ECA               	goto	u3540
  5478  16C9                     u3541:
  5479  16C9  2EBA               	goto	l2645
  5480  16CA                     u3540:
  5481  16CA                     l2647:
  5482  16CA  0823               	movf	__div_to_l_@quot+3,w
  5483  16CB  00F3               	movwf	?__div_to_l_+3
  5484  16CC  0822               	movf	__div_to_l_@quot+2,w
  5485  16CD  00F2               	movwf	?__div_to_l_+2
  5486  16CE  0821               	movf	__div_to_l_@quot+1,w
  5487  16CF  00F1               	movwf	?__div_to_l_+1
  5488  16D0  0820               	movf	__div_to_l_@quot,w
  5489  16D1  00F0               	movwf	?__div_to_l_
  5490  16D2                     l639:
  5491  16D2  0008               	return
  5492  16D3                     __end_of__div_to_l_:
  5493                           
  5494                           	psect	text16
  5495  1EE5                     __ptext16:	
  5496 ;; *************** function ___wmul *****************
  5497 ;; Defined at:
  5498 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  multiplier      2    0[COMMON] unsigned int 
  5501 ;;  multiplicand    2    2[COMMON] unsigned int 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  product         2    4[COMMON] unsigned int 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2    0[COMMON] unsigned int 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5513 ;;      Params:         4       0       0       0       0
  5514 ;;      Locals:         2       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0
  5516 ;;      Totals:         6       0       0       0       0
  5517 ;;Total ram usage:        6 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_sprintf
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function ___wmul
  5528  1EE5                     ___wmul:
  5529  1EE5                     l2651:	
  5530                           ;incstack = 0
  5531                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5532                           
  5533  1EE5  01F4               	clrf	___wmul@product
  5534  1EE6  01F5               	clrf	___wmul@product+1
  5535  1EE7                     l2653:
  5536  1EE7  1C70               	btfss	___wmul@multiplier,0
  5537  1EE8  2EEA               	goto	u3551
  5538  1EE9  2EEB               	goto	u3550
  5539  1EEA                     u3551:
  5540  1EEA  2EF1               	goto	l433
  5541  1EEB                     u3550:
  5542  1EEB                     l2655:
  5543  1EEB  0872               	movf	___wmul@multiplicand,w
  5544  1EEC  07F4               	addwf	___wmul@product,f
  5545  1EED  1803               	skipnc
  5546  1EEE  0AF5               	incf	___wmul@product+1,f
  5547  1EEF  0873               	movf	___wmul@multiplicand+1,w
  5548  1EF0  07F5               	addwf	___wmul@product+1,f
  5549  1EF1                     l433:
  5550  1EF1  3001               	movlw	1
  5551  1EF2                     u3565:
  5552  1EF2  1003               	clrc
  5553  1EF3  0DF2               	rlf	___wmul@multiplicand,f
  5554  1EF4  0DF3               	rlf	___wmul@multiplicand+1,f
  5555  1EF5  3EFF               	addlw	-1
  5556  1EF6  1D03               	skipz
  5557  1EF7  2EF2               	goto	u3565
  5558  1EF8                     l2657:
  5559  1EF8  3001               	movlw	1
  5560  1EF9                     u3575:
  5561  1EF9  1003               	clrc
  5562  1EFA  0CF1               	rrf	___wmul@multiplier+1,f
  5563  1EFB  0CF0               	rrf	___wmul@multiplier,f
  5564  1EFC  3EFF               	addlw	-1
  5565  1EFD  1D03               	skipz
  5566  1EFE  2EF9               	goto	u3575
  5567  1EFF                     l2659:
  5568  1EFF  0870               	movf	___wmul@multiplier,w
  5569  1F00  0471               	iorwf	___wmul@multiplier+1,w
  5570  1F01  1D03               	btfss	3,2
  5571  1F02  2F04               	goto	u3581
  5572  1F03  2F05               	goto	u3580
  5573  1F04                     u3581:
  5574  1F04  2EE7               	goto	l2653
  5575  1F05                     u3580:
  5576  1F05                     l2661:
  5577  1F05  0875               	movf	___wmul@product+1,w
  5578  1F06  00F1               	movwf	?___wmul+1
  5579  1F07  0874               	movf	___wmul@product,w
  5580  1F08  00F0               	movwf	?___wmul
  5581  1F09                     l435:
  5582  1F09  0008               	return
  5583  1F0A                     __end_of___wmul:
  5584                           
  5585                           	psect	text17
  5586  1F35                     __ptext17:	
  5587 ;; *************** function ___lltoft *****************
  5588 ;; Defined at:
  5589 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  c               4    8[COMMON] unsigned long 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  exp             1   13[COMMON] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  3    8[COMMON] float 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, pclath, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5603 ;;      Params:         4       0       0       0       0
  5604 ;;      Locals:         1       0       0       0       0
  5605 ;;      Temps:          1       0       0       0       0
  5606 ;;      Totals:         6       0       0       0       0
  5607 ;;Total ram usage:        6 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    1
  5610 ;; This function calls:
  5611 ;;		___ftpack
  5612 ;; This function is called by:
  5613 ;;		_sprintf
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           
  5618                           ;psect for function ___lltoft
  5619  1F35                     ___lltoft:
  5620  1F35                     l2787:	
  5621                           ;incstack = 0
  5622                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5623                           
  5624  1F35  308E               	movlw	142
  5625  1F36  00FC               	movwf	??___lltoft
  5626  1F37  087C               	movf	??___lltoft,w
  5627  1F38  00FD               	movwf	___lltoft@exp
  5628  1F39  2F47               	goto	l2791
  5629  1F3A                     l2789:
  5630  1F3A  3001               	movlw	1
  5631  1F3B                     u3875:
  5632  1F3B  1003               	clrc
  5633  1F3C  0CFB               	rrf	___lltoft@c+3,f
  5634  1F3D  0CFA               	rrf	___lltoft@c+2,f
  5635  1F3E  0CF9               	rrf	___lltoft@c+1,f
  5636  1F3F  0CF8               	rrf	___lltoft@c,f
  5637  1F40  3EFF               	addlw	-1
  5638  1F41  1D03               	skipz
  5639  1F42  2F3B               	goto	u3875
  5640  1F43  3001               	movlw	1
  5641  1F44  00FC               	movwf	??___lltoft
  5642  1F45  087C               	movf	??___lltoft,w
  5643  1F46  07FD               	addwf	___lltoft@exp,f
  5644  1F47                     l2791:
  5645  1F47  30FF               	movlw	255
  5646  1F48  057B               	andwf	___lltoft@c+3,w
  5647  1F49  1D03               	btfss	3,2
  5648  1F4A  2F4C               	goto	u3881
  5649  1F4B  2F4D               	goto	u3880
  5650  1F4C                     u3881:
  5651  1F4C  2F3A               	goto	l2789
  5652  1F4D                     u3880:
  5653  1F4D                     l2793:
  5654  1F4D  0878               	movf	___lltoft@c,w
  5655  1F4E  00F0               	movwf	___ftpack@arg
  5656  1F4F  0879               	movf	___lltoft@c+1,w
  5657  1F50  00F1               	movwf	___ftpack@arg+1
  5658  1F51  087A               	movf	___lltoft@c+2,w
  5659  1F52  00F2               	movwf	___ftpack@arg+2
  5660  1F53  087D               	movf	___lltoft@exp,w
  5661  1F54  00FC               	movwf	??___lltoft
  5662  1F55  087C               	movf	??___lltoft,w
  5663  1F56  00F3               	movwf	___ftpack@exp
  5664  1F57  01F4               	clrf	___ftpack@sign
  5665  1F58  160A  118A  23BA  160A  158A  	fcall	___ftpack
  5666  1F5D  0870               	movf	?___ftpack,w
  5667  1F5E  00F8               	movwf	?___lltoft
  5668  1F5F  0871               	movf	?___ftpack+1,w
  5669  1F60  00F9               	movwf	?___lltoft+1
  5670  1F61  0872               	movf	?___ftpack+2,w
  5671  1F62  00FA               	movwf	?___lltoft+2
  5672  1F63                     l812:
  5673  1F63  0008               	return
  5674  1F64                     __end_of___lltoft:
  5675                           
  5676                           	psect	text18
  5677  11D6                     __ptext18:	
  5678 ;; *************** function ___llmod *****************
  5679 ;; Defined at:
  5680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  divisor         4    0[BANK0 ] unsigned long 
  5683 ;;  dividend        4    4[BANK0 ] unsigned long 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  counter         1    9[BANK0 ] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  4    0[BANK0 ] unsigned long 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5695 ;;      Params:         0       8       0       0       0
  5696 ;;      Locals:         0       1       0       0       0
  5697 ;;      Temps:          0       1       0       0       0
  5698 ;;      Totals:         0      10       0       0       0
  5699 ;;Total ram usage:       10 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_sprintf
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function ___llmod
  5710  11D6                     ___llmod:
  5711  11D6                     l2767:	
  5712                           ;incstack = 0
  5713                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5714                           
  5715  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  5716  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  5717  11D8  0823               	movf	___llmod@divisor+3,w
  5718  11D9  0422               	iorwf	___llmod@divisor+2,w
  5719  11DA  0421               	iorwf	___llmod@divisor+1,w
  5720  11DB  0420               	iorwf	___llmod@divisor,w
  5721  11DC  1903               	skipnz
  5722  11DD  29DF               	goto	u3811
  5723  11DE  29E0               	goto	u3810
  5724  11DF                     u3811:
  5725  11DF  2A23               	goto	l2783
  5726  11E0                     u3810:
  5727  11E0                     l2769:
  5728  11E0  01A9               	clrf	___llmod@counter
  5729  11E1  0AA9               	incf	___llmod@counter,f
  5730  11E2  29F0               	goto	l2773
  5731  11E3                     l2771:
  5732  11E3  3001               	movlw	1
  5733  11E4  00A8               	movwf	??___llmod
  5734  11E5                     u3825:
  5735  11E5  1003               	clrc
  5736  11E6  0DA0               	rlf	___llmod@divisor,f
  5737  11E7  0DA1               	rlf	___llmod@divisor+1,f
  5738  11E8  0DA2               	rlf	___llmod@divisor+2,f
  5739  11E9  0DA3               	rlf	___llmod@divisor+3,f
  5740  11EA  0BA8               	decfsz	??___llmod,f
  5741  11EB  29E5               	goto	u3825
  5742  11EC  3001               	movlw	1
  5743  11ED  00A8               	movwf	??___llmod
  5744  11EE  0828               	movf	??___llmod,w
  5745  11EF  07A9               	addwf	___llmod@counter,f
  5746  11F0                     l2773:
  5747  11F0  1FA3               	btfss	___llmod@divisor+3,7
  5748  11F1  29F3               	goto	u3831
  5749  11F2  29F4               	goto	u3830
  5750  11F3                     u3831:
  5751  11F3  29E3               	goto	l2771
  5752  11F4                     u3830:
  5753  11F4                     l2775:
  5754  11F4  0823               	movf	___llmod@divisor+3,w
  5755  11F5  0227               	subwf	___llmod@dividend+3,w
  5756  11F6  1D03               	skipz
  5757  11F7  2A02               	goto	u3845
  5758  11F8  0822               	movf	___llmod@divisor+2,w
  5759  11F9  0226               	subwf	___llmod@dividend+2,w
  5760  11FA  1D03               	skipz
  5761  11FB  2A02               	goto	u3845
  5762  11FC  0821               	movf	___llmod@divisor+1,w
  5763  11FD  0225               	subwf	___llmod@dividend+1,w
  5764  11FE  1D03               	skipz
  5765  11FF  2A02               	goto	u3845
  5766  1200  0820               	movf	___llmod@divisor,w
  5767  1201  0224               	subwf	___llmod@dividend,w
  5768  1202                     u3845:
  5769  1202  1C03               	skipc
  5770  1203  2A05               	goto	u3841
  5771  1204  2A06               	goto	u3840
  5772  1205                     u3841:
  5773  1205  2A14               	goto	l2779
  5774  1206                     u3840:
  5775  1206                     l2777:
  5776  1206  0820               	movf	___llmod@divisor,w
  5777  1207  02A4               	subwf	___llmod@dividend,f
  5778  1208  0821               	movf	___llmod@divisor+1,w
  5779  1209  1C03               	skipc
  5780  120A  0F21               	incfsz	___llmod@divisor+1,w
  5781  120B  02A5               	subwf	___llmod@dividend+1,f
  5782  120C  0822               	movf	___llmod@divisor+2,w
  5783  120D  1C03               	skipc
  5784  120E  0F22               	incfsz	___llmod@divisor+2,w
  5785  120F  02A6               	subwf	___llmod@dividend+2,f
  5786  1210  0823               	movf	___llmod@divisor+3,w
  5787  1211  1C03               	skipc
  5788  1212  0F23               	incfsz	___llmod@divisor+3,w
  5789  1213  02A7               	subwf	___llmod@dividend+3,f
  5790  1214                     l2779:
  5791  1214  3001               	movlw	1
  5792  1215                     u3855:
  5793  1215  1003               	clrc
  5794  1216  0CA3               	rrf	___llmod@divisor+3,f
  5795  1217  0CA2               	rrf	___llmod@divisor+2,f
  5796  1218  0CA1               	rrf	___llmod@divisor+1,f
  5797  1219  0CA0               	rrf	___llmod@divisor,f
  5798  121A  3EFF               	addlw	-1
  5799  121B  1D03               	skipz
  5800  121C  2A15               	goto	u3855
  5801  121D                     l2781:
  5802  121D  3001               	movlw	1
  5803  121E  02A9               	subwf	___llmod@counter,f
  5804  121F  1D03               	btfss	3,2
  5805  1220  2A22               	goto	u3861
  5806  1221  2A23               	goto	u3860
  5807  1222                     u3861:
  5808  1222  29F4               	goto	l2775
  5809  1223                     u3860:
  5810  1223                     l2783:
  5811  1223  0827               	movf	___llmod@dividend+3,w
  5812  1224  00A3               	movwf	?___llmod+3
  5813  1225  0826               	movf	___llmod@dividend+2,w
  5814  1226  00A2               	movwf	?___llmod+2
  5815  1227  0825               	movf	___llmod@dividend+1,w
  5816  1228  00A1               	movwf	?___llmod+1
  5817  1229  0824               	movf	___llmod@dividend,w
  5818  122A  00A0               	movwf	?___llmod
  5819  122B                     l804:
  5820  122B  0008               	return
  5821  122C                     __end_of___llmod:
  5822                           
  5823                           	psect	text19
  5824  12EB                     __ptext19:	
  5825 ;; *************** function ___lldiv *****************
  5826 ;; Defined at:
  5827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  divisor         4    0[COMMON] unsigned long 
  5830 ;;  dividend        4    4[COMMON] unsigned long 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  quotient        4    9[COMMON] unsigned long 
  5833 ;;  counter         1   13[COMMON] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  4    0[COMMON] unsigned long 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5843 ;;      Params:         8       0       0       0       0
  5844 ;;      Locals:         5       0       0       0       0
  5845 ;;      Temps:          1       0       0       0       0
  5846 ;;      Totals:        14       0       0       0       0
  5847 ;;Total ram usage:       14 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_sprintf
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function ___lldiv
  5858  12EB                     ___lldiv:
  5859  12EB                     l2665:	
  5860                           ;incstack = 0
  5861                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5862                           
  5863  12EB  3000               	movlw	0
  5864  12EC  00FC               	movwf	___lldiv@quotient+3
  5865  12ED  3000               	movlw	0
  5866  12EE  00FB               	movwf	___lldiv@quotient+2
  5867  12EF  3000               	movlw	0
  5868  12F0  00FA               	movwf	___lldiv@quotient+1
  5869  12F1  3000               	movlw	0
  5870  12F2  00F9               	movwf	___lldiv@quotient
  5871  12F3  0873               	movf	___lldiv@divisor+3,w
  5872  12F4  0472               	iorwf	___lldiv@divisor+2,w
  5873  12F5  0471               	iorwf	___lldiv@divisor+1,w
  5874  12F6  0470               	iorwf	___lldiv@divisor,w
  5875  12F7  1903               	skipnz
  5876  12F8  2AFA               	goto	u3591
  5877  12F9  2AFB               	goto	u3590
  5878  12FA                     u3591:
  5879  12FA  2B48               	goto	l2685
  5880  12FB                     u3590:
  5881  12FB                     l2667:
  5882  12FB  01FD               	clrf	___lldiv@counter
  5883  12FC  0AFD               	incf	___lldiv@counter,f
  5884  12FD  2B0B               	goto	l2671
  5885  12FE                     l2669:
  5886  12FE  3001               	movlw	1
  5887  12FF  00F8               	movwf	??___lldiv
  5888  1300                     u3605:
  5889  1300  1003               	clrc
  5890  1301  0DF0               	rlf	___lldiv@divisor,f
  5891  1302  0DF1               	rlf	___lldiv@divisor+1,f
  5892  1303  0DF2               	rlf	___lldiv@divisor+2,f
  5893  1304  0DF3               	rlf	___lldiv@divisor+3,f
  5894  1305  0BF8               	decfsz	??___lldiv,f
  5895  1306  2B00               	goto	u3605
  5896  1307  3001               	movlw	1
  5897  1308  00F8               	movwf	??___lldiv
  5898  1309  0878               	movf	??___lldiv,w
  5899  130A  07FD               	addwf	___lldiv@counter,f
  5900  130B                     l2671:
  5901  130B  1FF3               	btfss	___lldiv@divisor+3,7
  5902  130C  2B0E               	goto	u3611
  5903  130D  2B0F               	goto	u3610
  5904  130E                     u3611:
  5905  130E  2AFE               	goto	l2669
  5906  130F                     u3610:
  5907  130F                     l2673:
  5908  130F  3001               	movlw	1
  5909  1310  00F8               	movwf	??___lldiv
  5910  1311                     u3625:
  5911  1311  1003               	clrc
  5912  1312  0DF9               	rlf	___lldiv@quotient,f
  5913  1313  0DFA               	rlf	___lldiv@quotient+1,f
  5914  1314  0DFB               	rlf	___lldiv@quotient+2,f
  5915  1315  0DFC               	rlf	___lldiv@quotient+3,f
  5916  1316  0BF8               	decfsz	??___lldiv,f
  5917  1317  2B11               	goto	u3625
  5918  1318                     l2675:
  5919  1318  0873               	movf	___lldiv@divisor+3,w
  5920  1319  0277               	subwf	___lldiv@dividend+3,w
  5921  131A  1D03               	skipz
  5922  131B  2B26               	goto	u3635
  5923  131C  0872               	movf	___lldiv@divisor+2,w
  5924  131D  0276               	subwf	___lldiv@dividend+2,w
  5925  131E  1D03               	skipz
  5926  131F  2B26               	goto	u3635
  5927  1320  0871               	movf	___lldiv@divisor+1,w
  5928  1321  0275               	subwf	___lldiv@dividend+1,w
  5929  1322  1D03               	skipz
  5930  1323  2B26               	goto	u3635
  5931  1324  0870               	movf	___lldiv@divisor,w
  5932  1325  0274               	subwf	___lldiv@dividend,w
  5933  1326                     u3635:
  5934  1326  1C03               	skipc
  5935  1327  2B29               	goto	u3631
  5936  1328  2B2A               	goto	u3630
  5937  1329                     u3631:
  5938  1329  2B39               	goto	l2681
  5939  132A                     u3630:
  5940  132A                     l2677:
  5941  132A  0870               	movf	___lldiv@divisor,w
  5942  132B  02F4               	subwf	___lldiv@dividend,f
  5943  132C  0871               	movf	___lldiv@divisor+1,w
  5944  132D  1C03               	skipc
  5945  132E  0F71               	incfsz	___lldiv@divisor+1,w
  5946  132F  02F5               	subwf	___lldiv@dividend+1,f
  5947  1330  0872               	movf	___lldiv@divisor+2,w
  5948  1331  1C03               	skipc
  5949  1332  0F72               	incfsz	___lldiv@divisor+2,w
  5950  1333  02F6               	subwf	___lldiv@dividend+2,f
  5951  1334  0873               	movf	___lldiv@divisor+3,w
  5952  1335  1C03               	skipc
  5953  1336  0F73               	incfsz	___lldiv@divisor+3,w
  5954  1337  02F7               	subwf	___lldiv@dividend+3,f
  5955  1338                     l2679:
  5956  1338  1479               	bsf	___lldiv@quotient,0
  5957  1339                     l2681:
  5958  1339  3001               	movlw	1
  5959  133A                     u3645:
  5960  133A  1003               	clrc
  5961  133B  0CF3               	rrf	___lldiv@divisor+3,f
  5962  133C  0CF2               	rrf	___lldiv@divisor+2,f
  5963  133D  0CF1               	rrf	___lldiv@divisor+1,f
  5964  133E  0CF0               	rrf	___lldiv@divisor,f
  5965  133F  3EFF               	addlw	-1
  5966  1340  1D03               	skipz
  5967  1341  2B3A               	goto	u3645
  5968  1342                     l2683:
  5969  1342  3001               	movlw	1
  5970  1343  02FD               	subwf	___lldiv@counter,f
  5971  1344  1D03               	btfss	3,2
  5972  1345  2B47               	goto	u3651
  5973  1346  2B48               	goto	u3650
  5974  1347                     u3651:
  5975  1347  2B0F               	goto	l2673
  5976  1348                     u3650:
  5977  1348                     l2685:
  5978  1348  087C               	movf	___lldiv@quotient+3,w
  5979  1349  00F3               	movwf	?___lldiv+3
  5980  134A  087B               	movf	___lldiv@quotient+2,w
  5981  134B  00F2               	movwf	?___lldiv+2
  5982  134C  087A               	movf	___lldiv@quotient+1,w
  5983  134D  00F1               	movwf	?___lldiv+1
  5984  134E  0879               	movf	___lldiv@quotient,w
  5985  134F  00F0               	movwf	?___lldiv
  5986  1350                     l469:
  5987  1350  0008               	return
  5988  1351                     __end_of___lldiv:
  5989                           
  5990                           	psect	text20
  5991  1436                     __ptext20:	
  5992 ;; *************** function ___fttol *****************
  5993 ;; Defined at:
  5994 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  f1              3   33[BANK0 ] float 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  lval            4   42[BANK0 ] unsigned long 
  5999 ;;  exp1            1   46[BANK0 ] unsigned char 
  6000 ;;  sign1           1   41[BANK0 ] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  4   33[BANK0 ] long 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6010 ;;      Params:         0       4       0       0       0
  6011 ;;      Locals:         0       6       0       0       0
  6012 ;;      Temps:          0       4       0       0       0
  6013 ;;      Totals:         0      14       0       0       0
  6014 ;;Total ram usage:       14 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_sprintf
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function ___fttol
  6025  1436                     ___fttol:
  6026  1436                     l2725:	
  6027                           ;incstack = 0
  6028                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6029                           
  6030  1436  1283               	bcf	3,5	;RP0=0, select bank0
  6031  1437  1303               	bcf	3,6	;RP1=0, select bank0
  6032  1438  0841               	movf	___fttol@f1,w
  6033  1439  00C5               	movwf	??___fttol
  6034  143A  0842               	movf	___fttol@f1+1,w
  6035  143B  00C6               	movwf	??___fttol+1
  6036  143C  0843               	movf	___fttol@f1+2,w
  6037  143D  00C7               	movwf	??___fttol+2
  6038  143E  1003               	clrc
  6039  143F  0D46               	rlf	??___fttol+1,w
  6040  1440  0D47               	rlf	??___fttol+2,w
  6041  1441  00C8               	movwf	??___fttol+3
  6042  1442  0848               	movf	??___fttol+3,w
  6043  1443  00CE               	movwf	___fttol@exp1
  6044  1444  084E               	movf	___fttol@exp1,w
  6045  1445  1D03               	btfss	3,2
  6046  1446  2C48               	goto	u3711
  6047  1447  2C49               	goto	u3710
  6048  1448                     u3711:
  6049  1448  2C52               	goto	l2731
  6050  1449                     u3710:
  6051  1449                     l2727:
  6052  1449  3000               	movlw	0
  6053  144A  00C4               	movwf	?___fttol+3
  6054  144B  3000               	movlw	0
  6055  144C  00C3               	movwf	?___fttol+2
  6056  144D  3000               	movlw	0
  6057  144E  00C2               	movwf	?___fttol+1
  6058  144F  3000               	movlw	0
  6059  1450  00C1               	movwf	?___fttol
  6060  1451  2CC1               	goto	l763
  6061  1452                     l2731:
  6062  1452  0841               	movf	___fttol@f1,w
  6063  1453  00C5               	movwf	??___fttol
  6064  1454  0842               	movf	___fttol@f1+1,w
  6065  1455  00C6               	movwf	??___fttol+1
  6066  1456  0843               	movf	___fttol@f1+2,w
  6067  1457  00C7               	movwf	??___fttol+2
  6068  1458  3017               	movlw	23
  6069  1459                     u3725:
  6070  1459  1003               	clrc
  6071  145A  0CC7               	rrf	??___fttol+2,f
  6072  145B  0CC6               	rrf	??___fttol+1,f
  6073  145C  0CC5               	rrf	??___fttol,f
  6074  145D                     u3720:
  6075  145D  3EFF               	addlw	-1
  6076  145E  1D03               	skipz
  6077  145F  2C59               	goto	u3725
  6078  1460  0845               	movf	??___fttol,w
  6079  1461  00C8               	movwf	??___fttol+3
  6080  1462  0848               	movf	??___fttol+3,w
  6081  1463  00C9               	movwf	___fttol@sign1
  6082  1464                     l2733:
  6083  1464  17C2               	bsf	___fttol@f1+1,7
  6084  1465                     l2735:
  6085  1465  30FF               	movlw	255
  6086  1466  05C1               	andwf	___fttol@f1,f
  6087  1467  30FF               	movlw	255
  6088  1468  05C2               	andwf	___fttol@f1+1,f
  6089  1469  3000               	movlw	0
  6090  146A  05C3               	andwf	___fttol@f1+2,f
  6091  146B                     l2737:
  6092  146B  0841               	movf	___fttol@f1,w
  6093  146C  00CA               	movwf	___fttol@lval
  6094  146D  0842               	movf	___fttol@f1+1,w
  6095  146E  00CB               	movwf	___fttol@lval+1
  6096  146F  0843               	movf	___fttol@f1+2,w
  6097  1470  00CC               	movwf	___fttol@lval+2
  6098  1471  01CD               	clrf	___fttol@lval+3
  6099  1472                     l2739:
  6100  1472  308E               	movlw	142
  6101  1473  02CE               	subwf	___fttol@exp1,f
  6102  1474                     l2741:
  6103  1474  1FCE               	btfss	___fttol@exp1,7
  6104  1475  2C77               	goto	u3731
  6105  1476  2C78               	goto	u3730
  6106  1477                     u3731:
  6107  1477  2C92               	goto	l2751
  6108  1478                     u3730:
  6109  1478                     l2743:
  6110  1478  084E               	movf	___fttol@exp1,w
  6111  1479  3A80               	xorlw	128
  6112  147A  3E8F               	addlw	143
  6113  147B  1803               	skipnc
  6114  147C  2C7E               	goto	u3741
  6115  147D  2C7F               	goto	u3740
  6116  147E                     u3741:
  6117  147E  2C80               	goto	l2749
  6118  147F                     u3740:
  6119  147F  2C49               	goto	l2727
  6120  1480                     l2749:
  6121  1480  3001               	movlw	1
  6122  1481                     u3755:
  6123  1481  1003               	clrc
  6124  1482  0CCD               	rrf	___fttol@lval+3,f
  6125  1483  0CCC               	rrf	___fttol@lval+2,f
  6126  1484  0CCB               	rrf	___fttol@lval+1,f
  6127  1485  0CCA               	rrf	___fttol@lval,f
  6128  1486  3EFF               	addlw	-1
  6129  1487  1D03               	skipz
  6130  1488  2C81               	goto	u3755
  6131  1489  3001               	movlw	1
  6132  148A  00C5               	movwf	??___fttol
  6133  148B  0845               	movf	??___fttol,w
  6134  148C  07CE               	addwf	___fttol@exp1,f
  6135  148D  1D03               	btfss	3,2
  6136  148E  2C90               	goto	u3761
  6137  148F  2C91               	goto	u3760
  6138  1490                     u3761:
  6139  1490  2C80               	goto	l2749
  6140  1491                     u3760:
  6141  1491  2CA9               	goto	l2759
  6142  1492                     l2751:
  6143  1492  3018               	movlw	24
  6144  1493  024E               	subwf	___fttol@exp1,w
  6145  1494  1C03               	skipc
  6146  1495  2C97               	goto	u3771
  6147  1496  2C98               	goto	u3770
  6148  1497                     u3771:
  6149  1497  2CA4               	goto	l770
  6150  1498                     u3770:
  6151  1498  2C49               	goto	l2727
  6152  1499                     l2757:
  6153  1499  3001               	movlw	1
  6154  149A  00C5               	movwf	??___fttol
  6155  149B                     u3785:
  6156  149B  1003               	clrc
  6157  149C  0DCA               	rlf	___fttol@lval,f
  6158  149D  0DCB               	rlf	___fttol@lval+1,f
  6159  149E  0DCC               	rlf	___fttol@lval+2,f
  6160  149F  0DCD               	rlf	___fttol@lval+3,f
  6161  14A0  0BC5               	decfsz	??___fttol,f
  6162  14A1  2C9B               	goto	u3785
  6163  14A2  3001               	movlw	1
  6164  14A3  02CE               	subwf	___fttol@exp1,f
  6165  14A4                     l770:
  6166  14A4  084E               	movf	___fttol@exp1,w
  6167  14A5  1D03               	btfss	3,2
  6168  14A6  2CA8               	goto	u3791
  6169  14A7  2CA9               	goto	u3790
  6170  14A8                     u3791:
  6171  14A8  2C99               	goto	l2757
  6172  14A9                     u3790:
  6173  14A9                     l2759:
  6174  14A9  0849               	movf	___fttol@sign1,w
  6175  14AA  1903               	btfsc	3,2
  6176  14AB  2CAD               	goto	u3801
  6177  14AC  2CAE               	goto	u3800
  6178  14AD                     u3801:
  6179  14AD  2CB9               	goto	l2763
  6180  14AE                     u3800:
  6181  14AE                     l2761:
  6182  14AE  09CA               	comf	___fttol@lval,f
  6183  14AF  09CB               	comf	___fttol@lval+1,f
  6184  14B0  09CC               	comf	___fttol@lval+2,f
  6185  14B1  09CD               	comf	___fttol@lval+3,f
  6186  14B2  0ACA               	incf	___fttol@lval,f
  6187  14B3  1903               	skipnz
  6188  14B4  0ACB               	incf	___fttol@lval+1,f
  6189  14B5  1903               	skipnz
  6190  14B6  0ACC               	incf	___fttol@lval+2,f
  6191  14B7  1903               	skipnz
  6192  14B8  0ACD               	incf	___fttol@lval+3,f
  6193  14B9                     l2763:
  6194  14B9  084D               	movf	___fttol@lval+3,w
  6195  14BA  00C4               	movwf	?___fttol+3
  6196  14BB  084C               	movf	___fttol@lval+2,w
  6197  14BC  00C3               	movwf	?___fttol+2
  6198  14BD  084B               	movf	___fttol@lval+1,w
  6199  14BE  00C2               	movwf	?___fttol+1
  6200  14BF  084A               	movf	___fttol@lval,w
  6201  14C0  00C1               	movwf	?___fttol
  6202  14C1                     l763:
  6203  14C1  0008               	return
  6204  14C2                     __end_of___fttol:
  6205                           
  6206                           	psect	text21
  6207  1EC0                     __ptext21:	
  6208 ;; *************** function ___ftsub *****************
  6209 ;; Defined at:
  6210 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  f2              3   53[BANK0 ] float 
  6213 ;;  f1              3   56[BANK0 ] float 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  3   53[BANK0 ] float 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0, pclath, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6225 ;;      Params:         0       6       0       0       0
  6226 ;;      Locals:         0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0
  6228 ;;      Totals:         0       6       0       0       0
  6229 ;;Total ram usage:        6 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    2
  6232 ;; This function calls:
  6233 ;;		___ftadd
  6234 ;; This function is called by:
  6235 ;;		_sprintf
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function ___ftsub
  6241  1EC0                     ___ftsub:
  6242  1EC0                     l2717:	
  6243                           ;incstack = 0
  6244                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6245                           
  6246  1EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6247  1EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6248  1EC2  0857               	movf	___ftsub@f2+2,w
  6249  1EC3  0456               	iorwf	___ftsub@f2+1,w
  6250  1EC4  0455               	iorwf	___ftsub@f2,w
  6251  1EC5  1903               	skipnz
  6252  1EC6  2EC8               	goto	u3701
  6253  1EC7  2EC9               	goto	u3700
  6254  1EC8                     u3701:
  6255  1EC8  2ECB               	goto	l2721
  6256  1EC9                     u3700:
  6257  1EC9                     l2719:
  6258  1EC9  3080               	movlw	128
  6259  1ECA  06D7               	xorwf	___ftsub@f2+2,f
  6260  1ECB                     l2721:
  6261  1ECB  0858               	movf	___ftsub@f1,w
  6262  1ECC  00C8               	movwf	___ftadd@f1
  6263  1ECD  0859               	movf	___ftsub@f1+1,w
  6264  1ECE  00C9               	movwf	___ftadd@f1+1
  6265  1ECF  085A               	movf	___ftsub@f1+2,w
  6266  1ED0  00CA               	movwf	___ftadd@f1+2
  6267  1ED1  0855               	movf	___ftsub@f2,w
  6268  1ED2  00CB               	movwf	___ftadd@f2
  6269  1ED3  0856               	movf	___ftsub@f2+1,w
  6270  1ED4  00CC               	movwf	___ftadd@f2+1
  6271  1ED5  0857               	movf	___ftsub@f2+2,w
  6272  1ED6  00CD               	movwf	___ftadd@f2+2
  6273  1ED7  120A  118A  2012  160A  158A  	fcall	___ftadd
  6274  1EDC  1283               	bcf	3,5	;RP0=0, select bank0
  6275  1EDD  1303               	bcf	3,6	;RP1=0, select bank0
  6276  1EDE  0848               	movf	?___ftadd,w
  6277  1EDF  00D5               	movwf	?___ftsub
  6278  1EE0  0849               	movf	?___ftadd+1,w
  6279  1EE1  00D6               	movwf	?___ftsub+1
  6280  1EE2  084A               	movf	?___ftadd+2,w
  6281  1EE3  00D7               	movwf	?___ftsub+2
  6282  1EE4                     l759:
  6283  1EE4  0008               	return
  6284  1EE5                     __end_of___ftsub:
  6285                           
  6286                           	psect	text22
  6287  0012                     __ptext22:	
  6288 ;; *************** function ___ftadd *****************
  6289 ;; Defined at:
  6290 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  f1              3   40[BANK0 ] float 
  6293 ;;  f2              3   43[BANK0 ] float 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  exp1            1   52[BANK0 ] unsigned char 
  6296 ;;  exp2            1   51[BANK0 ] unsigned char 
  6297 ;;  sign            1   50[BANK0 ] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  3   40[BANK0 ] float 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0, pclath, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6307 ;;      Params:         0       6       0       0       0
  6308 ;;      Locals:         0       3       0       0       0
  6309 ;;      Temps:          0       4       0       0       0
  6310 ;;      Totals:         0      13       0       0       0
  6311 ;;Total ram usage:       13 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    1
  6314 ;; This function calls:
  6315 ;;		___ftpack
  6316 ;; This function is called by:
  6317 ;;		_sprintf
  6318 ;;		___ftsub
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function ___ftadd
  6324  0012                     ___ftadd:
  6325  0012                     l2255:	
  6326                           ;incstack = 0
  6327                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6328                           
  6329  0012  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0013  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0014  0848               	movf	___ftadd@f1,w
  6332  0015  00CE               	movwf	??___ftadd
  6333  0016  0849               	movf	___ftadd@f1+1,w
  6334  0017  00CF               	movwf	??___ftadd+1
  6335  0018  084A               	movf	___ftadd@f1+2,w
  6336  0019  00D0               	movwf	??___ftadd+2
  6337  001A  1003               	clrc
  6338  001B  0D4F               	rlf	??___ftadd+1,w
  6339  001C  0D50               	rlf	??___ftadd+2,w
  6340  001D  00D1               	movwf	??___ftadd+3
  6341  001E  0851               	movf	??___ftadd+3,w
  6342  001F  00D4               	movwf	___ftadd@exp1
  6343  0020  084B               	movf	___ftadd@f2,w
  6344  0021  00CE               	movwf	??___ftadd
  6345  0022  084C               	movf	___ftadd@f2+1,w
  6346  0023  00CF               	movwf	??___ftadd+1
  6347  0024  084D               	movf	___ftadd@f2+2,w
  6348  0025  00D0               	movwf	??___ftadd+2
  6349  0026  1003               	clrc
  6350  0027  0D4F               	rlf	??___ftadd+1,w
  6351  0028  0D50               	rlf	??___ftadd+2,w
  6352  0029  00D1               	movwf	??___ftadd+3
  6353  002A  0851               	movf	??___ftadd+3,w
  6354  002B  00D3               	movwf	___ftadd@exp2
  6355  002C  0854               	movf	___ftadd@exp1,w
  6356  002D  1903               	btfsc	3,2
  6357  002E  2830               	goto	u2681
  6358  002F  2831               	goto	u2680
  6359  0030                     u2681:
  6360  0030  2841               	goto	l2261
  6361  0031                     u2680:
  6362  0031                     l2257:
  6363  0031  0853               	movf	___ftadd@exp2,w
  6364  0032  0254               	subwf	___ftadd@exp1,w
  6365  0033  1803               	skipnc
  6366  0034  2836               	goto	u2691
  6367  0035  2837               	goto	u2690
  6368  0036                     u2691:
  6369  0036  2848               	goto	l2265
  6370  0037                     u2690:
  6371  0037                     l2259:
  6372  0037  0853               	movf	___ftadd@exp2,w
  6373  0038  00CE               	movwf	??___ftadd
  6374  0039  0854               	movf	___ftadd@exp1,w
  6375  003A  02CE               	subwf	??___ftadd,f
  6376  003B  3019               	movlw	25
  6377  003C  024E               	subwf	??___ftadd,w
  6378  003D  1C03               	skipc
  6379  003E  2840               	goto	u2701
  6380  003F  2841               	goto	u2700
  6381  0040                     u2701:
  6382  0040  2848               	goto	l2265
  6383  0041                     u2700:
  6384  0041                     l2261:
  6385  0041  084B               	movf	___ftadd@f2,w
  6386  0042  00C8               	movwf	?___ftadd
  6387  0043  084C               	movf	___ftadd@f2+1,w
  6388  0044  00C9               	movwf	?___ftadd+1
  6389  0045  084D               	movf	___ftadd@f2+2,w
  6390  0046  00CA               	movwf	?___ftadd+2
  6391  0047  2947               	goto	l679
  6392  0048                     l2265:
  6393  0048  0853               	movf	___ftadd@exp2,w
  6394  0049  1903               	btfsc	3,2
  6395  004A  284C               	goto	u2711
  6396  004B  284D               	goto	u2710
  6397  004C                     u2711:
  6398  004C  285D               	goto	l682
  6399  004D                     u2710:
  6400  004D                     l2267:
  6401  004D  0854               	movf	___ftadd@exp1,w
  6402  004E  0253               	subwf	___ftadd@exp2,w
  6403  004F  1803               	skipnc
  6404  0050  2852               	goto	u2721
  6405  0051  2853               	goto	u2720
  6406  0052                     u2721:
  6407  0052  285E               	goto	l2271
  6408  0053                     u2720:
  6409  0053                     l2269:
  6410  0053  0854               	movf	___ftadd@exp1,w
  6411  0054  00CE               	movwf	??___ftadd
  6412  0055  0853               	movf	___ftadd@exp2,w
  6413  0056  02CE               	subwf	??___ftadd,f
  6414  0057  3019               	movlw	25
  6415  0058  024E               	subwf	??___ftadd,w
  6416  0059  1C03               	skipc
  6417  005A  285C               	goto	u2731
  6418  005B  285D               	goto	u2730
  6419  005C                     u2731:
  6420  005C  285E               	goto	l2271
  6421  005D                     u2730:
  6422  005D                     l682:
  6423  005D  2947               	goto	l679
  6424  005E                     l2271:
  6425  005E  3006               	movlw	6
  6426  005F  00CE               	movwf	??___ftadd
  6427  0060  084E               	movf	??___ftadd,w
  6428  0061  00D2               	movwf	___ftadd@sign
  6429  0062                     l2273:
  6430  0062  1FCA               	btfss	___ftadd@f1+2,7
  6431  0063  2865               	goto	u2741
  6432  0064  2866               	goto	u2740
  6433  0065                     u2741:
  6434  0065  2867               	goto	l683
  6435  0066                     u2740:
  6436  0066                     l2275:
  6437  0066  17D2               	bsf	___ftadd@sign,7
  6438  0067                     l683:
  6439  0067  1FCD               	btfss	___ftadd@f2+2,7
  6440  0068  286A               	goto	u2751
  6441  0069  286B               	goto	u2750
  6442  006A                     u2751:
  6443  006A  286C               	goto	l684
  6444  006B                     u2750:
  6445  006B                     l2277:
  6446  006B  1752               	bsf	___ftadd@sign,6
  6447  006C                     l684:
  6448  006C  17C9               	bsf	___ftadd@f1+1,7
  6449  006D                     l2279:
  6450  006D  30FF               	movlw	255
  6451  006E  05C8               	andwf	___ftadd@f1,f
  6452  006F  30FF               	movlw	255
  6453  0070  05C9               	andwf	___ftadd@f1+1,f
  6454  0071  3000               	movlw	0
  6455  0072  05CA               	andwf	___ftadd@f1+2,f
  6456  0073                     l2281:
  6457  0073  17CC               	bsf	___ftadd@f2+1,7
  6458  0074  30FF               	movlw	255
  6459  0075  05CB               	andwf	___ftadd@f2,f
  6460  0076  30FF               	movlw	255
  6461  0077  05CC               	andwf	___ftadd@f2+1,f
  6462  0078  3000               	movlw	0
  6463  0079  05CD               	andwf	___ftadd@f2+2,f
  6464  007A  0853               	movf	___ftadd@exp2,w
  6465  007B  0254               	subwf	___ftadd@exp1,w
  6466  007C  1803               	skipnc
  6467  007D  287F               	goto	u2761
  6468  007E  2880               	goto	u2760
  6469  007F                     u2761:
  6470  007F  28AC               	goto	l2293
  6471  0080                     u2760:
  6472  0080                     l2283:
  6473  0080  3001               	movlw	1
  6474  0081                     u2775:
  6475  0081  1003               	clrc
  6476  0082  0DCB               	rlf	___ftadd@f2,f
  6477  0083  0DCC               	rlf	___ftadd@f2+1,f
  6478  0084  0DCD               	rlf	___ftadd@f2+2,f
  6479  0085  3EFF               	addlw	-1
  6480  0086  1D03               	skipz
  6481  0087  2881               	goto	u2775
  6482  0088  3001               	movlw	1
  6483  0089  02D3               	subwf	___ftadd@exp2,f
  6484  008A                     l2285:
  6485  008A  0853               	movf	___ftadd@exp2,w
  6486  008B  0654               	xorwf	___ftadd@exp1,w
  6487  008C  1903               	skipnz
  6488  008D  288F               	goto	u2781
  6489  008E  2890               	goto	u2780
  6490  008F                     u2781:
  6491  008F  28A5               	goto	l2291
  6492  0090                     u2780:
  6493  0090                     l2287:
  6494  0090  3001               	movlw	1
  6495  0091  02D2               	subwf	___ftadd@sign,f
  6496  0092  0852               	movf	___ftadd@sign,w
  6497  0093  3907               	andlw	7
  6498  0094  1D03               	btfss	3,2
  6499  0095  2897               	goto	u2791
  6500  0096  2898               	goto	u2790
  6501  0097                     u2791:
  6502  0097  2880               	goto	l2283
  6503  0098                     u2790:
  6504  0098  28A5               	goto	l2291
  6505  0099                     l2289:
  6506  0099  3001               	movlw	1
  6507  009A                     u2805:
  6508  009A  1003               	clrc
  6509  009B  0CCA               	rrf	___ftadd@f1+2,f
  6510  009C  0CC9               	rrf	___ftadd@f1+1,f
  6511  009D  0CC8               	rrf	___ftadd@f1,f
  6512  009E  3EFF               	addlw	-1
  6513  009F  1D03               	skipz
  6514  00A0  289A               	goto	u2805
  6515  00A1  3001               	movlw	1
  6516  00A2  00CE               	movwf	??___ftadd
  6517  00A3  084E               	movf	??___ftadd,w
  6518  00A4  07D4               	addwf	___ftadd@exp1,f
  6519  00A5                     l2291:
  6520  00A5  0854               	movf	___ftadd@exp1,w
  6521  00A6  0653               	xorwf	___ftadd@exp2,w
  6522  00A7  1D03               	skipz
  6523  00A8  28AA               	goto	u2811
  6524  00A9  28AB               	goto	u2810
  6525  00AA                     u2811:
  6526  00AA  2899               	goto	l2289
  6527  00AB                     u2810:
  6528  00AB  28DD               	goto	l693
  6529  00AC                     l2293:
  6530  00AC  0854               	movf	___ftadd@exp1,w
  6531  00AD  0253               	subwf	___ftadd@exp2,w
  6532  00AE  1803               	skipnc
  6533  00AF  28B1               	goto	u2821
  6534  00B0  28B2               	goto	u2820
  6535  00B1                     u2821:
  6536  00B1  28DD               	goto	l693
  6537  00B2                     u2820:
  6538  00B2                     l2295:
  6539  00B2  3001               	movlw	1
  6540  00B3                     u2835:
  6541  00B3  1003               	clrc
  6542  00B4  0DC8               	rlf	___ftadd@f1,f
  6543  00B5  0DC9               	rlf	___ftadd@f1+1,f
  6544  00B6  0DCA               	rlf	___ftadd@f1+2,f
  6545  00B7  3EFF               	addlw	-1
  6546  00B8  1D03               	skipz
  6547  00B9  28B3               	goto	u2835
  6548  00BA  3001               	movlw	1
  6549  00BB  02D4               	subwf	___ftadd@exp1,f
  6550  00BC                     l2297:
  6551  00BC  0853               	movf	___ftadd@exp2,w
  6552  00BD  0654               	xorwf	___ftadd@exp1,w
  6553  00BE  1903               	skipnz
  6554  00BF  28C1               	goto	u2841
  6555  00C0  28C2               	goto	u2840
  6556  00C1                     u2841:
  6557  00C1  28D7               	goto	l2303
  6558  00C2                     u2840:
  6559  00C2                     l2299:
  6560  00C2  3001               	movlw	1
  6561  00C3  02D2               	subwf	___ftadd@sign,f
  6562  00C4  0852               	movf	___ftadd@sign,w
  6563  00C5  3907               	andlw	7
  6564  00C6  1D03               	btfss	3,2
  6565  00C7  28C9               	goto	u2851
  6566  00C8  28CA               	goto	u2850
  6567  00C9                     u2851:
  6568  00C9  28B2               	goto	l2295
  6569  00CA                     u2850:
  6570  00CA  28D7               	goto	l2303
  6571  00CB                     l2301:
  6572  00CB  3001               	movlw	1
  6573  00CC                     u2865:
  6574  00CC  1003               	clrc
  6575  00CD  0CCD               	rrf	___ftadd@f2+2,f
  6576  00CE  0CCC               	rrf	___ftadd@f2+1,f
  6577  00CF  0CCB               	rrf	___ftadd@f2,f
  6578  00D0  3EFF               	addlw	-1
  6579  00D1  1D03               	skipz
  6580  00D2  28CC               	goto	u2865
  6581  00D3  3001               	movlw	1
  6582  00D4  00CE               	movwf	??___ftadd
  6583  00D5  084E               	movf	??___ftadd,w
  6584  00D6  07D3               	addwf	___ftadd@exp2,f
  6585  00D7                     l2303:
  6586  00D7  0854               	movf	___ftadd@exp1,w
  6587  00D8  0653               	xorwf	___ftadd@exp2,w
  6588  00D9  1D03               	skipz
  6589  00DA  28DC               	goto	u2871
  6590  00DB  28DD               	goto	u2870
  6591  00DC                     u2871:
  6592  00DC  28CB               	goto	l2301
  6593  00DD                     u2870:
  6594  00DD                     l693:
  6595  00DD  1FD2               	btfss	___ftadd@sign,7
  6596  00DE  28E0               	goto	u2881
  6597  00DF  28E1               	goto	u2880
  6598  00E0                     u2881:
  6599  00E0  28F1               	goto	l2307
  6600  00E1                     u2880:
  6601  00E1                     l2305:
  6602  00E1  30FF               	movlw	255
  6603  00E2  06C8               	xorwf	___ftadd@f1,f
  6604  00E3  30FF               	movlw	255
  6605  00E4  06C9               	xorwf	___ftadd@f1+1,f
  6606  00E5  30FF               	movlw	255
  6607  00E6  06CA               	xorwf	___ftadd@f1+2,f
  6608  00E7  3001               	movlw	1
  6609  00E8  07C8               	addwf	___ftadd@f1,f
  6610  00E9  3000               	movlw	0
  6611  00EA  1803               	skipnc
  6612  00EB  3001               	movlw	1
  6613  00EC  07C9               	addwf	___ftadd@f1+1,f
  6614  00ED  3000               	movlw	0
  6615  00EE  1803               	skipnc
  6616  00EF  3001               	movlw	1
  6617  00F0  07CA               	addwf	___ftadd@f1+2,f
  6618  00F1                     l2307:
  6619  00F1  1F52               	btfss	___ftadd@sign,6
  6620  00F2  28F4               	goto	u2891
  6621  00F3  28F5               	goto	u2890
  6622  00F4                     u2891:
  6623  00F4  2905               	goto	l2311
  6624  00F5                     u2890:
  6625  00F5                     l2309:
  6626  00F5  30FF               	movlw	255
  6627  00F6  06CB               	xorwf	___ftadd@f2,f
  6628  00F7  30FF               	movlw	255
  6629  00F8  06CC               	xorwf	___ftadd@f2+1,f
  6630  00F9  30FF               	movlw	255
  6631  00FA  06CD               	xorwf	___ftadd@f2+2,f
  6632  00FB  3001               	movlw	1
  6633  00FC  07CB               	addwf	___ftadd@f2,f
  6634  00FD  3000               	movlw	0
  6635  00FE  1803               	skipnc
  6636  00FF  3001               	movlw	1
  6637  0100  07CC               	addwf	___ftadd@f2+1,f
  6638  0101  3000               	movlw	0
  6639  0102  1803               	skipnc
  6640  0103  3001               	movlw	1
  6641  0104  07CD               	addwf	___ftadd@f2+2,f
  6642  0105                     l2311:
  6643  0105  01D2               	clrf	___ftadd@sign
  6644  0106                     l2313:
  6645  0106  0848               	movf	___ftadd@f1,w
  6646  0107  07CB               	addwf	___ftadd@f2,f
  6647  0108  0849               	movf	___ftadd@f1+1,w
  6648  0109  1103               	clrz
  6649  010A  1803               	skipnc
  6650  010B  0A49               	incf	___ftadd@f1+1,w
  6651  010C  1903               	skipnz
  6652  010D  290F               	goto	u2901
  6653  010E  07CC               	addwf	___ftadd@f2+1,f
  6654  010F                     u2901:
  6655  010F  084A               	movf	___ftadd@f1+2,w
  6656  0110  1103               	clrz
  6657  0111  1803               	skipnc
  6658  0112  0A4A               	incf	___ftadd@f1+2,w
  6659  0113  1903               	skipnz
  6660  0114  2916               	goto	u2902
  6661  0115  07CD               	addwf	___ftadd@f2+2,f
  6662  0116                     u2902:
  6663  0116                     l2315:
  6664  0116  1FCD               	btfss	___ftadd@f2+2,7
  6665  0117  2919               	goto	u2911
  6666  0118  291A               	goto	u2910
  6667  0119                     u2911:
  6668  0119  292C               	goto	l2321
  6669  011A                     u2910:
  6670  011A                     l2317:
  6671  011A  30FF               	movlw	255
  6672  011B  06CB               	xorwf	___ftadd@f2,f
  6673  011C  30FF               	movlw	255
  6674  011D  06CC               	xorwf	___ftadd@f2+1,f
  6675  011E  30FF               	movlw	255
  6676  011F  06CD               	xorwf	___ftadd@f2+2,f
  6677  0120  3001               	movlw	1
  6678  0121  07CB               	addwf	___ftadd@f2,f
  6679  0122  3000               	movlw	0
  6680  0123  1803               	skipnc
  6681  0124  3001               	movlw	1
  6682  0125  07CC               	addwf	___ftadd@f2+1,f
  6683  0126  3000               	movlw	0
  6684  0127  1803               	skipnc
  6685  0128  3001               	movlw	1
  6686  0129  07CD               	addwf	___ftadd@f2+2,f
  6687  012A                     l2319:
  6688  012A  01D2               	clrf	___ftadd@sign
  6689  012B  0AD2               	incf	___ftadd@sign,f
  6690  012C                     l2321:
  6691  012C  084B               	movf	___ftadd@f2,w
  6692  012D  00F0               	movwf	___ftpack@arg
  6693  012E  084C               	movf	___ftadd@f2+1,w
  6694  012F  00F1               	movwf	___ftpack@arg+1
  6695  0130  084D               	movf	___ftadd@f2+2,w
  6696  0131  00F2               	movwf	___ftpack@arg+2
  6697  0132  0854               	movf	___ftadd@exp1,w
  6698  0133  00CE               	movwf	??___ftadd
  6699  0134  084E               	movf	??___ftadd,w
  6700  0135  00F3               	movwf	___ftpack@exp
  6701  0136  0852               	movf	___ftadd@sign,w
  6702  0137  00CF               	movwf	??___ftadd+1
  6703  0138  084F               	movf	??___ftadd+1,w
  6704  0139  00F4               	movwf	___ftpack@sign
  6705  013A  160A  118A  23BA  120A  118A  	fcall	___ftpack
  6706  013F  0870               	movf	?___ftpack,w
  6707  0140  1283               	bcf	3,5	;RP0=0, select bank0
  6708  0141  1303               	bcf	3,6	;RP1=0, select bank0
  6709  0142  00C8               	movwf	?___ftadd
  6710  0143  0871               	movf	?___ftpack+1,w
  6711  0144  00C9               	movwf	?___ftadd+1
  6712  0145  0872               	movf	?___ftpack+2,w
  6713  0146  00CA               	movwf	?___ftadd+2
  6714  0147                     l679:
  6715  0147  0008               	return
  6716  0148                     __end_of___ftadd:
  6717                           
  6718                           	psect	text23
  6719  1DE2                     __ptext23:	
  6720 ;; *************** function ___ftneg *****************
  6721 ;; Defined at:
  6722 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  f1              3    0[COMMON] float 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  3    0[COMMON] float 
  6729 ;; Registers used:
  6730 ;;		wreg
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6736 ;;      Params:         3       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0
  6739 ;;      Totals:         3       0       0       0       0
  6740 ;;Total ram usage:        3 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_sprintf
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           
  6750                           ;psect for function ___ftneg
  6751  1DE2                     ___ftneg:
  6752  1DE2                     l2709:	
  6753                           ;incstack = 0
  6754                           ; Regs used in ___ftneg: [wreg]
  6755                           
  6756  1DE2  0872               	movf	___ftneg@f1+2,w
  6757  1DE3  0471               	iorwf	___ftneg@f1+1,w
  6758  1DE4  0470               	iorwf	___ftneg@f1,w
  6759  1DE5  1903               	skipnz
  6760  1DE6  2DE8               	goto	u3691
  6761  1DE7  2DE9               	goto	u3690
  6762  1DE8                     u3691:
  6763  1DE8  2DEB               	goto	l2713
  6764  1DE9                     u3690:
  6765  1DE9                     l2711:
  6766  1DE9  3080               	movlw	128
  6767  1DEA  06F2               	xorwf	___ftneg@f1+2,f
  6768  1DEB                     l2713:
  6769  1DEB                     l753:
  6770  1DEB  0008               	return
  6771  1DEC                     __end_of___ftneg:
  6772                           
  6773                           	psect	text24
  6774  1FC8                     __ptext24:	
  6775 ;; *************** function ___ftge *****************
  6776 ;; Defined at:
  6777 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  ff1             3    0[COMMON] float 
  6780 ;;  ff2             3    3[COMMON] float 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;		None               void
  6785 ;; Registers used:
  6786 ;;		wreg, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6792 ;;      Params:         6       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0
  6795 ;;      Totals:         6       0       0       0       0
  6796 ;;Total ram usage:        6 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_sprintf
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           
  6806                           ;psect for function ___ftge
  6807  1FC8                     ___ftge:
  6808  1FC8                     l2689:	
  6809                           ;incstack = 0
  6810                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6811                           
  6812  1FC8  1FF2               	btfss	___ftge@ff1+2,7
  6813  1FC9  2FCB               	goto	u3661
  6814  1FCA  2FCC               	goto	u3660
  6815  1FCB                     u3661:
  6816  1FCB  2FD9               	goto	l2693
  6817  1FCC                     u3660:
  6818  1FCC                     l2691:
  6819  1FCC  0870               	movf	___ftge@ff1,w
  6820  1FCD  3C00               	sublw	0
  6821  1FCE  00F0               	movwf	___ftge@ff1
  6822  1FCF  0871               	movf	___ftge@ff1+1,w
  6823  1FD0  1C03               	skipc
  6824  1FD1  0F71               	incfsz	___ftge@ff1+1,w
  6825  1FD2  3C00               	sublw	0
  6826  1FD3  00F1               	movwf	___ftge@ff1+1
  6827  1FD4  0872               	movf	___ftge@ff1+2,w
  6828  1FD5  1C03               	skipc
  6829  1FD6  0F72               	incfsz	___ftge@ff1+2,w
  6830  1FD7  3C80               	sublw	128
  6831  1FD8  00F2               	movwf	___ftge@ff1+2
  6832  1FD9                     l2693:
  6833  1FD9  1FF5               	btfss	___ftge@ff2+2,7
  6834  1FDA  2FDC               	goto	u3671
  6835  1FDB  2FDD               	goto	u3670
  6836  1FDC                     u3671:
  6837  1FDC  2FEA               	goto	l2697
  6838  1FDD                     u3670:
  6839  1FDD                     l2695:
  6840  1FDD  0873               	movf	___ftge@ff2,w
  6841  1FDE  3C00               	sublw	0
  6842  1FDF  00F3               	movwf	___ftge@ff2
  6843  1FE0  0874               	movf	___ftge@ff2+1,w
  6844  1FE1  1C03               	skipc
  6845  1FE2  0F74               	incfsz	___ftge@ff2+1,w
  6846  1FE3  3C00               	sublw	0
  6847  1FE4  00F4               	movwf	___ftge@ff2+1
  6848  1FE5  0875               	movf	___ftge@ff2+2,w
  6849  1FE6  1C03               	skipc
  6850  1FE7  0F75               	incfsz	___ftge@ff2+2,w
  6851  1FE8  3C80               	sublw	128
  6852  1FE9  00F5               	movwf	___ftge@ff2+2
  6853  1FEA                     l2697:
  6854  1FEA  3080               	movlw	128
  6855  1FEB  06F2               	xorwf	___ftge@ff1+2,f
  6856  1FEC                     l2699:
  6857  1FEC  3080               	movlw	128
  6858  1FED  06F5               	xorwf	___ftge@ff2+2,f
  6859  1FEE                     l2701:
  6860  1FEE  0875               	movf	___ftge@ff2+2,w
  6861  1FEF  0272               	subwf	___ftge@ff1+2,w
  6862  1FF0  1D03               	skipz
  6863  1FF1  2FF8               	goto	u3685
  6864  1FF2  0874               	movf	___ftge@ff2+1,w
  6865  1FF3  0271               	subwf	___ftge@ff1+1,w
  6866  1FF4  1D03               	skipz
  6867  1FF5  2FF8               	goto	u3685
  6868  1FF6  0873               	movf	___ftge@ff2,w
  6869  1FF7  0270               	subwf	___ftge@ff1,w
  6870  1FF8                     u3685:
  6871  1FF8  1803               	skipnc
  6872  1FF9  2FFB               	goto	u3681
  6873  1FFA  2FFC               	goto	u3680
  6874  1FFB                     u3681:
  6875  1FFB  2FFE               	goto	l2705
  6876  1FFC                     u3680:
  6877  1FFC                     l2703:
  6878  1FFC  1003               	clrc
  6879  1FFD  2FFF               	goto	l736
  6880  1FFE                     l2705:
  6881  1FFE  1403               	setc
  6882  1FFF                     l736:
  6883  1FFF  0008               	return
  6884  2000                     __end_of___ftge:
  6885                           
  6886                           	psect	text25
  6887  1E57                     __ptext25:	
  6888 ;; *************** function _setup *****************
  6889 ;; Defined at:
  6890 ;;		line 129 in file "master.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;		None
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6904 ;;      Params:         0       0       0       0       0
  6905 ;;      Locals:         0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0
  6907 ;;      Totals:         0       0       0       0       0
  6908 ;;Total ram usage:        0 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    1
  6911 ;; This function calls:
  6912 ;;		_spiInit
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function _setup
  6920  1E57                     _setup:
  6921  1E57                     l2797:	
  6922                           ;incstack = 0
  6923                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  6924                           
  6925  1E57  1683               	bsf	3,5	;RP0=1, select bank3
  6926  1E58  1703               	bsf	3,6	;RP1=1, select bank3
  6927  1E59  0188               	clrf	8	;volatile
  6928  1E5A  0189               	clrf	9	;volatile
  6929  1E5B  1683               	bsf	3,5	;RP0=1, select bank1
  6930  1E5C  1303               	bcf	3,6	;RP1=0, select bank1
  6931  1E5D  0188               	clrf	8	;volatile
  6932  1E5E  0189               	clrf	9	;volatile
  6933  1E5F  1283               	bcf	3,5	;RP0=0, select bank0
  6934  1E60  1303               	bcf	3,6	;RP1=0, select bank0
  6935  1E61  0188               	clrf	8	;volatile
  6936  1E62  0189               	clrf	9	;volatile
  6937  1E63                     l2799:
  6938  1E63  1683               	bsf	3,5	;RP0=1, select bank1
  6939  1E64  1303               	bcf	3,6	;RP1=0, select bank1
  6940  1E65  1087               	bcf	7,1	;volatile
  6941  1E66                     l2801:
  6942  1E66  1107               	bcf	7,2	;volatile
  6943  1E67                     l2803:
  6944  1E67  1007               	bcf	7,0	;volatile
  6945  1E68                     l2805:
  6946  1E68  1283               	bcf	3,5	;RP0=0, select bank0
  6947  1E69  1303               	bcf	3,6	;RP1=0, select bank0
  6948  1E6A  1507               	bsf	7,2	;volatile
  6949  1E6B                     l2807:
  6950  1E6B  1487               	bsf	7,1	;volatile
  6951  1E6C                     l2809:
  6952  1E6C  1407               	bsf	7,0	;volatile
  6953  1E6D                     l2811:
  6954  1E6D  01F0               	clrf	spiInit@sDataSample
  6955  1E6E  01F1               	clrf	spiInit@sClockIdle
  6956  1E6F  01F2               	clrf	spiInit@sTransmitEdge
  6957  1E70  3020               	movlw	32
  6958  1E71  160A  158A  260A  160A  158A  	fcall	_spiInit
  6959  1E76                     l88:
  6960  1E76  0008               	return
  6961  1E77                     __end_of_setup:
  6962                           
  6963                           	psect	text26
  6964  1E0A                     __ptext26:	
  6965 ;; *************** function _spiInit *****************
  6966 ;; Defined at:
  6967 ;;		line 12 in file "SPI.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  sType           1    wreg     enum E1264
  6970 ;;  sDataSample     1    0[COMMON] enum E1272
  6971 ;;  sClockIdle      1    1[COMMON] enum E1276
  6972 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  sType           1    3[COMMON] enum E1264
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2, status,0
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6984 ;;      Params:         3       0       0       0       0
  6985 ;;      Locals:         1       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0
  6987 ;;      Totals:         4       0       0       0       0
  6988 ;;Total ram usage:        4 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_setup
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function _spiInit
  6999  1E0A                     _spiInit:
  7000                           
  7001                           ;incstack = 0
  7002                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7003                           ;spiInit@sType stored from wreg
  7004  1E0A  00F3               	movwf	spiInit@sType
  7005  1E0B                     l2435:
  7006                           
  7007                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  7008  1E0B  1683               	bsf	3,5	;RP0=1, select bank1
  7009  1E0C  1303               	bcf	3,6	;RP1=0, select bank1
  7010  1E0D  1287               	bcf	7,5	;volatile
  7011                           
  7012                           ;SPI.c: 15:     if(sType & 0b00000100)
  7013  1E0E  1D73               	btfss	spiInit@sType,2
  7014  1E0F  2E11               	goto	u3201
  7015  1E10  2E12               	goto	u3200
  7016  1E11                     u3201:
  7017  1E11  2E16               	goto	l2441
  7018  1E12                     u3200:
  7019  1E12                     l2437:
  7020                           
  7021                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  7022  1E12  0872               	movf	spiInit@sTransmitEdge,w
  7023  1E13  0094               	movwf	20	;volatile
  7024  1E14                     l2439:
  7025                           
  7026                           ;SPI.c: 18:         TRISC3 = 1;
  7027  1E14  1587               	bsf	7,3	;volatile
  7028                           
  7029                           ;SPI.c: 19:     }
  7030  1E15  2E1A               	goto	l104
  7031  1E16                     l2441:
  7032                           
  7033                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  7034  1E16  0870               	movf	spiInit@sDataSample,w
  7035  1E17  0472               	iorwf	spiInit@sTransmitEdge,w
  7036  1E18  0094               	movwf	20	;volatile
  7037  1E19                     l2443:
  7038                           
  7039                           ;SPI.c: 23:         TRISC3 = 0;
  7040  1E19  1187               	bcf	7,3	;volatile
  7041  1E1A                     l104:	
  7042                           ;SPI.c: 24:     }
  7043                           
  7044                           
  7045                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  7046  1E1A  0873               	movf	spiInit@sType,w
  7047  1E1B  0471               	iorwf	spiInit@sClockIdle,w
  7048  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  7049  1E1D  1303               	bcf	3,6	;RP1=0, select bank0
  7050  1E1E  0094               	movwf	20	;volatile
  7051  1E1F                     l105:
  7052  1E1F  0008               	return
  7053  1E20                     __end_of_spiInit:
  7054                           
  7055                           	psect	text27
  7056  1E77                     __ptext27:	
  7057 ;; *************** function _set_cursor *****************
  7058 ;; Defined at:
  7059 ;;		line 57 in file "LCD.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  a               1    wreg     unsigned char 
  7062 ;;  b               1    4[COMMON] unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  a               1    6[COMMON] unsigned char 
  7065 ;;  x               1    7[COMMON] unsigned char 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, pclath, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7075 ;;      Params:         1       0       0       0       0
  7076 ;;      Locals:         2       0       0       0       0
  7077 ;;      Temps:          1       0       0       0       0
  7078 ;;      Totals:         4       0       0       0       0
  7079 ;;Total ram usage:        4 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    2
  7082 ;; This function calls:
  7083 ;;		_CMDs
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function _set_cursor
  7091  1E77                     _set_cursor:
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  7095                           ;set_cursor@a stored from wreg
  7096  1E77  00F6               	movwf	set_cursor@a
  7097  1E78                     l2877:
  7098                           
  7099                           ;LCD.c: 58:     uint8_t x;;LCD.c: 59:     if (a == 1){
  7100  1E78  0376               	decf	set_cursor@a,w
  7101  1E79  1D03               	btfss	3,2
  7102  1E7A  2E7C               	goto	u3891
  7103  1E7B  2E7D               	goto	u3890
  7104  1E7C                     u3891:
  7105  1E7C  2E89               	goto	l2883
  7106  1E7D                     u3890:
  7107  1E7D                     l2879:
  7108                           
  7109                           ;LCD.c: 60:        x = 0x80 + b;
  7110  1E7D  0874               	movf	set_cursor@b,w
  7111  1E7E  3E80               	addlw	128
  7112  1E7F  00F5               	movwf	??_set_cursor
  7113  1E80  0875               	movf	??_set_cursor,w
  7114  1E81  00F7               	movwf	set_cursor@x
  7115  1E82                     l2881:
  7116                           
  7117                           ;LCD.c: 61:        CMDs(x);
  7118  1E82  0877               	movf	set_cursor@x,w
  7119  1E83  160A  158A  2637  160A  158A  	fcall	_CMDs
  7120                           
  7121                           ;LCD.c: 62:     }
  7122  1E88  2E9A               	goto	l216
  7123  1E89                     l2883:
  7124  1E89  3002               	movlw	2
  7125  1E8A  0676               	xorwf	set_cursor@a,w
  7126  1E8B  1D03               	btfss	3,2
  7127  1E8C  2E8E               	goto	u3901
  7128  1E8D  2E8F               	goto	u3900
  7129  1E8E                     u3901:
  7130  1E8E  2E9A               	goto	l216
  7131  1E8F                     u3900:
  7132  1E8F                     l2885:
  7133                           
  7134                           ;LCD.c: 64:         x = 0xC0 + b;
  7135  1E8F  0874               	movf	set_cursor@b,w
  7136  1E90  3EC0               	addlw	192
  7137  1E91  00F5               	movwf	??_set_cursor
  7138  1E92  0875               	movf	??_set_cursor,w
  7139  1E93  00F7               	movwf	set_cursor@x
  7140  1E94                     l2887:
  7141                           
  7142                           ;LCD.c: 65:         CMDs(x);
  7143  1E94  0877               	movf	set_cursor@x,w
  7144  1E95  160A  158A  2637  160A  158A  	fcall	_CMDs
  7145  1E9A                     l216:
  7146  1E9A  0008               	return
  7147  1E9B                     __end_of_set_cursor:
  7148                           
  7149                           	psect	text28
  7150  1F96                     __ptext28:	
  7151 ;; *************** function _contador *****************
  7152 ;; Defined at:
  7153 ;;		line 90 in file "master.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0, pclath, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7167 ;;      Params:         0       0       0       0       0
  7168 ;;      Locals:         0       0       0       0       0
  7169 ;;      Temps:          2       0       0       0       0
  7170 ;;      Totals:         2       0       0       0       0
  7171 ;;Total ram usage:        2 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    2
  7174 ;; This function calls:
  7175 ;;		_spiRead
  7176 ;;		_spiWrite
  7177 ;; This function is called by:
  7178 ;;		_main
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _contador
  7184  1F96                     _contador:
  7185  1F96                     l2847:	
  7186                           ;incstack = 0
  7187                           ; Regs used in _contador: [wreg+status,2+status,0+pclath+cstack]
  7188                           
  7189                           
  7190                           ;master.c: 91: 
  7191  1F96  1283               	bcf	3,5	;RP0=0, select bank0
  7192  1F97  1303               	bcf	3,6	;RP1=0, select bank0
  7193  1F98  1107               	bcf	7,2	;volatile
  7194  1F99                     l2849:
  7195                           
  7196                           ;master.c: 92: 
  7197  1F99  3003               	movlw	3
  7198  1F9A  00F2               	movwf	??_contador+1
  7199  1F9B  3097               	movlw	151
  7200  1F9C  00F1               	movwf	??_contador
  7201  1F9D                     u4557:
  7202  1F9D  0BF1               	decfsz	??_contador,f
  7203  1F9E  2F9D               	goto	u4557
  7204  1F9F  0BF2               	decfsz	??_contador+1,f
  7205  1FA0  2F9D               	goto	u4557
  7206  1FA1  2FA2               	nop2
  7207  1FA2                     l2851:
  7208                           
  7209                           ;master.c: 94: 
  7210  1FA2  3001               	movlw	1
  7211  1FA3  160A  158A  25B2  160A  158A  	fcall	_spiWrite
  7212  1FA8                     l2853:
  7213                           
  7214                           ;master.c: 95: void setup(void) {
  7215  1FA8  160A  158A  25CF  160A  158A  	fcall	_spiRead
  7216  1FAD  00F1               	movwf	??_contador
  7217  1FAE  0871               	movf	??_contador,w
  7218  1FAF  1283               	bcf	3,5	;RP0=0, select bank0
  7219  1FB0  1303               	bcf	3,6	;RP1=0, select bank0
  7220  1FB1  00EF               	movwf	_cont
  7221                           
  7222                           ;master.c: 97:     ANSELH = 0;
  7223  1FB2  3003               	movlw	3
  7224  1FB3  00F2               	movwf	??_contador+1
  7225  1FB4  3097               	movlw	151
  7226  1FB5  00F1               	movwf	??_contador
  7227  1FB6                     u4567:
  7228  1FB6  0BF1               	decfsz	??_contador,f
  7229  1FB7  2FB6               	goto	u4567
  7230  1FB8  0BF2               	decfsz	??_contador+1,f
  7231  1FB9  2FB6               	goto	u4567
  7232  1FBA  2FBB               	nop2
  7233  1FBB                     l2855:
  7234                           
  7235                           ;master.c: 98:     TRISD = 0;
  7236  1FBB  1283               	bcf	3,5	;RP0=0, select bank0
  7237  1FBC  1303               	bcf	3,6	;RP1=0, select bank0
  7238  1FBD  1507               	bsf	7,2	;volatile
  7239                           
  7240                           ;master.c: 99:     TRISE = 0;
  7241  1FBE  3003               	movlw	3
  7242  1FBF  00F2               	movwf	??_contador+1
  7243  1FC0  3097               	movlw	151
  7244  1FC1  00F1               	movwf	??_contador
  7245  1FC2                     u4577:
  7246  1FC2  0BF1               	decfsz	??_contador,f
  7247  1FC3  2FC2               	goto	u4577
  7248  1FC4  0BF2               	decfsz	??_contador+1,f
  7249  1FC5  2FC2               	goto	u4577
  7250  1FC6  2FC7               	nop2
  7251  1FC7                     l79:
  7252  1FC7  0008               	return
  7253  1FC8                     __end_of_contador:
  7254                           
  7255                           	psect	text29
  7256  1DD8                     __ptext29:	
  7257 ;; *************** function _config_txsta *****************
  7258 ;; Defined at:
  7259 ;;		line 9 in file "USART.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		None
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7273 ;;      Params:         0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_main
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           
  7287                           ;psect for function _config_txsta
  7288  1DD8                     _config_txsta:
  7289  1DD8                     l2815:	
  7290                           ;incstack = 0
  7291                           ; Regs used in _config_txsta: []
  7292                           
  7293                           
  7294                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  7295  1DD8  1683               	bsf	3,5	;RP0=1, select bank1
  7296  1DD9  1303               	bcf	3,6	;RP1=0, select bank1
  7297  1DDA  1398               	bcf	24,7	;volatile
  7298                           
  7299                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  7300  1DDB  1318               	bcf	24,6	;volatile
  7301                           
  7302                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  7303  1DDC  1698               	bsf	24,5	;volatile
  7304                           
  7305                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  7306  1DDD  1218               	bcf	24,4	;volatile
  7307                           
  7308                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  7309  1DDE  1118               	bcf	24,2	;volatile
  7310                           
  7311                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  7312  1DDF  1098               	bcf	24,1	;volatile
  7313                           
  7314                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  7315  1DE0  1018               	bcf	24,0	;volatile
  7316  1DE1                     l142:
  7317  1DE1  0008               	return
  7318  1DE2                     __end_of_config_txsta:
  7319                           
  7320                           	psect	text30
  7321  1DBF                     __ptext30:	
  7322 ;; *************** function _config_rcsta *****************
  7323 ;; Defined at:
  7324 ;;		line 19 in file "USART.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		status,2
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0
  7341 ;;      Totals:         0       0       0       0       0
  7342 ;;Total ram usage:        0 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_main
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _config_rcsta
  7353  1DBF                     _config_rcsta:
  7354  1DBF                     l2817:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _config_rcsta: [status,2]
  7357                           
  7358                           
  7359                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  7360  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  7361  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  7362  1DC1  1798               	bsf	24,7	;volatile
  7363                           
  7364                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  7365  1DC2  1318               	bcf	24,6	;volatile
  7366                           
  7367                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  7368  1DC3  1298               	bcf	24,5	;volatile
  7369                           
  7370                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  7371  1DC4  1618               	bsf	24,4	;volatile
  7372  1DC5                     l2819:
  7373                           
  7374                           ;USART.c: 24:     RCREG = 0;
  7375  1DC5  019A               	clrf	26	;volatile
  7376  1DC6                     l145:
  7377  1DC6  0008               	return
  7378  1DC7                     __end_of_config_rcsta:
  7379                           
  7380                           	psect	text31
  7381  0005                     __ptext31:	
  7382 ;; *************** function _clear_LCD *****************
  7383 ;; Defined at:
  7384 ;;		line 52 in file "LCD.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, pclath, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7398 ;;      Params:         0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    2
  7405 ;; This function calls:
  7406 ;;		_CMDs
  7407 ;; This function is called by:
  7408 ;;		_main
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           
  7413                           ;psect for function _clear_LCD
  7414  0005                     _clear_LCD:
  7415  0005                     l2845:	
  7416                           ;incstack = 0
  7417                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  7418                           
  7419                           
  7420                           ;LCD.c: 53:     CMDs(0);
  7421  0005  3000               	movlw	0
  7422  0006  160A  158A  2637  120A  118A  	fcall	_CMDs
  7423                           
  7424                           ;LCD.c: 54:     CMDs(1);
  7425  000B  3001               	movlw	1
  7426  000C  160A  158A  2637  120A  118A  	fcall	_CMDs
  7427  0011                     l210:
  7428  0011  0008               	return
  7429  0012                     __end_of_clear_LCD:
  7430                           
  7431                           	psect	text32
  7432  1DAD                     __ptext32:	
  7433 ;; *************** function __baudios *****************
  7434 ;; Defined at:
  7435 ;;		line 5 in file "USART.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;		None
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		wreg
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7449 ;;      Params:         0       0       0       0       0
  7450 ;;      Locals:         0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0
  7452 ;;      Totals:         0       0       0       0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_main
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function __baudios
  7464  1DAD                     __baudios:
  7465  1DAD                     l2813:	
  7466                           ;incstack = 0
  7467                           ; Regs used in __baudios: [wreg]
  7468                           
  7469                           
  7470                           ;USART.c: 6:     SPBRG = 12;
  7471  1DAD  300C               	movlw	12
  7472  1DAE  1683               	bsf	3,5	;RP0=1, select bank1
  7473  1DAF  1303               	bcf	3,6	;RP1=0, select bank1
  7474  1DB0  0099               	movwf	25	;volatile
  7475  1DB1                     l139:
  7476  1DB1  0008               	return
  7477  1DB2                     __end_of__baudios:
  7478                           
  7479                           	psect	text33
  7480  1E9B                     __ptext33:	
  7481 ;; *************** function ___awtoft *****************
  7482 ;; Defined at:
  7483 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  c               2    8[COMMON] int 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  sign            1   13[COMMON] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  3    8[COMMON] float 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, pclath, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7497 ;;      Params:         3       0       0       0       0
  7498 ;;      Locals:         1       0       0       0       0
  7499 ;;      Temps:          2       0       0       0       0
  7500 ;;      Totals:         6       0       0       0       0
  7501 ;;Total ram usage:        6 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    1
  7504 ;; This function calls:
  7505 ;;		___ftpack
  7506 ;; This function is called by:
  7507 ;;		_main
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function ___awtoft
  7513  1E9B                     ___awtoft:
  7514  1E9B                     l3197:	
  7515                           ;incstack = 0
  7516                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7517                           
  7518  1E9B  01FD               	clrf	___awtoft@sign
  7519  1E9C                     l3199:
  7520  1E9C  1FF9               	btfss	___awtoft@c+1,7
  7521  1E9D  2E9F               	goto	u4491
  7522  1E9E  2EA0               	goto	u4490
  7523  1E9F                     u4491:
  7524  1E9F  2EA7               	goto	l3205
  7525  1EA0                     u4490:
  7526  1EA0                     l3201:
  7527  1EA0  09F8               	comf	___awtoft@c,f
  7528  1EA1  09F9               	comf	___awtoft@c+1,f
  7529  1EA2  0AF8               	incf	___awtoft@c,f
  7530  1EA3  1903               	skipnz
  7531  1EA4  0AF9               	incf	___awtoft@c+1,f
  7532  1EA5                     l3203:
  7533  1EA5  01FD               	clrf	___awtoft@sign
  7534  1EA6  0AFD               	incf	___awtoft@sign,f
  7535  1EA7                     l3205:
  7536  1EA7  0878               	movf	___awtoft@c,w
  7537  1EA8  00F0               	movwf	___ftpack@arg
  7538  1EA9  0879               	movf	___awtoft@c+1,w
  7539  1EAA  00F1               	movwf	___ftpack@arg+1
  7540  1EAB  01F2               	clrf	___ftpack@arg+2
  7541  1EAC  308E               	movlw	142
  7542  1EAD  00FB               	movwf	??___awtoft
  7543  1EAE  087B               	movf	??___awtoft,w
  7544  1EAF  00F3               	movwf	___ftpack@exp
  7545  1EB0  087D               	movf	___awtoft@sign,w
  7546  1EB1  00FC               	movwf	??___awtoft+1
  7547  1EB2  087C               	movf	??___awtoft+1,w
  7548  1EB3  00F4               	movwf	___ftpack@sign
  7549  1EB4  160A  118A  23BA  160A  158A  	fcall	___ftpack
  7550  1EB9  0870               	movf	?___ftpack,w
  7551  1EBA  00F8               	movwf	?___awtoft
  7552  1EBB  0871               	movf	?___ftpack+1,w
  7553  1EBC  00F9               	movwf	?___awtoft+1
  7554  1EBD  0872               	movf	?___ftpack+2,w
  7555  1EBE  00FA               	movwf	?___awtoft+2
  7556  1EBF                     l635:
  7557  1EBF  0008               	return
  7558  1EC0                     __end_of___awtoft:
  7559                           
  7560                           	psect	text34
  7561  13BA                     __ptext34:	
  7562 ;; *************** function ___ftpack *****************
  7563 ;; Defined at:
  7564 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  arg             3    0[COMMON] unsigned um
  7567 ;;  exp             1    3[COMMON] unsigned char 
  7568 ;;  sign            1    4[COMMON] unsigned char 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  3    0[COMMON] float 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7580 ;;      Params:         5       0       0       0       0
  7581 ;;      Locals:         0       0       0       0       0
  7582 ;;      Temps:          3       0       0       0       0
  7583 ;;      Totals:         8       0       0       0       0
  7584 ;;Total ram usage:        8 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		___awtoft
  7590 ;;		___ftadd
  7591 ;;		___ftmul
  7592 ;;		___lltoft
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           
  7597                           ;psect for function ___ftpack
  7598  13BA                     ___ftpack:
  7599  13BA                     l2107:	
  7600                           ;incstack = 0
  7601                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7602                           
  7603  13BA  0873               	movf	___ftpack@exp,w
  7604  13BB  1903               	btfsc	3,2
  7605  13BC  2BBE               	goto	u2261
  7606  13BD  2BBF               	goto	u2260
  7607  13BE                     u2261:
  7608  13BE  2BC6               	goto	l2111
  7609  13BF                     u2260:
  7610  13BF                     l2109:
  7611  13BF  0872               	movf	___ftpack@arg+2,w
  7612  13C0  0471               	iorwf	___ftpack@arg+1,w
  7613  13C1  0470               	iorwf	___ftpack@arg,w
  7614  13C2  1D03               	skipz
  7615  13C3  2BC5               	goto	u2271
  7616  13C4  2BC6               	goto	u2270
  7617  13C5                     u2271:
  7618  13C5  2BD9               	goto	l2117
  7619  13C6                     u2270:
  7620  13C6                     l2111:
  7621  13C6  3000               	movlw	0
  7622  13C7  00F0               	movwf	?___ftpack
  7623  13C8  3000               	movlw	0
  7624  13C9  00F1               	movwf	?___ftpack+1
  7625  13CA  3000               	movlw	0
  7626  13CB  00F2               	movwf	?___ftpack+2
  7627  13CC  2C35               	goto	l658
  7628  13CD                     l2115:
  7629  13CD  3001               	movlw	1
  7630  13CE  00F5               	movwf	??___ftpack
  7631  13CF  0875               	movf	??___ftpack,w
  7632  13D0  07F3               	addwf	___ftpack@exp,f
  7633  13D1  3001               	movlw	1
  7634  13D2                     u2285:
  7635  13D2  1003               	clrc
  7636  13D3  0CF2               	rrf	___ftpack@arg+2,f
  7637  13D4  0CF1               	rrf	___ftpack@arg+1,f
  7638  13D5  0CF0               	rrf	___ftpack@arg,f
  7639  13D6  3EFF               	addlw	-1
  7640  13D7  1D03               	skipz
  7641  13D8  2BD2               	goto	u2285
  7642  13D9                     l2117:
  7643  13D9  30FE               	movlw	254
  7644  13DA  0572               	andwf	___ftpack@arg+2,w
  7645  13DB  1D03               	btfss	3,2
  7646  13DC  2BDE               	goto	u2291
  7647  13DD  2BDF               	goto	u2290
  7648  13DE                     u2291:
  7649  13DE  2BCD               	goto	l2115
  7650  13DF                     u2290:
  7651  13DF  2BF6               	goto	l662
  7652  13E0                     l2119:
  7653  13E0  3001               	movlw	1
  7654  13E1  00F5               	movwf	??___ftpack
  7655  13E2  0875               	movf	??___ftpack,w
  7656  13E3  07F3               	addwf	___ftpack@exp,f
  7657  13E4                     l2121:
  7658  13E4  3001               	movlw	1
  7659  13E5  07F0               	addwf	___ftpack@arg,f
  7660  13E6  3000               	movlw	0
  7661  13E7  1803               	skipnc
  7662  13E8  3001               	movlw	1
  7663  13E9  07F1               	addwf	___ftpack@arg+1,f
  7664  13EA  3000               	movlw	0
  7665  13EB  1803               	skipnc
  7666  13EC  3001               	movlw	1
  7667  13ED  07F2               	addwf	___ftpack@arg+2,f
  7668  13EE                     l2123:
  7669  13EE  3001               	movlw	1
  7670  13EF                     u2305:
  7671  13EF  1003               	clrc
  7672  13F0  0CF2               	rrf	___ftpack@arg+2,f
  7673  13F1  0CF1               	rrf	___ftpack@arg+1,f
  7674  13F2  0CF0               	rrf	___ftpack@arg,f
  7675  13F3  3EFF               	addlw	-1
  7676  13F4  1D03               	skipz
  7677  13F5  2BEF               	goto	u2305
  7678  13F6                     l662:
  7679  13F6  30FF               	movlw	255
  7680  13F7  0572               	andwf	___ftpack@arg+2,w
  7681  13F8  1D03               	btfss	3,2
  7682  13F9  2BFB               	goto	u2311
  7683  13FA  2BFC               	goto	u2310
  7684  13FB                     u2311:
  7685  13FB  2BE0               	goto	l2119
  7686  13FC                     u2310:
  7687  13FC  2C07               	goto	l2127
  7688  13FD                     l2125:
  7689  13FD  3001               	movlw	1
  7690  13FE  02F3               	subwf	___ftpack@exp,f
  7691  13FF  3001               	movlw	1
  7692  1400                     u2325:
  7693  1400  1003               	clrc
  7694  1401  0DF0               	rlf	___ftpack@arg,f
  7695  1402  0DF1               	rlf	___ftpack@arg+1,f
  7696  1403  0DF2               	rlf	___ftpack@arg+2,f
  7697  1404  3EFF               	addlw	-1
  7698  1405  1D03               	skipz
  7699  1406  2C00               	goto	u2325
  7700  1407                     l2127:
  7701  1407  1BF1               	btfsc	___ftpack@arg+1,7
  7702  1408  2C0A               	goto	u2331
  7703  1409  2C0B               	goto	u2330
  7704  140A                     u2331:
  7705  140A  2C11               	goto	l669
  7706  140B                     u2330:
  7707  140B                     l2129:
  7708  140B  3002               	movlw	2
  7709  140C  0273               	subwf	___ftpack@exp,w
  7710  140D  1803               	skipnc
  7711  140E  2C10               	goto	u2341
  7712  140F  2C11               	goto	u2340
  7713  1410                     u2341:
  7714  1410  2BFD               	goto	l2125
  7715  1411                     u2340:
  7716  1411                     l669:
  7717  1411  1873               	btfsc	___ftpack@exp,0
  7718  1412  2C14               	goto	u2351
  7719  1413  2C15               	goto	u2350
  7720  1414                     u2351:
  7721  1414  2C1B               	goto	l670
  7722  1415                     u2350:
  7723  1415                     l2131:
  7724  1415  30FF               	movlw	255
  7725  1416  05F0               	andwf	___ftpack@arg,f
  7726  1417  307F               	movlw	127
  7727  1418  05F1               	andwf	___ftpack@arg+1,f
  7728  1419  30FF               	movlw	255
  7729  141A  05F2               	andwf	___ftpack@arg+2,f
  7730  141B                     l670:
  7731  141B  1003               	clrc
  7732  141C  0CF3               	rrf	___ftpack@exp,f
  7733  141D                     l2133:
  7734  141D  0873               	movf	___ftpack@exp,w
  7735  141E  00F5               	movwf	??___ftpack
  7736  141F  01F6               	clrf	??___ftpack+1
  7737  1420  01F7               	clrf	??___ftpack+2
  7738  1421  3010               	movlw	16
  7739  1422                     u2365:
  7740  1422  1003               	clrc
  7741  1423  0DF5               	rlf	??___ftpack,f
  7742  1424  0DF6               	rlf	??___ftpack+1,f
  7743  1425  0DF7               	rlf	??___ftpack+2,f
  7744  1426                     u2360:
  7745  1426  3EFF               	addlw	-1
  7746  1427  1D03               	skipz
  7747  1428  2C22               	goto	u2365
  7748  1429  0875               	movf	??___ftpack,w
  7749  142A  04F0               	iorwf	___ftpack@arg,f
  7750  142B  0876               	movf	??___ftpack+1,w
  7751  142C  04F1               	iorwf	___ftpack@arg+1,f
  7752  142D  0877               	movf	??___ftpack+2,w
  7753  142E  04F2               	iorwf	___ftpack@arg+2,f
  7754  142F                     l2135:
  7755  142F  0874               	movf	___ftpack@sign,w
  7756  1430  1903               	btfsc	3,2
  7757  1431  2C33               	goto	u2371
  7758  1432  2C34               	goto	u2370
  7759  1433                     u2371:
  7760  1433  2C35               	goto	l671
  7761  1434                     u2370:
  7762  1434                     l2137:
  7763  1434  17F2               	bsf	___ftpack@arg+2,7
  7764  1435                     l671:
  7765  1435                     l658:
  7766  1435  0008               	return
  7767  1436                     __end_of___ftpack:
  7768                           
  7769                           	psect	text35
  7770  1F0A                     __ptext35:	
  7771 ;; *************** function _Write_USART_String *****************
  7772 ;; Defined at:
  7773 ;;		line 30 in file "USART.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  a               2    1[COMMON] PTR unsigned char 
  7776 ;;		 -> STR_3(13), BUFFER(20), 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  i               1    4[COMMON] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7788 ;;      Params:         2       0       0       0       0
  7789 ;;      Locals:         1       0       0       0       0
  7790 ;;      Temps:          1       0       0       0       0
  7791 ;;      Totals:         4       0       0       0       0
  7792 ;;Total ram usage:        4 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    1
  7795 ;; This function calls:
  7796 ;;		_Write_USART
  7797 ;; This function is called by:
  7798 ;;		_main
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _Write_USART_String
  7804  1F0A                     _Write_USART_String:
  7805  1F0A                     l3189:	
  7806                           ;incstack = 0
  7807                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7808                           
  7809                           
  7810                           ;USART.c: 31:     uint8_t i;;USART.c: 32:     for(i=0;a[i]!='\0';i++){
  7811  1F0A  01F4               	clrf	Write_USART_String@i
  7812  1F0B  2F21               	goto	l3195
  7813  1F0C                     l3191:
  7814                           
  7815                           ;USART.c: 33:         Write_USART(a[i]);
  7816  1F0C  0874               	movf	Write_USART_String@i,w
  7817  1F0D  0771               	addwf	Write_USART_String@a,w
  7818  1F0E  0084               	movwf	4
  7819  1F0F  0872               	movf	Write_USART_String@a+1,w
  7820  1F10  1803               	skipnc
  7821  1F11  0A72               	incf	Write_USART_String@a+1,w
  7822  1F12  00FF               	movwf	btemp+1
  7823  1F13  160A  118A  2000  160A  158A  	fcall	stringtab
  7824  1F18  160A  158A  25EC  160A  158A  	fcall	_Write_USART
  7825  1F1D                     l3193:
  7826                           
  7827                           ;USART.c: 34:     }
  7828  1F1D  3001               	movlw	1
  7829  1F1E  00F3               	movwf	??_Write_USART_String
  7830  1F1F  0873               	movf	??_Write_USART_String,w
  7831  1F20  07F4               	addwf	Write_USART_String@i,f
  7832  1F21                     l3195:
  7833  1F21  0874               	movf	Write_USART_String@i,w
  7834  1F22  0771               	addwf	Write_USART_String@a,w
  7835  1F23  0084               	movwf	4
  7836  1F24  0872               	movf	Write_USART_String@a+1,w
  7837  1F25  1803               	skipnc
  7838  1F26  0A72               	incf	Write_USART_String@a+1,w
  7839  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  7840  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  7841  1F29  00FF               	movwf	btemp+1
  7842  1F2A  160A  118A  2000  160A  158A  	fcall	stringtab
  7843  1F2F  3A00               	xorlw	0
  7844  1F30  1D03               	skipz
  7845  1F31  2F33               	goto	u4481
  7846  1F32  2F34               	goto	u4480
  7847  1F33                     u4481:
  7848  1F33  2F0C               	goto	l3191
  7849  1F34                     u4480:
  7850  1F34                     l157:
  7851  1F34  0008               	return
  7852  1F35                     __end_of_Write_USART_String:
  7853                           
  7854                           	psect	text36
  7855  1DEC                     __ptext36:	
  7856 ;; *************** function _Write_USART *****************
  7857 ;; Defined at:
  7858 ;;		line 26 in file "USART.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  a               1    wreg     unsigned char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  a               1    0[COMMON] unsigned char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7872 ;;      Params:         0       0       0       0       0
  7873 ;;      Locals:         1       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0
  7875 ;;      Totals:         1       0       0       0       0
  7876 ;;Total ram usage:        1 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_main
  7882 ;;		_Write_USART_String
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function _Write_USART
  7888  1DEC                     _Write_USART:
  7889                           
  7890                           ;incstack = 0
  7891                           ; Regs used in _Write_USART: [wreg]
  7892                           ;Write_USART@a stored from wreg
  7893  1DEC  00F0               	movwf	Write_USART@a
  7894  1DED                     l2423:
  7895  1DED                     l148:	
  7896                           ;USART.c: 27:     while(!TRMT);
  7897                           
  7898  1DED  1683               	bsf	3,5	;RP0=1, select bank1
  7899  1DEE  1303               	bcf	3,6	;RP1=0, select bank1
  7900  1DEF  1C98               	btfss	24,1	;volatile
  7901  1DF0  2DF2               	goto	u3191
  7902  1DF1  2DF3               	goto	u3190
  7903  1DF2                     u3191:
  7904  1DF2  2DED               	goto	l148
  7905  1DF3                     u3190:
  7906  1DF3                     l2425:
  7907                           
  7908                           ;USART.c: 28:     TXREG=a;
  7909  1DF3  0870               	movf	Write_USART@a,w
  7910  1DF4  1283               	bcf	3,5	;RP0=0, select bank0
  7911  1DF5  1303               	bcf	3,6	;RP1=0, select bank0
  7912  1DF6  0099               	movwf	25	;volatile
  7913  1DF7                     l151:
  7914  1DF7  0008               	return
  7915  1DF8                     __end_of_Write_USART:
  7916                           
  7917                           	psect	text37
  7918  1285                     __ptext37:	
  7919 ;; *************** function _LCD_init *****************
  7920 ;; Defined at:
  7921 ;;		line 69 in file "LCD.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;		None
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0, pclath, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7935 ;;      Params:         0       0       0       0       0
  7936 ;;      Locals:         0       0       0       0       0
  7937 ;;      Temps:          2       0       0       0       0
  7938 ;;      Totals:         2       0       0       0       0
  7939 ;;Total ram usage:        2 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    2
  7942 ;; This function calls:
  7943 ;;		_CMDs
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function _LCD_init
  7951  1285                     _LCD_init:
  7952  1285                     l2821:	
  7953                           ;incstack = 0
  7954                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7955                           
  7956                           
  7957                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7958  1285  301A               	movlw	26
  7959  1286  00F5               	movwf	??_LCD_init+1
  7960  1287  30F8               	movlw	248
  7961  1288  00F4               	movwf	??_LCD_init
  7962  1289                     u4587:
  7963  1289  0BF4               	decfsz	??_LCD_init,f
  7964  128A  2A89               	goto	u4587
  7965  128B  0BF5               	decfsz	??_LCD_init+1,f
  7966  128C  2A89               	goto	u4587
  7967  128D  0000               	nop
  7968  128E                     l2823:
  7969                           
  7970                           ;LCD.c: 71:     CMDs (0x30);
  7971  128E  3030               	movlw	48
  7972  128F  160A  158A  2637  160A  118A  	fcall	_CMDs
  7973  1294                     l2825:
  7974                           
  7975                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7976  1294  3007               	movlw	7
  7977  1295  00F5               	movwf	??_LCD_init+1
  7978  1296  307D               	movlw	125
  7979  1297  00F4               	movwf	??_LCD_init
  7980  1298                     u4597:
  7981  1298  0BF4               	decfsz	??_LCD_init,f
  7982  1299  2A98               	goto	u4597
  7983  129A  0BF5               	decfsz	??_LCD_init+1,f
  7984  129B  2A98               	goto	u4597
  7985                           
  7986                           ;LCD.c: 73:     CMDs (0x30);
  7987  129C  3030               	movlw	48
  7988  129D  160A  158A  2637  160A  118A  	fcall	_CMDs
  7989  12A2                     l2827:
  7990                           
  7991                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7992  12A2  3021               	movlw	33
  7993  12A3  00F4               	movwf	??_LCD_init
  7994  12A4                     u4607:
  7995  12A4  0BF4               	decfsz	??_LCD_init,f
  7996  12A5  2AA4               	goto	u4607
  7997  12A6                     l2829:
  7998                           
  7999                           ;LCD.c: 75:     CMDs (0x30);
  8000  12A6  3030               	movlw	48
  8001  12A7  160A  158A  2637  160A  118A  	fcall	_CMDs
  8002                           
  8003                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8004  12AC  3021               	movlw	33
  8005  12AD  00F4               	movwf	??_LCD_init
  8006  12AE                     u4617:
  8007  12AE  0BF4               	decfsz	??_LCD_init,f
  8008  12AF  2AAE               	goto	u4617
  8009  12B0                     l2831:
  8010                           
  8011                           ;LCD.c: 77:     CMDs (0x38);
  8012  12B0  3038               	movlw	56
  8013  12B1  160A  158A  2637  160A  118A  	fcall	_CMDs
  8014  12B6                     l2833:
  8015                           
  8016                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8017  12B6  3013               	movlw	19
  8018  12B7  00F4               	movwf	??_LCD_init
  8019  12B8                     u4627:
  8020  12B8  0BF4               	decfsz	??_LCD_init,f
  8021  12B9  2AB8               	goto	u4627
  8022  12BA  2ABB               	nop2
  8023                           
  8024                           ;LCD.c: 79:     CMDs (0x08);
  8025  12BB  3008               	movlw	8
  8026  12BC  160A  158A  2637  160A  118A  	fcall	_CMDs
  8027  12C1                     l2835:
  8028                           
  8029                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8030  12C1  3013               	movlw	19
  8031  12C2  00F4               	movwf	??_LCD_init
  8032  12C3                     u4637:
  8033  12C3  0BF4               	decfsz	??_LCD_init,f
  8034  12C4  2AC3               	goto	u4637
  8035  12C5  2AC6               	nop2
  8036  12C6                     l2837:
  8037                           
  8038                           ;LCD.c: 81:     CMDs (0x01);
  8039  12C6  3001               	movlw	1
  8040  12C7  160A  158A  2637  160A  118A  	fcall	_CMDs
  8041                           
  8042                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8043  12CC  3007               	movlw	7
  8044  12CD  00F5               	movwf	??_LCD_init+1
  8045  12CE  307D               	movlw	125
  8046  12CF  00F4               	movwf	??_LCD_init
  8047  12D0                     u4647:
  8048  12D0  0BF4               	decfsz	??_LCD_init,f
  8049  12D1  2AD0               	goto	u4647
  8050  12D2  0BF5               	decfsz	??_LCD_init+1,f
  8051  12D3  2AD0               	goto	u4647
  8052  12D4                     l2839:
  8053                           
  8054                           ;LCD.c: 83:     CMDs (0x06);
  8055  12D4  3006               	movlw	6
  8056  12D5  160A  158A  2637  160A  118A  	fcall	_CMDs
  8057  12DA                     l2841:
  8058                           
  8059                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8060  12DA  3013               	movlw	19
  8061  12DB  00F4               	movwf	??_LCD_init
  8062  12DC                     u4657:
  8063  12DC  0BF4               	decfsz	??_LCD_init,f
  8064  12DD  2ADC               	goto	u4657
  8065  12DE  2ADF               	nop2
  8066                           
  8067                           ;LCD.c: 85:     CMDs (0x0C);
  8068  12DF  300C               	movlw	12
  8069  12E0  160A  158A  2637  160A  118A  	fcall	_CMDs
  8070  12E5                     l2843:
  8071                           
  8072                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8073  12E5  3013               	movlw	19
  8074  12E6  00F4               	movwf	??_LCD_init
  8075  12E7                     u4667:
  8076  12E7  0BF4               	decfsz	??_LCD_init,f
  8077  12E8  2AE7               	goto	u4667
  8078  12E9  2AEA               	nop2
  8079  12EA                     l219:
  8080  12EA  0008               	return
  8081  12EB                     __end_of_LCD_init:
  8082                           
  8083                           	psect	text38
  8084  1E37                     __ptext38:	
  8085 ;; *************** function _CMDs *****************
  8086 ;; Defined at:
  8087 ;;		line 42 in file "LCD.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  a               1    wreg     unsigned char 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  a               1    3[COMMON] unsigned char 
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  1    wreg      void 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0, pclath, cstack
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8101 ;;      Params:         0       0       0       0       0
  8102 ;;      Locals:         1       0       0       0       0
  8103 ;;      Temps:          2       0       0       0       0
  8104 ;;      Totals:         3       0       0       0       0
  8105 ;;Total ram usage:        3 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; Hardware stack levels required when called:    1
  8108 ;; This function calls:
  8109 ;;		_port
  8110 ;; This function is called by:
  8111 ;;		_clear_LCD
  8112 ;;		_set_cursor
  8113 ;;		_LCD_init
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function _CMDs
  8119  1E37                     _CMDs:
  8120                           
  8121                           ;incstack = 0
  8122                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  8123                           ;CMDs@a stored from wreg
  8124  1E37  00F3               	movwf	CMDs@a
  8125  1E38                     l2445:
  8126                           
  8127                           ;LCD.c: 43:     RE0 = 0;
  8128  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  8129  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  8130  1E3A  1009               	bcf	9,0	;volatile
  8131  1E3B                     l2447:
  8132                           
  8133                           ;LCD.c: 44:     port(a);
  8134  1E3B  0873               	movf	CMDs@a,w
  8135  1E3C  160A  118A  2112  160A  158A  	fcall	_port
  8136  1E41                     l2449:
  8137                           
  8138                           ;LCD.c: 45:     RE1 = 1;
  8139  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  8140  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  8141  1E43  1489               	bsf	9,1	;volatile
  8142  1E44                     l2451:
  8143                           
  8144                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8145  1E44  2E45               	nop2	;2 cycle nop
  8146  1E45  2E46               	nop2	;2 cycle nop
  8147  1E46  0000               	nop
  8148  1E47                     l2453:
  8149                           
  8150                           ;LCD.c: 47:     RE1 = 0;
  8151  1E47  1283               	bcf	3,5	;RP0=0, select bank0
  8152  1E48  1303               	bcf	3,6	;RP1=0, select bank0
  8153  1E49  1089               	bcf	9,1	;volatile
  8154  1E4A                     l2455:
  8155                           
  8156                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8157  1E4A  2E4B               	nop2	;2 cycle nop
  8158  1E4B  2E4C               	nop2	;2 cycle nop
  8159  1E4C  0000               	nop
  8160  1E4D                     l2457:
  8161                           
  8162                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8163  1E4D  3003               	movlw	3
  8164  1E4E  00F2               	movwf	??_CMDs+1
  8165  1E4F  3097               	movlw	151
  8166  1E50  00F1               	movwf	??_CMDs
  8167  1E51                     u4677:
  8168  1E51  0BF1               	decfsz	??_CMDs,f
  8169  1E52  2E51               	goto	u4677
  8170  1E53  0BF2               	decfsz	??_CMDs+1,f
  8171  1E54  2E51               	goto	u4677
  8172  1E55  2E56               	nop2
  8173  1E56                     l207:
  8174  1E56  0008               	return
  8175  1E57                     __end_of_CMDs:
  8176                           
  8177                           	psect	text39
  8178  1112                     __ptext39:	
  8179 ;; *************** function _port *****************
  8180 ;; Defined at:
  8181 ;;		line 7 in file "LCD.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  a               1    wreg     unsigned char 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  a               1    0[COMMON] unsigned char 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		wreg
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8195 ;;      Params:         0       0       0       0       0
  8196 ;;      Locals:         1       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0
  8198 ;;      Totals:         1       0       0       0       0
  8199 ;;Total ram usage:        1 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_CMDs
  8205 ;;		_write_char
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           
  8210                           ;psect for function _port
  8211  1112                     _port:
  8212                           
  8213                           ;incstack = 0
  8214                           ; Regs used in _port: [wreg]
  8215                           ;port@a stored from wreg
  8216  1112  00F0               	movwf	port@a
  8217  1113                     l2141:
  8218                           
  8219                           ;LCD.c: 8:     if(a & 1){
  8220  1113  1C70               	btfss	port@a,0
  8221  1114  2916               	goto	u2391
  8222  1115  2917               	goto	u2390
  8223  1116                     u2391:
  8224  1116  291B               	goto	l188
  8225  1117                     u2390:
  8226  1117                     l2143:
  8227                           
  8228                           ;LCD.c: 9:         RD0=1;}
  8229  1117  1283               	bcf	3,5	;RP0=0, select bank0
  8230  1118  1303               	bcf	3,6	;RP1=0, select bank0
  8231  1119  1408               	bsf	8,0	;volatile
  8232  111A  291E               	goto	l189
  8233  111B                     l188:	
  8234                           ;LCD.c: 10:     else{
  8235                           
  8236                           
  8237                           ;LCD.c: 11:         RD0=0;}
  8238  111B  1283               	bcf	3,5	;RP0=0, select bank0
  8239  111C  1303               	bcf	3,6	;RP1=0, select bank0
  8240  111D  1008               	bcf	8,0	;volatile
  8241  111E                     l189:
  8242                           
  8243                           ;LCD.c: 12:     if(a & 2){
  8244  111E  1CF0               	btfss	port@a,1
  8245  111F  2921               	goto	u2401
  8246  1120  2922               	goto	u2400
  8247  1121                     u2401:
  8248  1121  2924               	goto	l190
  8249  1122                     u2400:
  8250  1122                     l2145:
  8251                           
  8252                           ;LCD.c: 13:         RD1=1;}
  8253  1122  1488               	bsf	8,1	;volatile
  8254  1123  2925               	goto	l191
  8255  1124                     l190:	
  8256                           ;LCD.c: 14:     else{
  8257                           
  8258                           
  8259                           ;LCD.c: 15:         RD1=0;}
  8260  1124  1088               	bcf	8,1	;volatile
  8261  1125                     l191:
  8262                           
  8263                           ;LCD.c: 16:     if(a & 4){
  8264  1125  1D70               	btfss	port@a,2
  8265  1126  2928               	goto	u2411
  8266  1127  2929               	goto	u2410
  8267  1128                     u2411:
  8268  1128  292B               	goto	l192
  8269  1129                     u2410:
  8270  1129                     l2147:
  8271                           
  8272                           ;LCD.c: 17:         RD2=1;}
  8273  1129  1508               	bsf	8,2	;volatile
  8274  112A  292C               	goto	l193
  8275  112B                     l192:	
  8276                           ;LCD.c: 18:     else{
  8277                           
  8278                           
  8279                           ;LCD.c: 19:         RD2=0;}
  8280  112B  1108               	bcf	8,2	;volatile
  8281  112C                     l193:
  8282                           
  8283                           ;LCD.c: 20:     if(a & 8){
  8284  112C  1DF0               	btfss	port@a,3
  8285  112D  292F               	goto	u2421
  8286  112E  2930               	goto	u2420
  8287  112F                     u2421:
  8288  112F  2932               	goto	l194
  8289  1130                     u2420:
  8290  1130                     l2149:
  8291                           
  8292                           ;LCD.c: 21:         RD3=1;}
  8293  1130  1588               	bsf	8,3	;volatile
  8294  1131  2933               	goto	l195
  8295  1132                     l194:	
  8296                           ;LCD.c: 22:     else{
  8297                           
  8298                           
  8299                           ;LCD.c: 23:         RD3=0;}
  8300  1132  1188               	bcf	8,3	;volatile
  8301  1133                     l195:
  8302                           
  8303                           ;LCD.c: 24:     if(a & 16){
  8304  1133  1E70               	btfss	port@a,4
  8305  1134  2936               	goto	u2431
  8306  1135  2937               	goto	u2430
  8307  1136                     u2431:
  8308  1136  2939               	goto	l196
  8309  1137                     u2430:
  8310  1137                     l2151:
  8311                           
  8312                           ;LCD.c: 25:         RD4=1;}
  8313  1137  1608               	bsf	8,4	;volatile
  8314  1138  293A               	goto	l197
  8315  1139                     l196:	
  8316                           ;LCD.c: 26:     else{
  8317                           
  8318                           
  8319                           ;LCD.c: 27:         RD4=0;}
  8320  1139  1208               	bcf	8,4	;volatile
  8321  113A                     l197:
  8322                           
  8323                           ;LCD.c: 28:     if(a & 32){
  8324  113A  1EF0               	btfss	port@a,5
  8325  113B  293D               	goto	u2441
  8326  113C  293E               	goto	u2440
  8327  113D                     u2441:
  8328  113D  2940               	goto	l198
  8329  113E                     u2440:
  8330  113E                     l2153:
  8331                           
  8332                           ;LCD.c: 29:         RD5=1;}
  8333  113E  1688               	bsf	8,5	;volatile
  8334  113F  2941               	goto	l199
  8335  1140                     l198:	
  8336                           ;LCD.c: 30:     else{
  8337                           
  8338                           
  8339                           ;LCD.c: 31:         RD5=0;}
  8340  1140  1288               	bcf	8,5	;volatile
  8341  1141                     l199:
  8342                           
  8343                           ;LCD.c: 32:     if(a & 64){
  8344  1141  1F70               	btfss	port@a,6
  8345  1142  2944               	goto	u2451
  8346  1143  2945               	goto	u2450
  8347  1144                     u2451:
  8348  1144  2947               	goto	l200
  8349  1145                     u2450:
  8350  1145                     l2155:
  8351                           
  8352                           ;LCD.c: 33:         RD6=1;}
  8353  1145  1708               	bsf	8,6	;volatile
  8354  1146  2948               	goto	l201
  8355  1147                     l200:	
  8356                           ;LCD.c: 34:     else{
  8357                           
  8358                           
  8359                           ;LCD.c: 35:         RD6=0;}
  8360  1147  1308               	bcf	8,6	;volatile
  8361  1148                     l201:
  8362                           
  8363                           ;LCD.c: 36:     if(a & 128){
  8364  1148  1FF0               	btfss	port@a,7
  8365  1149  294B               	goto	u2461
  8366  114A  294C               	goto	u2460
  8367  114B                     u2461:
  8368  114B  294E               	goto	l202
  8369  114C                     u2460:
  8370  114C                     l2157:
  8371                           
  8372                           ;LCD.c: 37:         RD7=1;}
  8373  114C  1788               	bsf	8,7	;volatile
  8374  114D  294F               	goto	l204
  8375  114E                     l202:	
  8376                           ;LCD.c: 38:     else{
  8377                           
  8378                           
  8379                           ;LCD.c: 39:         RD7=0;}
  8380  114E  1388               	bcf	8,7	;volatile
  8381  114F                     l204:
  8382  114F  0008               	return
  8383  1150                     __end_of_port:
  8384                           
  8385                           	psect	text40
  8386  1F64                     __ptext40:	
  8387 ;; *************** function _ADCread *****************
  8388 ;; Defined at:
  8389 ;;		line 102 in file "master.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0, pclath, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0
  8405 ;;      Temps:          2       0       0       0       0
  8406 ;;      Totals:         2       0       0       0       0
  8407 ;;Total ram usage:        2 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    2
  8410 ;; This function calls:
  8411 ;;		_spiRead
  8412 ;;		_spiWrite
  8413 ;; This function is called by:
  8414 ;;		_main
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           
  8419                           ;psect for function _ADCread
  8420  1F64                     _ADCread:
  8421  1F64                     l2857:	
  8422                           ;incstack = 0
  8423                           ; Regs used in _ADCread: [wreg+status,2+status,0+pclath+cstack]
  8424                           
  8425                           
  8426                           ;master.c: 103:     TRISC1 = 0;
  8427  1F64  1283               	bcf	3,5	;RP0=0, select bank0
  8428  1F65  1303               	bcf	3,6	;RP1=0, select bank0
  8429  1F66  1087               	bcf	7,1	;volatile
  8430  1F67                     l2859:
  8431                           
  8432                           ;master.c: 104:     TRISC2 = 0;
  8433  1F67  3003               	movlw	3
  8434  1F68  00F2               	movwf	??_ADCread+1
  8435  1F69  3097               	movlw	151
  8436  1F6A  00F1               	movwf	??_ADCread
  8437  1F6B                     u4687:
  8438  1F6B  0BF1               	decfsz	??_ADCread,f
  8439  1F6C  2F6B               	goto	u4687
  8440  1F6D  0BF2               	decfsz	??_ADCread+1,f
  8441  1F6E  2F6B               	goto	u4687
  8442  1F6F  2F70               	nop2
  8443  1F70                     l2861:
  8444                           
  8445                           ;master.c: 106:     PORTCbits.RC2 = 1;
  8446  1F70  3001               	movlw	1
  8447  1F71  160A  158A  25B2  160A  158A  	fcall	_spiWrite
  8448  1F76                     l2863:
  8449                           
  8450                           ;master.c: 107:     PORTCbits.RC1 = 1;
  8451  1F76  160A  158A  25CF  160A  158A  	fcall	_spiRead
  8452  1F7B  00F1               	movwf	??_ADCread
  8453  1F7C  0871               	movf	??_ADCread,w
  8454  1F7D  1283               	bcf	3,5	;RP0=0, select bank0
  8455  1F7E  1303               	bcf	3,6	;RP1=0, select bank0
  8456  1F7F  00EE               	movwf	_ADC
  8457                           
  8458                           ;master.c: 109:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  8459  1F80  3003               	movlw	3
  8460  1F81  00F2               	movwf	??_ADCread+1
  8461  1F82  3097               	movlw	151
  8462  1F83  00F1               	movwf	??_ADCread
  8463  1F84                     u4697:
  8464  1F84  0BF1               	decfsz	??_ADCread,f
  8465  1F85  2F84               	goto	u4697
  8466  1F86  0BF2               	decfsz	??_ADCread+1,f
  8467  1F87  2F84               	goto	u4697
  8468  1F88  2F89               	nop2
  8469  1F89                     l2865:
  8470                           
  8471                           ;master.c: 110: }
  8472  1F89  1283               	bcf	3,5	;RP0=0, select bank0
  8473  1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  8474  1F8B  1487               	bsf	7,1	;volatile
  8475  1F8C  3003               	movlw	3
  8476  1F8D  00F2               	movwf	??_ADCread+1
  8477  1F8E  3097               	movlw	151
  8478  1F8F  00F1               	movwf	??_ADCread
  8479  1F90                     u4707:
  8480  1F90  0BF1               	decfsz	??_ADCread,f
  8481  1F91  2F90               	goto	u4707
  8482  1F92  0BF2               	decfsz	??_ADCread+1,f
  8483  1F93  2F90               	goto	u4707
  8484  1F94  2F95               	nop2
  8485  1F95                     l82:
  8486  1F95  0008               	return
  8487  1F96                     __end_of_ADCread:
  8488                           
  8489                           	psect	text41
  8490  1DB2                     __ptext41:	
  8491 ;; *************** function _spiWrite *****************
  8492 ;; Defined at:
  8493 ;;		line 34 in file "SPI.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  dat             1    wreg     unsigned char 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;  dat             1    0[COMMON] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8507 ;;      Params:         0       0       0       0       0
  8508 ;;      Locals:         1       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0
  8510 ;;      Totals:         1       0       0       0       0
  8511 ;;Total ram usage:        1 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_contador
  8517 ;;		_ADCread
  8518 ;;		_temperatura
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function _spiWrite
  8524  1DB2                     _spiWrite:
  8525                           
  8526                           ;incstack = 0
  8527                           ; Regs used in _spiWrite: [wreg]
  8528                           ;spiWrite@dat stored from wreg
  8529  1DB2  00F0               	movwf	spiWrite@dat
  8530  1DB3                     l2427:
  8531                           
  8532                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  8533  1DB3  0870               	movf	spiWrite@dat,w
  8534  1DB4  1283               	bcf	3,5	;RP0=0, select bank0
  8535  1DB5  1303               	bcf	3,6	;RP1=0, select bank0
  8536  1DB6  0093               	movwf	19	;volatile
  8537  1DB7                     l114:
  8538  1DB7  0008               	return
  8539  1DB8                     __end_of_spiWrite:
  8540                           
  8541                           	psect	text42
  8542  1DCF                     __ptext42:	
  8543 ;; *************** function _spiRead *****************
  8544 ;; Defined at:
  8545 ;;		line 47 in file "SPI.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      unsigned char 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, pclath, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8559 ;;      Params:         0       0       0       0       0
  8560 ;;      Locals:         0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0
  8562 ;;      Totals:         0       0       0       0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    1
  8566 ;; This function calls:
  8567 ;;		_spiReceiveWait
  8568 ;; This function is called by:
  8569 ;;		_contador
  8570 ;;		_ADCread
  8571 ;;		_temperatura
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           
  8576                           ;psect for function _spiRead
  8577  1DCF                     _spiRead:
  8578  1DCF                     l2429:	
  8579                           ;incstack = 0
  8580                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8581                           
  8582                           
  8583                           ;SPI.c: 49:     spiReceiveWait();
  8584  1DCF  160A  158A  25B8  160A  158A  	fcall	_spiReceiveWait
  8585  1DD4                     l2431:
  8586                           
  8587                           ;SPI.c: 50:     return(SSPBUF);
  8588  1DD4  1283               	bcf	3,5	;RP0=0, select bank0
  8589  1DD5  1303               	bcf	3,6	;RP1=0, select bank0
  8590  1DD6  0813               	movf	19,w	;volatile
  8591  1DD7                     l122:
  8592  1DD7  0008               	return
  8593  1DD8                     __end_of_spiRead:
  8594                           
  8595                           	psect	text43
  8596  1DB8                     __ptext43:	
  8597 ;; *************** function _spiReceiveWait *****************
  8598 ;; Defined at:
  8599 ;;		line 29 in file "SPI.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;		None
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      void 
  8606 ;; Registers used:
  8607 ;;		None
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8613 ;;      Params:         0       0       0       0       0
  8614 ;;      Locals:         0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0
  8616 ;;      Totals:         0       0       0       0       0
  8617 ;;Total ram usage:        0 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_spiRead
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function _spiReceiveWait
  8628  1DB8                     _spiReceiveWait:
  8629  1DB8                     l2139:	
  8630                           ;incstack = 0
  8631                           ; Regs used in _spiReceiveWait: []
  8632                           
  8633  1DB8                     l108:	
  8634                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  8635                           
  8636  1DB8  1683               	bsf	3,5	;RP0=1, select bank1
  8637  1DB9  1303               	bcf	3,6	;RP1=0, select bank1
  8638  1DBA  1C14               	btfss	20,0	;volatile
  8639  1DBB  2DBD               	goto	u2381
  8640  1DBC  2DBE               	goto	u2380
  8641  1DBD                     u2381:
  8642  1DBD  2DB8               	goto	l108
  8643  1DBE                     u2380:
  8644  1DBE                     l111:
  8645  1DBE  0008               	return
  8646  1DBF                     __end_of_spiReceiveWait:
  8647  007E                     btemp	set	126	;btemp
  8648  007E                     wtemp0	set	126
  8649                           
  8650                           	psect	config
  8651                           
  8652                           ;Config register CONFIG1 @ 0x2007
  8653                           ;	Oscillator Selection bits
  8654                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  8655                           ;	Watchdog Timer Enable bit
  8656                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8657                           ;	Power-up Timer Enable bit
  8658                           ;	PWRTE = OFF, PWRT disabled
  8659                           ;	RE3/MCLR pin function select bit
  8660                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8661                           ;	Code Protection bit
  8662                           ;	CP = OFF, Program memory code protection is disabled
  8663                           ;	Data Code Protection bit
  8664                           ;	CPD = OFF, Data memory code protection is disabled
  8665                           ;	Brown Out Reset Selection bits
  8666                           ;	BOREN = OFF, BOR disabled
  8667                           ;	Internal External Switchover bit
  8668                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8669                           ;	Fail-Safe Clock Monitor Enabled bit
  8670                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8671                           ;	Low Voltage Programming Enable bit
  8672                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8673                           ;	In-Circuit Debugger Mode bit
  8674                           ;	DEBUG = 0x1, unprogrammed default
  8675  2007                     	org	8199
  8676  2007  20D6               	dw	8406
  8677                           
  8678                           ;Config register CONFIG2 @ 0x2008
  8679                           ;	Brown-out Reset Selection bit
  8680                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8681                           ;	Flash Program Memory Self Write Enable bits
  8682                           ;	WRT = OFF, Write protection off
  8683  2008                     	org	8200
  8684  2008  3FFF               	dw	16383
  8685                           
  8686                           	psect	text4_split_1
  8687  0148                     u4080:
  8688  0148                     l2993:
  8689  0148  1683               	bsf	3,5	;RP0=1, select bank1
  8690  0149  1303               	bcf	3,6	;RP1=0, select bank1
  8691  014A  084E               	movf	(sprintf@fval+2)^(0+128),w
  8692  014B  044D               	iorwf	(sprintf@fval+1)^(0+128),w
  8693  014C  044C               	iorwf	sprintf@fval^(0+128),w
  8694  014D  1903               	skipnz
  8695  014E  2950               	goto	u4091
  8696  014F  2951               	goto	u4090
  8697  0150                     u4091:
  8698  0150  29E1               	goto	l3013
  8699  0151                     u4090:
  8700  0151                     l2995:
  8701  0151  084C               	movf	sprintf@fval^(0+128),w
  8702  0152  1283               	bcf	3,5	;RP0=0, select bank0
  8703  0153  1303               	bcf	3,6	;RP1=0, select bank0
  8704  0154  00C1               	movwf	___fttol@f1
  8705  0155  1683               	bsf	3,5	;RP0=1, select bank1
  8706  0156  1303               	bcf	3,6	;RP1=0, select bank1
  8707  0157  084D               	movf	(sprintf@fval+1)^(0+128),w
  8708  0158  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0159  1303               	bcf	3,6	;RP1=0, select bank0
  8710  015A  00C2               	movwf	___fttol@f1+1
  8711  015B  1683               	bsf	3,5	;RP0=1, select bank1
  8712  015C  1303               	bcf	3,6	;RP1=0, select bank1
  8713  015D  084E               	movf	(sprintf@fval+2)^(0+128),w
  8714  015E  1283               	bcf	3,5	;RP0=0, select bank0
  8715  015F  1303               	bcf	3,6	;RP1=0, select bank0
  8716  0160  00C3               	movwf	___fttol@f1+2
  8717  0161  160A  118A  2436  120A  118A  	fcall	___fttol
  8718  0166  1283               	bcf	3,5	;RP0=0, select bank0
  8719  0167  1303               	bcf	3,6	;RP1=0, select bank0
  8720  0168  0844               	movf	?___fttol+3,w
  8721  0169  0443               	iorwf	?___fttol+2,w
  8722  016A  0442               	iorwf	?___fttol+1,w
  8723  016B  0441               	iorwf	?___fttol,w
  8724  016C  1D03               	skipz
  8725  016D  296F               	goto	u4101
  8726  016E  2970               	goto	u4100
  8727  016F                     u4101:
  8728  016F  29E1               	goto	l3013
  8729  0170                     u4100:
  8730  0170                     l2997:
  8731  0170  1683               	bsf	3,5	;RP0=1, select bank1
  8732  0171  1303               	bcf	3,6	;RP1=0, select bank1
  8733  0172  084B               	movf	(sprintf@eexp+1)^(0+128),w
  8734  0173  3A80               	xorlw	128
  8735  0174  00FF               	movwf	btemp+1
  8736  0175  3080               	movlw	128
  8737  0176  027F               	subwf	btemp+1,w
  8738  0177  1D03               	skipz
  8739  0178  297B               	goto	u4115
  8740  0179  3002               	movlw	2
  8741  017A  024A               	subwf	sprintf@eexp^(0+128),w
  8742  017B                     u4115:
  8743  017B  1C03               	skipc
  8744  017C  297E               	goto	u4111
  8745  017D  297F               	goto	u4110
  8746  017E                     u4111:
  8747  017E  29E1               	goto	l3013
  8748  017F                     u4110:
  8749  017F                     l2999:
  8750                           
  8751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8752  017F  1683               	bsf	3,5	;RP0=1, select bank1
  8753  0180  1303               	bcf	3,6	;RP1=0, select bank1
  8754  0181  0842               	movf	sprintf@tmpval^(0+128),w
  8755  0182  00F0               	movwf	___ftge@ff1
  8756  0183  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  8757  0184  00F1               	movwf	___ftge@ff1+1
  8758  0185  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  8759  0186  00F2               	movwf	___ftge@ff1+2
  8760  0187  3070               	movlw	112
  8761  0188  00F3               	movwf	___ftge@ff2
  8762  0189  3089               	movlw	137
  8763  018A  00F4               	movwf	___ftge@ff2+1
  8764  018B  3040               	movlw	64
  8765  018C  00F5               	movwf	___ftge@ff2+2
  8766  018D  160A  158A  27C8  120A  118A  	fcall	___ftge
  8767  0192  1803               	btfsc	3,0
  8768  0193  2995               	goto	u4121
  8769  0194  2996               	goto	u4120
  8770  0195                     u4121:
  8771  0195  299F               	goto	l3003
  8772  0196                     u4120:
  8773  0196                     l3001:
  8774                           
  8775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8776  0196  30F7               	movlw	247
  8777  0197  1683               	bsf	3,5	;RP0=1, select bank1
  8778  0198  1303               	bcf	3,6	;RP1=0, select bank1
  8779  0199  07CA               	addwf	sprintf@eexp^(0+128),f
  8780  019A  1803               	skipnc
  8781  019B  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  8782  019C  30FF               	movlw	255
  8783  019D  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  8784                           
  8785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8786  019E  29A7               	goto	l3005
  8787  019F                     l3003:
  8788                           
  8789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8790  019F  30F8               	movlw	248
  8791  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  8792  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  8793  01A2  07CA               	addwf	sprintf@eexp^(0+128),f
  8794  01A3  1803               	skipnc
  8795  01A4  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  8796  01A5  30FF               	movlw	255
  8797  01A6  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  8798  01A7                     l3005:
  8799                           
  8800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  8801  01A7  084A               	movf	sprintf@eexp^(0+128),w
  8802  01A8  120A  158A  227D  120A  118A  	fcall	_scale
  8803  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  8804  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  8805  01AF  0838               	movf	?_scale,w
  8806  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  8807  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  8808  01B2  00C2               	movwf	sprintf@tmpval^(0+128)
  8809  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  8810  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  8811  01B5  0839               	movf	?_scale+1,w
  8812  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  8813  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  8814  01B8  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  8815  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  8816  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  8817  01BB  083A               	movf	?_scale+2,w
  8818  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  8819  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  8820  01BE  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  8821  01BF                     l3009:	
  8822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8823                           
  8824  01BF  084C               	movf	sprintf@fval^(0+128),w
  8825  01C0  00F0               	movwf	__tdiv_to_l_@f1
  8826  01C1  084D               	movf	(sprintf@fval+1)^(0+128),w
  8827  01C2  00F1               	movwf	__tdiv_to_l_@f1+1
  8828  01C3  084E               	movf	(sprintf@fval+2)^(0+128),w
  8829  01C4  00F2               	movwf	__tdiv_to_l_@f1+2
  8830  01C5  0842               	movf	sprintf@tmpval^(0+128),w
  8831  01C6  00F3               	movwf	__tdiv_to_l_@f2
  8832  01C7  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  8833  01C8  00F4               	movwf	__tdiv_to_l_@f2+1
  8834  01C9  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  8835  01CA  00F5               	movwf	__tdiv_to_l_@f2+2
  8836  01CB  120A  158A  201F  120A  118A  	fcall	__tdiv_to_l_
  8837  01D0  0873               	movf	?__tdiv_to_l_+3,w
  8838  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  8839  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  8840  01D3  00C9               	movwf	(sprintf@val+3)^(0+128)
  8841  01D4  0872               	movf	?__tdiv_to_l_+2,w
  8842  01D5  00C8               	movwf	(sprintf@val+2)^(0+128)
  8843  01D6  0871               	movf	?__tdiv_to_l_+1,w
  8844  01D7  00C7               	movwf	(sprintf@val+1)^(0+128)
  8845  01D8  0870               	movf	?__tdiv_to_l_,w
  8846  01D9  00C6               	movwf	sprintf@val^(0+128)
  8847  01DA                     l3011:
  8848                           
  8849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8850  01DA  3000               	movlw	0
  8851  01DB  00CC               	movwf	sprintf@fval^(0+128)
  8852  01DC  3000               	movlw	0
  8853  01DD  00CD               	movwf	(sprintf@fval+1)^(0+128)
  8854  01DE  3000               	movlw	0
  8855  01DF  00CE               	movwf	(sprintf@fval+2)^(0+128)
  8856                           
  8857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8858  01E0  2A50               	goto	l3017
  8859  01E1                     l3013:
  8860                           
  8861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8862  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  8863  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  8864  01E3  084C               	movf	sprintf@fval^(0+128),w
  8865  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  8866  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  8867  01E6  00C1               	movwf	___fttol@f1
  8868  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  8869  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  8870  01E9  084D               	movf	(sprintf@fval+1)^(0+128),w
  8871  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  8872  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  8873  01EC  00C2               	movwf	___fttol@f1+1
  8874  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  8875  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  8876  01EF  084E               	movf	(sprintf@fval+2)^(0+128),w
  8877  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  8878  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  8879  01F2  00C3               	movwf	___fttol@f1+2
  8880  01F3  160A  118A  2436  120A  118A  	fcall	___fttol
  8881  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  8882  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  8883  01FA  0844               	movf	?___fttol+3,w
  8884  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  8885  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  8886  01FD  00C9               	movwf	(sprintf@val+3)^(0+128)
  8887  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  8888  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  8889  0200  0843               	movf	?___fttol+2,w
  8890  0201  1683               	bsf	3,5	;RP0=1, select bank1
  8891  0202  1303               	bcf	3,6	;RP1=0, select bank1
  8892  0203  00C8               	movwf	(sprintf@val+2)^(0+128)
  8893  0204  1283               	bcf	3,5	;RP0=0, select bank0
  8894  0205  1303               	bcf	3,6	;RP1=0, select bank0
  8895  0206  0842               	movf	?___fttol+1,w
  8896  0207  1683               	bsf	3,5	;RP0=1, select bank1
  8897  0208  1303               	bcf	3,6	;RP1=0, select bank1
  8898  0209  00C7               	movwf	(sprintf@val+1)^(0+128)
  8899  020A  1283               	bcf	3,5	;RP0=0, select bank0
  8900  020B  1303               	bcf	3,6	;RP1=0, select bank0
  8901  020C  0841               	movf	?___fttol,w
  8902  020D  1683               	bsf	3,5	;RP0=1, select bank1
  8903  020E  1303               	bcf	3,6	;RP1=0, select bank1
  8904  020F  00C6               	movwf	sprintf@val^(0+128)
  8905                           
  8906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8907  0210  0849               	movf	(sprintf@val+3)^(0+128),w
  8908  0211  00FB               	movwf	___lltoft@c+3
  8909  0212  0848               	movf	(sprintf@val+2)^(0+128),w
  8910  0213  00FA               	movwf	___lltoft@c+2
  8911  0214  0847               	movf	(sprintf@val+1)^(0+128),w
  8912  0215  00F9               	movwf	___lltoft@c+1
  8913  0216  0846               	movf	sprintf@val^(0+128),w
  8914  0217  00F8               	movwf	___lltoft@c
  8915  0218  160A  158A  2735  120A  118A  	fcall	___lltoft
  8916  021D  0878               	movf	?___lltoft,w
  8917  021E  1283               	bcf	3,5	;RP0=0, select bank0
  8918  021F  1303               	bcf	3,6	;RP1=0, select bank0
  8919  0220  00D5               	movwf	___ftsub@f2
  8920  0221  0879               	movf	?___lltoft+1,w
  8921  0222  00D6               	movwf	___ftsub@f2+1
  8922  0223  087A               	movf	?___lltoft+2,w
  8923  0224  00D7               	movwf	___ftsub@f2+2
  8924  0225  1683               	bsf	3,5	;RP0=1, select bank1
  8925  0226  1303               	bcf	3,6	;RP1=0, select bank1
  8926  0227  084C               	movf	sprintf@fval^(0+128),w
  8927  0228  1283               	bcf	3,5	;RP0=0, select bank0
  8928  0229  1303               	bcf	3,6	;RP1=0, select bank0
  8929  022A  00D8               	movwf	___ftsub@f1
  8930  022B  1683               	bsf	3,5	;RP0=1, select bank1
  8931  022C  1303               	bcf	3,6	;RP1=0, select bank1
  8932  022D  084D               	movf	(sprintf@fval+1)^(0+128),w
  8933  022E  1283               	bcf	3,5	;RP0=0, select bank0
  8934  022F  1303               	bcf	3,6	;RP1=0, select bank0
  8935  0230  00D9               	movwf	___ftsub@f1+1
  8936  0231  1683               	bsf	3,5	;RP0=1, select bank1
  8937  0232  1303               	bcf	3,6	;RP1=0, select bank1
  8938  0233  084E               	movf	(sprintf@fval+2)^(0+128),w
  8939  0234  1283               	bcf	3,5	;RP0=0, select bank0
  8940  0235  1303               	bcf	3,6	;RP1=0, select bank0
  8941  0236  00DA               	movwf	___ftsub@f1+2
  8942  0237  160A  158A  26C0  120A  118A  	fcall	___ftsub
  8943  023C  1283               	bcf	3,5	;RP0=0, select bank0
  8944  023D  1303               	bcf	3,6	;RP1=0, select bank0
  8945  023E  0855               	movf	?___ftsub,w
  8946  023F  1683               	bsf	3,5	;RP0=1, select bank1
  8947  0240  1303               	bcf	3,6	;RP1=0, select bank1
  8948  0241  00CC               	movwf	sprintf@fval^(0+128)
  8949  0242  1283               	bcf	3,5	;RP0=0, select bank0
  8950  0243  1303               	bcf	3,6	;RP1=0, select bank0
  8951  0244  0856               	movf	?___ftsub+1,w
  8952  0245  1683               	bsf	3,5	;RP0=1, select bank1
  8953  0246  1303               	bcf	3,6	;RP1=0, select bank1
  8954  0247  00CD               	movwf	(sprintf@fval+1)^(0+128)
  8955  0248  1283               	bcf	3,5	;RP0=0, select bank0
  8956  0249  1303               	bcf	3,6	;RP1=0, select bank0
  8957  024A  0857               	movf	?___ftsub+2,w
  8958  024B  1683               	bsf	3,5	;RP0=1, select bank1
  8959  024C  1303               	bcf	3,6	;RP1=0, select bank1
  8960  024D  00CE               	movwf	(sprintf@fval+2)^(0+128)
  8961  024E                     l3015:
  8962                           
  8963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8964  024E  01CA               	clrf	sprintf@eexp^(0+128)
  8965  024F  01CB               	clrf	(sprintf@eexp+1)^(0+128)
  8966  0250                     l3017:
  8967                           
  8968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8969  0250  01D2               	clrf	sprintf@c^(0+128)
  8970  0251  0AD2               	incf	sprintf@c^(0+128),f
  8971  0252                     l3023:
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8974  0252  0852               	movf	sprintf@c^(0+128),w
  8975  0253  1283               	bcf	3,5	;RP0=0, select bank0
  8976  0254  1303               	bcf	3,6	;RP1=0, select bank0
  8977  0255  00E4               	movwf	??_sprintf
  8978  0256  3001               	movlw	1
  8979  0257                     u4135:
  8980  0257  1003               	clrc
  8981  0258  0DE4               	rlf	??_sprintf,f
  8982  0259  3EFF               	addlw	-1
  8983  025A  1D03               	skipz
  8984  025B  2A57               	goto	u4135
  8985  025C  1003               	clrc
  8986  025D  0D64               	rlf	??_sprintf,w
  8987  025E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8988  025F  0084               	movwf	4
  8989  0260  160A  118A  200A  120A  118A  	fcall	stringdir
  8990  0265  00E5               	movwf	??_sprintf+1
  8991  0266  160A  118A  200A  120A  118A  	fcall	stringdir
  8992  026B  00E6               	movwf	??_sprintf+2
  8993  026C  160A  118A  200A  120A  118A  	fcall	stringdir
  8994  0271  00E7               	movwf	??_sprintf+3
  8995  0272  160A  118A  200A  120A  118A  	fcall	stringdir
  8996  0277  00E8               	movwf	??_sprintf+4
  8997  0278  0868               	movf	??_sprintf+4,w
  8998  0279  1683               	bsf	3,5	;RP0=1, select bank1
  8999  027A  1303               	bcf	3,6	;RP1=0, select bank1
  9000  027B  0249               	subwf	(sprintf@val+3)^(0+128),w
  9001  027C  1D03               	skipz
  9002  027D  2A94               	goto	u4145
  9003  027E  1283               	bcf	3,5	;RP0=0, select bank0
  9004  027F  1303               	bcf	3,6	;RP1=0, select bank0
  9005  0280  0867               	movf	??_sprintf+3,w
  9006  0281  1683               	bsf	3,5	;RP0=1, select bank1
  9007  0282  1303               	bcf	3,6	;RP1=0, select bank1
  9008  0283  0248               	subwf	(sprintf@val+2)^(0+128),w
  9009  0284  1D03               	skipz
  9010  0285  2A94               	goto	u4145
  9011  0286  1283               	bcf	3,5	;RP0=0, select bank0
  9012  0287  1303               	bcf	3,6	;RP1=0, select bank0
  9013  0288  0866               	movf	??_sprintf+2,w
  9014  0289  1683               	bsf	3,5	;RP0=1, select bank1
  9015  028A  1303               	bcf	3,6	;RP1=0, select bank1
  9016  028B  0247               	subwf	(sprintf@val+1)^(0+128),w
  9017  028C  1D03               	skipz
  9018  028D  2A94               	goto	u4145
  9019  028E  1283               	bcf	3,5	;RP0=0, select bank0
  9020  028F  1303               	bcf	3,6	;RP1=0, select bank0
  9021  0290  0865               	movf	??_sprintf+1,w
  9022  0291  1683               	bsf	3,5	;RP0=1, select bank1
  9023  0292  1303               	bcf	3,6	;RP1=0, select bank1
  9024  0293  0246               	subwf	sprintf@val^(0+128),w
  9025  0294                     u4145:
  9026  0294  1803               	skipnc
  9027  0295  2A97               	goto	u4141
  9028  0296  2A98               	goto	u4140
  9029  0297                     u4141:
  9030  0297  2A99               	goto	l3027
  9031  0298                     u4140:
  9032  0298  2AA7               	goto	l3029
  9033  0299                     l3027:
  9034  0299  3001               	movlw	1
  9035  029A  1283               	bcf	3,5	;RP0=0, select bank0
  9036  029B  1303               	bcf	3,6	;RP1=0, select bank0
  9037  029C  00E4               	movwf	??_sprintf
  9038  029D  0864               	movf	??_sprintf,w
  9039  029E  1683               	bsf	3,5	;RP0=1, select bank1
  9040  029F  1303               	bcf	3,6	;RP1=0, select bank1
  9041  02A0  07D2               	addwf	sprintf@c^(0+128),f
  9042  02A1  300A               	movlw	10
  9043  02A2  0652               	xorwf	sprintf@c^(0+128),w
  9044  02A3  1D03               	btfss	3,2
  9045  02A4  2AA6               	goto	u4151
  9046  02A5  2AA7               	goto	u4150
  9047  02A6                     u4151:
  9048  02A6  2A52               	goto	l3023
  9049  02A7                     u4150:
  9050  02A7                     l3029:
  9051                           
  9052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9053  02A7  0852               	movf	sprintf@c^(0+128),w
  9054  02A8  0750               	addwf	sprintf@prec^(0+128),w
  9055  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  9056  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  9057  02AB  00E4               	movwf	??_sprintf
  9058  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  9059  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  9060  02AE  0851               	movf	(sprintf@prec+1)^(0+128),w
  9061  02AF  1803               	skipnc
  9062  02B0  0A51               	incf	(sprintf@prec+1)^(0+128),w
  9063  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  9064  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  9065  02B3  00E5               	movwf	??_sprintf+1
  9066  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  9067  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  9068  02B6  084A               	movf	sprintf@eexp^(0+128),w
  9069  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  9070  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  9071  02B9  0764               	addwf	??_sprintf,w
  9072  02BA  00E6               	movwf	??_sprintf+2
  9073  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  9074  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  9075  02BD  084B               	movf	(sprintf@eexp+1)^(0+128),w
  9076  02BE  1803               	skipnc
  9077  02BF  0A4B               	incf	(sprintf@eexp+1)^(0+128),w
  9078  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  9079  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  9080  02C2  0765               	addwf	??_sprintf+1,w
  9081  02C3  00E7               	movwf	??_sprintf+3
  9082  02C4  0866               	movf	??_sprintf+2,w
  9083  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  9084  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  9085  02C7  02C0               	subwf	sprintf@width^(0+128),f
  9086  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  9087  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  9088  02CA  0867               	movf	??_sprintf+3,w
  9089  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  9090  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  9091  02CD  1C03               	skipc
  9092  02CE  03C1               	decf	(sprintf@width+1)^(0+128),f
  9093  02CF  02C1               	subwf	(sprintf@width+1)^(0+128),f
  9094                           
  9095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9096  02D0  0850               	movf	sprintf@prec^(0+128),w
  9097  02D1  0451               	iorwf	(sprintf@prec+1)^(0+128),w
  9098  02D2  1903               	btfsc	3,2
  9099  02D3  2AD5               	goto	u4161
  9100  02D4  2AD6               	goto	u4160
  9101  02D5                     u4161:
  9102  02D5  2ADC               	goto	l3033
  9103  02D6                     u4160:
  9104  02D6                     l3031:
  9105                           
  9106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9107  02D6  30FF               	movlw	255
  9108  02D7  07C0               	addwf	sprintf@width^(0+128),f
  9109  02D8  1803               	skipnc
  9110  02D9  0AC1               	incf	(sprintf@width+1)^(0+128),f
  9111  02DA  30FF               	movlw	255
  9112  02DB  07C1               	addwf	(sprintf@width+1)^(0+128),f
  9113  02DC                     l3033:
  9114                           
  9115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9116  02DC  3003               	movlw	3
  9117  02DD  053E               	andwf	sprintf@flag^(0+128),w
  9118  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  9119  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  9120  02E0  00E4               	movwf	??_sprintf
  9121  02E1  3000               	movlw	0
  9122  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  9123  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  9124  02E4  053F               	andwf	(sprintf@flag+1)^(0+128),w
  9125  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  9126  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  9127  02E7  00E5               	movwf	??_sprintf+1
  9128  02E8  0864               	movf	??_sprintf,w
  9129  02E9  0465               	iorwf	??_sprintf+1,w
  9130  02EA  1903               	btfsc	3,2
  9131  02EB  2AED               	goto	u4171
  9132  02EC  2AEE               	goto	u4170
  9133  02ED                     u4171:
  9134  02ED  2B0B               	goto	l3043
  9135  02EE                     u4170:
  9136  02EE                     l3035:
  9137                           
  9138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9139  02EE  30FF               	movlw	255
  9140  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  9141  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  9142  02F1  07C0               	addwf	sprintf@width^(0+128),f
  9143  02F2  1803               	skipnc
  9144  02F3  0AC1               	incf	(sprintf@width+1)^(0+128),f
  9145  02F4  30FF               	movlw	255
  9146  02F5  07C1               	addwf	(sprintf@width+1)^(0+128),f
  9147  02F6  2B0B               	goto	l3043
  9148  02F7                     l3037:
  9149                           
  9150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9151  02F7  3020               	movlw	32
  9152  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  9153  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  9154  02FA  00E4               	movwf	??_sprintf
  9155  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  9156  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  9157  02FD  084F               	movf	sprintf@sp^(0+128),w
  9158  02FE  0084               	movwf	4
  9159  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  9160  0300  1303               	bcf	3,6	;RP1=0, select bank0
  9161  0301  0864               	movf	??_sprintf,w
  9162  0302  1383               	bcf	3,7	;select IRP bank0
  9163  0303  0080               	movwf	0
  9164  0304                     l3039:
  9165  0304  3001               	movlw	1
  9166  0305  00E4               	movwf	??_sprintf
  9167  0306  0864               	movf	??_sprintf,w
  9168  0307  1683               	bsf	3,5	;RP0=1, select bank1
  9169  0308  1303               	bcf	3,6	;RP1=0, select bank1
  9170  0309  07CF               	addwf	sprintf@sp^(0+128),f
  9171  030A  2AEE               	goto	l3035
  9172  030B                     l3043:
  9173                           
  9174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9175  030B  1683               	bsf	3,5	;RP0=1, select bank1
  9176  030C  1303               	bcf	3,6	;RP1=0, select bank1
  9177  030D  0841               	movf	(sprintf@width+1)^(0+128),w
  9178  030E  3A80               	xorlw	128
  9179  030F  00FF               	movwf	btemp+1
  9180  0310  3080               	movlw	128
  9181  0311  027F               	subwf	btemp+1,w
  9182  0312  1D03               	skipz
  9183  0313  2B16               	goto	u4185
  9184  0314  3001               	movlw	1
  9185  0315  0240               	subwf	sprintf@width^(0+128),w
  9186  0316                     u4185:
  9187  0316  1803               	skipnc
  9188  0317  2B19               	goto	u4181
  9189  0318  2B1A               	goto	u4180
  9190  0319                     u4181:
  9191  0319  2AF7               	goto	l3037
  9192  031A                     u4180:
  9193  031A                     l3045:
  9194                           
  9195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9196  031A  3003               	movlw	3
  9197  031B  1683               	bsf	3,5	;RP0=1, select bank1
  9198  031C  1303               	bcf	3,6	;RP1=0, select bank1
  9199  031D  053E               	andwf	sprintf@flag^(0+128),w
  9200  031E  1283               	bcf	3,5	;RP0=0, select bank0
  9201  031F  1303               	bcf	3,6	;RP1=0, select bank0
  9202  0320  00E4               	movwf	??_sprintf
  9203  0321  3000               	movlw	0
  9204  0322  1683               	bsf	3,5	;RP0=1, select bank1
  9205  0323  1303               	bcf	3,6	;RP1=0, select bank1
  9206  0324  053F               	andwf	(sprintf@flag+1)^(0+128),w
  9207  0325  1283               	bcf	3,5	;RP0=0, select bank0
  9208  0326  1303               	bcf	3,6	;RP1=0, select bank0
  9209  0327  00E5               	movwf	??_sprintf+1
  9210  0328  0864               	movf	??_sprintf,w
  9211  0329  0465               	iorwf	??_sprintf+1,w
  9212  032A  1903               	btfsc	3,2
  9213  032B  2B2D               	goto	u4191
  9214  032C  2B2E               	goto	u4190
  9215  032D                     u4191:
  9216  032D  2BD2               	goto	l392
  9217  032E                     u4190:
  9218  032E                     l3047:
  9219                           
  9220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9221  032E  302D               	movlw	45
  9222  032F  00E4               	movwf	??_sprintf
  9223  0330  1683               	bsf	3,5	;RP0=1, select bank1
  9224  0331  1303               	bcf	3,6	;RP1=0, select bank1
  9225  0332  084F               	movf	sprintf@sp^(0+128),w
  9226  0333  0084               	movwf	4
  9227  0334  1283               	bcf	3,5	;RP0=0, select bank0
  9228  0335  1303               	bcf	3,6	;RP1=0, select bank0
  9229  0336  0864               	movf	??_sprintf,w
  9230  0337  1383               	bcf	3,7	;select IRP bank0
  9231  0338  0080               	movwf	0
  9232  0339                     l3049:
  9233  0339  3001               	movlw	1
  9234  033A  00E4               	movwf	??_sprintf
  9235  033B  0864               	movf	??_sprintf,w
  9236  033C  1683               	bsf	3,5	;RP0=1, select bank1
  9237  033D  1303               	bcf	3,6	;RP1=0, select bank1
  9238  033E  07CF               	addwf	sprintf@sp^(0+128),f
  9239  033F  2BD2               	goto	l392
  9240  0340                     l3051:
  9241                           
  9242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9243  0340  0852               	movf	sprintf@c^(0+128),w
  9244  0341  1283               	bcf	3,5	;RP0=0, select bank0
  9245  0342  1303               	bcf	3,6	;RP1=0, select bank0
  9246  0343  00E4               	movwf	??_sprintf
  9247  0344  3001               	movlw	1
  9248  0345                     u4205:
  9249  0345  1003               	clrc
  9250  0346  0DE4               	rlf	??_sprintf,f
  9251  0347  3EFF               	addlw	-1
  9252  0348  1D03               	skipz
  9253  0349  2B45               	goto	u4205
  9254  034A  1003               	clrc
  9255  034B  0D64               	rlf	??_sprintf,w
  9256  034C  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9257  034D  0084               	movwf	4
  9258  034E  160A  118A  200A  120A  118A  	fcall	stringdir
  9259  0353  00F0               	movwf	___lldiv@divisor
  9260  0354  160A  118A  200A  120A  118A  	fcall	stringdir
  9261  0359  00F1               	movwf	___lldiv@divisor+1
  9262  035A  160A  118A  200A  120A  118A  	fcall	stringdir
  9263  035F  00F2               	movwf	___lldiv@divisor+2
  9264  0360  160A  118A  200A  120A  118A  	fcall	stringdir
  9265  0365  00F3               	movwf	___lldiv@divisor+3
  9266  0366  1683               	bsf	3,5	;RP0=1, select bank1
  9267  0367  1303               	bcf	3,6	;RP1=0, select bank1
  9268  0368  0849               	movf	(sprintf@val+3)^(0+128),w
  9269  0369  00F7               	movwf	___lldiv@dividend+3
  9270  036A  0848               	movf	(sprintf@val+2)^(0+128),w
  9271  036B  00F6               	movwf	___lldiv@dividend+2
  9272  036C  0847               	movf	(sprintf@val+1)^(0+128),w
  9273  036D  00F5               	movwf	___lldiv@dividend+1
  9274  036E  0846               	movf	sprintf@val^(0+128),w
  9275  036F  00F4               	movwf	___lldiv@dividend
  9276  0370  160A  118A  22EB  120A  118A  	fcall	___lldiv
  9277  0375  0873               	movf	?___lldiv+3,w
  9278  0376  1683               	bsf	3,5	;RP0=1, select bank1
  9279  0377  1303               	bcf	3,6	;RP1=0, select bank1
  9280  0378  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9281  0379  0872               	movf	?___lldiv+2,w
  9282  037A  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9283  037B  0871               	movf	?___lldiv+1,w
  9284  037C  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9285  037D  0870               	movf	?___lldiv,w
  9286  037E  00C2               	movwf	sprintf@tmpval^(0+128)
  9287  037F                     l3053:
  9288                           
  9289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9290  037F  3000               	movlw	0
  9291  0380  1283               	bcf	3,5	;RP0=0, select bank0
  9292  0381  1303               	bcf	3,6	;RP1=0, select bank0
  9293  0382  00A3               	movwf	___llmod@divisor+3
  9294  0383  3000               	movlw	0
  9295  0384  00A2               	movwf	___llmod@divisor+2
  9296  0385  3000               	movlw	0
  9297  0386  00A1               	movwf	___llmod@divisor+1
  9298  0387  300A               	movlw	10
  9299  0388  00A0               	movwf	___llmod@divisor
  9300  0389  1683               	bsf	3,5	;RP0=1, select bank1
  9301  038A  1303               	bcf	3,6	;RP1=0, select bank1
  9302  038B  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  9303  038C  1283               	bcf	3,5	;RP0=0, select bank0
  9304  038D  1303               	bcf	3,6	;RP1=0, select bank0
  9305  038E  00A7               	movwf	___llmod@dividend+3
  9306  038F  1683               	bsf	3,5	;RP0=1, select bank1
  9307  0390  1303               	bcf	3,6	;RP1=0, select bank1
  9308  0391  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  9309  0392  1283               	bcf	3,5	;RP0=0, select bank0
  9310  0393  1303               	bcf	3,6	;RP1=0, select bank0
  9311  0394  00A6               	movwf	___llmod@dividend+2
  9312  0395  1683               	bsf	3,5	;RP0=1, select bank1
  9313  0396  1303               	bcf	3,6	;RP1=0, select bank1
  9314  0397  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  9315  0398  1283               	bcf	3,5	;RP0=0, select bank0
  9316  0399  1303               	bcf	3,6	;RP1=0, select bank0
  9317  039A  00A5               	movwf	___llmod@dividend+1
  9318  039B  1683               	bsf	3,5	;RP0=1, select bank1
  9319  039C  1303               	bcf	3,6	;RP1=0, select bank1
  9320  039D  0842               	movf	sprintf@tmpval^(0+128),w
  9321  039E  1283               	bcf	3,5	;RP0=0, select bank0
  9322  039F  1303               	bcf	3,6	;RP1=0, select bank0
  9323  03A0  00A4               	movwf	___llmod@dividend
  9324  03A1  160A  118A  21D6  120A  118A  	fcall	___llmod
  9325  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  9326  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  9327  03A8  0823               	movf	?___llmod+3,w
  9328  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  9329  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  9330  03AB  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9331  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  9332  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  9333  03AE  0822               	movf	?___llmod+2,w
  9334  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  9335  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  9336  03B1  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9337  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  9338  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  9339  03B4  0821               	movf	?___llmod+1,w
  9340  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  9341  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  9342  03B7  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9343  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  9344  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  9345  03BA  0820               	movf	?___llmod,w
  9346  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  9347  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  9348  03BD  00C2               	movwf	sprintf@tmpval^(0+128)
  9349  03BE                     l3055:
  9350                           
  9351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9352  03BE  0842               	movf	sprintf@tmpval^(0+128),w
  9353  03BF  3E30               	addlw	48
  9354  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  9355  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  9356  03C2  00E4               	movwf	??_sprintf
  9357  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  9358  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  9359  03C5  084F               	movf	sprintf@sp^(0+128),w
  9360  03C6  0084               	movwf	4
  9361  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  9362  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  9363  03C9  0864               	movf	??_sprintf,w
  9364  03CA  1383               	bcf	3,7	;select IRP bank0
  9365  03CB  0080               	movwf	0
  9366  03CC  3001               	movlw	1
  9367  03CD  00E4               	movwf	??_sprintf
  9368  03CE  0864               	movf	??_sprintf,w
  9369  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  9370  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  9371  03D1  07CF               	addwf	sprintf@sp^(0+128),f
  9372  03D2                     l392:	
  9373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9374                           
  9375                           
  9376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9377  03D2  3001               	movlw	1
  9378  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  9379  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  9380  03D5  02D2               	subwf	sprintf@c^(0+128),f
  9381  03D6  0A52               	incf	sprintf@c^(0+128),w
  9382  03D7  1D03               	btfss	3,2
  9383  03D8  2BDA               	goto	u4211
  9384  03D9  2BDB               	goto	u4210
  9385  03DA                     u4211:
  9386  03DA  2B40               	goto	l3051
  9387  03DB                     u4210:
  9388  03DB  2BF5               	goto	l3063
  9389  03DC                     l3057:
  9390                           
  9391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9392  03DC  3030               	movlw	48
  9393  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  9394  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  9395  03DF  00E4               	movwf	??_sprintf
  9396  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  9397  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  9398  03E2  084F               	movf	sprintf@sp^(0+128),w
  9399  03E3  0084               	movwf	4
  9400  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  9401  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  9402  03E6  0864               	movf	??_sprintf,w
  9403  03E7  1383               	bcf	3,7	;select IRP bank0
  9404  03E8  0080               	movwf	0
  9405  03E9                     l3059:
  9406  03E9  3001               	movlw	1
  9407  03EA  00E4               	movwf	??_sprintf
  9408  03EB  0864               	movf	??_sprintf,w
  9409  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  9410  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  9411  03EE  07CF               	addwf	sprintf@sp^(0+128),f
  9412  03EF                     l3061:
  9413                           
  9414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9415  03EF  30FF               	movlw	255
  9416  03F0  07CA               	addwf	sprintf@eexp^(0+128),f
  9417  03F1  1803               	skipnc
  9418  03F2  0ACB               	incf	(sprintf@eexp+1)^(0+128),f
  9419  03F3  30FF               	movlw	255
  9420  03F4  07CB               	addwf	(sprintf@eexp+1)^(0+128),f
  9421  03F5                     l3063:
  9422                           
  9423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9424  03F5  084B               	movf	(sprintf@eexp+1)^(0+128),w
  9425  03F6  3A80               	xorlw	128
  9426  03F7  00FF               	movwf	btemp+1
  9427  03F8  3080               	movlw	128
  9428  03F9  027F               	subwf	btemp+1,w
  9429  03FA  1D03               	skipz
  9430  03FB  2BFE               	goto	u4225
  9431  03FC  3001               	movlw	1
  9432  03FD  024A               	subwf	sprintf@eexp^(0+128),w
  9433  03FE                     u4225:
  9434  03FE  1803               	skipnc
  9435  03FF  2C01               	goto	u4221
  9436  0400  2C02               	goto	u4220
  9437  0401                     u4221:
  9438  0401  2BDC               	goto	l3057
  9439  0402                     u4220:
  9440  0402                     l3065:
  9441                           
  9442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9443  0402  1683               	bsf	3,5	;RP0=1, select bank1
  9444  0403  1303               	bcf	3,6	;RP1=0, select bank1
  9445  0404  0851               	movf	(sprintf@prec+1)^(0+128),w
  9446  0405  3A80               	xorlw	128
  9447  0406  00FF               	movwf	btemp+1
  9448  0407  3080               	movlw	128
  9449  0408  027F               	subwf	btemp+1,w
  9450  0409  1D03               	skipz
  9451  040A  2C0D               	goto	u4235
  9452  040B  3009               	movlw	9
  9453  040C  0250               	subwf	sprintf@prec^(0+128),w
  9454  040D                     u4235:
  9455  040D  1C03               	skipc
  9456  040E  2C10               	goto	u4231
  9457  040F  2C11               	goto	u4230
  9458  0410                     u4231:
  9459  0410  2C1A               	goto	l3069
  9460  0411                     u4230:
  9461  0411                     l3067:
  9462                           
  9463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9464  0411  3008               	movlw	8
  9465  0412  1283               	bcf	3,5	;RP0=0, select bank0
  9466  0413  1303               	bcf	3,6	;RP1=0, select bank0
  9467  0414  00E4               	movwf	??_sprintf
  9468  0415  0864               	movf	??_sprintf,w
  9469  0416  1683               	bsf	3,5	;RP0=1, select bank1
  9470  0417  1303               	bcf	3,6	;RP1=0, select bank1
  9471  0418  00D2               	movwf	sprintf@c^(0+128)
  9472  0419  2C24               	goto	l399
  9473  041A                     l3069:
  9474                           
  9475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9476  041A  1683               	bsf	3,5	;RP0=1, select bank1
  9477  041B  1303               	bcf	3,6	;RP1=0, select bank1
  9478  041C  0850               	movf	sprintf@prec^(0+128),w
  9479  041D  1283               	bcf	3,5	;RP0=0, select bank0
  9480  041E  1303               	bcf	3,6	;RP1=0, select bank0
  9481  041F  00E4               	movwf	??_sprintf
  9482  0420  0864               	movf	??_sprintf,w
  9483  0421  1683               	bsf	3,5	;RP0=1, select bank1
  9484  0422  1303               	bcf	3,6	;RP1=0, select bank1
  9485  0423  00D2               	movwf	sprintf@c^(0+128)
  9486  0424                     l399:
  9487                           
  9488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9489  0424  0852               	movf	sprintf@c^(0+128),w
  9490  0425  1283               	bcf	3,5	;RP0=0, select bank0
  9491  0426  1303               	bcf	3,6	;RP1=0, select bank0
  9492  0427  00E4               	movwf	??_sprintf
  9493  0428  01E5               	clrf	??_sprintf+1
  9494  0429  0864               	movf	??_sprintf,w
  9495  042A  1683               	bsf	3,5	;RP0=1, select bank1
  9496  042B  1303               	bcf	3,6	;RP1=0, select bank1
  9497  042C  02D0               	subwf	sprintf@prec^(0+128),f
  9498  042D  1283               	bcf	3,5	;RP0=0, select bank0
  9499  042E  1303               	bcf	3,6	;RP1=0, select bank0
  9500  042F  0865               	movf	??_sprintf+1,w
  9501  0430  1683               	bsf	3,5	;RP0=1, select bank1
  9502  0431  1303               	bcf	3,6	;RP1=0, select bank1
  9503  0432  1C03               	skipc
  9504  0433  03D1               	decf	(sprintf@prec+1)^(0+128),f
  9505  0434  02D1               	subwf	(sprintf@prec+1)^(0+128),f
  9506  0435                     l3071:
  9507                           
  9508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9509  0435  0852               	movf	sprintf@c^(0+128),w
  9510  0436  1903               	btfsc	3,2
  9511  0437  2C39               	goto	u4241
  9512  0438  2C3A               	goto	u4240
  9513  0439                     u4241:
  9514  0439  2C4D               	goto	l3077
  9515  043A                     u4240:
  9516  043A                     l3073:
  9517                           
  9518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9519  043A  302E               	movlw	46
  9520  043B  1283               	bcf	3,5	;RP0=0, select bank0
  9521  043C  1303               	bcf	3,6	;RP1=0, select bank0
  9522  043D  00E4               	movwf	??_sprintf
  9523  043E  1683               	bsf	3,5	;RP0=1, select bank1
  9524  043F  1303               	bcf	3,6	;RP1=0, select bank1
  9525  0440  084F               	movf	sprintf@sp^(0+128),w
  9526  0441  0084               	movwf	4
  9527  0442  1283               	bcf	3,5	;RP0=0, select bank0
  9528  0443  1303               	bcf	3,6	;RP1=0, select bank0
  9529  0444  0864               	movf	??_sprintf,w
  9530  0445  1383               	bcf	3,7	;select IRP bank0
  9531  0446  0080               	movwf	0
  9532  0447                     l3075:
  9533  0447  3001               	movlw	1
  9534  0448  00E4               	movwf	??_sprintf
  9535  0449  0864               	movf	??_sprintf,w
  9536  044A  1683               	bsf	3,5	;RP0=1, select bank1
  9537  044B  1303               	bcf	3,6	;RP1=0, select bank1
  9538  044C  07CF               	addwf	sprintf@sp^(0+128),f
  9539  044D                     l3077:
  9540                           
  9541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9542  044D  0852               	movf	sprintf@c^(0+128),w
  9543  044E  120A  158A  227D  120A  118A  	fcall	_scale
  9544  0453  1283               	bcf	3,5	;RP0=0, select bank0
  9545  0454  1303               	bcf	3,6	;RP1=0, select bank0
  9546  0455  0838               	movf	?_scale,w
  9547  0456  1683               	bsf	3,5	;RP0=1, select bank1
  9548  0457  1303               	bcf	3,6	;RP1=0, select bank1
  9549  0458  00BA               	movwf	_sprintf$1087^(0+128)
  9550  0459  1283               	bcf	3,5	;RP0=0, select bank0
  9551  045A  1303               	bcf	3,6	;RP1=0, select bank0
  9552  045B  0839               	movf	?_scale+1,w
  9553  045C  1683               	bsf	3,5	;RP0=1, select bank1
  9554  045D  1303               	bcf	3,6	;RP1=0, select bank1
  9555  045E  00BB               	movwf	(_sprintf$1087+1)^(0+128)
  9556  045F  1283               	bcf	3,5	;RP0=0, select bank0
  9557  0460  1303               	bcf	3,6	;RP1=0, select bank0
  9558  0461  083A               	movf	?_scale+2,w
  9559  0462  1683               	bsf	3,5	;RP0=1, select bank1
  9560  0463  1303               	bcf	3,6	;RP1=0, select bank1
  9561  0464  00BC               	movwf	(_sprintf$1087+2)^(0+128)
  9562  0465                     l3079:
  9563                           
  9564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9565  0465  083A               	movf	_sprintf$1087^(0+128),w
  9566  0466  1283               	bcf	3,5	;RP0=0, select bank0
  9567  0467  1303               	bcf	3,6	;RP1=0, select bank0
  9568  0468  00AB               	movwf	___ftmul@f2
  9569  0469  1683               	bsf	3,5	;RP0=1, select bank1
  9570  046A  1303               	bcf	3,6	;RP1=0, select bank1
  9571  046B  083B               	movf	(_sprintf$1087+1)^(0+128),w
  9572  046C  1283               	bcf	3,5	;RP0=0, select bank0
  9573  046D  1303               	bcf	3,6	;RP1=0, select bank0
  9574  046E  00AC               	movwf	___ftmul@f2+1
  9575  046F  1683               	bsf	3,5	;RP0=1, select bank1
  9576  0470  1303               	bcf	3,6	;RP1=0, select bank1
  9577  0471  083C               	movf	(_sprintf$1087+2)^(0+128),w
  9578  0472  1283               	bcf	3,5	;RP0=0, select bank0
  9579  0473  1303               	bcf	3,6	;RP1=0, select bank0
  9580  0474  00AD               	movwf	___ftmul@f2+2
  9581  0475  1683               	bsf	3,5	;RP0=1, select bank1
  9582  0476  1303               	bcf	3,6	;RP1=0, select bank1
  9583  0477  084C               	movf	sprintf@fval^(0+128),w
  9584  0478  1283               	bcf	3,5	;RP0=0, select bank0
  9585  0479  1303               	bcf	3,6	;RP1=0, select bank0
  9586  047A  00A8               	movwf	___ftmul@f1
  9587  047B  1683               	bsf	3,5	;RP0=1, select bank1
  9588  047C  1303               	bcf	3,6	;RP1=0, select bank1
  9589  047D  084D               	movf	(sprintf@fval+1)^(0+128),w
  9590  047E  1283               	bcf	3,5	;RP0=0, select bank0
  9591  047F  1303               	bcf	3,6	;RP1=0, select bank0
  9592  0480  00A9               	movwf	___ftmul@f1+1
  9593  0481  1683               	bsf	3,5	;RP0=1, select bank1
  9594  0482  1303               	bcf	3,6	;RP1=0, select bank1
  9595  0483  084E               	movf	(sprintf@fval+2)^(0+128),w
  9596  0484  1283               	bcf	3,5	;RP0=0, select bank0
  9597  0485  1303               	bcf	3,6	;RP1=0, select bank0
  9598  0486  00AA               	movwf	___ftmul@f1+2
  9599  0487  160A  118A  24C2  120A  118A  	fcall	___ftmul
  9600  048C  1283               	bcf	3,5	;RP0=0, select bank0
  9601  048D  1303               	bcf	3,6	;RP1=0, select bank0
  9602  048E  0828               	movf	?___ftmul,w
  9603  048F  00C1               	movwf	___fttol@f1
  9604  0490  0829               	movf	?___ftmul+1,w
  9605  0491  00C2               	movwf	___fttol@f1+1
  9606  0492  082A               	movf	?___ftmul+2,w
  9607  0493  00C3               	movwf	___fttol@f1+2
  9608  0494  160A  118A  2436  120A  118A  	fcall	___fttol
  9609  0499  1283               	bcf	3,5	;RP0=0, select bank0
  9610  049A  1303               	bcf	3,6	;RP1=0, select bank0
  9611  049B  0844               	movf	?___fttol+3,w
  9612  049C  1683               	bsf	3,5	;RP0=1, select bank1
  9613  049D  1303               	bcf	3,6	;RP1=0, select bank1
  9614  049E  00C9               	movwf	(sprintf@val+3)^(0+128)
  9615  049F  1283               	bcf	3,5	;RP0=0, select bank0
  9616  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  9617  04A1  0843               	movf	?___fttol+2,w
  9618  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  9619  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  9620  04A4  00C8               	movwf	(sprintf@val+2)^(0+128)
  9621  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  9622  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  9623  04A7  0842               	movf	?___fttol+1,w
  9624  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  9625  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  9626  04AA  00C7               	movwf	(sprintf@val+1)^(0+128)
  9627  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  9628  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  9629  04AD  0841               	movf	?___fttol,w
  9630  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  9631  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  9632  04B0  00C6               	movwf	sprintf@val^(0+128)
  9633                           
  9634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9635  04B1  2D9F               	goto	l3089
  9636  04B2                     l3081:
  9637                           
  9638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9639  04B2  0852               	movf	sprintf@c^(0+128),w
  9640  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  9641  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  9642  04B5  00E4               	movwf	??_sprintf
  9643  04B6  3001               	movlw	1
  9644  04B7                     u4255:
  9645  04B7  1003               	clrc
  9646  04B8  0DE4               	rlf	??_sprintf,f
  9647  04B9  3EFF               	addlw	-1
  9648  04BA  1D03               	skipz
  9649  04BB  2CB7               	goto	u4255
  9650  04BC  1003               	clrc
  9651  04BD  0D64               	rlf	??_sprintf,w
  9652  04BE  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9653  04BF  0084               	movwf	4
  9654  04C0  160A  118A  200A  120A  118A  	fcall	stringdir
  9655  04C5  00F0               	movwf	___lldiv@divisor
  9656  04C6  160A  118A  200A  120A  118A  	fcall	stringdir
  9657  04CB  00F1               	movwf	___lldiv@divisor+1
  9658  04CC  160A  118A  200A  120A  118A  	fcall	stringdir
  9659  04D1  00F2               	movwf	___lldiv@divisor+2
  9660  04D2  160A  118A  200A  120A  118A  	fcall	stringdir
  9661  04D7  00F3               	movwf	___lldiv@divisor+3
  9662  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  9663  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  9664  04DA  0849               	movf	(sprintf@val+3)^(0+128),w
  9665  04DB  00F7               	movwf	___lldiv@dividend+3
  9666  04DC  0848               	movf	(sprintf@val+2)^(0+128),w
  9667  04DD  00F6               	movwf	___lldiv@dividend+2
  9668  04DE  0847               	movf	(sprintf@val+1)^(0+128),w
  9669  04DF  00F5               	movwf	___lldiv@dividend+1
  9670  04E0  0846               	movf	sprintf@val^(0+128),w
  9671  04E1  00F4               	movwf	___lldiv@dividend
  9672  04E2  160A  118A  22EB  120A  118A  	fcall	___lldiv
  9673  04E7  0873               	movf	?___lldiv+3,w
  9674  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  9675  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  9676  04EA  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9677  04EB  0872               	movf	?___lldiv+2,w
  9678  04EC  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9679  04ED  0871               	movf	?___lldiv+1,w
  9680  04EE  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9681  04EF  0870               	movf	?___lldiv,w
  9682  04F0  00C2               	movwf	sprintf@tmpval^(0+128)
  9683  04F1                     l3083:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9686  04F1  3000               	movlw	0
  9687  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  9688  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  9689  04F4  00A3               	movwf	___llmod@divisor+3
  9690  04F5  3000               	movlw	0
  9691  04F6  00A2               	movwf	___llmod@divisor+2
  9692  04F7  3000               	movlw	0
  9693  04F8  00A1               	movwf	___llmod@divisor+1
  9694  04F9  300A               	movlw	10
  9695  04FA  00A0               	movwf	___llmod@divisor
  9696  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  9697  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  9698  04FD  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  9699  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  9700  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  9701  0500  00A7               	movwf	___llmod@dividend+3
  9702  0501  1683               	bsf	3,5	;RP0=1, select bank1
  9703  0502  1303               	bcf	3,6	;RP1=0, select bank1
  9704  0503  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  9705  0504  1283               	bcf	3,5	;RP0=0, select bank0
  9706  0505  1303               	bcf	3,6	;RP1=0, select bank0
  9707  0506  00A6               	movwf	___llmod@dividend+2
  9708  0507  1683               	bsf	3,5	;RP0=1, select bank1
  9709  0508  1303               	bcf	3,6	;RP1=0, select bank1
  9710  0509  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  9711  050A  1283               	bcf	3,5	;RP0=0, select bank0
  9712  050B  1303               	bcf	3,6	;RP1=0, select bank0
  9713  050C  00A5               	movwf	___llmod@dividend+1
  9714  050D  1683               	bsf	3,5	;RP0=1, select bank1
  9715  050E  1303               	bcf	3,6	;RP1=0, select bank1
  9716  050F  0842               	movf	sprintf@tmpval^(0+128),w
  9717  0510  1283               	bcf	3,5	;RP0=0, select bank0
  9718  0511  1303               	bcf	3,6	;RP1=0, select bank0
  9719  0512  00A4               	movwf	___llmod@dividend
  9720  0513  160A  118A  21D6  120A  118A  	fcall	___llmod
  9721  0518  1283               	bcf	3,5	;RP0=0, select bank0
  9722  0519  1303               	bcf	3,6	;RP1=0, select bank0
  9723  051A  0823               	movf	?___llmod+3,w
  9724  051B  1683               	bsf	3,5	;RP0=1, select bank1
  9725  051C  1303               	bcf	3,6	;RP1=0, select bank1
  9726  051D  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  9727  051E  1283               	bcf	3,5	;RP0=0, select bank0
  9728  051F  1303               	bcf	3,6	;RP1=0, select bank0
  9729  0520  0822               	movf	?___llmod+2,w
  9730  0521  1683               	bsf	3,5	;RP0=1, select bank1
  9731  0522  1303               	bcf	3,6	;RP1=0, select bank1
  9732  0523  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  9733  0524  1283               	bcf	3,5	;RP0=0, select bank0
  9734  0525  1303               	bcf	3,6	;RP1=0, select bank0
  9735  0526  0821               	movf	?___llmod+1,w
  9736  0527  1683               	bsf	3,5	;RP0=1, select bank1
  9737  0528  1303               	bcf	3,6	;RP1=0, select bank1
  9738  0529  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  9739  052A  1283               	bcf	3,5	;RP0=0, select bank0
  9740  052B  1303               	bcf	3,6	;RP1=0, select bank0
  9741  052C  0820               	movf	?___llmod,w
  9742  052D  1683               	bsf	3,5	;RP0=1, select bank1
  9743  052E  1303               	bcf	3,6	;RP1=0, select bank1
  9744  052F  00C2               	movwf	sprintf@tmpval^(0+128)
  9745  0530                     l3085:
  9746                           
  9747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9748  0530  0842               	movf	sprintf@tmpval^(0+128),w
  9749  0531  3E30               	addlw	48
  9750  0532  1283               	bcf	3,5	;RP0=0, select bank0
  9751  0533  1303               	bcf	3,6	;RP1=0, select bank0
  9752  0534  00E4               	movwf	??_sprintf
  9753  0535  1683               	bsf	3,5	;RP0=1, select bank1
  9754  0536  1303               	bcf	3,6	;RP1=0, select bank1
  9755  0537  084F               	movf	sprintf@sp^(0+128),w
  9756  0538  0084               	movwf	4
  9757  0539  1283               	bcf	3,5	;RP0=0, select bank0
  9758  053A  1303               	bcf	3,6	;RP1=0, select bank0
  9759  053B  0864               	movf	??_sprintf,w
  9760  053C  1383               	bcf	3,7	;select IRP bank0
  9761  053D  0080               	movwf	0
  9762  053E  3001               	movlw	1
  9763  053F  00E4               	movwf	??_sprintf
  9764  0540  0864               	movf	??_sprintf,w
  9765  0541  1683               	bsf	3,5	;RP0=1, select bank1
  9766  0542  1303               	bcf	3,6	;RP1=0, select bank1
  9767  0543  07CF               	addwf	sprintf@sp^(0+128),f
  9768  0544                     l3087:
  9769                           
  9770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9771  0544  0852               	movf	sprintf@c^(0+128),w
  9772  0545  1283               	bcf	3,5	;RP0=0, select bank0
  9773  0546  1303               	bcf	3,6	;RP1=0, select bank0
  9774  0547  00E4               	movwf	??_sprintf
  9775  0548  3001               	movlw	1
  9776  0549                     u4265:
  9777  0549  1003               	clrc
  9778  054A  0DE4               	rlf	??_sprintf,f
  9779  054B  3EFF               	addlw	-1
  9780  054C  1D03               	skipz
  9781  054D  2D49               	goto	u4265
  9782  054E  1003               	clrc
  9783  054F  0D64               	rlf	??_sprintf,w
  9784  0550  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9785  0551  0084               	movwf	4
  9786  0552  160A  118A  200A  120A  118A  	fcall	stringdir
  9787  0557  00A0               	movwf	___llmod@divisor
  9788  0558  160A  118A  200A  120A  118A  	fcall	stringdir
  9789  055D  00A1               	movwf	___llmod@divisor+1
  9790  055E  160A  118A  200A  120A  118A  	fcall	stringdir
  9791  0563  00A2               	movwf	___llmod@divisor+2
  9792  0564  160A  118A  200A  120A  118A  	fcall	stringdir
  9793  0569  00A3               	movwf	___llmod@divisor+3
  9794  056A  1683               	bsf	3,5	;RP0=1, select bank1
  9795  056B  1303               	bcf	3,6	;RP1=0, select bank1
  9796  056C  0849               	movf	(sprintf@val+3)^(0+128),w
  9797  056D  1283               	bcf	3,5	;RP0=0, select bank0
  9798  056E  1303               	bcf	3,6	;RP1=0, select bank0
  9799  056F  00A7               	movwf	___llmod@dividend+3
  9800  0570  1683               	bsf	3,5	;RP0=1, select bank1
  9801  0571  1303               	bcf	3,6	;RP1=0, select bank1
  9802  0572  0848               	movf	(sprintf@val+2)^(0+128),w
  9803  0573  1283               	bcf	3,5	;RP0=0, select bank0
  9804  0574  1303               	bcf	3,6	;RP1=0, select bank0
  9805  0575  00A6               	movwf	___llmod@dividend+2
  9806  0576  1683               	bsf	3,5	;RP0=1, select bank1
  9807  0577  1303               	bcf	3,6	;RP1=0, select bank1
  9808  0578  0847               	movf	(sprintf@val+1)^(0+128),w
  9809  0579  1283               	bcf	3,5	;RP0=0, select bank0
  9810  057A  1303               	bcf	3,6	;RP1=0, select bank0
  9811  057B  00A5               	movwf	___llmod@dividend+1
  9812  057C  1683               	bsf	3,5	;RP0=1, select bank1
  9813  057D  1303               	bcf	3,6	;RP1=0, select bank1
  9814  057E  0846               	movf	sprintf@val^(0+128),w
  9815  057F  1283               	bcf	3,5	;RP0=0, select bank0
  9816  0580  1303               	bcf	3,6	;RP1=0, select bank0
  9817  0581  00A4               	movwf	___llmod@dividend
  9818  0582  160A  118A  21D6  120A  118A  	fcall	___llmod
  9819  0587  1283               	bcf	3,5	;RP0=0, select bank0
  9820  0588  1303               	bcf	3,6	;RP1=0, select bank0
  9821  0589  0823               	movf	?___llmod+3,w
  9822  058A  1683               	bsf	3,5	;RP0=1, select bank1
  9823  058B  1303               	bcf	3,6	;RP1=0, select bank1
  9824  058C  00C9               	movwf	(sprintf@val+3)^(0+128)
  9825  058D  1283               	bcf	3,5	;RP0=0, select bank0
  9826  058E  1303               	bcf	3,6	;RP1=0, select bank0
  9827  058F  0822               	movf	?___llmod+2,w
  9828  0590  1683               	bsf	3,5	;RP0=1, select bank1
  9829  0591  1303               	bcf	3,6	;RP1=0, select bank1
  9830  0592  00C8               	movwf	(sprintf@val+2)^(0+128)
  9831  0593  1283               	bcf	3,5	;RP0=0, select bank0
  9832  0594  1303               	bcf	3,6	;RP1=0, select bank0
  9833  0595  0821               	movf	?___llmod+1,w
  9834  0596  1683               	bsf	3,5	;RP0=1, select bank1
  9835  0597  1303               	bcf	3,6	;RP1=0, select bank1
  9836  0598  00C7               	movwf	(sprintf@val+1)^(0+128)
  9837  0599  1283               	bcf	3,5	;RP0=0, select bank0
  9838  059A  1303               	bcf	3,6	;RP1=0, select bank0
  9839  059B  0820               	movf	?___llmod,w
  9840  059C  1683               	bsf	3,5	;RP0=1, select bank1
  9841  059D  1303               	bcf	3,6	;RP1=0, select bank1
  9842  059E  00C6               	movwf	sprintf@val^(0+128)
  9843  059F                     l3089:
  9844                           
  9845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9846  059F  3001               	movlw	1
  9847  05A0  02D2               	subwf	sprintf@c^(0+128),f
  9848  05A1  0A52               	incf	sprintf@c^(0+128),w
  9849  05A2  1D03               	btfss	3,2
  9850  05A3  2DA5               	goto	u4271
  9851  05A4  2DA6               	goto	u4270
  9852  05A5                     u4271:
  9853  05A5  2CB2               	goto	l3081
  9854  05A6                     u4270:
  9855  05A6  2DC0               	goto	l3097
  9856  05A7                     l3091:
  9857                           
  9858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9859  05A7  3030               	movlw	48
  9860  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  9861  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  9862  05AA  00E4               	movwf	??_sprintf
  9863  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  9864  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  9865  05AD  084F               	movf	sprintf@sp^(0+128),w
  9866  05AE  0084               	movwf	4
  9867  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  9868  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  9869  05B1  0864               	movf	??_sprintf,w
  9870  05B2  1383               	bcf	3,7	;select IRP bank0
  9871  05B3  0080               	movwf	0
  9872  05B4                     l3093:
  9873  05B4  3001               	movlw	1
  9874  05B5  00E4               	movwf	??_sprintf
  9875  05B6  0864               	movf	??_sprintf,w
  9876  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  9877  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  9878  05B9  07CF               	addwf	sprintf@sp^(0+128),f
  9879  05BA                     l3095:
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9882  05BA  30FF               	movlw	255
  9883  05BB  07D0               	addwf	sprintf@prec^(0+128),f
  9884  05BC  1803               	skipnc
  9885  05BD  0AD1               	incf	(sprintf@prec+1)^(0+128),f
  9886  05BE  30FF               	movlw	255
  9887  05BF  07D1               	addwf	(sprintf@prec+1)^(0+128),f
  9888  05C0                     l3097:
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9891  05C0  0850               	movf	sprintf@prec^(0+128),w
  9892  05C1  0451               	iorwf	(sprintf@prec+1)^(0+128),w
  9893  05C2  1D03               	btfss	3,2
  9894  05C3  2DC5               	goto	u4281
  9895  05C4  2DC6               	goto	u4280
  9896  05C5                     u4281:
  9897  05C5  2DA7               	goto	l3091
  9898  05C6                     u4280:
  9899  05C6  2FD0               	goto	l3177
  9900  05C7                     l3099:
  9901                           
  9902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9903  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  9904  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  9905  05C9  083D               	movf	sprintf@ap^(0+128),w
  9906  05CA  0084               	movwf	4
  9907  05CB  1383               	bcf	3,7	;select IRP bank0
  9908  05CC  0800               	movf	0,w
  9909  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  9910  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  9911  05CF  00E4               	movwf	??_sprintf
  9912  05D0  0A84               	incf	4,f
  9913  05D1  0800               	movf	0,w
  9914  05D2  00E5               	movwf	??_sprintf+1
  9915  05D3  0864               	movf	??_sprintf,w
  9916  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  9917  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  9918  05D6  00C6               	movwf	sprintf@val^(0+128)
  9919  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  9920  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  9921  05D9  0865               	movf	??_sprintf+1,w
  9922  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  9923  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  9924  05DC  00C7               	movwf	(sprintf@val+1)^(0+128)
  9925  05DD  3000               	movlw	0
  9926  05DE  1BC7               	btfsc	(sprintf@val+1)^(0+128),7
  9927  05DF  30FF               	movlw	255
  9928  05E0  00C8               	movwf	(sprintf@val+2)^(0+128)
  9929  05E1  00C9               	movwf	(sprintf@val+3)^(0+128)
  9930  05E2                     l3101:
  9931  05E2  3002               	movlw	2
  9932  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  9933  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  9934  05E5  00E4               	movwf	??_sprintf
  9935  05E6  0864               	movf	??_sprintf,w
  9936  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  9937  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  9938  05E9  07BD               	addwf	sprintf@ap^(0+128),f
  9939  05EA                     l3103:
  9940                           
  9941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  9942  05EA  1FC9               	btfss	(sprintf@val+3)^(0+128),7
  9943  05EB  2DED               	goto	u4291
  9944  05EC  2DEE               	goto	u4290
  9945  05ED                     u4291:
  9946  05ED  2DFD               	goto	l3109
  9947  05EE                     u4290:
  9948  05EE                     l3105:
  9949                           
  9950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9951  05EE  3003               	movlw	3
  9952  05EF  04BE               	iorwf	sprintf@flag^(0+128),f
  9953  05F0  3000               	movlw	0
  9954  05F1  04BF               	iorwf	(sprintf@flag+1)^(0+128),f
  9955  05F2                     l3107:
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9958  05F2  09C6               	comf	sprintf@val^(0+128),f
  9959  05F3  09C7               	comf	(sprintf@val+1)^(0+128),f
  9960  05F4  09C8               	comf	(sprintf@val+2)^(0+128),f
  9961  05F5  09C9               	comf	(sprintf@val+3)^(0+128),f
  9962  05F6  0AC6               	incf	sprintf@val^(0+128),f
  9963  05F7  1903               	skipnz
  9964  05F8  0AC7               	incf	(sprintf@val+1)^(0+128),f
  9965  05F9  1903               	skipnz
  9966  05FA  0AC8               	incf	(sprintf@val+2)^(0+128),f
  9967  05FB  1903               	skipnz
  9968  05FC  0AC9               	incf	(sprintf@val+3)^(0+128),f
  9969  05FD                     l3109:
  9970                           
  9971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  9972  05FD  0850               	movf	sprintf@prec^(0+128),w
  9973  05FE  0451               	iorwf	(sprintf@prec+1)^(0+128),w
  9974  05FF  1D03               	btfss	3,2
  9975  0600  2E02               	goto	u4301
  9976  0601  2E03               	goto	u4300
  9977  0602                     u4301:
  9978  0602  2E11               	goto	l3115
  9979  0603                     u4300:
  9980  0603                     l3111:
  9981  0603  0849               	movf	(sprintf@val+3)^(0+128),w
  9982  0604  0448               	iorwf	(sprintf@val+2)^(0+128),w
  9983  0605  0447               	iorwf	(sprintf@val+1)^(0+128),w
  9984  0606  0446               	iorwf	sprintf@val^(0+128),w
  9985  0607  1D03               	skipz
  9986  0608  2E0A               	goto	u4311
  9987  0609  2E0B               	goto	u4310
  9988  060A                     u4311:
  9989  060A  2E11               	goto	l3115
  9990  060B                     u4310:
  9991  060B                     l3113:
  9992                           
  9993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9994  060B  3001               	movlw	1
  9995  060C  07D0               	addwf	sprintf@prec^(0+128),f
  9996  060D  1803               	skipnc
  9997  060E  0AD1               	incf	(sprintf@prec+1)^(0+128),f
  9998  060F  3000               	movlw	0
  9999  0610  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 10000  0611                     l3115:
 10001                           
 10002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10003  0611  01D2               	clrf	sprintf@c^(0+128)
 10004  0612  0AD2               	incf	sprintf@c^(0+128),f
 10005  0613                     l3121:
 10006                           
 10007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10008  0613  0852               	movf	sprintf@c^(0+128),w
 10009  0614  1283               	bcf	3,5	;RP0=0, select bank0
 10010  0615  1303               	bcf	3,6	;RP1=0, select bank0
 10011  0616  00E4               	movwf	??_sprintf
 10012  0617  3001               	movlw	1
 10013  0618                     u4325:
 10014  0618  1003               	clrc
 10015  0619  0DE4               	rlf	??_sprintf,f
 10016  061A  3EFF               	addlw	-1
 10017  061B  1D03               	skipz
 10018  061C  2E18               	goto	u4325
 10019  061D  1003               	clrc
 10020  061E  0D64               	rlf	??_sprintf,w
 10021  061F  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10022  0620  0084               	movwf	4
 10023  0621  160A  118A  200A  120A  118A  	fcall	stringdir
 10024  0626  00E5               	movwf	??_sprintf+1
 10025  0627  160A  118A  200A  120A  118A  	fcall	stringdir
 10026  062C  00E6               	movwf	??_sprintf+2
 10027  062D  160A  118A  200A  120A  118A  	fcall	stringdir
 10028  0632  00E7               	movwf	??_sprintf+3
 10029  0633  160A  118A  200A  120A  118A  	fcall	stringdir
 10030  0638  00E8               	movwf	??_sprintf+4
 10031  0639  0868               	movf	??_sprintf+4,w
 10032  063A  1683               	bsf	3,5	;RP0=1, select bank1
 10033  063B  1303               	bcf	3,6	;RP1=0, select bank1
 10034  063C  0249               	subwf	(sprintf@val+3)^(0+128),w
 10035  063D  1D03               	skipz
 10036  063E  2E55               	goto	u4335
 10037  063F  1283               	bcf	3,5	;RP0=0, select bank0
 10038  0640  1303               	bcf	3,6	;RP1=0, select bank0
 10039  0641  0867               	movf	??_sprintf+3,w
 10040  0642  1683               	bsf	3,5	;RP0=1, select bank1
 10041  0643  1303               	bcf	3,6	;RP1=0, select bank1
 10042  0644  0248               	subwf	(sprintf@val+2)^(0+128),w
 10043  0645  1D03               	skipz
 10044  0646  2E55               	goto	u4335
 10045  0647  1283               	bcf	3,5	;RP0=0, select bank0
 10046  0648  1303               	bcf	3,6	;RP1=0, select bank0
 10047  0649  0866               	movf	??_sprintf+2,w
 10048  064A  1683               	bsf	3,5	;RP0=1, select bank1
 10049  064B  1303               	bcf	3,6	;RP1=0, select bank1
 10050  064C  0247               	subwf	(sprintf@val+1)^(0+128),w
 10051  064D  1D03               	skipz
 10052  064E  2E55               	goto	u4335
 10053  064F  1283               	bcf	3,5	;RP0=0, select bank0
 10054  0650  1303               	bcf	3,6	;RP1=0, select bank0
 10055  0651  0865               	movf	??_sprintf+1,w
 10056  0652  1683               	bsf	3,5	;RP0=1, select bank1
 10057  0653  1303               	bcf	3,6	;RP1=0, select bank1
 10058  0654  0246               	subwf	sprintf@val^(0+128),w
 10059  0655                     u4335:
 10060  0655  1803               	skipnc
 10061  0656  2E58               	goto	u4331
 10062  0657  2E59               	goto	u4330
 10063  0658                     u4331:
 10064  0658  2E5A               	goto	l3125
 10065  0659                     u4330:
 10066  0659  2E68               	goto	l3127
 10067  065A                     l3125:
 10068  065A  3001               	movlw	1
 10069  065B  1283               	bcf	3,5	;RP0=0, select bank0
 10070  065C  1303               	bcf	3,6	;RP1=0, select bank0
 10071  065D  00E4               	movwf	??_sprintf
 10072  065E  0864               	movf	??_sprintf,w
 10073  065F  1683               	bsf	3,5	;RP0=1, select bank1
 10074  0660  1303               	bcf	3,6	;RP1=0, select bank1
 10075  0661  07D2               	addwf	sprintf@c^(0+128),f
 10076  0662  300A               	movlw	10
 10077  0663  0652               	xorwf	sprintf@c^(0+128),w
 10078  0664  1D03               	btfss	3,2
 10079  0665  2E67               	goto	u4341
 10080  0666  2E68               	goto	u4340
 10081  0667                     u4341:
 10082  0667  2E13               	goto	l3121
 10083  0668                     u4340:
 10084  0668                     l3127:
 10085                           
 10086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10087  0668  0851               	movf	(sprintf@prec+1)^(0+128),w
 10088  0669  3A80               	xorlw	128
 10089  066A  3C80               	sublw	128
 10090  066B  1D03               	skipz
 10091  066C  2E6F               	goto	u4355
 10092  066D  0850               	movf	sprintf@prec^(0+128),w
 10093  066E  0252               	subwf	sprintf@c^(0+128),w
 10094  066F                     u4355:
 10095  066F  1803               	skipnc
 10096  0670  2E72               	goto	u4351
 10097  0671  2E73               	goto	u4350
 10098  0672                     u4351:
 10099  0672  2E7E               	goto	l3131
 10100  0673                     u4350:
 10101  0673                     l3129:
 10102                           
 10103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10104  0673  1683               	bsf	3,5	;RP0=1, select bank1
 10105  0674  1303               	bcf	3,6	;RP1=0, select bank1
 10106  0675  0850               	movf	sprintf@prec^(0+128),w
 10107  0676  1283               	bcf	3,5	;RP0=0, select bank0
 10108  0677  1303               	bcf	3,6	;RP1=0, select bank0
 10109  0678  00E4               	movwf	??_sprintf
 10110  0679  0864               	movf	??_sprintf,w
 10111  067A  1683               	bsf	3,5	;RP0=1, select bank1
 10112  067B  1303               	bcf	3,6	;RP1=0, select bank1
 10113  067C  00D2               	movwf	sprintf@c^(0+128)
 10114  067D  2EA2               	goto	l3135
 10115  067E                     l3131:
 10116  067E  1683               	bsf	3,5	;RP0=1, select bank1
 10117  067F  1303               	bcf	3,6	;RP1=0, select bank1
 10118  0680  0851               	movf	(sprintf@prec+1)^(0+128),w
 10119  0681  3A80               	xorlw	128
 10120  0682  1283               	bcf	3,5	;RP0=0, select bank0
 10121  0683  1303               	bcf	3,6	;RP1=0, select bank0
 10122  0684  00E4               	movwf	??_sprintf
 10123  0685  3080               	movlw	128
 10124  0686  0264               	subwf	??_sprintf,w
 10125  0687  1D03               	skipz
 10126  0688  2E8D               	goto	u4365
 10127  0689  1683               	bsf	3,5	;RP0=1, select bank1
 10128  068A  1303               	bcf	3,6	;RP1=0, select bank1
 10129  068B  0852               	movf	sprintf@c^(0+128),w
 10130  068C  0250               	subwf	sprintf@prec^(0+128),w
 10131  068D                     u4365:
 10132  068D  1803               	skipnc
 10133  068E  2E90               	goto	u4361
 10134  068F  2E91               	goto	u4360
 10135  0690                     u4361:
 10136  0690  2EA2               	goto	l3135
 10137  0691                     u4360:
 10138  0691                     l3133:
 10139                           
 10140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10141  0691  1683               	bsf	3,5	;RP0=1, select bank1
 10142  0692  1303               	bcf	3,6	;RP1=0, select bank1
 10143  0693  0852               	movf	sprintf@c^(0+128),w
 10144  0694  1283               	bcf	3,5	;RP0=0, select bank0
 10145  0695  1303               	bcf	3,6	;RP1=0, select bank0
 10146  0696  00E4               	movwf	??_sprintf
 10147  0697  01E5               	clrf	??_sprintf+1
 10148  0698  0864               	movf	??_sprintf,w
 10149  0699  1683               	bsf	3,5	;RP0=1, select bank1
 10150  069A  1303               	bcf	3,6	;RP1=0, select bank1
 10151  069B  00D0               	movwf	sprintf@prec^(0+128)
 10152  069C  1283               	bcf	3,5	;RP0=0, select bank0
 10153  069D  1303               	bcf	3,6	;RP1=0, select bank0
 10154  069E  0865               	movf	??_sprintf+1,w
 10155  069F  1683               	bsf	3,5	;RP0=1, select bank1
 10156  06A0  1303               	bcf	3,6	;RP1=0, select bank1
 10157  06A1  00D1               	movwf	(sprintf@prec+1)^(0+128)
 10158  06A2                     l3135:
 10159                           
 10160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10161  06A2  1683               	bsf	3,5	;RP0=1, select bank1
 10162  06A3  1303               	bcf	3,6	;RP1=0, select bank1
 10163  06A4  0840               	movf	sprintf@width^(0+128),w
 10164  06A5  0441               	iorwf	(sprintf@width+1)^(0+128),w
 10165  06A6  1903               	btfsc	3,2
 10166  06A7  2EA9               	goto	u4371
 10167  06A8  2EAA               	goto	u4370
 10168  06A9                     u4371:
 10169  06A9  2EC4               	goto	l3141
 10170  06AA                     u4370:
 10171  06AA                     l3137:
 10172  06AA  3003               	movlw	3
 10173  06AB  053E               	andwf	sprintf@flag^(0+128),w
 10174  06AC  1283               	bcf	3,5	;RP0=0, select bank0
 10175  06AD  1303               	bcf	3,6	;RP1=0, select bank0
 10176  06AE  00E4               	movwf	??_sprintf
 10177  06AF  3000               	movlw	0
 10178  06B0  1683               	bsf	3,5	;RP0=1, select bank1
 10179  06B1  1303               	bcf	3,6	;RP1=0, select bank1
 10180  06B2  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10181  06B3  1283               	bcf	3,5	;RP0=0, select bank0
 10182  06B4  1303               	bcf	3,6	;RP1=0, select bank0
 10183  06B5  00E5               	movwf	??_sprintf+1
 10184  06B6  0864               	movf	??_sprintf,w
 10185  06B7  0465               	iorwf	??_sprintf+1,w
 10186  06B8  1903               	btfsc	3,2
 10187  06B9  2EBB               	goto	u4381
 10188  06BA  2EBC               	goto	u4380
 10189  06BB                     u4381:
 10190  06BB  2EC4               	goto	l3141
 10191  06BC                     u4380:
 10192  06BC                     l3139:
 10193                           
 10194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10195  06BC  30FF               	movlw	255
 10196  06BD  1683               	bsf	3,5	;RP0=1, select bank1
 10197  06BE  1303               	bcf	3,6	;RP1=0, select bank1
 10198  06BF  07C0               	addwf	sprintf@width^(0+128),f
 10199  06C0  1803               	skipnc
 10200  06C1  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10201  06C2  30FF               	movlw	255
 10202  06C3  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10203  06C4                     l3141:
 10204                           
 10205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10206  06C4  1683               	bsf	3,5	;RP0=1, select bank1
 10207  06C5  1303               	bcf	3,6	;RP1=0, select bank1
 10208  06C6  1F3F               	btfss	(sprintf@flag+1)^(0+128),6
 10209  06C7  2EC9               	goto	u4391
 10210  06C8  2ECA               	goto	u4390
 10211  06C9                     u4391:
 10212  06C9  2EED               	goto	l3149
 10213  06CA                     u4390:
 10214  06CA                     l3143:
 10215                           
 10216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10217  06CA  0851               	movf	(sprintf@prec+1)^(0+128),w
 10218  06CB  3A80               	xorlw	128
 10219  06CC  1283               	bcf	3,5	;RP0=0, select bank0
 10220  06CD  1303               	bcf	3,6	;RP1=0, select bank0
 10221  06CE  00E4               	movwf	??_sprintf
 10222  06CF  1683               	bsf	3,5	;RP0=1, select bank1
 10223  06D0  1303               	bcf	3,6	;RP1=0, select bank1
 10224  06D1  0841               	movf	(sprintf@width+1)^(0+128),w
 10225  06D2  3A80               	xorlw	128
 10226  06D3  1283               	bcf	3,5	;RP0=0, select bank0
 10227  06D4  1303               	bcf	3,6	;RP1=0, select bank0
 10228  06D5  0264               	subwf	??_sprintf,w
 10229  06D6  1D03               	skipz
 10230  06D7  2EDC               	goto	u4405
 10231  06D8  1683               	bsf	3,5	;RP0=1, select bank1
 10232  06D9  1303               	bcf	3,6	;RP1=0, select bank1
 10233  06DA  0840               	movf	sprintf@width^(0+128),w
 10234  06DB  0250               	subwf	sprintf@prec^(0+128),w
 10235  06DC                     u4405:
 10236  06DC  1803               	skipnc
 10237  06DD  2EDF               	goto	u4401
 10238  06DE  2EE0               	goto	u4400
 10239  06DF                     u4401:
 10240  06DF  2EE9               	goto	l3147
 10241  06E0                     u4400:
 10242  06E0                     l3145:
 10243                           
 10244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10245  06E0  1683               	bsf	3,5	;RP0=1, select bank1
 10246  06E1  1303               	bcf	3,6	;RP1=0, select bank1
 10247  06E2  0850               	movf	sprintf@prec^(0+128),w
 10248  06E3  02C0               	subwf	sprintf@width^(0+128),f
 10249  06E4  0851               	movf	(sprintf@prec+1)^(0+128),w
 10250  06E5  1C03               	skipc
 10251  06E6  03C1               	decf	(sprintf@width+1)^(0+128),f
 10252  06E7  02C1               	subwf	(sprintf@width+1)^(0+128),f
 10253  06E8  2EED               	goto	l3149
 10254  06E9                     l3147:
 10255                           
 10256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10257  06E9  1683               	bsf	3,5	;RP0=1, select bank1
 10258  06EA  1303               	bcf	3,6	;RP1=0, select bank1
 10259  06EB  01C0               	clrf	sprintf@width^(0+128)
 10260  06EC  01C1               	clrf	(sprintf@width+1)^(0+128)
 10261  06ED                     l3149:
 10262                           
 10263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10264  06ED  0841               	movf	(sprintf@width+1)^(0+128),w
 10265  06EE  3A80               	xorlw	128
 10266  06EF  3C80               	sublw	128
 10267  06F0  1D03               	skipz
 10268  06F1  2EF4               	goto	u4415
 10269  06F2  0840               	movf	sprintf@width^(0+128),w
 10270  06F3  0252               	subwf	sprintf@c^(0+128),w
 10271  06F4                     u4415:
 10272  06F4  1803               	skipnc
 10273  06F5  2EF7               	goto	u4411
 10274  06F6  2EF8               	goto	u4410
 10275  06F7                     u4411:
 10276  06F7  2F0C               	goto	l3153
 10277  06F8                     u4410:
 10278  06F8                     l3151:
 10279                           
 10280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10281  06F8  1683               	bsf	3,5	;RP0=1, select bank1
 10282  06F9  1303               	bcf	3,6	;RP1=0, select bank1
 10283  06FA  0852               	movf	sprintf@c^(0+128),w
 10284  06FB  1283               	bcf	3,5	;RP0=0, select bank0
 10285  06FC  1303               	bcf	3,6	;RP1=0, select bank0
 10286  06FD  00E4               	movwf	??_sprintf
 10287  06FE  01E5               	clrf	??_sprintf+1
 10288  06FF  0864               	movf	??_sprintf,w
 10289  0700  1683               	bsf	3,5	;RP0=1, select bank1
 10290  0701  1303               	bcf	3,6	;RP1=0, select bank1
 10291  0702  02C0               	subwf	sprintf@width^(0+128),f
 10292  0703  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0704  1303               	bcf	3,6	;RP1=0, select bank0
 10294  0705  0865               	movf	??_sprintf+1,w
 10295  0706  1683               	bsf	3,5	;RP0=1, select bank1
 10296  0707  1303               	bcf	3,6	;RP1=0, select bank1
 10297  0708  1C03               	skipc
 10298  0709  03C1               	decf	(sprintf@width+1)^(0+128),f
 10299  070A  02C1               	subwf	(sprintf@width+1)^(0+128),f
 10300  070B  2F10               	goto	l3155
 10301  070C                     l3153:
 10302                           
 10303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10304  070C  1683               	bsf	3,5	;RP0=1, select bank1
 10305  070D  1303               	bcf	3,6	;RP1=0, select bank1
 10306  070E  01C0               	clrf	sprintf@width^(0+128)
 10307  070F  01C1               	clrf	(sprintf@width+1)^(0+128)
 10308  0710                     l3155:
 10309                           
 10310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10311  0710  0840               	movf	sprintf@width^(0+128),w
 10312  0711  0441               	iorwf	(sprintf@width+1)^(0+128),w
 10313  0712  1903               	btfsc	3,2
 10314  0713  2F15               	goto	u4421
 10315  0714  2F16               	goto	u4420
 10316  0715                     u4421:
 10317  0715  2F35               	goto	l3163
 10318  0716                     u4420:
 10319  0716                     l3157:
 10320                           
 10321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10322  0716  3020               	movlw	32
 10323  0717  1283               	bcf	3,5	;RP0=0, select bank0
 10324  0718  1303               	bcf	3,6	;RP1=0, select bank0
 10325  0719  00E4               	movwf	??_sprintf
 10326  071A  1683               	bsf	3,5	;RP0=1, select bank1
 10327  071B  1303               	bcf	3,6	;RP1=0, select bank1
 10328  071C  084F               	movf	sprintf@sp^(0+128),w
 10329  071D  0084               	movwf	4
 10330  071E  1283               	bcf	3,5	;RP0=0, select bank0
 10331  071F  1303               	bcf	3,6	;RP1=0, select bank0
 10332  0720  0864               	movf	??_sprintf,w
 10333  0721  1383               	bcf	3,7	;select IRP bank0
 10334  0722  0080               	movwf	0
 10335  0723                     l3159:
 10336  0723  3001               	movlw	1
 10337  0724  00E4               	movwf	??_sprintf
 10338  0725  0864               	movf	??_sprintf,w
 10339  0726  1683               	bsf	3,5	;RP0=1, select bank1
 10340  0727  1303               	bcf	3,6	;RP1=0, select bank1
 10341  0728  07CF               	addwf	sprintf@sp^(0+128),f
 10342  0729                     l3161:
 10343  0729  30FF               	movlw	255
 10344  072A  07C0               	addwf	sprintf@width^(0+128),f
 10345  072B  1803               	skipnc
 10346  072C  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10347  072D  30FF               	movlw	255
 10348  072E  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10349  072F  0840               	movf	sprintf@width^(0+128),w
 10350  0730  0441               	iorwf	(sprintf@width+1)^(0+128),w
 10351  0731  1D03               	btfss	3,2
 10352  0732  2F34               	goto	u4431
 10353  0733  2F35               	goto	u4430
 10354  0734                     u4431:
 10355  0734  2F16               	goto	l3157
 10356  0735                     u4430:
 10357  0735                     l3163:
 10358                           
 10359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10360  0735  3003               	movlw	3
 10361  0736  053E               	andwf	sprintf@flag^(0+128),w
 10362  0737  1283               	bcf	3,5	;RP0=0, select bank0
 10363  0738  1303               	bcf	3,6	;RP1=0, select bank0
 10364  0739  00E4               	movwf	??_sprintf
 10365  073A  3000               	movlw	0
 10366  073B  1683               	bsf	3,5	;RP0=1, select bank1
 10367  073C  1303               	bcf	3,6	;RP1=0, select bank1
 10368  073D  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10369  073E  1283               	bcf	3,5	;RP0=0, select bank0
 10370  073F  1303               	bcf	3,6	;RP1=0, select bank0
 10371  0740  00E5               	movwf	??_sprintf+1
 10372  0741  0864               	movf	??_sprintf,w
 10373  0742  0465               	iorwf	??_sprintf+1,w
 10374  0743  1903               	btfsc	3,2
 10375  0744  2F46               	goto	u4441
 10376  0745  2F47               	goto	u4440
 10377  0746                     u4441:
 10378  0746  2FC0               	goto	l3175
 10379  0747                     u4440:
 10380  0747                     l3165:
 10381                           
 10382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10383  0747  302D               	movlw	45
 10384  0748  00E4               	movwf	??_sprintf
 10385  0749  1683               	bsf	3,5	;RP0=1, select bank1
 10386  074A  1303               	bcf	3,6	;RP1=0, select bank1
 10387  074B  084F               	movf	sprintf@sp^(0+128),w
 10388  074C  0084               	movwf	4
 10389  074D  1283               	bcf	3,5	;RP0=0, select bank0
 10390  074E  1303               	bcf	3,6	;RP1=0, select bank0
 10391  074F  0864               	movf	??_sprintf,w
 10392  0750  1383               	bcf	3,7	;select IRP bank0
 10393  0751  0080               	movwf	0
 10394  0752                     l3167:
 10395  0752  3001               	movlw	1
 10396  0753  00E4               	movwf	??_sprintf
 10397  0754  0864               	movf	??_sprintf,w
 10398  0755  1683               	bsf	3,5	;RP0=1, select bank1
 10399  0756  1303               	bcf	3,6	;RP1=0, select bank1
 10400  0757  07CF               	addwf	sprintf@sp^(0+128),f
 10401  0758  2FC0               	goto	l3175
 10402  0759                     l3169:
 10403                           
 10404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10405  0759  3000               	movlw	0
 10406  075A  1283               	bcf	3,5	;RP0=0, select bank0
 10407  075B  1303               	bcf	3,6	;RP1=0, select bank0
 10408  075C  00A3               	movwf	___llmod@divisor+3
 10409  075D  3000               	movlw	0
 10410  075E  00A2               	movwf	___llmod@divisor+2
 10411  075F  3000               	movlw	0
 10412  0760  00A1               	movwf	___llmod@divisor+1
 10413  0761  300A               	movlw	10
 10414  0762  00A0               	movwf	___llmod@divisor
 10415  0763  1683               	bsf	3,5	;RP0=1, select bank1
 10416  0764  1303               	bcf	3,6	;RP1=0, select bank1
 10417  0765  0850               	movf	sprintf@prec^(0+128),w
 10418  0766  1283               	bcf	3,5	;RP0=0, select bank0
 10419  0767  1303               	bcf	3,6	;RP1=0, select bank0
 10420  0768  00E4               	movwf	??_sprintf
 10421  0769  3001               	movlw	1
 10422  076A                     u4455:
 10423  076A  1003               	clrc
 10424  076B  0DE4               	rlf	??_sprintf,f
 10425  076C  3EFF               	addlw	-1
 10426  076D  1D03               	skipz
 10427  076E  2F6A               	goto	u4455
 10428  076F  1003               	clrc
 10429  0770  0D64               	rlf	??_sprintf,w
 10430  0771  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10431  0772  0084               	movwf	4
 10432  0773  160A  118A  200A  120A  118A  	fcall	stringdir
 10433  0778  00F0               	movwf	___lldiv@divisor
 10434  0779  160A  118A  200A  120A  118A  	fcall	stringdir
 10435  077E  00F1               	movwf	___lldiv@divisor+1
 10436  077F  160A  118A  200A  120A  118A  	fcall	stringdir
 10437  0784  00F2               	movwf	___lldiv@divisor+2
 10438  0785  160A  118A  200A  120A  118A  	fcall	stringdir
 10439  078A  00F3               	movwf	___lldiv@divisor+3
 10440  078B  1683               	bsf	3,5	;RP0=1, select bank1
 10441  078C  1303               	bcf	3,6	;RP1=0, select bank1
 10442  078D  0849               	movf	(sprintf@val+3)^(0+128),w
 10443  078E  00F7               	movwf	___lldiv@dividend+3
 10444  078F  0848               	movf	(sprintf@val+2)^(0+128),w
 10445  0790  00F6               	movwf	___lldiv@dividend+2
 10446  0791  0847               	movf	(sprintf@val+1)^(0+128),w
 10447  0792  00F5               	movwf	___lldiv@dividend+1
 10448  0793  0846               	movf	sprintf@val^(0+128),w
 10449  0794  00F4               	movwf	___lldiv@dividend
 10450  0795  160A  118A  22EB  120A  118A  	fcall	___lldiv
 10451  079A  0873               	movf	?___lldiv+3,w
 10452  079B  1283               	bcf	3,5	;RP0=0, select bank0
 10453  079C  1303               	bcf	3,6	;RP1=0, select bank0
 10454  079D  00A7               	movwf	___llmod@dividend+3
 10455  079E  0872               	movf	?___lldiv+2,w
 10456  079F  00A6               	movwf	___llmod@dividend+2
 10457  07A0  0871               	movf	?___lldiv+1,w
 10458  07A1  00A5               	movwf	___llmod@dividend+1
 10459  07A2  0870               	movf	?___lldiv,w
 10460  07A3  00A4               	movwf	___llmod@dividend
 10461  07A4  160A  118A  21D6  120A  118A  	fcall	___llmod
 10462  07A9  1283               	bcf	3,5	;RP0=0, select bank0
 10463  07AA  1303               	bcf	3,6	;RP1=0, select bank0
 10464  07AB  0820               	movf	?___llmod,w
 10465  07AC  3E30               	addlw	48
 10466  07AD  00E5               	movwf	??_sprintf+1
 10467  07AE  0865               	movf	??_sprintf+1,w
 10468  07AF  1683               	bsf	3,5	;RP0=1, select bank1
 10469  07B0  1303               	bcf	3,6	;RP1=0, select bank1
 10470  07B1  00D2               	movwf	sprintf@c^(0+128)
 10471  07B2                     l3171:
 10472                           
 10473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10474  07B2  0852               	movf	sprintf@c^(0+128),w
 10475  07B3  1283               	bcf	3,5	;RP0=0, select bank0
 10476  07B4  1303               	bcf	3,6	;RP1=0, select bank0
 10477  07B5  00E4               	movwf	??_sprintf
 10478  07B6  1683               	bsf	3,5	;RP0=1, select bank1
 10479  07B7  1303               	bcf	3,6	;RP1=0, select bank1
 10480  07B8  084F               	movf	sprintf@sp^(0+128),w
 10481  07B9  0084               	movwf	4
 10482  07BA  1283               	bcf	3,5	;RP0=0, select bank0
 10483  07BB  1303               	bcf	3,6	;RP1=0, select bank0
 10484  07BC  0864               	movf	??_sprintf,w
 10485  07BD  1383               	bcf	3,7	;select IRP bank0
 10486  07BE  0080               	movwf	0
 10487  07BF  2F52               	goto	l3167
 10488  07C0                     l3175:
 10489                           
 10490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10491  07C0  30FF               	movlw	255
 10492  07C1  1683               	bsf	3,5	;RP0=1, select bank1
 10493  07C2  1303               	bcf	3,6	;RP1=0, select bank1
 10494  07C3  07D0               	addwf	sprintf@prec^(0+128),f
 10495  07C4  1803               	skipnc
 10496  07C5  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 10497  07C6  30FF               	movlw	255
 10498  07C7  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 10499  07C8  0A50               	incf	sprintf@prec^(0+128),w
 10500  07C9  1D03               	skipz
 10501  07CA  2FCF               	goto	u4461
 10502  07CB  0A51               	incf	(sprintf@prec+1)^(0+128),w
 10503  07CC  1D03               	btfss	3,2
 10504  07CD  2FCF               	goto	u4461
 10505  07CE  2FD0               	goto	u4460
 10506  07CF                     u4461:
 10507  07CF  2F59               	goto	l3169
 10508  07D0                     u4460:
 10509  07D0                     l3177:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10512  07D0  3001               	movlw	1
 10513  07D1  1283               	bcf	3,5	;RP0=0, select bank0
 10514  07D2  07DB               	addwf	sprintf@f,f
 10515  07D3  30FF               	movlw	-1
 10516  07D4  075B               	addwf	sprintf@f,w
 10517  07D5  0084               	movwf	4
 10518  07D6  160A  118A  200A  120A  118A  	fcall	stringdir
 10519  07DB  00E4               	movwf	??_sprintf
 10520  07DC  0864               	movf	??_sprintf,w
 10521  07DD  1683               	bsf	3,5	;RP0=1, select bank1
 10522  07DE  1303               	bcf	3,6	;RP1=0, select bank1
 10523  07DF  00D2               	movwf	sprintf@c^(0+128)
 10524  07E0  0852               	movf	sprintf@c^(0+128),w
 10525  07E1  1D03               	btfss	3,2
 10526  07E2  2FE4               	goto	u4471
 10527  07E3  2FE7               	goto	u4470
 10528  07E4                     u4471:
 10529  07E4  120A  158A  2D36   	goto	l2899
 10530  07E7                     u4470:
 10531  07E7                     l3179:
 10532                           
 10533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10534  07E7  1683               	bsf	3,5	;RP0=1, select bank1
 10535  07E8  1303               	bcf	3,6	;RP1=0, select bank1
 10536  07E9  084F               	movf	sprintf@sp^(0+128),w
 10537  07EA  0084               	movwf	4
 10538  07EB  1383               	bcf	3,7	;select IRP bank0
 10539  07EC  0180               	clrf	0
 10540  07ED                     l429:
 10541  07ED  0008               	return
 10542  07EE                     __end_of_sprintf:

Data Sizes:
    Strings     32
    Constant    118
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     25      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    write_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[14]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[13]), BUFFER(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _write_string->_write_char
    _write_char->_port
    _temperatura->_spiWrite
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___ftmul->___awtoft
    ___ftmul->___lwdiv
    ___bmul->___lwdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _setup->_spiInit
    _set_cursor->_CMDs
    _contador->_spiWrite
    _clear_LCD->_CMDs
    ___awtoft->___ftpack
    _Write_USART_String->_Write_USART
    _LCD_init->_CMDs
    _CMDs->_port
    _ADCread->_spiWrite

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   41173
                                             74 BANK0      3     3      0
                            _ADCread
                           _LCD_init
                        _Write_USART
                 _Write_USART_String
                           ___awtoft
                            ___ftmul
                           __baudios
                          _clear_LCD
                       _config_rcsta
                       _config_txsta
                           _contador
                         _set_cursor
                              _setup
                            _sprintf
                        _temperatura
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         7     5      2     394
                                              3 COMMON     7     5      2
                         _write_char
 ---------------------------------------------------------------------------------
 (2) _write_char                                           2     2      0     198
                                              1 COMMON     2     2      0
                               _port
 ---------------------------------------------------------------------------------
 (1) _temperatura                                          2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   33235
                                             59 BANK0     15     6      9
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6946
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5731
                                             24 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3969
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              4 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2069
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     583
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3172
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2999
                                             40 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     291
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     438
                                              4 COMMON     4     3      1
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _contador                                             2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     198
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2144
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     198
                                              4 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     198
                                              1 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _port                                                 1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCread                                              2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCread
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LCD_init
     _CMDs
       _port
   _Write_USART
   _Write_USART_String
     _Write_USART
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   __baudios
   _clear_LCD
     _CMDs
       _port
   _config_rcsta
   _config_txsta
   _contador
     _spiRead
       _spiReceiveWait
     _spiWrite
   _set_cursor
     _CMDs
       _port
   _setup
     _spiInit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _temperatura
     _spiRead
       _spiReceiveWait
     _spiWrite
   _write_string
     _write_char
       _port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     19      33       7       63.7%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 22:34:16 2021

                          pc 0002               ___bmul@product 0026                  _SSPSTATbits 0094  
                         l73 16F1                           l82 1F95                           l85 10D7  
                         l79 1FC7                           l88 1E76                           _V1 00A3  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
               ___ftadd@exp1 0054                 ___ftadd@exp2 0053         __size_of_Write_USART 000C  
               ___ftadd@sign 0052                          l111 1DBE                          l200 1147  
                        l104 1E1A                          l201 1148                          l105 1E1F  
                        l122 1DD7                          l114 1DB7                          l202 114E  
                        l210 0011                          l108 1DB8                          l204 114F  
                        l142 1DE1                          l222 081E                          l207 1E56  
                        l151 1DF7                          l216 1E9A                          l145 1DC6  
                        l330 0A7C                          l219 12EA                          l139 1DB1  
                        l148 1DED                          l228 1191                          l157 1F34  
                        l190 1124                          l191 1125                          _ADC 006E  
                        l192 112B                          l193 112C                          l433 1EF1  
                        l337 0D27                          l194 1132                          l195 1133  
                        l435 1F09                          l196 1139                          l188 111B  
                        l197 113A                          l189 111E                          l429 07ED  
                        l198 1140                          l199 1141                          l359 0E1A  
                        l616 13B9                          l392 03D2                          l650 16C5  
                        l642 1682                          l722 089E                          l635 1EBF  
                        l643 1695                          l459 1E36                          l804 122B  
                        l812 1F63                          l469 1350                          l629 1284  
                        l670 141B                          l662 13F6                          l718 08DB  
                        l742 15A6                          l671 1435                          l639 16D2  
                        l719 084D                          l399 0424                          l736 1FFF  
                        l753 1DEB                          l729 08CE                          l658 1435  
                        l682 005D                          l770 14A4                          l683 0067  
                        l763 14C1                          l684 006C                          l669 1411  
                        l693 00DD                          l679 0147                          l759 1EE4  
                        l875 11D5                          l885 1111                          l895 1E09  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          fsr0 0004                          indf 0000  
               ___awmod@sign 0076              __end_of_ADCread 1F96  __size_of_Write_USART_String 002B  
                       l2111 13C6                         l2121 13E4                         l2201 1397  
                       l3001 0196                         l2131 1415                         l2123 13EE  
                       l2115 13CD                         l2107 13BA                         l2211 13B0  
                       l2203 139D                         l3011 01DA                         l3003 019F  
                       l2141 1113                         l2133 141D                         l2125 13FD  
                       l2117 13D9                         l2109 13BF                         l2301 00CB  
                       l2213 13B5                         l2205 139E                         l2221 1231  
                       l3101 05E2                         l3005 01A7                         l3013 01E1  
                       l2151 1137                         l2143 1117                         l2135 142F  
                       l2127 1407                         l2119 13E0                         l2311 0105  
                       l2303 00D7                         l2207 13A5                         l2231 1247  
                       l2223 1236                         l3111 0603                         l3103 05EA  
                       l3031 02D6                         l3023 0252                         l3015 024E  
                       l2153 113E                         l2145 1122                         l2137 1434  
                       l2129 140B                         l3201 1EA0                         l2321 012C  
                       l2313 0106                         l2305 00E1                         l2161 1E24  
                       l2401 10D8                         l2209 13AB                         l2241 1263  
                       l2233 124A                         l2225 1238                         l2217 122C  
                       l3121 0613                         l3113 060B                         l3105 05EE  
                       l3033 02DC                         l3017 0250                         l3009 01BF  
                       l2139 1DB8                         l2155 1145                         l2147 1129  
                       l3203 1EA5                         l2315 0116                         l2307 00F1  
                       l2163 1E28                         l2331 14DC                         l2411 10F0  
                       l2403 10DE                         l2251 1280                         l2243 1269  
                       l2235 1251                         l2227 123C                         l2219 122D  
                       l3131 067E                         l3115 0611                         l3107 05F2  
                       l3051 0340                         l3035 02EE                         l3043 030B  
                       l3027 0299                         l3211 16DD                         l2157 114C  
                       l2149 1130                         l3205 1EA7                         l2317 011A  
                       l2309 00F5                         l2261 0041                         l2165 1E2C  
                       l2341 1522                         l2333 14ED                         l2325 14C2  
                       l2413 10FA                         l2405 10E1                         l2181 135F  
                       l2173 1351                         l2245 1270                         l2237 1255  
                       l2229 1241                         l2501 0A8D                         l3141 06C4  
                       l3133 0691                         l3125 065A                         l3109 05FD  
                       l3061 03EF                         l3053 037F                         l3045 031A  
                       l3037 02F7                         l3029 02A7                         l3221 177C  
                       l3213 16E2                         l2431 1DD4                         l2423 1DED  
                       l2319 012A                         l2271 005E                         l2255 0012  
                       l2167 1E2E                         l2159 1E23                         l2351 1537  
                       l2343 1523                         l2327 14D5                         l2415 1100  
                       l2407 10E8                         l2191 1374                         l2183 1363  
                       l2175 1354                         l2239 1259                         l2247 1276  
                       l3151 06F8                         l3143 06CA                         l3135 06A2  
                       l3127 0668                         l3071 0435                         l3063 03F5  
                       l3055 03BE                         l3047 032E                         l3039 0304  
                       l3231 17E8                         l3223 17BB                         l3215 170D  
                       l2425 1DF3                         l2441 1E16                         l2281 0073  
                       l2273 0062                         l2265 0048                         l2257 0031  
                       l2601 15C1                         l2169 1E35                         l2361 1561  
                       l2353 1547                         l2345 1529                         l2337 14F4  
                       l2417 1107                         l2409 10EC                         l2193 1377  
                       l2185 1368                         l2177 1358                         l2249 127B  
                       l2513 0BB6                         l3161 0729                         l3153 070C  
                       l3145 06E0                         l3137 06AA                         l3129 0673  
                       l3081 04B2                         l3073 043A                         l3065 0402  
                       l3057 03DC                         l3049 0339                         l3233 17EE  
                       l3225 17C4                         l3217 1716                         l3209 16D3  
                       l2427 1DB3                         l2451 1E44                         l2443 1E19  
                       l2435 1E0B                         l2291 00A5                         l2283 0080  
                       l2275 0066                         l2267 004D                         l2259 0037  
                       l2611 15E3                         l2371 158B                         l2363 1565  
                       l2355 154F                         l2347 152F                         l2339 1521  
                       l2419 110D                         l2195 137E                         l2187 136C  
                       l2179 135D                         l2531 0D07                         l2507 0B45  
                       l3171 07B2                         l3163 0735                         l3155 0710  
                       l3147 06E9                         l3139 06BC                         l3091 05A7  
                       l3083 04F1                         l3075 0447                         l3067 0411  
                       l3059 03E9                         l3227 17D9                         l3219 1749  
                       l2429 1DCF                         l2453 1E47                         l2445 1E38  
                       l2437 1E12                         l2701 1FEE                         l2285 008A  
                       l2293 00AC                         l2277 006B                         l2269 0053  
                       l2621 162A                         l2613 1617                         l2605 15CA  
                       l2365 1575                         l2357 1557                         l2349 1533  
                       l2381 119D                         l2541 1E06                         l2197 1382  
                       l2189 136E                         l2525 0C96                         l2509 0B4C  
                       l2517 0BD7                         l3165 0747                         l3157 0716  
                       l3149 06ED                         l3093 05B4                         l3085 0530  
                       l3077 044D                         l3069 041A                         l2461 0807  
                       l3229 17E2                         l2455 1E4A                         l2447 1E3B  
                       l3191 1F0C                         l2439 1E14                         l2703 1FFC  
                       l2711 1DE9                         l2295 00B2                         l2287 0090  
                       l2279 006D                         l2631 1699                         l2623 1633  
                       l2615 161F                         l2367 157D                         l2359 155D  
                       l2391 11C3                         l2383 11A4                         l2375 1192  
                       l2543 1E08                         l2535 1DF9                         l2199 1386  
                       l2527 0C9D                         l2519 0BDE                         l3167 0752  
                       l3175 07C0                         l3159 0723                         l3095 05BA  
                       l3087 0544                         l3079 0465                         l2471 0819  
                       l2463 080D                         _ADC2 006D                         l2457 1E4D  
                       l2449 1E41                         l3193 1F1D                         l2801 1E66  
                       l2705 1FFE                         l2713 1DEB                         l2297 00BC  
                       l2289 0099                         l2721 1ECB                         l2625 165F  
                       l2617 1621                         l2561 0854                         l2553 083B  
                       l2369 1585                         l2393 11C4                         l2385 11A8  
                       l2377 1194                         l2473 08DF                         l2537 1DFA  
                       l3169 0759                         l3097 05C0                         l3089 059F  
                       l3265 0E36                         l3177 07D0                         l2465 0810  
                       l3195 1F21                         l2811 1E6D                         l2803 1E67  
                       l2299 00C2                         l2731 1452                         l2651 1EE5  
                       l2627 1681                         l2619 1626                         l2571 0885  
                       l2563 0863                         l2547 081F                         l2395 11CB  
                       l2387 11AC                         l2379 119A                         l2491 0A49  
                       l2475 08E5                         l2483 09BC                         l2539 1E00  
                       l3099 05C7                         l3179 07E7                         l2467 0813  
                       l2459 0804                         l2821 1285                         l3189 1F0A  
                       l3197 1E9B                         l2813 1DAD                         l2805 1E68  
                       l2709 1DE2                         l2717 1EC0                         l2741 1474  
                       l2733 1464                         l2725 1436                         l2661 1F05  
                       l2653 1EE7                         l2645 16BA                         l2637 16A1  
                       l2629 168F                         l2573 088F                         l2565 0865  
                       l2549 0832                         l2389 11BD                         l2397 11D1  
                       l2485 09C2                         l2477 09A2                         l2901 0D3C  
                       l2469 0816                         l2831 12B0                         l2823 128E  
                       l3199 1E9C                         l2815 1DD8                         l2807 1E6B  
                       l2719 1EC9                         l2743 1478                         l2751 1492  
                       l2735 1465                         l2727 1449                         l2671 130B  
                       l2655 1EEB                         l2647 16CA                         l2639 16B3  
                       l2575 0890                         l2567 086E                         l2559 084E  
                       l2487 0A2F                         l2495 0A80                         l2911 0D6A  
                       l2903 0D49                         l2841 12DA                         l2833 12B6  
                       l2825 1294                         l2817 1DBF                         l2809 1E6C  
                       l2761 14AE                         l2737 146B                         l2681 1339  
                       l2673 130F                         l2665 12EB                         l2657 1EF8  
                       l2593 08C3                         l2585 08AA                         l2577 0898  
                       l2569 0877                         l2497 0A84                         l2921 0DBE  
                       l2913 0D7F                         l2905 0D50                         l2843 12E5  
                       l2835 12C1                         l2827 12A2                         l2819 1DC5  
                       l2851 1FA2                         l2691 1FCC                         l2763 14B9  
                       l2739 1472                         l2683 1342                         l2675 1318  
                       l2667 12FB                         l2771 11E3                         l2659 1EFF  
                       l2595 08D3                         l2579 08A2                         l2587 08BC  
                       l2499 0A86                         l2931 0DFC                         l2923 0DC1  
                       l2915 0D9A                         l2907 0D54                         l2861 1F70  
                       l2837 12C6                         l2829 12A6                         l2845 0005  
                       l2853 1FA8                         l2693 1FD9                         l2757 1499  
                       l2749 1480                         l2677 132A                         l2669 12FE  
                       l2685 1348                         l2781 121D                         l2773 11F0  
                       l2941 0E1E                         l2933 0E02                         l2925 0DC7  
                       l2917 0DA0                         l2909 0D66                         l2863 1F76  
                       l2839 12D4                         l2855 1FBB                         l2847 1F96  
                       l2695 1FDD                         l2759 14A9                         l2679 1338  
                       l2775 11F4                         l2783 1223                         l2767 11D6  
                       l2791 1F47                         l2599 15A7                         l2951 0E6F  
                       l2943 0E44                         l2927 0DCC                         l2935 0E14  
                       l2919 0DB0                         l2871 10B2                         l2865 1F89  
                       l2857 1F64                         l2849 1F99                         l2881 1E82  
                       l2697 1FEA                         l2689 1FC8                         l2777 1206  
                       l2769 11E0                         l2793 1F4D                         l2961 0EA9  
                       l2953 0E77                         l2945 0E5A                         l2937 0E18  
                       l2929 0DE1                         l2873 10B8                         l2859 1F67  
                       l2883 1E89                         l2699 1FEC                         l2779 1214  
                       l2787 1F35                         l2971 0F09                         l2963 0EB0  
                       l2955 0E8C                         l2947 0E60                         l2875 10CB  
                       l2867 10A6                         l2891 1153                         l2885 1E8F  
                       l2877 1E78                         l2797 1E57                         l2789 1F3A  
                       l2981 0F7A                         l2973 0F0D                         l2965 0EDD  
                       l2957 0EA1                         l2949 0E64                         l2869 10A9  
                       l2893 116F                         l2887 1E94                         l2879 1E7D  
                       l2799 1E63                         l2991 0FEA                         l2983 0F83  
                       l2975 0F13                         l2967 0EE3                         l2959 0EA5  
                       l2895 1175                         l2993 0148                         l2985 0F9A  
                       l2977 0F2C                         l2969 0EF6                         l2897 0D2B  
                       l2889 1150                         l2995 0151                         l2979 0F65  
                       l2987 0FA2                         l2899 0D36                         l2997 0170  
                       l2989 0FB1                         l2999 017F                         STR_1 1098  
                       STR_2 1086                         STR_3 1099                         _CMDs 1E37  
                       u3000 155D                         u3001 155C                         u3010 1565  
                       u3011 1564                         u3100 11BD                         u3021 156E  
                       u3101 11BC                         u2310 13FC                         u3022 1575  
                       u2311 13FB                         u2400 1122                         u3200 1E12  
                       u3120 11D1                         u4000 0E60                         u2401 1121  
                       u2305 13EF                         u3201 1E11                         u3121 11D0  
                       u3105 11B9                         u4001 0E5F                         u2410 1129  
                       u2330 140B                         u3050 158B                         u3130 10DE  
                       u3210 08E5                         u4010 0E8C                         u2411 1128  
                       u2331 140A                         u3051 158A                         u3035 1576  
                       u3115 11C5                         u3131 10DD                         u3211 08E4  
                       u4011 0E8B                         u2420 1130                         u2340 1411  
                       u2260 13BF                         u3300 0832                         u3060 119A  
                       u3220 09C2                         u2500 1363                         u4100 0170  
                       u4020 0EB0                         u2421 112F                         u2341 1410  
                       u2325 1400                         u2261 13BE                         u3301 0831  
                       u3045 157E                         u3061 1199                         u3221 09C1  
                       u2501 1362                         u4101 016F                         u4021 0EAF  
                       u2430 1137                         u2350 1415                         u2270 13C6  
                       u3310 084C                         u3150 10F0                         u2510 1374  
                       u3230 0A84                         u4110 017F                         u4030 0EC6  
                       u2431 1136                         u2351 1414                         u2271 13C5  
                       u3311 084B                         u3151 10EF                         u2511 1373  
                       u3231 0A83                         u4111 017E                         u2440 113E  
                       u2360 1426                         u3400 08C2                         u3080 11AC  
                       u3160 10FA                         u2600 123C                         u3240 0A8D  
                       u4120 0196                         u4040 0F0D                         u2441 113D  
                       u3401 08C1                         u3081 11AB                         u3161 10F9  
                       u3145 10E2                         u2601 123B                         u3241 0A8C  
                       u4121 0195                         u4041 0F0C                         u2450 1145  
                       u2370 1434                         u2290 13DF                         u3330 0885  
                       u2530 1386                         u2610 1247                         u3250 0B4C  
                       u4210 03DB                         u4050 0F7A                         u2451 1144  
                       u2371 1433                         u2291 13DE                         u3331 0884  
                       u3075 119E                         u2531 1385                         u2611 1246  
                       u3251 0B4B                         u4211 03DA                         u4115 017B  
                       u4051 0F79                         u4035 0EC1                         u2380 1DBE  
                       u2460 114C                         u2700 0041                         u3420 08D3  
                       u3180 110D                         u3260 0BDE                         u4300 0603  
                       u4220 0402                         u4140 0298                         u4060 0F9A  
                       u2381 1DBD                         u2461 114B                         u2365 1422  
                       u2285 13D2                         u2701 0040                         u3421 08D2  
                       u3325 0870                         u3181 110C                         u3165 10F6  
                       u2525 1378                         u3261 0BDD                         u4301 0602  
                       u4221 0401                         u4205 0345                         u4141 0297  
                       u4061 0F99                         u2390 1117                         u3190 1DF3  
                       u2710 004D                         u3510 16B2                         u3430 15C1  
                       u3350 089E                         u2470 1E28                         u2550 1397  
                       u2630 1259                         u3270 0C9D                         u4310 060B  
                       u4230 0411                         u4150 02A7                         u4070 0FB1  
                       u2391 1116                         u3191 1DF2                         u2711 004C  
                       u3511 16B1                         u3431 15C0                         u3415 08C5  
                       u3351 089D                         u3335 0881                         u2471 1E27  
                       u3095 11AD                         u3175 1101                         u2551 1396  
                       u2631 1258                         u3271 0C9C                         u4311 060A  
                       u4231 0410                         u4151 02A6                         u4135 0257  
                       u4071 0FB0                         u2720 0053                         u3520 16B9  
                       u3440 15E2                         u3360 08A2                         u2480 1E35  
                       u3280 1E00                         u2640 1263                         u4400 06E0  
                       u4240 043A                         u4160 02D6                         u4080 0148  
                       u2721 0052                         u3521 16B8                         u3505 16A2  
                       u3441 15E1                         u3361 08A1                         u3345 0891  
                       u2481 1E34                         u3281 1DFF                         u2545 1387  
                       u2641 1262                         u2625 124B                         u4401 06DF  
                       u4241 0439                         u4225 03FE                         u4161 02D5  
                       u4145 0294                         u4081 0FFA                         u2810 00AB  
                       u2730 005D                         u3610 130F                         u3370 08A9  
                       u3290 1E06                         u2570 13AB                         u2490 1358  
                       u4410 06F8                         u4330 0659                         u4170 02EE  
                       u4090 0151                         u2811 00AA                         u2731 005C  
                       u3611 130E                         u3371 08A8                         u3291 1E05  
                       u2571 13AA                         u2555 1393                         u2491 1357  
                       u4411 06F7                         u4331 0658                         u4235 040D  
                       u4171 02ED                         u4091 0150                         u4075 0FAD  
                       u2820 00B2                         u2740 0066                         u3700 1EC9  
                       u3540 16CA                         u3460 165F                         u2580 13B0  
                       u2660 1276                         u4420 0716                         u4340 0668  
                       u4180 031A                         u2901 010F                         u2821 00B1  
                       u2805 009A                         u2741 0065                         u3701 1EC8  
                       u3605 1300                         u3541 16C9                         u3461 165E  
                       u2581 13AF                         u2565 139F                         u2661 1275  
                       u2645 125F                         u4421 0715                         u4405 06DC  
                       u4341 0667                         u4325 0618                         u4181 0319  
                       u4085 0FF5                         u2910 011A                         u2902 0116  
                       u2750 006B                         u3710 1449                         u3630 132A  
                       u3550 1EEB                         u3470 1695                         u3390 08BB  
                       u2670 127B                         u2590 1231                         u4430 0735  
                       u4350 0673                         u4270 05A6                         u4190 032E  
                       u2911 0119                         u2751 006A                         u3711 1448  
                       u3631 1329                         u3551 1EEA                         u3535 16BC  
                       u3471 1694                         u3455 162C                         u3391 08BA  
                       u2671 127A                         u2655 126A                         u2591 1230  
                       u4431 0734                         u4415 06F4                         u4351 0672  
                       u4335 0655                         u4271 05A5                         u4255 04B7  
                       u4191 032D                         u2840 00C2                         u2760 0080  
                       u2680 0031                         u3800 14AE                         u3720 145D  
                       u3480 1699                         u2920 14D5                         u4440 0747  
                       u4360 0691                         u4280 05C6                         u2841 00C1  
                       u2761 007F                         u2681 0030                         u3801 14AD  
                       u3625 1311                         u3481 1698                         u3465 165B  
                       u3385 08AB                         u2921 14D4                         u4441 0746  
                       u4361 0690                         u4281 05C5                         u4265 0549  
                       u4185 0316                         u2850 00CA                         u2690 0037  
                       u3730 1478                         u3650 1348                         u3810 11E0  
                       u3490 16A0                         u2930 14ED                         u4370 06AA  
                       u4290 05EE                         u2851 00C9                         u2835 00B3  
                       u2691 0036                         u3731 1477                         u3651 1347  
                       u3635 1326                         u3811 11DF                         u3491 169F  
                       u2931 14EC                         u4371 06A9                         u4355 066F  
                       u4291 05ED                         u4507 17F6                         u3900 1E8F  
                       u3660 1FCC                         u2780 0090                         u3740 147F  
                       u3580 1F05                         u2940 1504                         u4460 07D0  
                       u4380 06BC                         u3901 1E8E                         u3661 1FCB  
                       u2781 008F                         u3741 147E                         u3725 1459  
                       u3645 133A                         u3581 1F04                         u3565 1EF2  
                       u4461 07CF                         u4381 06BB                         u4365 068D  
                       u4517 081B                         u3670 1FDD                         u2870 00DD  
                       u2790 0098                         u3590 12FB                         u3830 11F4  
                       u2950 1516                         u4470 07E7                         u4390 06CA  
                       u3910 115D                         u4607 12A4                         u3671 1FDC  
                       u2871 00DC                         u2791 0097                         u2775 0081  
                       u3591 12FA                         u3831 11F3                         u3575 1EF9  
                       u4471 07E4                         u4455 076A                         u4391 06C9  
                       u4527 10AD                         u4480 1F34                         u3680 1FFC  
                       u2880 00E1                         u3760 1491                         u3840 1206  
                       u2960 1537                         u3920 117F                         u4617 12AE  
                       u4481 1F33                         u3681 1FFB                         u2881 00E0  
                       u2865 00CC                         u3761 1490                         u3841 1205  
                       u3825 11E5                         u2961 1536                         u2945 1500  
                       u4537 10C6                         u4490 1EA0                         u3690 1DE9  
                       u2890 00F5                         u3770 1498                         u3930 1191  
                       u4707 1F90                         u4627 12B8                         u4491 1E9F  
                       u3691 1DE8                         u2891 00F4                         u3771 1497  
                       u3755 1481                         u2971 1540                         u2955 1512  
                       u4547 10D2                         u3931 1190                         u3860 1223  
                       u2972 1547                         u3940 0D3C                         _RCIF 0065  
                       u4637 12C3                         u4557 1F9D                         u3685 1FF8  
                       u3861 1222                         u3845 1202                         u3941 0D3B  
                       u3790 14A9                         u3950 0D66                         u4647 12D0  
                       u4567 1FB6                         u3791 14A8                         u3855 1215  
                       u3951 0D65                         u3880 1F4D                         u3960 0DB0  
                       u4657 12DC                         u4577 1FC2                         u3785 149B  
                       u3881 1F4C                         u2985 1548                         u3961 0DAF  
                       u3890 1E7D                         u3970 0DBE                         u4667 12E7  
                       u4587 1289                         u3891 1E7C                         u3875 1F3B  
                       u2995 1550                         u3971 0DBD                         u3980 0E13  
                       u4677 1E51                         u4597 1298                         u3981 0E12  
                       u3990 0E5A                         u4687 1F6B                         u3991 0E57  
                       u4697 1F84                         _TEMP 00A0                         _TRMT 04C1  
                       _cont 006F                         _main 16D3                 ___ftpack@arg 0070  
               ___ftpack@exp 0073                         _port 1112                         btemp 007E  
                       start 0000               ??_config_rcsta 0070               ??_config_txsta 0070  
               _sprintf$1087 00BA            ___bmul@multiplier 0027                 ___ftmul@cntr 0036  
               ___ftmul@sign 0037                 ___fttol@exp1 004E                 ___fttol@lval 004A  
                      CMDs@a 0073                        ?_CMDs 0070             __end_of_LCD_init 12EB  
                      ?_main 0070              __end_of___awdiv 13BA              __end_of___ftadd 0148  
            __end_of___awmod 1285                        ?_port 0070              __end_of___ftneg 1DEC  
                      _ANSEL 0188              __end_of___lldiv 1351              __end_of___ftmul 15A7  
            ___awdiv@divisor 0077              __end_of___llmod 122C              __end_of___ftsub 1EE5  
            __end_of___fttol 14C2              __end_of___lwdiv 11D6                write_string@a 0073  
              write_string@i 0078              __end_of___lwmod 1112              ___awdiv@counter 0020  
                      _RCREG 001A                        _SPBRG 0099                        _PORTD 0008  
                      _PORTE 0009                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019                 ___lltoft@exp 007D                ___awtoft@sign 007D  
            __end_of_dpowers 1086                        _scale 0A7D              __end_of_isdigit 1E0A  
              ___ftpack@sign 0074                        _setup 1E57                        pclath 000A  
            __end_of_spiInit 1E20              __end_of_spiRead 1DD8                        port@a 0070  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07EE  
               __end_of_CMDs 1E57              __initialization 07EE                 __end_of_main 1800  
               __end_of_port 1150                       ??_CMDs 0071                    ??_ADCread 0071  
                     ??_main 006A                ___fttol@sign1 0049                       ??_port 0070  
      __size_of_write_string 0042         __size_of__tdiv_to_l_ 00BD             ___llmod@dividend 0024  
                     ?_scale 0038             ___awdiv@dividend 0079                       ?_setup 0070  
           __end_of___awtoft 1EC0             __end_of___ftpack 1436                       _ANSELH 0189  
           __end_of__baudios 1DB2                       _BUFFER 00A6             __end_of___lltoft 1F64  
                     _TRISC0 0438                       _TRISC1 0439                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISC5 043D                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of__powers_ 1037                       ___bmul 1E20  
                     ___ftge 1FC8             __end_of_contador 1FC8                 _write_string 1150  
                     ___wmul 1EE5                    ??___awdiv 007B                    ??___ftadd 004E  
                  ??___awmod 0074                    ??___ftneg 0073                    ??___lldiv 0078  
                  ??___ftmul 002E                    ??___llmod 0028                    ??___ftsub 007E  
                  ??___fttol 0045                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _fround 08DC             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075                 ?_temperatura 0070        ___ftmul@f3_as_product 0033  
                  ??_isdigit 0070         __end_of_config_rcsta 1DC7             __end_of_spiWrite 1DB8  
       __end_of_config_txsta 1DE2                    ??_spiInit 0073                    ??_spiRead 0070  
                  ??_sprintf 0064      __end_of__initialization 07FC                   ___ftadd@f1 0048  
                 ___ftadd@f2 004B                   ___ftge@ff1 0070                   ___ftge@ff2 0073  
                  ?_LCD_init 0070                   ___ftneg@f1 0070                   ___awtoft@c 0078  
        ___bmul@multiplicand 0024                   ___ftmul@f1 0028                   ___ftmul@f2 002B  
                 ___ftsub@f1 0058                   ___ftsub@f2 0055                   ___fttol@f1 0041  
             __pcstackCOMMON 0070                   ___lltoft@c 0078                __end_of_scale 0D28  
              __end_of_setup 1E77           __size_of_clear_LCD 000D                   __div_to_l_ 15A7  
            __div_to_l_@exp1 0025              __div_to_l_@cntr 0024                      ??_scale 003B  
            __div_to_l_@quot 0020                 sprintf@width 00C0                      ??_setup 0074  
               Write_USART@a 0070                   __pbssBANK0 006D                   __pbssBANK1 00A0  
                 ??_LCD_init 0074                __div_to_l_@f1 0070                __div_to_l_@f2 0073  
                 __pmaintext 16D3                      ?___bmul 0024                      ?___ftge 0070  
                    ?___wmul 0070                ??_Write_USART 0070      __size_of_spiReceiveWait 0007  
                    ?_fround 0038                    ?___awtoft 0078                    ?___ftpack 0070  
                  ?__baudios 0070                      _ADCread 1F64                    ?___lltoft 0078  
 __end_of_Write_USART_String 1F35                      _SSPSTAT 0094                   __stringtab 1000  
                  ?_contador 0070            __end_of_clear_LCD 0012            __end_of__npowers_ 105E  
                 _scale$1086 003D                    ?_spiWrite 0070              __size_of___bmul 0017  
            __size_of___ftge 0038                      ___awdiv 1351                      ___ftadd 0012  
                    ___awmod 122C                      ___ftneg 1DE2                      ___lldiv 12EB  
            __size_of___wmul 0025                      ___ftmul 14C2                      ___llmod 11D6  
                    ___ftsub 1EC0                      ___fttol 1436                      ___lwdiv 1192  
                    ___lwmod 10D8                   ??___awtoft 007B        __size_of_config_rcsta 0008  
                 ??___ftpack 0075                   ??__baudios 0070              __size_of_fround 01A1  
                 ??___lltoft 007C                      __ptext1 1150                      __ptext2 0803  
      __size_of_config_txsta 000A                      __ptext3 10A6                      __ptext4 0D28  
                    __ptext5 0A7D                      __ptext6 122C                      __ptext7 1351  
                    __ptext8 1DF8                      __ptext9 08DC                  ?__div_to_l_ 0070  
                    _dpowers 105E          __end_of_Write_USART 1DF8                      _isdigit 1DF8  
           ___awmod@dividend 0072         __size_of_temperatura 0032                      _spiInit 1E0A  
                    _spiRead 1DCF                  set_cursor@a 0076                  set_cursor@b 0074  
                set_cursor@x 0077                      _sprintf 0D28                      clrloop0 1DC8  
       end_of_initialization 07FC                   ??_contador 0071              ___lldiv@divisor 0070  
            ___lldiv@counter 007D                 _config_rcsta 1DBF                   _set_cursor 1E77  
               _config_txsta 1DD8                    _RCSTAbits 0018                   ??_spiWrite 0070  
                    psplit$0 E0037               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0073  
              ??__tdiv_to_l_ 0076                    _PORTCbits 0007                  spiWrite@dat 0070  
                  _TXSTAbits 0098          __size_of__div_to_l_ 012C            __size_of_LCD_init 0066  
                ___ftmul@exp 0032               _spiReceiveWait 1DB8               __end_of___bmul 1E37  
             __end_of___ftge 2000                  _Write_USART 1DEC               __end_of___wmul 1F0A  
                 _write_char 0803               __end_of_fround 0A7D            pnum$text4_split_1 0037  
        start_initialization 07EE          __end_of__tdiv_to_l_ 08DC              ___llmod@divisor 0020  
            ___llmod@counter 0029                  ?_set_cursor 0074       __end_of_spiReceiveWait 1DBF  
                   ??___bmul 0025                     ??___ftge 0076                     ??___wmul 0074  
                   ??_fround 003B                     ?_ADCread 0070                sprintf@tmpval 00C2  
                 fround@prec 0047            __size_of___awtoft 0025            __size_of___ftpack 007C  
          __size_of__baudios 0005            __size_of___lltoft 002F                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00BA                  sprintf@flag 00BE  
                sprintf@eexp 00CA                  sprintf@fval 00CC           _Write_USART_String 1F0A  
                sprintf@prec 00D0            __size_of_contador 0032                    _clear_LCD 0005  
           ___lwdiv@dividend 0078              ?_spiReceiveWait 0070          ?_Write_USART_String 0071  
                   ?___awdiv 0077                     ?___ftadd 0048                     ?___awmod 0070  
                   ?___ftneg 0070                     ?___lldiv 0070                     ?___ftmul 0028  
                   ?___llmod 0020                     ?___ftsub 0055                    __npowers_ 1037  
                   ?___fttol 0041                     ?___lwdiv 0076                     ?___lwmod 0070  
                ?_write_char 0070            __size_of_spiWrite 0006                    __pstrings 1000  
                __tdiv_to_l_ 081F                 ??__div_to_l_ 0076                     ?_isdigit 0070  
                   ?_spiInit 0070                     ?_spiRead 0070         ??_Write_USART_String 0073  
           ___lwdiv@quotient 007B          __size_of_set_cursor 0024                     ?_sprintf 005B  
             __size_of_scale 02AB               __size_of_setup 0020         spiInit@sTransmitEdge 0072  
             ___wmul@product 0074                     _LCD_init 1285                    clear_ram0 1DC7  
                 ?_clear_LCD 0070           spiInit@sDataSample 0070           __end_of__div_to_l_ 16D3  
              ?_write_string 0073                  __stringbase 100F                ??_temperatura 0071  
          ___wmul@multiplier 0070             __size_of_ADCread 0032                  write_char@a 0072  
        __size_of_write_char 001C               ??_write_string 0075                 ?_Write_USART 0070  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftneg 000A             __size_of___lldiv 0066             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                     ___awtoft 1E9B  
                   ___ftpack 13BA                     __baudios 1DAD                  _fround$1084 0044  
                _fround$1085 0041           __end_of__stringtab 1010                     ___lltoft 1F35  
                _isdigit$889 0070                   sprintf@val 00C6             __size_of_isdigit 0012  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 10D8  
                   __ptext11 1192                     __ptext20 1436                     __ptext12 14C2  
                   __ptext21 1EC0                     __ptext13 1E20                     __ptext30 1DBF  
                   __ptext22 0012                     __ptext14 081F                     __ptext31 0005  
                   __ptext23 1DE2                     __ptext15 15A7                     __ptext40 1F64  
                   __ptext32 1DAD                     __ptext24 1FC8                     __ptext16 1EE5  
                   __ptext41 1DB2                     __ptext33 1E9B                     __ptext25 1E57  
                   __ptext17 1F35                     __ptext42 1DCF                     __ptext34 13BA  
                   __ptext26 1E0A                     __ptext18 11D6                     __ptext43 1DB8  
                   __ptext35 1F0A                     __ptext27 1E77                     __ptext19 12EB  
                   __ptext36 1DEC                     __ptext28 1F96                     __ptext37 1285  
                   __ptext29 1DD8                     __ptext38 1E37                     __ptext39 1112  
        __end_of_temperatura 10D8             __size_of_spiInit 0016             __size_of_spiRead 0009  
                   __powers_ 1010                     _contador 1F96             __size_of_sprintf FAC6  
              __size_of_CMDs 0020                __size_of_main 012D                    pnum$text4 000E  
              __size_of_port 003E                  ??_clear_LCD 0074                 ??_set_cursor 0075  
                   _spiWrite 1DB2                 spiInit@sType 0073            spiInit@sClockIdle 0071  
        Write_USART_String@a 0071          Write_USART_String@i 0074                     isdigit@c 0071  
                   scale@scl 0040           __end_of_set_cursor 1E9B                    sprintf@ap 00BD  
           __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024                    sprintf@sp 00CF  
           __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072             ___lldiv@dividend 0074  
           ??_spiReceiveWait 0070                    stringcode 100A                 ??_write_char 0071  
               ?__tdiv_to_l_ 0070                  _temperatura 10A6                     sprintf@c 00D2  
                   sprintf@f 005B             ___lldiv@quotient 0079              ___lwmod@divisor 0070  
            ___lwmod@counter 0075                     stringdir 100A                     stringtab 1000  
       __end_of_write_string 1192           __end_of_write_char 081F                ?_config_rcsta 0070  
              ?_config_txsta 0070  
