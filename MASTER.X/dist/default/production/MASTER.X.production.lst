

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 15:24:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0019                     _TXREG	set	25
   449  001A                     _RCREG	set	26
   450  0018                     _RCSTAbits	set	24
   451  0013                     _SSPBUF	set	19
   452  0014                     _SSPCON	set	20
   453  0009                     _PORTE	set	9
   454  0008                     _PORTD	set	8
   455  0006                     _PORTB	set	6
   456  0007                     _PORTCbits	set	7
   457  0049                     _RE1	set	73
   458  0048                     _RE0	set	72
   459  0047                     _RD7	set	71
   460  0046                     _RD6	set	70
   461  0045                     _RD5	set	69
   462  0044                     _RD4	set	68
   463  0043                     _RD3	set	67
   464  0042                     _RD2	set	66
   465  0041                     _RD1	set	65
   466  0040                     _RD0	set	64
   467  0065                     _RCIF	set	101
   468  0098                     _TXSTAbits	set	152
   469  0099                     _SPBRG	set	153
   470  0094                     _SSPSTATbits	set	148
   471  0094                     _SSPSTAT	set	148
   472  0086                     _TRISB	set	134
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  04C1                     _TRMT	set	1217
   476  043B                     _TRISC3	set	1083
   477  043D                     _TRISC5	set	1085
   478  043A                     _TRISC2	set	1082
   479  0439                     _TRISC1	set	1081
   480  0189                     _ANSELH	set	393
   481  0188                     _ANSEL	set	392
   482                           
   483                           	psect	cinit
   484  07FB                     start_initialization:	
   485                           ; #config settings
   486                           
   487  07FB                     __initialization:
   488                           
   489                           ; Clear objects allocated to COMMON
   490  07FB  01F6               	clrf	__pbssCOMMON& (0+127)
   491  07FC                     end_of_initialization:	
   492                           ;End of C runtime variable initialization code
   493                           
   494  07FC                     __end_of__initialization:
   495  07FC  0183               	clrf	3
   496  07FD  120A  118A  2EFC   	ljmp	_main	;jump to C main() function
   497                           
   498                           	psect	bssCOMMON
   499  0076                     __pbssCOMMON:
   500  0076                     _cont:
   501  0076                     	ds	1
   502                           
   503                           	psect	cstackCOMMON
   504  0070                     __pcstackCOMMON:
   505  0070                     ?_setup:
   506  0070                     ?__baudios:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??__baudios:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_config_txsta:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_config_txsta:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_config_rcsta:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_config_rcsta:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_LCD_init:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_clear_LCD:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_contador:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_spiWrite:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_spiWrite:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_spiRead:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_spiRead:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_spiInit:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_spiReceiveWait:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_spiReceiveWait:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_port:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ??_port:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_CMDs:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     spiInit@sDataSample:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     spiWrite@dat:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     port@a:	
   573                           ; 1 bytes @ 0x0
   574                           
   575                           
   576                           ; 1 bytes @ 0x0
   577  0070                     	ds	1
   578  0071                     ??_contador:
   579  0071                     ??_CMDs:	
   580                           ; 1 bytes @ 0x1
   581                           
   582  0071                     spiInit@sClockIdle:	
   583                           ; 1 bytes @ 0x1
   584                           
   585                           
   586                           ; 1 bytes @ 0x1
   587  0071                     	ds	1
   588  0072                     spiInit@sTransmitEdge:
   589                           
   590                           ; 1 bytes @ 0x2
   591  0072                     	ds	1
   592  0073                     ??_spiInit:
   593  0073                     spiInit@sType:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     CMDs@a:	
   597                           ; 1 bytes @ 0x3
   598                           
   599                           
   600                           ; 1 bytes @ 0x3
   601  0073                     	ds	1
   602  0074                     ??_setup:
   603  0074                     ??_LCD_init:	
   604                           ; 1 bytes @ 0x4
   605                           
   606  0074                     ??_clear_LCD:	
   607                           ; 1 bytes @ 0x4
   608                           
   609                           
   610                           ; 1 bytes @ 0x4
   611  0074                     	ds	2
   612  0076                     ??_main:
   613                           
   614                           	psect	maintext
   615  06FC                     __pmaintext:	
   616                           ; 1 bytes @ 0x6
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   619 ;;
   620 ;; *************** function _main *****************
   621 ;; Defined at:
   622 ;;		line 49 in file "master.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : B00/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels required when called:    3
   642 ;; This function calls:
   643 ;;		_LCD_init
   644 ;;		__baudios
   645 ;;		_clear_LCD
   646 ;;		_config_rcsta
   647 ;;		_config_txsta
   648 ;;		_contador
   649 ;;		_setup
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _main
   657  06FC                     _main:
   658  06FC                     l925:	
   659                           ;incstack = 0
   660                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   661                           
   662  06FC  120A  118A  26D8  120A  118A  	fcall	_setup
   663  0701  120A  118A  2668  120A  118A  	fcall	__baudios
   664  0706                     l927:
   665  0706  120A  118A  268B  120A  118A  	fcall	_config_txsta
   666  070B                     l929:
   667  070B  120A  118A  267A  120A  118A  	fcall	_config_rcsta
   668  0710  120A  118A  2795  120A  118A  	fcall	_LCD_init
   669  0715  120A  118A  2695  120A  118A  	fcall	_clear_LCD
   670  071A                     l51:
   671  071A  120A  118A  2723  120A  118A  	fcall	_contador
   672  071F  2F1A               	goto	l51
   673  0720  120A  118A  2800   	ljmp	start
   674  0723                     __end_of_main:
   675                           
   676                           	psect	text1
   677  06D8                     __ptext1:	
   678 ;; *************** function _setup *****************
   679 ;; Defined at:
   680 ;;		line 85 in file "master.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    1
   701 ;; This function calls:
   702 ;;		_spiInit
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _setup
   710  06D8                     _setup:
   711  06D8                     l913:	
   712                           ;incstack = 0
   713                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   714                           
   715                           
   716                           ;master.c: 86:     ANSEL = 0;
   717  06D8  1683               	bsf	3,5	;RP0=1, select bank3
   718  06D9  1703               	bsf	3,6	;RP1=1, select bank3
   719  06DA  0188               	clrf	8	;volatile
   720                           
   721                           ;master.c: 87:     ANSELH = 0;
   722  06DB  0189               	clrf	9	;volatile
   723                           
   724                           ;master.c: 88:     TRISD = 0;
   725  06DC  1683               	bsf	3,5	;RP0=1, select bank1
   726  06DD  1303               	bcf	3,6	;RP1=0, select bank1
   727  06DE  0188               	clrf	8	;volatile
   728                           
   729                           ;master.c: 89:     TRISE = 0;
   730  06DF  0189               	clrf	9	;volatile
   731                           
   732                           ;master.c: 90:     PORTD = 0;
   733  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   734  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   735  06E2  0188               	clrf	8	;volatile
   736                           
   737                           ;master.c: 91:     PORTE = 0;
   738  06E3  0189               	clrf	9	;volatile
   739                           
   740                           ;master.c: 93:     TRISB = 0;
   741  06E4  1683               	bsf	3,5	;RP0=1, select bank1
   742  06E5  1303               	bcf	3,6	;RP1=0, select bank1
   743  06E6  0186               	clrf	6	;volatile
   744                           
   745                           ;master.c: 94:     PORTB = 0;
   746  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   747  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   748  06E9  0186               	clrf	6	;volatile
   749  06EA                     l915:
   750                           
   751                           ;master.c: 96:     TRISC1 = 0;
   752  06EA  1683               	bsf	3,5	;RP0=1, select bank1
   753  06EB  1303               	bcf	3,6	;RP1=0, select bank1
   754  06EC  1087               	bcf	7,1	;volatile
   755  06ED                     l917:
   756                           
   757                           ;master.c: 97:     TRISC2 = 0;
   758  06ED  1107               	bcf	7,2	;volatile
   759  06EE                     l919:
   760                           
   761                           ;master.c: 98:     PORTCbits.RC2 = 1;
   762  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   763  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   764  06F0  1507               	bsf	7,2	;volatile
   765  06F1                     l921:
   766                           
   767                           ;master.c: 99:     PORTCbits.RC1 = 1;
   768  06F1  1487               	bsf	7,1	;volatile
   769  06F2                     l923:
   770                           
   771                           ;master.c: 100:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   772  06F2  01F0               	clrf	spiInit@sDataSample
   773  06F3  01F1               	clrf	spiInit@sClockIdle
   774  06F4  01F2               	clrf	spiInit@sTransmitEdge
   775  06F5  3020               	movlw	32
   776  06F6  120A  118A  26A2  120A  118A  	fcall	_spiInit
   777  06FB                     l60:
   778  06FB  0008               	return
   779  06FC                     __end_of_setup:
   780                           
   781                           	psect	text2
   782  06A2                     __ptext2:	
   783 ;; *************** function _spiInit *****************
   784 ;; Defined at:
   785 ;;		line 12 in file "SPI.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  sType           1    wreg     enum E1264
   788 ;;  sDataSample     1    0[COMMON] enum E1272
   789 ;;  sClockIdle      1    1[COMMON] enum E1276
   790 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  sType           1    3[COMMON] enum E1264
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         3       0       0       0       0
   803 ;;      Locals:         1       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0
   805 ;;      Totals:         4       0       0       0       0
   806 ;;Total ram usage:        4 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_setup
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _spiInit
   817  06A2                     _spiInit:
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   821                           ;spiInit@sType stored from wreg
   822  06A2  00F3               	movwf	spiInit@sType
   823  06A3                     l903:
   824                           
   825                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   826  06A3  1683               	bsf	3,5	;RP0=1, select bank1
   827  06A4  1303               	bcf	3,6	;RP1=0, select bank1
   828  06A5  1287               	bcf	7,5	;volatile
   829                           
   830                           ;SPI.c: 15:     if(sType & 0b00000100)
   831  06A6  1D73               	btfss	spiInit@sType,2
   832  06A7  2EA9               	goto	u171
   833  06A8  2EAA               	goto	u170
   834  06A9                     u171:
   835  06A9  2EAE               	goto	l909
   836  06AA                     u170:
   837  06AA                     l905:
   838                           
   839                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   840  06AA  0872               	movf	spiInit@sTransmitEdge,w
   841  06AB  0094               	movwf	20	;volatile
   842  06AC                     l907:
   843                           
   844                           ;SPI.c: 18:         TRISC3 = 1;
   845  06AC  1587               	bsf	7,3	;volatile
   846                           
   847                           ;SPI.c: 19:     }
   848  06AD  2EB2               	goto	l76
   849  06AE                     l909:
   850                           
   851                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   852  06AE  0870               	movf	spiInit@sDataSample,w
   853  06AF  0472               	iorwf	spiInit@sTransmitEdge,w
   854  06B0  0094               	movwf	20	;volatile
   855  06B1                     l911:
   856                           
   857                           ;SPI.c: 23:         TRISC3 = 0;
   858  06B1  1187               	bcf	7,3	;volatile
   859  06B2                     l76:	
   860                           ;SPI.c: 24:     }
   861                           
   862                           
   863                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   864  06B2  0873               	movf	spiInit@sType,w
   865  06B3  0471               	iorwf	spiInit@sClockIdle,w
   866  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   867  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   868  06B6  0094               	movwf	20	;volatile
   869  06B7                     l77:
   870  06B7  0008               	return
   871  06B8                     __end_of_spiInit:
   872                           
   873                           	psect	text3
   874  0723                     __ptext3:	
   875 ;; *************** function _contador *****************
   876 ;; Defined at:
   877 ;;		line 71 in file "master.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0
   894 ;;      Totals:         2       0       0       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    2
   898 ;; This function calls:
   899 ;;		_spiRead
   900 ;;		_spiWrite
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _contador
   908  0723                     _contador:
   909  0723                     l829:	
   910                           ;incstack = 0
   911                           ; Regs used in _contador: [wreg+status,2+status,0+pclath+cstack]
   912                           
   913                           
   914                           ;master.c: 72:     PORTCbits.RC2 = 0;
   915  0723  1283               	bcf	3,5	;RP0=0, select bank0
   916  0724  1303               	bcf	3,6	;RP1=0, select bank0
   917  0725  1107               	bcf	7,2	;volatile
   918  0726                     l831:
   919                           
   920                           ;master.c: 73:     _delay((unsigned long)((1)*(8000000/4000.0)));
   921  0726  3003               	movlw	3
   922  0727  00F2               	movwf	??_contador+1
   923  0728  3097               	movlw	151
   924  0729  00F1               	movwf	??_contador
   925  072A                     u187:
   926  072A  0BF1               	decfsz	??_contador,f
   927  072B  2F2A               	goto	u187
   928  072C  0BF2               	decfsz	??_contador+1,f
   929  072D  2F2A               	goto	u187
   930  072E  2F2F               	nop2
   931  072F                     l833:
   932                           
   933                           ;master.c: 74:     spiWrite(1);
   934  072F  3001               	movlw	1
   935  0730  120A  118A  266D  120A  118A  	fcall	_spiWrite
   936  0735                     l835:
   937                           
   938                           ;master.c: 75:     cont = spiRead();
   939  0735  120A  118A  2682  120A  118A  	fcall	_spiRead
   940  073A  00F1               	movwf	??_contador
   941  073B  0871               	movf	??_contador,w
   942  073C  00F6               	movwf	_cont
   943                           
   944                           ;master.c: 76:     PORTB = cont;
   945  073D  0876               	movf	_cont,w
   946  073E  1283               	bcf	3,5	;RP0=0, select bank0
   947  073F  1303               	bcf	3,6	;RP1=0, select bank0
   948  0740  0086               	movwf	6	;volatile
   949                           
   950                           ;master.c: 77:     _delay((unsigned long)((1)*(8000000/4000.0)));
   951  0741  3003               	movlw	3
   952  0742  00F2               	movwf	??_contador+1
   953  0743  3097               	movlw	151
   954  0744  00F1               	movwf	??_contador
   955  0745                     u197:
   956  0745  0BF1               	decfsz	??_contador,f
   957  0746  2F45               	goto	u197
   958  0747  0BF2               	decfsz	??_contador+1,f
   959  0748  2F45               	goto	u197
   960  0749  2F4A               	nop2
   961  074A                     l837:
   962                           
   963                           ;master.c: 78:     PORTCbits.RC2 = 1;
   964  074A  1283               	bcf	3,5	;RP0=0, select bank0
   965  074B  1303               	bcf	3,6	;RP1=0, select bank0
   966  074C  1507               	bsf	7,2	;volatile
   967                           
   968                           ;master.c: 79:     _delay((unsigned long)((1)*(8000000/4000.0)));
   969  074D  3003               	movlw	3
   970  074E  00F2               	movwf	??_contador+1
   971  074F  3097               	movlw	151
   972  0750  00F1               	movwf	??_contador
   973  0751                     u207:
   974  0751  0BF1               	decfsz	??_contador,f
   975  0752  2F51               	goto	u207
   976  0753  0BF2               	decfsz	??_contador+1,f
   977  0754  2F51               	goto	u207
   978  0755  2F56               	nop2
   979  0756                     l57:
   980  0756  0008               	return
   981  0757                     __end_of_contador:
   982                           
   983                           	psect	text4
   984  066D                     __ptext4:	
   985 ;; *************** function _spiWrite *****************
   986 ;; Defined at:
   987 ;;		line 34 in file "SPI.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  dat             1    wreg     unsigned char 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  dat             1    0[COMMON] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         1       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         1       0       0       0       0
  1005 ;;Total ram usage:        1 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_contador
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _spiWrite
  1016  066D                     _spiWrite:
  1017                           
  1018                           ;incstack = 0
  1019                           ; Regs used in _spiWrite: [wreg]
  1020                           ;spiWrite@dat stored from wreg
  1021  066D  00F0               	movwf	spiWrite@dat
  1022  066E                     l751:
  1023                           
  1024                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1025  066E  0870               	movf	spiWrite@dat,w
  1026  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0671  0093               	movwf	19	;volatile
  1029  0672                     l86:
  1030  0672  0008               	return
  1031  0673                     __end_of_spiWrite:
  1032                           
  1033                           	psect	text5
  1034  0682                     __ptext5:	
  1035 ;; *************** function _spiRead *****************
  1036 ;; Defined at:
  1037 ;;		line 47 in file "SPI.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		_spiReceiveWait
  1060 ;; This function is called by:
  1061 ;;		_contador
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _spiRead
  1067  0682                     _spiRead:
  1068  0682                     l753:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1071                           
  1072                           
  1073                           ;SPI.c: 49:     spiReceiveWait();
  1074  0682  120A  118A  2673  120A  118A  	fcall	_spiReceiveWait
  1075  0687                     l755:
  1076                           
  1077                           ;SPI.c: 50:     return(SSPBUF);
  1078  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0689  0813               	movf	19,w	;volatile
  1081  068A                     l94:
  1082  068A  0008               	return
  1083  068B                     __end_of_spiRead:
  1084                           
  1085                           	psect	text6
  1086  0673                     __ptext6:	
  1087 ;; *************** function _spiReceiveWait *****************
  1088 ;; Defined at:
  1089 ;;		line 29 in file "SPI.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		None
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_spiRead
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _spiReceiveWait
  1118  0673                     _spiReceiveWait:
  1119  0673                     l731:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _spiReceiveWait: []
  1122                           
  1123  0673                     l80:	
  1124                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1125                           
  1126  0673  1683               	bsf	3,5	;RP0=1, select bank1
  1127  0674  1303               	bcf	3,6	;RP1=0, select bank1
  1128  0675  1C14               	btfss	20,0	;volatile
  1129  0676  2E78               	goto	u11
  1130  0677  2E79               	goto	u10
  1131  0678                     u11:
  1132  0678  2E73               	goto	l80
  1133  0679                     u10:
  1134  0679                     l83:
  1135  0679  0008               	return
  1136  067A                     __end_of_spiReceiveWait:
  1137                           
  1138                           	psect	text7
  1139  068B                     __ptext7:	
  1140 ;; *************** function _config_txsta *****************
  1141 ;; Defined at:
  1142 ;;		line 9 in file "USART.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		None
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0
  1159 ;;      Totals:         0       0       0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _config_txsta
  1171  068B                     _config_txsta:
  1172  068B                     l797:	
  1173                           ;incstack = 0
  1174                           ; Regs used in _config_txsta: []
  1175                           
  1176                           
  1177                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  1178  068B  1683               	bsf	3,5	;RP0=1, select bank1
  1179  068C  1303               	bcf	3,6	;RP1=0, select bank1
  1180  068D  1398               	bcf	24,7	;volatile
  1181                           
  1182                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1183  068E  1318               	bcf	24,6	;volatile
  1184                           
  1185                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  1186  068F  1698               	bsf	24,5	;volatile
  1187                           
  1188                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1189  0690  1218               	bcf	24,4	;volatile
  1190                           
  1191                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  1192  0691  1118               	bcf	24,2	;volatile
  1193                           
  1194                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  1195  0692  1098               	bcf	24,1	;volatile
  1196                           
  1197                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  1198  0693  1018               	bcf	24,0	;volatile
  1199  0694                     l114:
  1200  0694  0008               	return
  1201  0695                     __end_of_config_txsta:
  1202                           
  1203                           	psect	text8
  1204  067A                     __ptext8:	
  1205 ;; *************** function _config_rcsta *****************
  1206 ;; Defined at:
  1207 ;;		line 19 in file "USART.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		status,2
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _config_rcsta
  1236  067A                     _config_rcsta:
  1237  067A                     l799:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _config_rcsta: [status,2]
  1240                           
  1241                           
  1242                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  1243  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1244  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1245  067C  1798               	bsf	24,7	;volatile
  1246                           
  1247                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  1248  067D  1318               	bcf	24,6	;volatile
  1249                           
  1250                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  1251  067E  1298               	bcf	24,5	;volatile
  1252                           
  1253                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  1254  067F  1618               	bsf	24,4	;volatile
  1255  0680                     l801:
  1256                           
  1257                           ;USART.c: 24:     RCREG = 0;
  1258  0680  019A               	clrf	26	;volatile
  1259  0681                     l117:
  1260  0681  0008               	return
  1261  0682                     __end_of_config_rcsta:
  1262                           
  1263                           	psect	text9
  1264  0695                     __ptext9:	
  1265 ;; *************** function _clear_LCD *****************
  1266 ;; Defined at:
  1267 ;;		line 52 in file "LCD.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    2
  1288 ;; This function calls:
  1289 ;;		_CMDs
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _clear_LCD
  1297  0695                     _clear_LCD:
  1298  0695                     l827:	
  1299                           ;incstack = 0
  1300                           ; Regs used in _clear_LCD: [wreg+status,2+status,0+pclath+cstack]
  1301                           
  1302                           
  1303                           ;LCD.c: 53:     CMDs(0);
  1304  0695  3000               	movlw	0
  1305  0696  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1306                           
  1307                           ;LCD.c: 54:     CMDs(1);
  1308  069B  3001               	movlw	1
  1309  069C  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1310  06A1                     l182:
  1311  06A1  0008               	return
  1312  06A2                     __end_of_clear_LCD:
  1313                           
  1314                           	psect	text10
  1315  0668                     __ptext10:	
  1316 ;; *************** function __baudios *****************
  1317 ;; Defined at:
  1318 ;;		line 5 in file "USART.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function __baudios
  1347  0668                     __baudios:
  1348  0668                     l795:	
  1349                           ;incstack = 0
  1350                           ; Regs used in __baudios: [wreg]
  1351                           
  1352                           
  1353                           ;USART.c: 6:     SPBRG = 12;
  1354  0668  300C               	movlw	12
  1355  0669  1683               	bsf	3,5	;RP0=1, select bank1
  1356  066A  1303               	bcf	3,6	;RP1=0, select bank1
  1357  066B  0099               	movwf	25	;volatile
  1358  066C                     l111:
  1359  066C  0008               	return
  1360  066D                     __end_of__baudios:
  1361                           
  1362                           	psect	text11
  1363  0795                     __ptext11:	
  1364 ;; *************** function _LCD_init *****************
  1365 ;; Defined at:
  1366 ;;		line 69 in file "LCD.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          2       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		_CMDs
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _LCD_init
  1396  0795                     _LCD_init:
  1397  0795                     l803:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1400                           
  1401                           
  1402                           ;LCD.c: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1403  0795  301A               	movlw	26
  1404  0796  00F5               	movwf	??_LCD_init+1
  1405  0797  30F8               	movlw	248
  1406  0798  00F4               	movwf	??_LCD_init
  1407  0799                     u217:
  1408  0799  0BF4               	decfsz	??_LCD_init,f
  1409  079A  2F99               	goto	u217
  1410  079B  0BF5               	decfsz	??_LCD_init+1,f
  1411  079C  2F99               	goto	u217
  1412  079D  0000               	nop
  1413  079E                     l805:
  1414                           
  1415                           ;LCD.c: 71:     CMDs (0x30);
  1416  079E  3030               	movlw	48
  1417  079F  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1418  07A4                     l807:
  1419                           
  1420                           ;LCD.c: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1421  07A4  3007               	movlw	7
  1422  07A5  00F5               	movwf	??_LCD_init+1
  1423  07A6  307D               	movlw	125
  1424  07A7  00F4               	movwf	??_LCD_init
  1425  07A8                     u227:
  1426  07A8  0BF4               	decfsz	??_LCD_init,f
  1427  07A9  2FA8               	goto	u227
  1428  07AA  0BF5               	decfsz	??_LCD_init+1,f
  1429  07AB  2FA8               	goto	u227
  1430                           
  1431                           ;LCD.c: 73:     CMDs (0x30);
  1432  07AC  3030               	movlw	48
  1433  07AD  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1434  07B2                     l809:
  1435                           
  1436                           ;LCD.c: 74:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1437  07B2  3021               	movlw	33
  1438  07B3  00F4               	movwf	??_LCD_init
  1439  07B4                     u237:
  1440  07B4  0BF4               	decfsz	??_LCD_init,f
  1441  07B5  2FB4               	goto	u237
  1442  07B6                     l811:
  1443                           
  1444                           ;LCD.c: 75:     CMDs (0x30);
  1445  07B6  3030               	movlw	48
  1446  07B7  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1447                           
  1448                           ;LCD.c: 76:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1449  07BC  3021               	movlw	33
  1450  07BD  00F4               	movwf	??_LCD_init
  1451  07BE                     u247:
  1452  07BE  0BF4               	decfsz	??_LCD_init,f
  1453  07BF  2FBE               	goto	u247
  1454  07C0                     l813:
  1455                           
  1456                           ;LCD.c: 77:     CMDs (0x38);
  1457  07C0  3038               	movlw	56
  1458  07C1  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1459  07C6                     l815:
  1460                           
  1461                           ;LCD.c: 78:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  1462  07C6  3013               	movlw	19
  1463  07C7  00F4               	movwf	??_LCD_init
  1464  07C8                     u257:
  1465  07C8  0BF4               	decfsz	??_LCD_init,f
  1466  07C9  2FC8               	goto	u257
  1467  07CA  2FCB               	nop2
  1468                           
  1469                           ;LCD.c: 79:     CMDs (0x08);
  1470  07CB  3008               	movlw	8
  1471  07CC  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1472  07D1                     l817:
  1473                           
  1474                           ;LCD.c: 80:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  1475  07D1  3013               	movlw	19
  1476  07D2  00F4               	movwf	??_LCD_init
  1477  07D3                     u267:
  1478  07D3  0BF4               	decfsz	??_LCD_init,f
  1479  07D4  2FD3               	goto	u267
  1480  07D5  2FD6               	nop2
  1481  07D6                     l819:
  1482                           
  1483                           ;LCD.c: 81:     CMDs (0x01);
  1484  07D6  3001               	movlw	1
  1485  07D7  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1486                           
  1487                           ;LCD.c: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1488  07DC  3007               	movlw	7
  1489  07DD  00F5               	movwf	??_LCD_init+1
  1490  07DE  307D               	movlw	125
  1491  07DF  00F4               	movwf	??_LCD_init
  1492  07E0                     u277:
  1493  07E0  0BF4               	decfsz	??_LCD_init,f
  1494  07E1  2FE0               	goto	u277
  1495  07E2  0BF5               	decfsz	??_LCD_init+1,f
  1496  07E3  2FE0               	goto	u277
  1497  07E4                     l821:
  1498                           
  1499                           ;LCD.c: 83:     CMDs (0x06);
  1500  07E4  3006               	movlw	6
  1501  07E5  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1502  07EA                     l823:
  1503                           
  1504                           ;LCD.c: 84:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  1505  07EA  3013               	movlw	19
  1506  07EB  00F4               	movwf	??_LCD_init
  1507  07EC                     u287:
  1508  07EC  0BF4               	decfsz	??_LCD_init,f
  1509  07ED  2FEC               	goto	u287
  1510  07EE  2FEF               	nop2
  1511                           
  1512                           ;LCD.c: 85:     CMDs (0x0C);
  1513  07EF  300C               	movlw	12
  1514  07F0  120A  118A  26B8  120A  118A  	fcall	_CMDs
  1515  07F5                     l825:
  1516                           
  1517                           ;LCD.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  1518  07F5  3013               	movlw	19
  1519  07F6  00F4               	movwf	??_LCD_init
  1520  07F7                     u297:
  1521  07F7  0BF4               	decfsz	??_LCD_init,f
  1522  07F8  2FF7               	goto	u297
  1523  07F9  2FFA               	nop2
  1524  07FA                     l191:
  1525  07FA  0008               	return
  1526  07FB                     __end_of_LCD_init:
  1527                           
  1528                           	psect	text12
  1529  06B8                     __ptext12:	
  1530 ;; *************** function _CMDs *****************
  1531 ;; Defined at:
  1532 ;;		line 42 in file "LCD.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  a               1    wreg     unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  a               1    3[COMMON] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         1       0       0       0       0
  1548 ;;      Temps:          2       0       0       0       0
  1549 ;;      Totals:         3       0       0       0       0
  1550 ;;Total ram usage:        3 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    1
  1553 ;; This function calls:
  1554 ;;		_port
  1555 ;; This function is called by:
  1556 ;;		_clear_LCD
  1557 ;;		_LCD_init
  1558 ;;		_set_cursor
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _CMDs
  1564  06B8                     _CMDs:
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  1568                           ;CMDs@a stored from wreg
  1569  06B8  00F3               	movwf	CMDs@a
  1570  06B9                     l769:
  1571                           
  1572                           ;LCD.c: 43:     RE0 = 0;
  1573  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1574  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1575  06BB  1009               	bcf	9,0	;volatile
  1576  06BC                     l771:
  1577                           
  1578                           ;LCD.c: 44:     port(a);
  1579  06BC  0873               	movf	CMDs@a,w
  1580  06BD  120A  118A  2757  120A  118A  	fcall	_port
  1581  06C2                     l773:
  1582                           
  1583                           ;LCD.c: 45:     RE1 = 1;
  1584  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1585  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1586  06C4  1489               	bsf	9,1	;volatile
  1587  06C5                     l775:
  1588                           
  1589                           ;LCD.c: 46:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1590  06C5  2EC6               	nop2	;2 cycle nop
  1591  06C6  2EC7               	nop2	;2 cycle nop
  1592  06C7  0000               	nop
  1593  06C8                     l777:
  1594                           
  1595                           ;LCD.c: 47:     RE1 = 0;
  1596  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1597  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1598  06CA  1089               	bcf	9,1	;volatile
  1599  06CB                     l779:
  1600                           
  1601                           ;LCD.c: 48:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1602  06CB  2ECC               	nop2	;2 cycle nop
  1603  06CC  2ECD               	nop2	;2 cycle nop
  1604  06CD  0000               	nop
  1605  06CE                     l781:
  1606                           
  1607                           ;LCD.c: 49:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1608  06CE  3003               	movlw	3
  1609  06CF  00F2               	movwf	??_CMDs+1
  1610  06D0  3097               	movlw	151
  1611  06D1  00F1               	movwf	??_CMDs
  1612  06D2                     u307:
  1613  06D2  0BF1               	decfsz	??_CMDs,f
  1614  06D3  2ED2               	goto	u307
  1615  06D4  0BF2               	decfsz	??_CMDs+1,f
  1616  06D5  2ED2               	goto	u307
  1617  06D6  2ED7               	nop2
  1618  06D7                     l179:
  1619  06D7  0008               	return
  1620  06D8                     __end_of_CMDs:
  1621                           
  1622                           	psect	text13
  1623  0757                     __ptext13:	
  1624 ;; *************** function _port *****************
  1625 ;; Defined at:
  1626 ;;		line 7 in file "LCD.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  a               1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  a               1    0[COMMON] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         1       0       0       0       0
  1644 ;;Total ram usage:        1 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_CMDs
  1650 ;;		_write_char
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _port
  1656  0757                     _port:
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _port: [wreg]
  1660                           ;port@a stored from wreg
  1661  0757  00F0               	movwf	port@a
  1662  0758                     l733:
  1663                           
  1664                           ;LCD.c: 8:     if(a & 1){
  1665  0758  1C70               	btfss	port@a,0
  1666  0759  2F5B               	goto	u21
  1667  075A  2F5C               	goto	u20
  1668  075B                     u21:
  1669  075B  2F60               	goto	l160
  1670  075C                     u20:
  1671  075C                     l735:
  1672                           
  1673                           ;LCD.c: 9:         RD0=1;}
  1674  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1675  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1676  075E  1408               	bsf	8,0	;volatile
  1677  075F  2F63               	goto	l161
  1678  0760                     l160:	
  1679                           ;LCD.c: 10:     else{
  1680                           
  1681                           
  1682                           ;LCD.c: 11:         RD0=0;}
  1683  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0762  1008               	bcf	8,0	;volatile
  1686  0763                     l161:
  1687                           
  1688                           ;LCD.c: 12:     if(a & 2){
  1689  0763  1CF0               	btfss	port@a,1
  1690  0764  2F66               	goto	u31
  1691  0765  2F67               	goto	u30
  1692  0766                     u31:
  1693  0766  2F69               	goto	l162
  1694  0767                     u30:
  1695  0767                     l737:
  1696                           
  1697                           ;LCD.c: 13:         RD1=1;}
  1698  0767  1488               	bsf	8,1	;volatile
  1699  0768  2F6A               	goto	l163
  1700  0769                     l162:	
  1701                           ;LCD.c: 14:     else{
  1702                           
  1703                           
  1704                           ;LCD.c: 15:         RD1=0;}
  1705  0769  1088               	bcf	8,1	;volatile
  1706  076A                     l163:
  1707                           
  1708                           ;LCD.c: 16:     if(a & 4){
  1709  076A  1D70               	btfss	port@a,2
  1710  076B  2F6D               	goto	u41
  1711  076C  2F6E               	goto	u40
  1712  076D                     u41:
  1713  076D  2F70               	goto	l164
  1714  076E                     u40:
  1715  076E                     l739:
  1716                           
  1717                           ;LCD.c: 17:         RD2=1;}
  1718  076E  1508               	bsf	8,2	;volatile
  1719  076F  2F71               	goto	l165
  1720  0770                     l164:	
  1721                           ;LCD.c: 18:     else{
  1722                           
  1723                           
  1724                           ;LCD.c: 19:         RD2=0;}
  1725  0770  1108               	bcf	8,2	;volatile
  1726  0771                     l165:
  1727                           
  1728                           ;LCD.c: 20:     if(a & 8){
  1729  0771  1DF0               	btfss	port@a,3
  1730  0772  2F74               	goto	u51
  1731  0773  2F75               	goto	u50
  1732  0774                     u51:
  1733  0774  2F77               	goto	l166
  1734  0775                     u50:
  1735  0775                     l741:
  1736                           
  1737                           ;LCD.c: 21:         RD3=1;}
  1738  0775  1588               	bsf	8,3	;volatile
  1739  0776  2F78               	goto	l167
  1740  0777                     l166:	
  1741                           ;LCD.c: 22:     else{
  1742                           
  1743                           
  1744                           ;LCD.c: 23:         RD3=0;}
  1745  0777  1188               	bcf	8,3	;volatile
  1746  0778                     l167:
  1747                           
  1748                           ;LCD.c: 24:     if(a & 16){
  1749  0778  1E70               	btfss	port@a,4
  1750  0779  2F7B               	goto	u61
  1751  077A  2F7C               	goto	u60
  1752  077B                     u61:
  1753  077B  2F7E               	goto	l168
  1754  077C                     u60:
  1755  077C                     l743:
  1756                           
  1757                           ;LCD.c: 25:         RD4=1;}
  1758  077C  1608               	bsf	8,4	;volatile
  1759  077D  2F7F               	goto	l169
  1760  077E                     l168:	
  1761                           ;LCD.c: 26:     else{
  1762                           
  1763                           
  1764                           ;LCD.c: 27:         RD4=0;}
  1765  077E  1208               	bcf	8,4	;volatile
  1766  077F                     l169:
  1767                           
  1768                           ;LCD.c: 28:     if(a & 32){
  1769  077F  1EF0               	btfss	port@a,5
  1770  0780  2F82               	goto	u71
  1771  0781  2F83               	goto	u70
  1772  0782                     u71:
  1773  0782  2F85               	goto	l170
  1774  0783                     u70:
  1775  0783                     l745:
  1776                           
  1777                           ;LCD.c: 29:         RD5=1;}
  1778  0783  1688               	bsf	8,5	;volatile
  1779  0784  2F86               	goto	l171
  1780  0785                     l170:	
  1781                           ;LCD.c: 30:     else{
  1782                           
  1783                           
  1784                           ;LCD.c: 31:         RD5=0;}
  1785  0785  1288               	bcf	8,5	;volatile
  1786  0786                     l171:
  1787                           
  1788                           ;LCD.c: 32:     if(a & 64){
  1789  0786  1F70               	btfss	port@a,6
  1790  0787  2F89               	goto	u81
  1791  0788  2F8A               	goto	u80
  1792  0789                     u81:
  1793  0789  2F8C               	goto	l172
  1794  078A                     u80:
  1795  078A                     l747:
  1796                           
  1797                           ;LCD.c: 33:         RD6=1;}
  1798  078A  1708               	bsf	8,6	;volatile
  1799  078B  2F8D               	goto	l173
  1800  078C                     l172:	
  1801                           ;LCD.c: 34:     else{
  1802                           
  1803                           
  1804                           ;LCD.c: 35:         RD6=0;}
  1805  078C  1308               	bcf	8,6	;volatile
  1806  078D                     l173:
  1807                           
  1808                           ;LCD.c: 36:     if(a & 128){
  1809  078D  1FF0               	btfss	port@a,7
  1810  078E  2F90               	goto	u91
  1811  078F  2F91               	goto	u90
  1812  0790                     u91:
  1813  0790  2F93               	goto	l174
  1814  0791                     u90:
  1815  0791                     l749:
  1816                           
  1817                           ;LCD.c: 37:         RD7=1;}
  1818  0791  1788               	bsf	8,7	;volatile
  1819  0792  2F94               	goto	l176
  1820  0793                     l174:	
  1821                           ;LCD.c: 38:     else{
  1822                           
  1823                           
  1824                           ;LCD.c: 39:         RD7=0;}
  1825  0793  1388               	bcf	8,7	;volatile
  1826  0794                     l176:
  1827  0794  0008               	return
  1828  0795                     __end_of_port:
  1829  007E                     btemp	set	126	;btemp
  1830  007E                     wtemp0	set	126
  1831                           
  1832                           	psect	config
  1833                           
  1834                           ;Config register CONFIG1 @ 0x2007
  1835                           ;	Oscillator Selection bits
  1836                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1837                           ;	Watchdog Timer Enable bit
  1838                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1839                           ;	Power-up Timer Enable bit
  1840                           ;	PWRTE = OFF, PWRT disabled
  1841                           ;	RE3/MCLR pin function select bit
  1842                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1843                           ;	Code Protection bit
  1844                           ;	CP = OFF, Program memory code protection is disabled
  1845                           ;	Data Code Protection bit
  1846                           ;	CPD = OFF, Data memory code protection is disabled
  1847                           ;	Brown Out Reset Selection bits
  1848                           ;	BOREN = OFF, BOR disabled
  1849                           ;	Internal External Switchover bit
  1850                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1851                           ;	Fail-Safe Clock Monitor Enabled bit
  1852                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1853                           ;	Low Voltage Programming Enable bit
  1854                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1855                           ;	In-Circuit Debugger Mode bit
  1856                           ;	DEBUG = 0x1, unprogrammed default
  1857  2007                     	org	8199
  1858  2007  20D6               	dw	8406
  1859                           
  1860                           ;Config register CONFIG2 @ 0x2008
  1861                           ;	Brown-out Reset Selection bit
  1862                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1863                           ;	Flash Program Memory Self Write Enable bits
  1864                           ;	WRT = OFF, Write protection off
  1865  2008                     	org	8200
  1866  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _setup->_spiInit
    _contador->_spiWrite
    _clear_LCD->_CMDs
    _LCD_init->_CMDs
    _CMDs->_port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     576
                           _LCD_init
                           __baudios
                          _clear_LCD
                       _config_rcsta
                       _config_txsta
                           _contador
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     291
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _contador                                             2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_LCD                                            0     0      0     135
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     135
                                              4 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     135
                                              1 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _port                                                 1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _CMDs
       _port
   __baudios
   _clear_LCD
     _CMDs
       _port
   _config_rcsta
   _config_txsta
   _contador
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _spiInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 15:24:33 2021

            _SSPSTATbits 0094                       l51 071A                       l60 06FB  
                     l80 0673                       l57 0756                       l83 0679  
                     l76 06B2                       l77 06B7                       l94 068A  
                     l86 0672                       u10 0679                       u11 0678  
                     u20 075C                       u21 075B                       u30 0767  
                     u31 0766                       u40 076E                       u41 076D  
                     u50 0775                       u51 0774                       u60 077C  
                     u61 077B                       u70 0783                       u71 0782  
                     u80 078A                       u81 0789                       u90 0791  
                     u91 0790                      l111 066C                      l114 0694  
                    l117 0681                      l160 0760                      l161 0763  
                    l170 0785                      l162 0769                      l171 0786  
                    l163 076A                      l172 078C                      l164 0770  
                    l173 078D                      l165 0771                      l174 0793  
                    l166 0777                      l182 06A1                      l167 0778  
                    l191 07FA                      l176 0794                      l168 077E  
                    l169 077F                      l179 06D7                      l801 0680  
                    l811 07B6                      l803 0795                      l731 0673  
                    l741 0775                      l733 0758                      l821 07E4  
                    l813 07C0                      l805 079E                      l743 077C  
                    l735 075C                      l823 07EA                      l815 07C6  
                    l807 07A4                      l751 066E                      l831 0726  
                    l911 06B1                      l903 06A3                      l745 0783  
                    l737 0767                      l825 07F5                      l817 07D1  
                    l809 07B2                      l753 0682                      l833 072F  
                    l905 06AA                      l921 06F1                      l913 06D8  
                    l747 078A                      l739 076E                      l771 06BC  
                    l819 07D6                      l827 0695                      l755 0687  
                    l835 0735                      l907 06AC                      l923 06F2  
                    l915 06EA                      l749 0791                      l781 06CE  
                    l773 06C2                      l837 074A                      l829 0723  
                    l909 06AE                      l917 06ED                      l925 06FC  
                    l775 06C5                      l919 06EE                      l927 0706  
                    l777 06C8                      l769 06B9                      l929 070B  
                    l779 06CB                      l795 0668                      l797 068B  
                    l799 067A                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RE0 0048                      _RD3 0043  
                    _RE1 0049                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u207 0751  
                    u217 0799                      u170 06AA                      u307 06D2  
                    u227 07A8                      u171 06A9                      u237 07B4  
                    u247 07BE                      u257 07C8                      u267 07D3  
                    u187 072A                      u277 07E0                      u197 0745  
                    u287 07EC                      u297 07F7                     _CMDs 06B8  
                   _RCIF 0065                     _TRMT 04C1                     _cont 0076  
                   _main 06FC                     _port 0757                     btemp 007E  
                   start 0000           ??_config_rcsta 0070           ??_config_txsta 0070  
                  CMDs@a 0073                    ?_CMDs 0070         __end_of_LCD_init 07FB  
                  ?_main 0070                    ?_port 0070                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
                  _setup 06D8          __end_of_spiInit 06B8          __end_of_spiRead 068B  
                  port@a 0070                    status 0003                    wtemp0 007E  
           __end_of_CMDs 06D8          __initialization 07FB             __end_of_main 0723  
           __end_of_port 0795                   ??_CMDs 0071                   ??_main 0076  
                 ??_port 0070                   ?_setup 0070                   _ANSELH 0189  
       __end_of__baudios 066D                   _TRISC1 0439                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_contador 0757     __end_of_config_rcsta 0682  
       __end_of_spiWrite 0673     __end_of_config_txsta 0695                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC                ?_LCD_init 0070  
         __pcstackCOMMON 0070            __end_of_setup 06FC       __size_of_clear_LCD 000D  
                ??_setup 0074               ??_LCD_init 0074               __pmaintext 06FC  
__size_of_spiReceiveWait 0007                ?__baudios 0070                  _SSPSTAT 0094  
              ?_contador 0070        __end_of_clear_LCD 06A2                ?_spiWrite 0070  
  __size_of_config_rcsta 0008               ??__baudios 0070                  __ptext1 06D8  
                __ptext2 06A2    __size_of_config_txsta 000A                  __ptext3 0723  
                __ptext4 066D                  __ptext5 0682                  __ptext6 0673  
                __ptext7 068B                  __ptext8 067A                  __ptext9 0695  
                _spiInit 06A2                  _spiRead 0682     end_of_initialization 07FC  
             ??_contador 0071             _config_rcsta 067A             _config_txsta 068B  
              _RCSTAbits 0018               ??_spiWrite 0070                _PORTCbits 0007  
            spiWrite@dat 0070                _TXSTAbits 0098        __size_of_LCD_init 0066  
         _spiReceiveWait 0673      start_initialization 07FB   __end_of_spiReceiveWait 067A  
      __size_of__baudios 0005              __pbssCOMMON 0076                ___latbits 0002  
      __size_of_contador 0034                _clear_LCD 0695          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0070                 ?_spiRead 0070  
         __size_of_setup 0024     spiInit@sTransmitEdge 0072                 _LCD_init 0795  
             ?_clear_LCD 0070       spiInit@sDataSample 0070                 __baudios 0668  
               __ptext10 0668                 __ptext11 0795                 __ptext12 06B8  
               __ptext13 0757         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _contador 0723            __size_of_CMDs 0020            __size_of_main 0027  
          __size_of_port 003E              ??_clear_LCD 0074                 _spiWrite 066D  
           spiInit@sType 0073        spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
          ?_config_rcsta 0070            ?_config_txsta 0070  
