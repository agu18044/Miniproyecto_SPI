

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 16:50:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001E                     _ADRESH	set	30
   364  001F                     _ADCON0bits	set	31
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000C                     _PIR1bits	set	12
   368  000B                     _INTCONbits	set	11
   369  0063                     _SSPIF	set	99
   370  0086                     _TRISBbits	set	134
   371  0089                     _TRISEbits	set	137
   372  009F                     _ADCON1	set	159
   373  0094                     _SSPSTATbits	set	148
   374  0094                     _SSPSTAT	set	148
   375  0085                     _TRISAbits	set	133
   376  008C                     _PIE1bits	set	140
   377  0086                     _TRISB	set	134
   378  043B                     _TRISC3	set	1083
   379  043D                     _TRISC5	set	1085
   380  0189                     _ANSELHbits	set	393
   381  0188                     _ANSELbits	set	392
   382  0189                     _ANSELH	set	393
   383  0188                     _ANSEL	set	392
   384                           
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387                           ; #config settings
   388                           
   389  000F                     __initialization:
   390                           
   391                           ; Clear objects allocated to COMMON
   392  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   393  0010                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  0010                     __end_of__initialization:
   397  0010  0183               	clrf	3
   398  0011  120A  118A  2944   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	bssCOMMON
   401  0078                     __pbssCOMMON:
   402  0078                     _ADC:
   403  0078                     	ds	1
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:
   407  0070                     ?_spiWrite:
   408  0070                     ??_spiWrite:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_setup:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_ADCmed:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_isr:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     spiWrite@dat:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 1 bytes @ 0x0
   428  0070                     	ds	1
   429  0071                     ??_isr:
   430                           
   431                           ; 1 bytes @ 0x1
   432  0071                     	ds	2
   433  0073                     ??_ADCmed:
   434  0073                     ?_spiInit:	
   435                           ; 1 bytes @ 0x3
   436                           
   437  0073                     spiInit@sDataSample:	
   438                           ; 1 bytes @ 0x3
   439                           
   440                           
   441                           ; 1 bytes @ 0x3
   442  0073                     	ds	1
   443  0074                     spiInit@sClockIdle:
   444                           
   445                           ; 1 bytes @ 0x4
   446  0074                     	ds	1
   447  0075                     spiInit@sTransmitEdge:
   448  0075                     ADCmed@ch:	
   449                           ; 1 bytes @ 0x5
   450                           
   451                           
   452                           ; 1 bytes @ 0x5
   453  0075                     	ds	1
   454  0076                     ??_spiInit:
   455  0076                     spiInit@sType:	
   456                           ; 1 bytes @ 0x6
   457                           
   458                           
   459                           ; 1 bytes @ 0x6
   460  0076                     	ds	1
   461  0077                     ??_setup:
   462  0077                     ??_main:	
   463                           ; 1 bytes @ 0x7
   464                           
   465                           
   466                           ; 1 bytes @ 0x7
   467  0077                     	ds	1
   468                           
   469                           	psect	maintext
   470  0144                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 56 in file "adcSl.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : B00/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          1       0       0       0       0
   493 ;;      Totals:         1       0       0       0       0
   494 ;;Total ram usage:        1 bytes
   495 ;; Hardware stack levels required when called:    4
   496 ;; This function calls:
   497 ;;		_ADCmed
   498 ;;		_setup
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _main
   506  0144                     _main:
   507  0144                     l807:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;adcSl.c: 57:     setup();
   513  0144  120A  118A  20FE  120A  118A  	fcall	_setup
   514  0149                     l809:
   515                           
   516                           ;adcSl.c: 59:        ADC = ADCmed(8);
   517  0149  3008               	movlw	8
   518  014A  120A  118A  2014  120A  118A  	fcall	_ADCmed
   519  014F  00F7               	movwf	??_main
   520  0150  0877               	movf	??_main,w
   521  0151  00F8               	movwf	_ADC
   522  0152  2949               	goto	l809
   523  0153  120A  118A  280C   	ljmp	start
   524  0156                     __end_of_main:
   525                           
   526                           	psect	text1
   527  00FE                     __ptext1:	
   528 ;; *************** function _setup *****************
   529 ;; Defined at:
   530 ;;		line 66 in file "adcSl.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    3
   551 ;; This function calls:
   552 ;;		_spiInit
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _setup
   560  00FE                     _setup:
   561  00FE                     l793:	
   562                           ;incstack = 0
   563                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;adcSl.c: 67:     ANSEL = 0;
   567  00FE  1683               	bsf	3,5	;RP0=1, select bank3
   568  00FF  1703               	bsf	3,6	;RP1=1, select bank3
   569  0100  0188               	clrf	8	;volatile
   570                           
   571                           ;adcSl.c: 68:     ANSELH = 0;
   572  0101  0189               	clrf	9	;volatile
   573                           
   574                           ;adcSl.c: 71:     TRISB = 0;
   575  0102  1683               	bsf	3,5	;RP0=1, select bank1
   576  0103  1303               	bcf	3,6	;RP1=0, select bank1
   577  0104  0186               	clrf	6	;volatile
   578  0105                     l795:
   579                           
   580                           ;adcSl.c: 73:     INTCONbits.GIE = 1;
   581  0105  178B               	bsf	11,7	;volatile
   582  0106                     l797:
   583                           
   584                           ;adcSl.c: 74:     INTCONbits.PEIE = 1;
   585  0106  170B               	bsf	11,6	;volatile
   586  0107                     l799:
   587                           
   588                           ;adcSl.c: 75:     PIR1bits.SSPIF = 0;
   589  0107  1283               	bcf	3,5	;RP0=0, select bank0
   590  0108  1303               	bcf	3,6	;RP1=0, select bank0
   591  0109  118C               	bcf	12,3	;volatile
   592  010A                     l801:
   593                           
   594                           ;adcSl.c: 76:     PIE1bits.SSPIE = 1;
   595  010A  1683               	bsf	3,5	;RP0=1, select bank1
   596  010B  1303               	bcf	3,6	;RP1=0, select bank1
   597  010C  158C               	bsf	12,3	;volatile
   598  010D                     l803:
   599                           
   600                           ;adcSl.c: 77:     TRISAbits.TRISA5 = 1;
   601  010D  1685               	bsf	5,5	;volatile
   602  010E                     l805:
   603                           
   604                           ;adcSl.c: 78:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   605  010E  01F3               	clrf	spiInit@sDataSample
   606  010F  01F4               	clrf	spiInit@sClockIdle
   607  0110  01F5               	clrf	spiInit@sTransmitEdge
   608  0111  3024               	movlw	36
   609  0112  120A  118A  2118  120A  118A  	fcall	_spiInit
   610  0117                     l43:
   611  0117  0008               	return
   612  0118                     __end_of_setup:
   613                           
   614                           	psect	text2
   615  0118                     __ptext2:	
   616 ;; *************** function _spiInit *****************
   617 ;; Defined at:
   618 ;;		line 12 in file "SPI.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  sType           1    wreg     enum E1264
   621 ;;  sDataSample     1    3[COMMON] enum E1272
   622 ;;  sClockIdle      1    4[COMMON] enum E1276
   623 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  sType           1    6[COMMON] enum E1264
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         3       0       0       0       0
   636 ;;      Locals:         1       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         4       0       0       0       0
   639 ;;Total ram usage:        4 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_setup
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _spiInit
   651  0118                     _spiInit:
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   655                           ;spiInit@sType stored from wreg
   656  0118  00F6               	movwf	spiInit@sType
   657  0119                     l783:
   658                           
   659                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   660  0119  1683               	bsf	3,5	;RP0=1, select bank1
   661  011A  1303               	bcf	3,6	;RP1=0, select bank1
   662  011B  1287               	bcf	7,5	;volatile
   663                           
   664                           ;SPI.c: 15:     if(sType & 0b00000100)
   665  011C  1D76               	btfss	spiInit@sType,2
   666  011D  291F               	goto	u51
   667  011E  2920               	goto	u50
   668  011F                     u51:
   669  011F  2924               	goto	l789
   670  0120                     u50:
   671  0120                     l785:
   672                           
   673                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   674  0120  0875               	movf	spiInit@sTransmitEdge,w
   675  0121  0094               	movwf	20	;volatile
   676  0122                     l787:
   677                           
   678                           ;SPI.c: 18:         TRISC3 = 1;
   679  0122  1587               	bsf	7,3	;volatile
   680                           
   681                           ;SPI.c: 19:     }
   682  0123  2928               	goto	l59
   683  0124                     l789:
   684                           
   685                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   686  0124  0873               	movf	spiInit@sDataSample,w
   687  0125  0475               	iorwf	spiInit@sTransmitEdge,w
   688  0126  0094               	movwf	20	;volatile
   689  0127                     l791:
   690                           
   691                           ;SPI.c: 23:         TRISC3 = 0;
   692  0127  1187               	bcf	7,3	;volatile
   693  0128                     l59:	
   694                           ;SPI.c: 24:     }
   695                           
   696                           
   697                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   698  0128  0876               	movf	spiInit@sType,w
   699  0129  0474               	iorwf	spiInit@sClockIdle,w
   700  012A  1283               	bcf	3,5	;RP0=0, select bank0
   701  012B  1303               	bcf	3,6	;RP1=0, select bank0
   702  012C  0094               	movwf	20	;volatile
   703  012D                     l60:
   704  012D  0008               	return
   705  012E                     __end_of_spiInit:
   706                           
   707                           	psect	text3
   708  0014                     __ptext3:	
   709 ;; *************** function _ADCmed *****************
   710 ;; Defined at:
   711 ;;		line 7 in file "ADC.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  ch              1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  ch              1    5[COMMON] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      unsigned char 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         1       0       0       0       0
   727 ;;      Temps:          2       0       0       0       0
   728 ;;      Totals:         3       0       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    2
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _ADCmed
   741  0014                     _ADCmed:
   742                           
   743                           ;incstack = 0
   744                           ; Regs used in _ADCmed: [wreg-fsr0h+status,2+status,0]
   745                           ;ADCmed@ch stored from wreg
   746  0014  00F5               	movwf	ADCmed@ch
   747  0015                     l675:
   748                           
   749                           ;ADC.c: 8:     ADCON0bits.ADCS = 1;
   750  0015  1283               	bcf	3,5	;RP0=0, select bank0
   751  0016  1303               	bcf	3,6	;RP1=0, select bank0
   752  0017  081F               	movf	31,w	;volatile
   753  0018  393F               	andlw	-193
   754  0019  3840               	iorlw	64
   755  001A  009F               	movwf	31	;volatile
   756  001B                     l677:
   757                           
   758                           ;ADC.c: 9:     ADCON1 = 0;
   759  001B  1683               	bsf	3,5	;RP0=1, select bank1
   760  001C  1303               	bcf	3,6	;RP1=0, select bank1
   761  001D  019F               	clrf	31	;volatile
   762                           
   763                           ;ADC.c: 11:     switch (ch) {
   764  001E  28B9               	goto	l713
   765  001F                     l99:	
   766                           ;ADC.c: 12:         case 0:
   767                           
   768                           
   769                           ;ADC.c: 13:             TRISAbits.TRISA0 = 1;
   770  001F  1405               	bsf	5,0	;volatile
   771                           
   772                           ;ADC.c: 14:             ANSELbits.ANS0 = 1;
   773  0020  1683               	bsf	3,5	;RP0=1, select bank3
   774  0021  1703               	bsf	3,6	;RP1=1, select bank3
   775  0022  1408               	bsf	8,0	;volatile
   776  0023                     l679:
   777                           
   778                           ;ADC.c: 15:             ADCON0bits.CHS = 0;
   779  0023  30C3               	movlw	-61
   780  0024  1283               	bcf	3,5	;RP0=0, select bank0
   781  0025  1303               	bcf	3,6	;RP1=0, select bank0
   782  0026  059F               	andwf	31,f	;volatile
   783                           
   784                           ;ADC.c: 16:             break;
   785  0027  28ED               	goto	l100
   786  0028                     l101:	
   787                           ;ADC.c: 17:         case 1:
   788                           
   789                           
   790                           ;ADC.c: 18:             TRISAbits.TRISA1=1;
   791  0028  1485               	bsf	5,1	;volatile
   792                           
   793                           ;ADC.c: 19:             ANSELbits.ANS1=1;
   794  0029  1683               	bsf	3,5	;RP0=1, select bank3
   795  002A  1703               	bsf	3,6	;RP1=1, select bank3
   796  002B  1488               	bsf	8,1	;volatile
   797  002C                     l681:
   798                           
   799                           ;ADC.c: 20:             ADCON0bits.CHS=1;
   800  002C  1283               	bcf	3,5	;RP0=0, select bank0
   801  002D  1303               	bcf	3,6	;RP1=0, select bank0
   802  002E  081F               	movf	31,w	;volatile
   803  002F  39C3               	andlw	-61
   804  0030  3804               	iorlw	4
   805  0031  009F               	movwf	31	;volatile
   806                           
   807                           ;ADC.c: 21:             break;
   808  0032  28ED               	goto	l100
   809  0033                     l102:	
   810                           ;ADC.c: 22:         case 2:
   811                           
   812                           
   813                           ;ADC.c: 23:             TRISAbits.TRISA2=1;
   814  0033  1505               	bsf	5,2	;volatile
   815                           
   816                           ;ADC.c: 24:             ANSELbits.ANS2=1;
   817  0034  1683               	bsf	3,5	;RP0=1, select bank3
   818  0035  1703               	bsf	3,6	;RP1=1, select bank3
   819  0036  1508               	bsf	8,2	;volatile
   820  0037                     l683:
   821                           
   822                           ;ADC.c: 25:             ADCON0bits.CHS=2;
   823  0037  1283               	bcf	3,5	;RP0=0, select bank0
   824  0038  1303               	bcf	3,6	;RP1=0, select bank0
   825  0039  081F               	movf	31,w	;volatile
   826  003A  39C3               	andlw	-61
   827  003B  3808               	iorlw	8
   828  003C  009F               	movwf	31	;volatile
   829                           
   830                           ;ADC.c: 26:             break;
   831  003D  28ED               	goto	l100
   832  003E                     l103:	
   833                           ;ADC.c: 27:         case 3:
   834                           
   835                           
   836                           ;ADC.c: 28:             TRISAbits.TRISA3=1;
   837  003E  1585               	bsf	5,3	;volatile
   838                           
   839                           ;ADC.c: 29:             ANSELbits.ANS3=1;
   840  003F  1683               	bsf	3,5	;RP0=1, select bank3
   841  0040  1703               	bsf	3,6	;RP1=1, select bank3
   842  0041  1588               	bsf	8,3	;volatile
   843  0042                     l685:
   844                           
   845                           ;ADC.c: 30:             ADCON0bits.CHS=3;
   846  0042  1283               	bcf	3,5	;RP0=0, select bank0
   847  0043  1303               	bcf	3,6	;RP1=0, select bank0
   848  0044  081F               	movf	31,w	;volatile
   849  0045  39C3               	andlw	-61
   850  0046  380C               	iorlw	12
   851  0047  009F               	movwf	31	;volatile
   852                           
   853                           ;ADC.c: 31:             break;
   854  0048  28ED               	goto	l100
   855  0049                     l104:	
   856                           ;ADC.c: 32:         case 4:
   857                           
   858                           
   859                           ;ADC.c: 33:             TRISAbits.TRISA5=1;
   860  0049  1685               	bsf	5,5	;volatile
   861                           
   862                           ;ADC.c: 34:             ANSELbits.ANS4=1;
   863  004A  1683               	bsf	3,5	;RP0=1, select bank3
   864  004B  1703               	bsf	3,6	;RP1=1, select bank3
   865  004C  1608               	bsf	8,4	;volatile
   866  004D                     l687:
   867                           
   868                           ;ADC.c: 35:             ADCON0bits.CHS=4;
   869  004D  1283               	bcf	3,5	;RP0=0, select bank0
   870  004E  1303               	bcf	3,6	;RP1=0, select bank0
   871  004F  081F               	movf	31,w	;volatile
   872  0050  39C3               	andlw	-61
   873  0051  3810               	iorlw	16
   874  0052  009F               	movwf	31	;volatile
   875                           
   876                           ;ADC.c: 36:             break;
   877  0053  28ED               	goto	l100
   878  0054                     l105:	
   879                           ;ADC.c: 37:         case 5:
   880                           
   881                           
   882                           ;ADC.c: 38:             TRISEbits.TRISE0=1;
   883  0054  1409               	bsf	9,0	;volatile
   884                           
   885                           ;ADC.c: 39:             ANSELbits.ANS5=1;
   886  0055  1683               	bsf	3,5	;RP0=1, select bank3
   887  0056  1703               	bsf	3,6	;RP1=1, select bank3
   888  0057  1688               	bsf	8,5	;volatile
   889  0058                     l689:
   890                           
   891                           ;ADC.c: 40:             ADCON0bits.CHS=5;
   892  0058  1283               	bcf	3,5	;RP0=0, select bank0
   893  0059  1303               	bcf	3,6	;RP1=0, select bank0
   894  005A  081F               	movf	31,w	;volatile
   895  005B  39C3               	andlw	-61
   896  005C  3814               	iorlw	20
   897  005D  009F               	movwf	31	;volatile
   898                           
   899                           ;ADC.c: 41:             break;
   900  005E  28ED               	goto	l100
   901  005F                     l106:	
   902                           ;ADC.c: 42:         case 6:
   903                           
   904                           
   905                           ;ADC.c: 43:             TRISEbits.TRISE1=1;
   906  005F  1489               	bsf	9,1	;volatile
   907                           
   908                           ;ADC.c: 44:             ANSELbits.ANS6=1;
   909  0060  1683               	bsf	3,5	;RP0=1, select bank3
   910  0061  1703               	bsf	3,6	;RP1=1, select bank3
   911  0062  1708               	bsf	8,6	;volatile
   912  0063                     l691:
   913                           
   914                           ;ADC.c: 45:             ADCON0bits.CHS=6;
   915  0063  1283               	bcf	3,5	;RP0=0, select bank0
   916  0064  1303               	bcf	3,6	;RP1=0, select bank0
   917  0065  081F               	movf	31,w	;volatile
   918  0066  39C3               	andlw	-61
   919  0067  3818               	iorlw	24
   920  0068  009F               	movwf	31	;volatile
   921                           
   922                           ;ADC.c: 46:             break;
   923  0069  28ED               	goto	l100
   924  006A                     l107:	
   925                           ;ADC.c: 47:         case 7:
   926                           
   927                           
   928                           ;ADC.c: 48:             TRISEbits.TRISE2=1;
   929  006A  1509               	bsf	9,2	;volatile
   930                           
   931                           ;ADC.c: 49:             ANSELbits.ANS7=1;
   932  006B  1683               	bsf	3,5	;RP0=1, select bank3
   933  006C  1703               	bsf	3,6	;RP1=1, select bank3
   934  006D  1788               	bsf	8,7	;volatile
   935  006E                     l693:
   936                           
   937                           ;ADC.c: 50:             ADCON0bits.CHS=7;
   938  006E  1283               	bcf	3,5	;RP0=0, select bank0
   939  006F  1303               	bcf	3,6	;RP1=0, select bank0
   940  0070  081F               	movf	31,w	;volatile
   941  0071  39C3               	andlw	-61
   942  0072  381C               	iorlw	28
   943  0073  009F               	movwf	31	;volatile
   944                           
   945                           ;ADC.c: 51:             break;
   946  0074  28ED               	goto	l100
   947  0075                     l108:	
   948                           ;ADC.c: 52:         case 8:
   949                           
   950                           
   951                           ;ADC.c: 53:             TRISBbits.TRISB2=1;
   952  0075  1506               	bsf	6,2	;volatile
   953                           
   954                           ;ADC.c: 54:             ANSELHbits.ANS8=1;
   955  0076  1683               	bsf	3,5	;RP0=1, select bank3
   956  0077  1703               	bsf	3,6	;RP1=1, select bank3
   957  0078  1409               	bsf	9,0	;volatile
   958  0079                     l695:
   959                           
   960                           ;ADC.c: 55:             ADCON0bits.CHS=8;
   961  0079  1283               	bcf	3,5	;RP0=0, select bank0
   962  007A  1303               	bcf	3,6	;RP1=0, select bank0
   963  007B  081F               	movf	31,w	;volatile
   964  007C  39C3               	andlw	-61
   965  007D  3820               	iorlw	32
   966  007E  009F               	movwf	31	;volatile
   967                           
   968                           ;ADC.c: 56:             break;
   969  007F  28ED               	goto	l100
   970  0080                     l109:	
   971                           ;ADC.c: 57:         case 9:
   972                           
   973                           
   974                           ;ADC.c: 58:             TRISBbits.TRISB3=1;
   975  0080  1586               	bsf	6,3	;volatile
   976                           
   977                           ;ADC.c: 59:             ANSELHbits.ANS9=1;
   978  0081  1683               	bsf	3,5	;RP0=1, select bank3
   979  0082  1703               	bsf	3,6	;RP1=1, select bank3
   980  0083  1489               	bsf	9,1	;volatile
   981  0084                     l697:
   982                           
   983                           ;ADC.c: 60:             ADCON0bits.CHS=9;
   984  0084  1283               	bcf	3,5	;RP0=0, select bank0
   985  0085  1303               	bcf	3,6	;RP1=0, select bank0
   986  0086  081F               	movf	31,w	;volatile
   987  0087  39C3               	andlw	-61
   988  0088  3824               	iorlw	36
   989  0089  009F               	movwf	31	;volatile
   990                           
   991                           ;ADC.c: 61:             break;
   992  008A  28ED               	goto	l100
   993  008B                     l110:	
   994                           ;ADC.c: 62:         case 10:
   995                           
   996                           
   997                           ;ADC.c: 63:             TRISBbits.TRISB1=1;
   998  008B  1486               	bsf	6,1	;volatile
   999                           
  1000                           ;ADC.c: 64:             ANSELHbits.ANS10=1;
  1001  008C  1683               	bsf	3,5	;RP0=1, select bank3
  1002  008D  1703               	bsf	3,6	;RP1=1, select bank3
  1003  008E  1509               	bsf	9,2	;volatile
  1004  008F                     l699:
  1005                           
  1006                           ;ADC.c: 65:             ADCON0bits.CHS=10;
  1007  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0091  081F               	movf	31,w	;volatile
  1010  0092  39C3               	andlw	-61
  1011  0093  3828               	iorlw	40
  1012  0094  009F               	movwf	31	;volatile
  1013                           
  1014                           ;ADC.c: 66:             break;
  1015  0095  28ED               	goto	l100
  1016  0096                     l111:	
  1017                           ;ADC.c: 67:         case 11:
  1018                           
  1019                           
  1020                           ;ADC.c: 68:             TRISBbits.TRISB4=1;
  1021  0096  1606               	bsf	6,4	;volatile
  1022                           
  1023                           ;ADC.c: 69:             ANSELHbits.ANS11=1;
  1024  0097  1683               	bsf	3,5	;RP0=1, select bank3
  1025  0098  1703               	bsf	3,6	;RP1=1, select bank3
  1026  0099  1589               	bsf	9,3	;volatile
  1027  009A                     l701:
  1028                           
  1029                           ;ADC.c: 70:             ADCON0bits.CHS=11;
  1030  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1031  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1032  009C  081F               	movf	31,w	;volatile
  1033  009D  39C3               	andlw	-61
  1034  009E  382C               	iorlw	44
  1035  009F  009F               	movwf	31	;volatile
  1036                           
  1037                           ;ADC.c: 71:             break;
  1038  00A0  28ED               	goto	l100
  1039  00A1                     l112:	
  1040                           ;ADC.c: 72:         case 12:
  1041                           
  1042                           
  1043                           ;ADC.c: 73:             TRISBbits.TRISB0=1;
  1044  00A1  1406               	bsf	6,0	;volatile
  1045                           
  1046                           ;ADC.c: 74:             ANSELHbits.ANS12=1;
  1047  00A2  1683               	bsf	3,5	;RP0=1, select bank3
  1048  00A3  1703               	bsf	3,6	;RP1=1, select bank3
  1049  00A4  1609               	bsf	9,4	;volatile
  1050  00A5                     l703:
  1051                           
  1052                           ;ADC.c: 75:             ADCON0bits.CHS=12;
  1053  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1054  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1055  00A7  081F               	movf	31,w	;volatile
  1056  00A8  39C3               	andlw	-61
  1057  00A9  3830               	iorlw	48
  1058  00AA  009F               	movwf	31	;volatile
  1059                           
  1060                           ;ADC.c: 76:             break;
  1061  00AB  28ED               	goto	l100
  1062  00AC                     l113:	
  1063                           ;ADC.c: 77:         case 13:
  1064                           
  1065                           
  1066                           ;ADC.c: 78:             TRISBbits.TRISB5=1;
  1067  00AC  1686               	bsf	6,5	;volatile
  1068                           
  1069                           ;ADC.c: 79:             ANSELHbits.ANS13=1;
  1070  00AD  1683               	bsf	3,5	;RP0=1, select bank3
  1071  00AE  1703               	bsf	3,6	;RP1=1, select bank3
  1072  00AF  1689               	bsf	9,5	;volatile
  1073  00B0                     l705:
  1074                           
  1075                           ;ADC.c: 80:             ADCON0bits.CHS=13;
  1076  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1077  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1078  00B2  081F               	movf	31,w	;volatile
  1079  00B3  39C3               	andlw	-61
  1080  00B4  3834               	iorlw	52
  1081  00B5  009F               	movwf	31	;volatile
  1082                           
  1083                           ;ADC.c: 81:             break;
  1084  00B6  28ED               	goto	l100
  1085  00B7                     l707:
  1086                           
  1087                           ;ADC.c: 83:             return 0;
  1088  00B7  3000               	movlw	0
  1089  00B8  28FD               	goto	l115
  1090  00B9                     l713:
  1091  00B9  0875               	movf	ADCmed@ch,w
  1092  00BA  00F3               	movwf	??_ADCmed
  1093  00BB  01F4               	clrf	??_ADCmed+1
  1094                           
  1095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1096                           ; Switch size 1, requested type "simple"
  1097                           ; Number of cases is 1, Range of values is 0 to 0
  1098                           ; switch strategies available:
  1099                           ; Name         Instructions Cycles
  1100                           ; simple_byte            4     3 (average)
  1101                           ; direct_byte           11     8 (fixed)
  1102                           ; jumptable            260     6 (fixed)
  1103                           ;	Chosen strategy is simple_byte
  1104  00BC  0874               	movf	??_ADCmed+1,w
  1105  00BD  3A00               	xorlw	0	; case 0
  1106  00BE  1903               	skipnz
  1107  00BF  28C1               	goto	l841
  1108  00C0  28B7               	goto	l707
  1109  00C1                     l841:
  1110                           
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 14, Range of values is 0 to 13
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte           43    22 (average)
  1116                           ; direct_byte           50     8 (fixed)
  1117                           ; jumptable            260     6 (fixed)
  1118                           ;	Chosen strategy is simple_byte
  1119  00C1  0873               	movf	??_ADCmed,w
  1120  00C2  3A00               	xorlw	0	; case 0
  1121  00C3  1903               	skipnz
  1122  00C4  281F               	goto	l99
  1123  00C5  3A01               	xorlw	1	; case 1
  1124  00C6  1903               	skipnz
  1125  00C7  2828               	goto	l101
  1126  00C8  3A03               	xorlw	3	; case 2
  1127  00C9  1903               	skipnz
  1128  00CA  2833               	goto	l102
  1129  00CB  3A01               	xorlw	1	; case 3
  1130  00CC  1903               	skipnz
  1131  00CD  283E               	goto	l103
  1132  00CE  3A07               	xorlw	7	; case 4
  1133  00CF  1903               	skipnz
  1134  00D0  2849               	goto	l104
  1135  00D1  3A01               	xorlw	1	; case 5
  1136  00D2  1903               	skipnz
  1137  00D3  2854               	goto	l105
  1138  00D4  3A03               	xorlw	3	; case 6
  1139  00D5  1903               	skipnz
  1140  00D6  285F               	goto	l106
  1141  00D7  3A01               	xorlw	1	; case 7
  1142  00D8  1903               	skipnz
  1143  00D9  286A               	goto	l107
  1144  00DA  3A0F               	xorlw	15	; case 8
  1145  00DB  1903               	skipnz
  1146  00DC  2875               	goto	l108
  1147  00DD  3A01               	xorlw	1	; case 9
  1148  00DE  1903               	skipnz
  1149  00DF  2880               	goto	l109
  1150  00E0  3A03               	xorlw	3	; case 10
  1151  00E1  1903               	skipnz
  1152  00E2  288B               	goto	l110
  1153  00E3  3A01               	xorlw	1	; case 11
  1154  00E4  1903               	skipnz
  1155  00E5  2896               	goto	l111
  1156  00E6  3A07               	xorlw	7	; case 12
  1157  00E7  1903               	skipnz
  1158  00E8  28A1               	goto	l112
  1159  00E9  3A01               	xorlw	1	; case 13
  1160  00EA  1903               	skipnz
  1161  00EB  28AC               	goto	l113
  1162  00EC  28B7               	goto	l707
  1163  00ED                     l100:
  1164                           
  1165                           ;ADC.c: 86:     ADCON0bits.ADON = 1;
  1166  00ED  141F               	bsf	31,0	;volatile
  1167  00EE                     l715:
  1168                           
  1169                           ;ADC.c: 87:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  1170  00EE  30A6               	movlw	166
  1171  00EF  00F3               	movwf	??_ADCmed
  1172  00F0                     u67:
  1173  00F0  0BF3               	decfsz	??_ADCmed,f
  1174  00F1  28F0               	goto	u67
  1175  00F2  0000               	nop
  1176  00F3                     l717:
  1177                           
  1178                           ;ADC.c: 88:     ADCON0bits.GO = 1;
  1179  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1180  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1181  00F5  149F               	bsf	31,1	;volatile
  1182                           
  1183                           ;ADC.c: 89:     while (ADCON0bits.GO == 1){
  1184  00F6  28F9               	goto	l116
  1185  00F7                     l719:
  1186                           
  1187                           ;ADC.c: 90:         return ADRESH;
  1188  00F7  081E               	movf	30,w	;volatile
  1189  00F8  28FD               	goto	l115
  1190  00F9                     l116:	
  1191                           ;ADC.c: 91:     }
  1192                           
  1193                           
  1194                           ;ADC.c: 89:     while (ADCON0bits.GO == 1){
  1195  00F9  189F               	btfsc	31,1	;volatile
  1196  00FA  28FC               	goto	u21
  1197  00FB  28FD               	goto	u20
  1198  00FC                     u21:
  1199  00FC  28F7               	goto	l719
  1200  00FD                     u20:
  1201  00FD                     l115:
  1202  00FD  0008               	return
  1203  00FE                     __end_of_ADCmed:
  1204                           
  1205                           	psect	text4
  1206  012E                     __ptext4:	
  1207 ;; *************** function _isr *****************
  1208 ;; Defined at:
  1209 ;;		line 46 in file "adcSl.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          2       0       0       0       0
  1226 ;;      Totals:         2       0       0       0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		_spiWrite
  1232 ;; This function is called by:
  1233 ;;		Interrupt level 1
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _isr
  1239  012E                     _isr:
  1240  012E                     i1l731:
  1241                           
  1242                           ;adcSl.c: 47:    if(SSPIF == 1){
  1243  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1244  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0130  1D8C               	btfss	12,3	;volatile
  1246  0131  2933               	goto	u4_21
  1247  0132  2934               	goto	u4_20
  1248  0133                     u4_21:
  1249  0133  293D               	goto	i1l32
  1250  0134                     u4_20:
  1251  0134                     i1l733:
  1252                           
  1253                           ;adcSl.c: 48:         spiWrite(ADC);
  1254  0134  0878               	movf	_ADC,w
  1255  0135  120A  118A  2156  120A  118A  	fcall	_spiWrite
  1256  013A                     i1l735:
  1257                           
  1258                           ;adcSl.c: 49:         SSPIF = 0;
  1259  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1260  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1261  013C  118C               	bcf	12,3	;volatile
  1262  013D                     i1l32:
  1263  013D  0872               	movf	??_isr+1,w
  1264  013E  008A               	movwf	10
  1265  013F  0E71               	swapf	??_isr,w
  1266  0140  0083               	movwf	3
  1267  0141  0EFE               	swapf	btemp,f
  1268  0142  0E7E               	swapf	btemp,w
  1269  0143  0009               	retfie
  1270  0144                     __end_of_isr:
  1271                           
  1272                           	psect	intentry
  1273  0004                     __pintentry:	
  1274                           ;incstack = 0
  1275                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1276                           
  1277  0004                     interrupt_function:
  1278  007E                     saved_w	set	btemp
  1279  0004  00FE               	movwf	btemp
  1280  0005  0E03               	swapf	3,w
  1281  0006  00F1               	movwf	??_isr
  1282  0007  080A               	movf	10,w
  1283  0008  00F2               	movwf	??_isr+1
  1284  0009  120A  118A  292E   	ljmp	_isr
  1285                           
  1286                           	psect	text5
  1287  0156                     __ptext5:	
  1288 ;; *************** function _spiWrite *****************
  1289 ;; Defined at:
  1290 ;;		line 34 in file "SPI.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  dat             1    wreg     unsigned char 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  dat             1    0[COMMON] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       0       0       0       0
  1305 ;;      Locals:         1       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0
  1307 ;;      Totals:         1       0       0       0       0
  1308 ;;Total ram usage:        1 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_isr
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _spiWrite
  1319  0156                     _spiWrite:
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _spiWrite: [wreg]
  1323                           ;spiWrite@dat stored from wreg
  1324  0156  00F0               	movwf	spiWrite@dat
  1325  0157                     i1l659:
  1326                           
  1327                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1328  0157  0870               	movf	spiWrite@dat,w
  1329  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1331  015A  0093               	movwf	19	;volatile
  1332  015B                     i1l69:
  1333  015B  0008               	return
  1334  015C                     __end_of_spiWrite:
  1335  007E                     btemp	set	126	;btemp
  1336  007E                     wtemp0	set	126
  1337                           
  1338                           	psect	config
  1339                           
  1340                           ;Config register CONFIG1 @ 0x2007
  1341                           ;	Oscillator Selection bits
  1342                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1343                           ;	Watchdog Timer Enable bit
  1344                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1345                           ;	Power-up Timer Enable bit
  1346                           ;	PWRTE = OFF, PWRT disabled
  1347                           ;	RE3/MCLR pin function select bit
  1348                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1349                           ;	Code Protection bit
  1350                           ;	CP = OFF, Program memory code protection is disabled
  1351                           ;	Data Code Protection bit
  1352                           ;	CPD = OFF, Data memory code protection is disabled
  1353                           ;	Brown Out Reset Selection bits
  1354                           ;	BOREN = OFF, BOR disabled
  1355                           ;	Internal External Switchover bit
  1356                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1357                           ;	Fail-Safe Clock Monitor Enabled bit
  1358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1359                           ;	Low Voltage Programming Enable bit
  1360                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1361                           ;	In-Circuit Debugger Mode bit
  1362                           ;	DEBUG = 0x1, unprogrammed default
  1363  2007                     	org	8199
  1364  2007  20D6               	dw	8406
  1365                           
  1366                           ;Config register CONFIG2 @ 0x2008
  1367                           ;	Brown-out Reset Selection bit
  1368                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1369                           ;	Flash Program Memory Self Write Enable bits
  1370                           ;	WRT = OFF, Write protection off
  1371  2008                     	org	8200
  1372  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     306
                                              7 COMMON     1     1      0
                             _ADCmed
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     291
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADCmed                                               3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCmed
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 16:50:29 2021

            _SSPSTATbits 0094                       l43 0117                       l60 012D  
                     l59 0128                       l99 001F                       u20 00FD  
                     u21 00FC                       u50 0120                       u51 011F  
                     u67 00F0                      l100 00ED                      l101 0028  
                    l110 008B                      l102 0033                      l111 0096  
                    l103 003E                      l112 00A1                      l104 0049  
                    l113 00AC                      l105 0054                      l106 005F  
                    l115 00FD                      l107 006A                      l116 00F9  
                    l108 0075                      l109 0080                      _ADC 0078  
                    l701 009A                      l703 00A5                      l705 00B0  
                    l713 00B9                      l801 010A                      l715 00EE  
                    l707 00B7                      l803 010D                      l717 00F3  
                    l805 010E                      l719 00F7                      l807 0144  
                    l841 00C1                      l681 002C                      l809 0149  
                    l691 0063                      l683 0037                      l675 0015  
                    l693 006E                      l685 0042                      l677 001B  
                    l695 0079                      l687 004D                      l679 0023  
                    l791 0127                      l783 0119                      l697 0084  
                    l689 0058                      l785 0120                      l793 00FE  
                    l699 008F                      l787 0122                      l795 0105  
                    l789 0124                      l797 0106                      l799 0107  
                    _isr 012E                     ?_isr 0070                     i1l32 013D  
                   i1l69 015B                     u4_20 0134                     u4_21 0133  
                   _main 0144                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l731 012E                    i1l733 0134                    i1l735 013A  
                  i1l659 0157                    _TRISB 0086                    _SSPIF 0063  
                  _setup 00FE                    pclath 000A          __end_of_spiInit 012E  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0156                   ??_main 0077                   _ADCON1 009F  
                 _ADRESH 001E                   _ADCmed 0014                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 015C                ??_spiInit 0076  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 0118                  ?_ADCmed 0070  
                ??_setup 0077               __pmaintext 0144               __pintentry 0004  
                _SSPSTAT 0094          __size_of_ADCmed 00EA                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 00FE                  __ptext2 0118  
                __ptext3 0014                  __ptext4 012E                  __ptext5 0156  
           __size_of_isr 0016                  _spiInit 0118     end_of_initialization 0010  
             ??_spiWrite 0070                _TRISAbits 0085                _TRISBbits 0086  
              _TRISEbits 0089              spiWrite@dat 0070           __end_of_ADCmed 00FE  
    start_initialization 000F              __end_of_isr 0144                 ??_ADCmed 0073  
               ADCmed@ch 0075              __pbssCOMMON 0078                ___latbits 0002  
      __size_of_spiWrite 0006                 ?_spiInit 0073           __size_of_setup 001A  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ANSELHbits 0189         __size_of_spiInit 0016            __size_of_main 0012  
               _spiWrite 0156             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000  
